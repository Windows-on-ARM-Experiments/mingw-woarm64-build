name: Test toolchain against baseline

on:
  workflow_dispatch:
    inputs:
      binutils_branches:
        description: 'Binutils branches (baseline, changes)'
        required: false
        default: '["upstream", "woarm64"]'
      gcc_branches:
        description: 'GCC branches (baseline, changes)'
        required: false
        default: '["upstream", "woarm64"]'
      mingw_branches:
        description: 'Baseline MinGW branch  (baseline, changes)'
        required: false
        default: '["upstream", "woarm64"]'
      archs:
        description: 'Architectures to build for (baseline, changes)'
        required: false
        default: '["x86_64", "x86_64"]'
      platforms:
        description: 'Platforms to build for (baseline, changes)'
        required: false
        default: '["w64-mingw32", "w64-mingw32"]'
      crts:
        description: 'C runtimes to build for (baseline, changes)'
        required: false
        default: '["msvcrt", "msvcrt"]'
      gcc_module:
        description: 'GCC module to test'
        required: false
        default: ''
      gcc_test_filter:
        description: 'GCC test filter'
        required: false
        default: ''
  workflow_call:
    inputs:
      binutils_branches:
        type: string
      gcc_branches:
        type: string
      mingw_branches:
        type: string
      archs:
        type: string
      platforms:
        type: string
      gcc_module:
        type: string
      gcc_test_filter:
        type: string

env:
  GCC_REPO: Windows-on-ARM-Experiments/gcc-woarm64
  GCC_BRANCH: ${{ fromJson(inputs.gcc_branches)[1] || 'woarm64' }}
  GCC_VERSION: gcc-master

  SOURCE_PATH: ${{ github.workspace }}/code
  ARTIFACT_PATH: ${{ github.workspace }}/artifact

jobs:
  build-and-test-baseline:
    name: Build and test baseline
    uses: ./.github/workflows/build-and-test-toolchain.yml
    with:
      binutils_branch: ${{ fromJson(inputs.binutils_branches)[0] || 'upstream' }}
      gcc_branch: ${{ fromJson(inputs.gcc_branches)[0] || 'upstream' }}
      mingw_branch: ${{ fromJson(inputs.mingw_branches)[0] || 'upstream' }}
      arch: ${{ fromJson(inputs.archs)[0] || 'x86_64' }}
      platform: ${{ fromJson(inputs.platforms)[0] || 'w64-mingw32' }}
      crt: ${{ fromJson(inputs.crts)[0] || 'msvcrt' }}
      tag: baseline
      gcc_module: ${{ inputs.gcc_module || '' }}
      gcc_test_filter: ${{ inputs.gcc_test_filter || '' }}

  build-and-test-changes:
    name: Build and test changes
    uses: ./.github/workflows/build-and-test-toolchain.yml
    with:
      binutils_branch: ${{ fromJson(inputs.binutils_branches)[1] || 'woarm64' }}
      gcc_branch: ${{ fromJson(inputs.gcc_branches)[1] || 'woarm64' }}
      mingw_branch: ${{ fromJson(inputs.mingw_branches)[1] || 'woarm64' }}
      arch: ${{ fromJson(inputs.archs)[1] || 'x86_64' }}
      platform: ${{ fromJson(inputs.platforms)[1] || 'w64-mingw32' }}
      crt: ${{ fromJson(inputs.crts)[1] || 'msvcrt' }}
      tag: changes
      gcc_module: ${{ inputs.gcc_module || '' }}
      gcc_test_filter: ${{ inputs.gcc_test_filter || '' }}

  compare-test-results:
    name: Compare test results
    needs: [build-and-test-baseline, build-and-test-changes]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}
 
      - name: Checkout GCC
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GCC_REPO }}
          ref: ${{ env.GCC_BRANCH }}
          sparse-checkout: 'contrib'
          path: ${{ env.SOURCE_PATH }}/${{ env.GCC_VERSION }}

      - name: Download baseline artifact
        uses: actions/download-artifact@v4
        with:
          name: gcc-tests-baseline
          path: ${{ env.ARTIFACT_PATH }}/gcc-tests-baseline

      - name: Download changes artifact
        uses: actions/download-artifact@v4
        with:
          name: gcc-tests-changes
          path: ${{ env.ARTIFACT_PATH }}/gcc-tests-changes

      - name: Compare results
        run: |
          .github/scripts/toolchain/compare-gcc-results.sh baseline changes

      - name: Create summary
        run: |
          source .github/scripts/config.sh
          RESULTS_PATH=$ARTIFACT_PATH/gcc-tests-results
          for FILE in $RESULTS_PATH/*.diff; do
            echo "$FILE:\n" >> $GITHUB_STEP_SUMMARY
            cat $FILE >> $GITHUB_STEP_SUMMARY
            echo "\n\n" >> $GITHUB_STEP_SUMMARY
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-tests-results
          path: ${{ env.ARTIFACT_PATH }}/gcc-tests-results
          retention-days: 30