name: Comparative test of toolchain branches

on:
  workflow_dispatch:
    inputs:
      binutils_branch_baseline:
        description: 'Baseline Binutils branch'
        required: false
        default: 'woarm64'
      binutils_branch_changes:
        description: 'Changes Binutils branch'
        required: false
        default: 'woarm64'
      gcc_branch_baseline:
        description: 'Baseline GCC branch'
        required: false
        default: 'woarm64'
      gcc_branch_changes:
        description: 'Changes GCC branch'
        required: false
        default: 'woarm64'
      mingw_branch_baseline:
        description: 'Baseline MinGW branch'
        required: false
        default: 'woarm64'
      mingw_branch_changes:
        description: 'Changes MinGW branch'
        required: false
        default: 'woarm64'
      arch:
        description: 'Architecture to build for'
        required: false
        default: 'aarch64'
      platform:
        description: 'Platform to build for'
        required: false
        default: 'w64-mingw32'
      crt:
        description: 'C runtime to build for'
        required: false
        default: 'msvcrt'
  workflow_call:
    inputs:
      binutils_branch_baseline:
        type: string
      binutils_branch_changes:
        type: string
      gcc_branch_baseline:
        type: string
      gcc_branch_changes:
        type: string
      mingw_branch_baseline:
        type: string
      mingw_branch_changes:
        type: string
      arch:
        type: string
      platform:
        type: string
      crt:
        type: string

env:
  GCC_REPO: Windows-on-ARM-Experiments/gcc-woarm64
  GCC_BRANCH: ${{ inputs.gcc_branch_changes || 'woarm64' }}

  SOURCE_PATH: ${{ github.workspace }}/code
  ARTIFACT_PATH: ${{ github.workspace }}/artifact

jobs:
  build-and-test-baseline:
    name: Build and test baseline
    uses: ./.github/workflows/build-and-test-toolchain.yml
    with:
      binutils_branch: ${{ inputs.binutils_branch_baseline }}
      gcc_branch: ${{ inputs.gcc_branch_baseline }}
      mingw_branch: ${{ inputs.mingw_branch_baseline }}
      arch: ${{ inputs.arch }}
      platform: ${{ inputs.platform }}
      crt: ${{ inputs.crt }}
      tag: baseline

  build-and-test-changes:
    name: Build and test changes
    uses: ./.github/workflows/build-and-test-toolchain.yml
    with:
      binutils_branch: ${{ inputs.binutils_branch_changes }}
      gcc_branch: ${{ inputs.gcc_branch_changes }}
      mingw_branch: ${{ inputs.mingw_branch_changes }}
      arch: ${{ inputs.arch }}
      platform: ${{ inputs.platform }}
      crt: ${{ inputs.crt }}
      tag: changes

  compare-test-results:
    name: Compare test results
    needs: [build-and-test-baseline, build-and-test-changes]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}
 
      - name: Checkout GCC
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GCC_REPO }}
          ref: ${{ env.GCC_BRANCH }}
          sparse-checkout: 'contrib'
          path: ${{ env.SOURCE_PATH }}/gcc

      - name: Download baseline artifact
        uses: actions/download-artifact@v4
        with:
          name: gcc-tests-${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.crt }}-baseline
          path: ${{ env.ARTIFACT_PATH }}/gcc-tests-baseline

      - name: Download changes artifact
        uses: actions/download-artifact@v4
        with:
          name: gcc-tests-${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.crt }}-changes
          path: ${{ env.ARTIFACT_PATH }}/gcc-tests-changes

      - name: Debug
        run: |
          ls -al "${{ env.ARTIFACT_PATH }}/gcc-tests-baseline/"
          ls -al "${{ env.ARTIFACT_PATH }}/gcc-tests-changes/"

      - name: Compare results
        run: |
          .github/scripts/toolchain/compare-gcc-results.sh \
            ${{ env.ARTIFACT_PATH }}/gcc-tests-baseline \
            ${{ env.ARTIFACT_PATH }}/gcc-tests-changes \
            ${{ env.ARTIFACT_PATH }}/gcc-results

      - name: Debug
        run: |
          ls -al "${{ env.ARTIFACT_PATH }}/gcc-results/"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-results-${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.crt }}
          path: ${{ env.ARTIFACT_PATH }}/gcc-results
          retention-days: 30
