name: Build toolchain

on:
  workflow_dispatch:
    inputs:
      binutils_branch:
        description: 'Binutils branch to build'
        required: false
        default: 'woarm64'
      gcc_branch:
        description: 'GCC branch to build'
        required: false
        default: 'woarm64'
      mingw_branch:
        description: 'MinGW branch to build'
        required: false
        default: 'woarm64'
      arch:
        description: 'Architecture to build for'
        required: false
        default: 'x86_64'
      platform:
        description: 'Platform to build for'
        required: false
        default: 'w64-mingw32'
      crt:
        description: 'C runtime to build for'
        required: false
        default: 'msvcrt'
      tag:
        description: 'Tag to use for the artifact'
        required: true
      gcc_module:
        description: 'GCC module to test'
        required: false
        default: ''
      gcc_test_filter:
        description: 'GCC test filter'
        required: false
        default: ''
  workflow_call:
    inputs:
      binutils_branch:
        type: string
      gcc_branch:
        type: string
      mingw_branch:
        type: string
      arch:
        type: string
      platform:
        type: string
      crt:
        type: string
      tag:
        type: string
      gcc_module:
        type: string
      gcc_test_filter:
        type: string

env:
  BINUTILS_BRANCH: ${{ inputs.binutils_branch || 'woarm64' }}
  GCC_BRANCH: ${{ inputs.gcc_branch || 'woarm64' }}
  MINGW_BRANCH: ${{ inputs.mingw_branch || 'woarm64' }}

  ARCH: ${{ inputs.arch || 'x86_64' }}
  PLATFORM: ${{ inputs.platform || 'w64-mingw32' }}
  CRT: ${{ inputs.crt || 'msvcrt' }}
  
  TAG: ${{ inputs.tag || 'test' }}
  MODULE: ${{ inputs.gcc_module || '' }}
  FILTER: ${{ inputs.gcc_test_filter || '' }}

  RUN_BOOTSTRAP: 1
  UPDATE_SOURCES: 1

jobs:
  build-and-test-toolchain:
    name: Build and test toolchain
    runs-on: windows-latest

    env:
      WSLENV: BINUTILS_BRANCH:GCC_BRANCH:MINGW_BRANCH:ARCH:PLATFORM:CRT:TAG:MODULE:FILTER:RUN_BOOTSTRAP:UPDATE_SOURCES:GITHUB_OUTPUT/p

    defaults:
      run:
        shell: wsl-bash {0}

    steps:
      - name: Setup WSL
        uses: Windows-on-ARM-Experiments/setup-wsl@master
        with:
          distribution: Ubuntu-22.04
          additional-packages:
            git

      - name: Checkout repository
        run: |
          cd ~
          git clone --depth=1 ${{ github.server_url }}/${{ github.repository }}.git -b ${{ github.head_ref || github.ref_name || 'main' }} work

      - name: Get WSL paths
        id: get-wsl-paths
        run: |
          cd ~/work
          source .github/scripts/config.sh
          mkdir -p $ARTIFACT_PATH
          echo "artifact-path=`wslpath -w $ARTIFACT_PATH`" >> $GITHUB_OUTPUT

      - name: Build toolchain
        run: |
          cd ~/work
          .github/scripts/build.sh

      - name: Execute GCC tests
        run: |
          cd ~/work
          .github/scripts/toolchain/execute-gcc-tests.sh "${{ env.TAG }}" "${{ env.MODULE }}" "${{ env.FILTER }}"

      - name: Create summary
        run: |
          cd ~/work
          source .github/scripts/config.sh
          .github/scripts/toolchain/create-gcc-summary.sh "${{ env.TAG }}" >> \
            $ARTIFACT_PATH/gcc-tests-${{ env.TAG }}/summary.txt

      - name: Present summary
        shell: powershell
        run: |
          cat ${{ steps.get-wsl-paths.outputs.artifact-path }}\gcc-tests-${{ env.TAG }}\summary.txt >> $env:GITHUB_STEP_SUMMARY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-tests-${{ env.TAG }}
          path: ${{ steps.get-wsl-paths.outputs.artifact-path }}\gcc-tests-${{ env.TAG }}
          retention-days: 30
