	.arch armv8-a
	.file	"varargs-dll.c"
// GNU C17 (Ubuntu 11.4.0-1ubuntu1~22.04) version 11.4.0 (aarch64-linux-gnu)
//	compiled by GNU C version 11.4.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.24-GMP

// GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
// options passed: -mlittle-endian -mabi=lp64 -O0 -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection
	.text
	.align	2
	.global	use_va_args_no_arguments
	.type	use_va_args_no_arguments, %function
use_va_args_no_arguments:
.LFB6:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:16: {
	adrp	x0, :got:__stack_chk_guard	// tmp95,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp94, tmp95,
	ldr	x1, [x0]	// tmp103,
	str	x1, [sp, 72]	// tmp103, D.7054
	mov	x1, 0	// tmp103
// varargs-dll.c:18:   va_start (argv, format);
	add	x0, sp, 272	// tmp108,,
	str	x0, [sp, 40]	// tmp108, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp109,,
	str	x0, [sp, 48]	// tmp109, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp97,,
	str	x0, [sp, 56]	// tmp97, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp98,
	str	w0, [sp, 64]	// tmp98, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp99,
	str	w0, [sp, 68]	// tmp99, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:20:   return 165;
	mov	w0, 165	// _4,
	mov	w1, w0	// <retval>, _4
// varargs-dll.c:21: }
	adrp	x0, :got:__stack_chk_guard	// tmp102,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp101, tmp102,
	ldr	x3, [sp, 72]	// tmp104, D.7054
	ldr	x2, [x0]	// tmp105,
	subs	x3, x3, x2	// tmp104, tmp105
	mov	x2, 0	// tmp105
	beq	.L3		//,
	bl	__stack_chk_fail		//
.L3:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE6:
	.size	use_va_args_no_arguments, .-use_va_args_no_arguments
	.align	2
	.global	use_va_list_no_arguments
	.type	use_va_list_no_arguments, %function
use_va_list_no_arguments:
.LFB7:
	.cfi_startproc
	sub	sp, sp, #16	//,,
	.cfi_def_cfa_offset 16
	str	x0, [sp, 8]	// format, format
// varargs-dll.c:26:   return 165;
	mov	w0, 165	// _1,
// varargs-dll.c:27: }
	add	sp, sp, 16	//,,
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE7:
	.size	use_va_list_no_arguments, .-use_va_list_no_arguments
	.align	2
	.global	use_va_args_few_longs
	.type	use_va_args_few_longs, %function
use_va_args_few_longs:
.LFB8:
	.cfi_startproc
	stp	x29, x30, [sp, -288]!	//,,,
	.cfi_def_cfa_offset 288
	.cfi_offset 29, -288
	.cfi_offset 30, -280
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 232]	//,
	str	x2, [sp, 240]	//,
	str	x3, [sp, 248]	//,
	str	x4, [sp, 256]	//,
	str	x5, [sp, 264]	//,
	str	x6, [sp, 272]	//,
	str	x7, [sp, 280]	//,
	str	q0, [sp, 96]	//,
	str	q1, [sp, 112]	//,
	str	q2, [sp, 128]	//,
	str	q3, [sp, 144]	//,
	str	q4, [sp, 160]	//,
	str	q5, [sp, 176]	//,
	str	q6, [sp, 192]	//,
	str	q7, [sp, 208]	//,
// varargs-dll.c:31: {
	adrp	x0, :got:__stack_chk_guard	// tmp118,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp117, tmp118,
	ldr	x1, [x0]	// tmp130,
	str	x1, [sp, 88]	// tmp130, D.7096
	mov	x1, 0	// tmp130
// varargs-dll.c:33:   va_start (argv, format);
	add	x0, sp, 288	// tmp135,,
	str	x0, [sp, 56]	// tmp135, MEM[(struct  *)&argv].__stack
	add	x0, sp, 288	// tmp136,,
	str	x0, [sp, 64]	// tmp136, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 224	// tmp120,,
	str	x0, [sp, 72]	// tmp120, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp121,
	str	w0, [sp, 80]	// tmp121, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp122,
	str	w0, [sp, 84]	// tmp122, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:34:   long a = va_arg (argv, long);
	ldr	w1, [sp, 80]	// D.7060, argv.__gr_offs
	ldr	x0, [sp, 56]	// iftmp.23, argv.__stack
	cmp	w1, 0	// D.7060,
	blt	.L7		//,
	add	x1, x0, 15	// D.7065, iftmp.23,
	and	x1, x1, -8	// D.7066, D.7065,
	str	x1, [sp, 56]	// D.7066, argv.__stack
	b	.L8		//
.L7:
	add	w2, w1, 8	// D.7068, D.7060,
	str	w2, [sp, 80]	// D.7068, argv.__gr_offs
	ldr	w2, [sp, 80]	// D.7070, argv.__gr_offs
	cmp	w2, 0	// D.7070,
	ble	.L9		//,
	add	x1, x0, 15	// D.7073, iftmp.23,
	and	x1, x1, -8	// D.7074, D.7073,
	str	x1, [sp, 56]	// D.7074, argv.__stack
	b	.L8		//
.L9:
	ldr	x2, [sp, 64]	// D.7076, argv.__gr_top
	sxtw	x0, w1	// D.7077, D.7060
	add	x0, x2, x0	// iftmp.23, D.7076, D.7077
.L8:
	ldr	x0, [x0]	// tmp123, *iftmp.22_17
	str	x0, [sp, 40]	// tmp123, a
// varargs-dll.c:35:   long b = va_arg (argv, long);
	ldr	w1, [sp, 80]	// D.7078, argv.__gr_offs
	ldr	x0, [sp, 56]	// iftmp.25, argv.__stack
	cmp	w1, 0	// D.7078,
	blt	.L11		//,
	add	x1, x0, 15	// D.7083, iftmp.25,
	and	x1, x1, -8	// D.7084, D.7083,
	str	x1, [sp, 56]	// D.7084, argv.__stack
	b	.L12		//
.L11:
	add	w2, w1, 8	// D.7086, D.7078,
	str	w2, [sp, 80]	// D.7086, argv.__gr_offs
	ldr	w2, [sp, 80]	// D.7088, argv.__gr_offs
	cmp	w2, 0	// D.7088,
	ble	.L13		//,
	add	x1, x0, 15	// D.7091, iftmp.25,
	and	x1, x1, -8	// D.7092, D.7091,
	str	x1, [sp, 56]	// D.7092, argv.__stack
	b	.L12		//
.L13:
	ldr	x2, [sp, 64]	// D.7094, argv.__gr_top
	sxtw	x0, w1	// D.7095, D.7078
	add	x0, x2, x0	// iftmp.25, D.7094, D.7095
.L12:
	ldr	x0, [x0]	// tmp124, *iftmp.24_19
	str	x0, [sp, 48]	// tmp124, b
// varargs-dll.c:37:   return a + b;
	ldr	x0, [sp, 40]	// tmp125, a
	mov	w1, w0	// _1, tmp125
	ldr	x0, [sp, 48]	// tmp126, b
	add	w0, w1, w0	// _3, _1, _2
	mov	w1, w0	// <retval>, _11
// varargs-dll.c:38: }
	adrp	x0, :got:__stack_chk_guard	// tmp129,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp128, tmp129,
	ldr	x3, [sp, 88]	// tmp131, D.7096
	ldr	x2, [x0]	// tmp132,
	subs	x3, x3, x2	// tmp131, tmp132
	mov	x2, 0	// tmp132
	beq	.L16		//,
	bl	__stack_chk_fail		//
.L16:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 288	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE8:
	.size	use_va_args_few_longs, .-use_va_args_few_longs
	.align	2
	.global	use_va_list_few_longs
	.type	use_va_list_few_longs, %function
use_va_list_few_longs:
.LFB9:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp117,
// varargs-dll.c:43:   long a = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7100, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.27, argv.__stack
	cmp	w1, 0	// D.7100,
	blt	.L18		//,
	add	x1, x0, 15	// D.7105, iftmp.27,
	and	x1, x1, -8	// D.7106, D.7105,
	str	x1, [x19]	// D.7106, argv.__stack
	b	.L19		//
.L18:
	add	w2, w1, 8	// D.7108, D.7100,
	str	w2, [x19, 24]	// D.7108, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7110, argv.__gr_offs
	cmp	w2, 0	// D.7110,
	ble	.L20		//,
	add	x1, x0, 15	// D.7113, iftmp.27,
	and	x1, x1, -8	// D.7114, D.7113,
	str	x1, [x19]	// D.7114, argv.__stack
	b	.L19		//
.L20:
	ldr	x2, [x19, 8]	// D.7116, argv.__gr_top
	sxtw	x0, w1	// D.7117, D.7100
	add	x0, x2, x0	// iftmp.27, D.7116, D.7117
.L19:
	ldr	x0, [x0]	// tmp118, *iftmp.26_14
	str	x0, [sp, 32]	// tmp118, a
// varargs-dll.c:44:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7118, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.29, argv.__stack
	cmp	w1, 0	// D.7118,
	blt	.L22		//,
	add	x1, x0, 15	// D.7123, iftmp.29,
	and	x1, x1, -8	// D.7124, D.7123,
	str	x1, [x19]	// D.7124, argv.__stack
	b	.L23		//
.L22:
	add	w2, w1, 8	// D.7126, D.7118,
	str	w2, [x19, 24]	// D.7126, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7128, argv.__gr_offs
	cmp	w2, 0	// D.7128,
	ble	.L24		//,
	add	x1, x0, 15	// D.7131, iftmp.29,
	and	x1, x1, -8	// D.7132, D.7131,
	str	x1, [x19]	// D.7132, argv.__stack
	b	.L23		//
.L24:
	ldr	x2, [x19, 8]	// D.7134, argv.__gr_top
	sxtw	x0, w1	// D.7135, D.7118
	add	x0, x2, x0	// iftmp.29, D.7134, D.7135
.L23:
	ldr	x0, [x0]	// tmp119, *iftmp.28_16
	str	x0, [sp, 40]	// tmp119, b
// varargs-dll.c:45:   return a + b;
	ldr	x0, [sp, 32]	// tmp120, a
	mov	w1, w0	// _1, tmp120
	ldr	x0, [sp, 40]	// tmp121, b
	add	w0, w1, w0	// _3, _1, _2
// varargs-dll.c:46: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE9:
	.size	use_va_list_few_longs, .-use_va_list_few_longs
	.align	2
	.global	use_va_args_several_longs
	.type	use_va_args_several_longs, %function
use_va_args_several_longs:
.LFB10:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:50: {
	adrp	x0, :got:__stack_chk_guard	// tmp202,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp201, tmp202,
	ldr	x1, [x0]	// tmp228,
	str	x1, [sp, 136]	// tmp228, D.7298
	mov	x1, 0	// tmp228
// varargs-dll.c:52:   va_start (argv, format);
	add	x0, sp, 336	// tmp233,,
	str	x0, [sp, 104]	// tmp233, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp234,,
	str	x0, [sp, 112]	// tmp234, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp204,,
	str	x0, [sp, 120]	// tmp204, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp205,
	str	w0, [sp, 128]	// tmp205, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp206,
	str	w0, [sp, 132]	// tmp206, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:53:   long a = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7136, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.31, argv.__stack
	cmp	w1, 0	// D.7136,
	blt	.L28		//,
	add	x1, x0, 15	// D.7141, iftmp.31,
	and	x1, x1, -8	// D.7142, D.7141,
	str	x1, [sp, 104]	// D.7142, argv.__stack
	b	.L29		//
.L28:
	add	w2, w1, 8	// D.7144, D.7136,
	str	w2, [sp, 128]	// D.7144, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7146, argv.__gr_offs
	cmp	w2, 0	// D.7146,
	ble	.L30		//,
	add	x1, x0, 15	// D.7149, iftmp.31,
	and	x1, x1, -8	// D.7150, D.7149,
	str	x1, [sp, 104]	// D.7150, argv.__stack
	b	.L29		//
.L30:
	ldr	x2, [sp, 112]	// D.7152, argv.__gr_top
	sxtw	x0, w1	// D.7153, D.7136
	add	x0, x2, x0	// iftmp.31, D.7152, D.7153
.L29:
	ldr	x0, [x0]	// tmp207, *iftmp.30_59
	str	x0, [sp, 32]	// tmp207, a
// varargs-dll.c:54:   long b = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7154, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.33, argv.__stack
	cmp	w1, 0	// D.7154,
	blt	.L32		//,
	add	x1, x0, 15	// D.7159, iftmp.33,
	and	x1, x1, -8	// D.7160, D.7159,
	str	x1, [sp, 104]	// D.7160, argv.__stack
	b	.L33		//
.L32:
	add	w2, w1, 8	// D.7162, D.7154,
	str	w2, [sp, 128]	// D.7162, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7164, argv.__gr_offs
	cmp	w2, 0	// D.7164,
	ble	.L34		//,
	add	x1, x0, 15	// D.7167, iftmp.33,
	and	x1, x1, -8	// D.7168, D.7167,
	str	x1, [sp, 104]	// D.7168, argv.__stack
	b	.L33		//
.L34:
	ldr	x2, [sp, 112]	// D.7170, argv.__gr_top
	sxtw	x0, w1	// D.7171, D.7154
	add	x0, x2, x0	// iftmp.33, D.7170, D.7171
.L33:
	ldr	x0, [x0]	// tmp208, *iftmp.32_61
	str	x0, [sp, 40]	// tmp208, b
// varargs-dll.c:55:   long c = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7172, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.35, argv.__stack
	cmp	w1, 0	// D.7172,
	blt	.L36		//,
	add	x1, x0, 15	// D.7177, iftmp.35,
	and	x1, x1, -8	// D.7178, D.7177,
	str	x1, [sp, 104]	// D.7178, argv.__stack
	b	.L37		//
.L36:
	add	w2, w1, 8	// D.7180, D.7172,
	str	w2, [sp, 128]	// D.7180, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7182, argv.__gr_offs
	cmp	w2, 0	// D.7182,
	ble	.L38		//,
	add	x1, x0, 15	// D.7185, iftmp.35,
	and	x1, x1, -8	// D.7186, D.7185,
	str	x1, [sp, 104]	// D.7186, argv.__stack
	b	.L37		//
.L38:
	ldr	x2, [sp, 112]	// D.7188, argv.__gr_top
	sxtw	x0, w1	// D.7189, D.7172
	add	x0, x2, x0	// iftmp.35, D.7188, D.7189
.L37:
	ldr	x0, [x0]	// tmp209, *iftmp.34_63
	str	x0, [sp, 48]	// tmp209, c
// varargs-dll.c:56:   long d = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7190, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.37, argv.__stack
	cmp	w1, 0	// D.7190,
	blt	.L40		//,
	add	x1, x0, 15	// D.7195, iftmp.37,
	and	x1, x1, -8	// D.7196, D.7195,
	str	x1, [sp, 104]	// D.7196, argv.__stack
	b	.L41		//
.L40:
	add	w2, w1, 8	// D.7198, D.7190,
	str	w2, [sp, 128]	// D.7198, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7200, argv.__gr_offs
	cmp	w2, 0	// D.7200,
	ble	.L42		//,
	add	x1, x0, 15	// D.7203, iftmp.37,
	and	x1, x1, -8	// D.7204, D.7203,
	str	x1, [sp, 104]	// D.7204, argv.__stack
	b	.L41		//
.L42:
	ldr	x2, [sp, 112]	// D.7206, argv.__gr_top
	sxtw	x0, w1	// D.7207, D.7190
	add	x0, x2, x0	// iftmp.37, D.7206, D.7207
.L41:
	ldr	x0, [x0]	// tmp210, *iftmp.36_65
	str	x0, [sp, 56]	// tmp210, d
// varargs-dll.c:57:   long e = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7208, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.39, argv.__stack
	cmp	w1, 0	// D.7208,
	blt	.L44		//,
	add	x1, x0, 15	// D.7213, iftmp.39,
	and	x1, x1, -8	// D.7214, D.7213,
	str	x1, [sp, 104]	// D.7214, argv.__stack
	b	.L45		//
.L44:
	add	w2, w1, 8	// D.7216, D.7208,
	str	w2, [sp, 128]	// D.7216, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7218, argv.__gr_offs
	cmp	w2, 0	// D.7218,
	ble	.L46		//,
	add	x1, x0, 15	// D.7221, iftmp.39,
	and	x1, x1, -8	// D.7222, D.7221,
	str	x1, [sp, 104]	// D.7222, argv.__stack
	b	.L45		//
.L46:
	ldr	x2, [sp, 112]	// D.7224, argv.__gr_top
	sxtw	x0, w1	// D.7225, D.7208
	add	x0, x2, x0	// iftmp.39, D.7224, D.7225
.L45:
	ldr	x0, [x0]	// tmp211, *iftmp.38_67
	str	x0, [sp, 64]	// tmp211, e
// varargs-dll.c:58:   long f = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7226, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.41, argv.__stack
	cmp	w1, 0	// D.7226,
	blt	.L48		//,
	add	x1, x0, 15	// D.7231, iftmp.41,
	and	x1, x1, -8	// D.7232, D.7231,
	str	x1, [sp, 104]	// D.7232, argv.__stack
	b	.L49		//
.L48:
	add	w2, w1, 8	// D.7234, D.7226,
	str	w2, [sp, 128]	// D.7234, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7236, argv.__gr_offs
	cmp	w2, 0	// D.7236,
	ble	.L50		//,
	add	x1, x0, 15	// D.7239, iftmp.41,
	and	x1, x1, -8	// D.7240, D.7239,
	str	x1, [sp, 104]	// D.7240, argv.__stack
	b	.L49		//
.L50:
	ldr	x2, [sp, 112]	// D.7242, argv.__gr_top
	sxtw	x0, w1	// D.7243, D.7226
	add	x0, x2, x0	// iftmp.41, D.7242, D.7243
.L49:
	ldr	x0, [x0]	// tmp212, *iftmp.40_69
	str	x0, [sp, 72]	// tmp212, f
// varargs-dll.c:59:   long g = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7244, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.43, argv.__stack
	cmp	w1, 0	// D.7244,
	blt	.L52		//,
	add	x1, x0, 15	// D.7249, iftmp.43,
	and	x1, x1, -8	// D.7250, D.7249,
	str	x1, [sp, 104]	// D.7250, argv.__stack
	b	.L53		//
.L52:
	add	w2, w1, 8	// D.7252, D.7244,
	str	w2, [sp, 128]	// D.7252, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7254, argv.__gr_offs
	cmp	w2, 0	// D.7254,
	ble	.L54		//,
	add	x1, x0, 15	// D.7257, iftmp.43,
	and	x1, x1, -8	// D.7258, D.7257,
	str	x1, [sp, 104]	// D.7258, argv.__stack
	b	.L53		//
.L54:
	ldr	x2, [sp, 112]	// D.7260, argv.__gr_top
	sxtw	x0, w1	// D.7261, D.7244
	add	x0, x2, x0	// iftmp.43, D.7260, D.7261
.L53:
	ldr	x0, [x0]	// tmp213, *iftmp.42_71
	str	x0, [sp, 80]	// tmp213, g
// varargs-dll.c:60:   long h = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7262, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.45, argv.__stack
	cmp	w1, 0	// D.7262,
	blt	.L56		//,
	add	x1, x0, 15	// D.7267, iftmp.45,
	and	x1, x1, -8	// D.7268, D.7267,
	str	x1, [sp, 104]	// D.7268, argv.__stack
	b	.L57		//
.L56:
	add	w2, w1, 8	// D.7270, D.7262,
	str	w2, [sp, 128]	// D.7270, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7272, argv.__gr_offs
	cmp	w2, 0	// D.7272,
	ble	.L58		//,
	add	x1, x0, 15	// D.7275, iftmp.45,
	and	x1, x1, -8	// D.7276, D.7275,
	str	x1, [sp, 104]	// D.7276, argv.__stack
	b	.L57		//
.L58:
	ldr	x2, [sp, 112]	// D.7278, argv.__gr_top
	sxtw	x0, w1	// D.7279, D.7262
	add	x0, x2, x0	// iftmp.45, D.7278, D.7279
.L57:
	ldr	x0, [x0]	// tmp214, *iftmp.44_73
	str	x0, [sp, 88]	// tmp214, h
// varargs-dll.c:61:   long i = va_arg (argv, long);
	ldr	w1, [sp, 128]	// D.7280, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.47, argv.__stack
	cmp	w1, 0	// D.7280,
	blt	.L60		//,
	add	x1, x0, 15	// D.7285, iftmp.47,
	and	x1, x1, -8	// D.7286, D.7285,
	str	x1, [sp, 104]	// D.7286, argv.__stack
	b	.L61		//
.L60:
	add	w2, w1, 8	// D.7288, D.7280,
	str	w2, [sp, 128]	// D.7288, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.7290, argv.__gr_offs
	cmp	w2, 0	// D.7290,
	ble	.L62		//,
	add	x1, x0, 15	// D.7293, iftmp.47,
	and	x1, x1, -8	// D.7294, D.7293,
	str	x1, [sp, 104]	// D.7294, argv.__stack
	b	.L61		//
.L62:
	ldr	x2, [sp, 112]	// D.7296, argv.__gr_top
	sxtw	x0, w1	// D.7297, D.7280
	add	x0, x2, x0	// iftmp.47, D.7296, D.7297
.L61:
	ldr	x0, [x0]	// tmp215, *iftmp.46_75
	str	x0, [sp, 96]	// tmp215, i
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x0, [sp, 32]	// tmp216, a
	mov	w1, w0	// _1, tmp216
	ldr	x0, [sp, 40]	// tmp217, b
	add	w0, w1, w0	// _3, _1, _2
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 48]	// tmp218, c
	add	w0, w0, w1	// _5, _3, _4
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 56]	// tmp219, d
	add	w0, w0, w1	// _7, _5, _6
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 64]	// tmp220, e
	add	w0, w0, w1	// _9, _7, _8
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 72]	// tmp221, f
	add	w0, w0, w1	// _11, _9, _10
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 80]	// tmp222, g
	add	w0, w0, w1	// _13, _11, _12
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 88]	// tmp223, h
	add	w0, w0, w1	// _15, _13, _14
// varargs-dll.c:63:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 96]	// tmp224, i
	add	w0, w0, w1	// _17, _15, _16
	mov	w1, w0	// <retval>, _39
// varargs-dll.c:64: }
	adrp	x0, :got:__stack_chk_guard	// tmp227,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp226, tmp227,
	ldr	x3, [sp, 136]	// tmp229, D.7298
	ldr	x2, [x0]	// tmp230,
	subs	x3, x3, x2	// tmp229, tmp230
	mov	x2, 0	// tmp230
	beq	.L65		//,
	bl	__stack_chk_fail		//
.L65:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE10:
	.size	use_va_args_several_longs, .-use_va_args_several_longs
	.align	2
	.global	use_va_list_several_longs
	.type	use_va_list_several_longs, %function
use_va_list_several_longs:
.LFB11:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp201,
// varargs-dll.c:69:   long a = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7302, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.49, argv.__stack
	cmp	w1, 0	// D.7302,
	blt	.L67		//,
	add	x1, x0, 15	// D.7307, iftmp.49,
	and	x1, x1, -8	// D.7308, D.7307,
	str	x1, [x19]	// D.7308, argv.__stack
	b	.L68		//
.L67:
	add	w2, w1, 8	// D.7310, D.7302,
	str	w2, [x19, 24]	// D.7310, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7312, argv.__gr_offs
	cmp	w2, 0	// D.7312,
	ble	.L69		//,
	add	x1, x0, 15	// D.7315, iftmp.49,
	and	x1, x1, -8	// D.7316, D.7315,
	str	x1, [x19]	// D.7316, argv.__stack
	b	.L68		//
.L69:
	ldr	x2, [x19, 8]	// D.7318, argv.__gr_top
	sxtw	x0, w1	// D.7319, D.7302
	add	x0, x2, x0	// iftmp.49, D.7318, D.7319
.L68:
	ldr	x0, [x0]	// tmp202, *iftmp.48_56
	str	x0, [sp, 40]	// tmp202, a
// varargs-dll.c:70:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7320, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.51, argv.__stack
	cmp	w1, 0	// D.7320,
	blt	.L71		//,
	add	x1, x0, 15	// D.7325, iftmp.51,
	and	x1, x1, -8	// D.7326, D.7325,
	str	x1, [x19]	// D.7326, argv.__stack
	b	.L72		//
.L71:
	add	w2, w1, 8	// D.7328, D.7320,
	str	w2, [x19, 24]	// D.7328, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7330, argv.__gr_offs
	cmp	w2, 0	// D.7330,
	ble	.L73		//,
	add	x1, x0, 15	// D.7333, iftmp.51,
	and	x1, x1, -8	// D.7334, D.7333,
	str	x1, [x19]	// D.7334, argv.__stack
	b	.L72		//
.L73:
	ldr	x2, [x19, 8]	// D.7336, argv.__gr_top
	sxtw	x0, w1	// D.7337, D.7320
	add	x0, x2, x0	// iftmp.51, D.7336, D.7337
.L72:
	ldr	x0, [x0]	// tmp203, *iftmp.50_58
	str	x0, [sp, 48]	// tmp203, b
// varargs-dll.c:71:   long c = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7338, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.53, argv.__stack
	cmp	w1, 0	// D.7338,
	blt	.L75		//,
	add	x1, x0, 15	// D.7343, iftmp.53,
	and	x1, x1, -8	// D.7344, D.7343,
	str	x1, [x19]	// D.7344, argv.__stack
	b	.L76		//
.L75:
	add	w2, w1, 8	// D.7346, D.7338,
	str	w2, [x19, 24]	// D.7346, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7348, argv.__gr_offs
	cmp	w2, 0	// D.7348,
	ble	.L77		//,
	add	x1, x0, 15	// D.7351, iftmp.53,
	and	x1, x1, -8	// D.7352, D.7351,
	str	x1, [x19]	// D.7352, argv.__stack
	b	.L76		//
.L77:
	ldr	x2, [x19, 8]	// D.7354, argv.__gr_top
	sxtw	x0, w1	// D.7355, D.7338
	add	x0, x2, x0	// iftmp.53, D.7354, D.7355
.L76:
	ldr	x0, [x0]	// tmp204, *iftmp.52_60
	str	x0, [sp, 56]	// tmp204, c
// varargs-dll.c:72:   long d = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7356, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.55, argv.__stack
	cmp	w1, 0	// D.7356,
	blt	.L79		//,
	add	x1, x0, 15	// D.7361, iftmp.55,
	and	x1, x1, -8	// D.7362, D.7361,
	str	x1, [x19]	// D.7362, argv.__stack
	b	.L80		//
.L79:
	add	w2, w1, 8	// D.7364, D.7356,
	str	w2, [x19, 24]	// D.7364, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7366, argv.__gr_offs
	cmp	w2, 0	// D.7366,
	ble	.L81		//,
	add	x1, x0, 15	// D.7369, iftmp.55,
	and	x1, x1, -8	// D.7370, D.7369,
	str	x1, [x19]	// D.7370, argv.__stack
	b	.L80		//
.L81:
	ldr	x2, [x19, 8]	// D.7372, argv.__gr_top
	sxtw	x0, w1	// D.7373, D.7356
	add	x0, x2, x0	// iftmp.55, D.7372, D.7373
.L80:
	ldr	x0, [x0]	// tmp205, *iftmp.54_62
	str	x0, [sp, 64]	// tmp205, d
// varargs-dll.c:73:   long e = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7374, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.57, argv.__stack
	cmp	w1, 0	// D.7374,
	blt	.L83		//,
	add	x1, x0, 15	// D.7379, iftmp.57,
	and	x1, x1, -8	// D.7380, D.7379,
	str	x1, [x19]	// D.7380, argv.__stack
	b	.L84		//
.L83:
	add	w2, w1, 8	// D.7382, D.7374,
	str	w2, [x19, 24]	// D.7382, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7384, argv.__gr_offs
	cmp	w2, 0	// D.7384,
	ble	.L85		//,
	add	x1, x0, 15	// D.7387, iftmp.57,
	and	x1, x1, -8	// D.7388, D.7387,
	str	x1, [x19]	// D.7388, argv.__stack
	b	.L84		//
.L85:
	ldr	x2, [x19, 8]	// D.7390, argv.__gr_top
	sxtw	x0, w1	// D.7391, D.7374
	add	x0, x2, x0	// iftmp.57, D.7390, D.7391
.L84:
	ldr	x0, [x0]	// tmp206, *iftmp.56_64
	str	x0, [sp, 72]	// tmp206, e
// varargs-dll.c:74:   long f = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7392, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.59, argv.__stack
	cmp	w1, 0	// D.7392,
	blt	.L87		//,
	add	x1, x0, 15	// D.7397, iftmp.59,
	and	x1, x1, -8	// D.7398, D.7397,
	str	x1, [x19]	// D.7398, argv.__stack
	b	.L88		//
.L87:
	add	w2, w1, 8	// D.7400, D.7392,
	str	w2, [x19, 24]	// D.7400, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7402, argv.__gr_offs
	cmp	w2, 0	// D.7402,
	ble	.L89		//,
	add	x1, x0, 15	// D.7405, iftmp.59,
	and	x1, x1, -8	// D.7406, D.7405,
	str	x1, [x19]	// D.7406, argv.__stack
	b	.L88		//
.L89:
	ldr	x2, [x19, 8]	// D.7408, argv.__gr_top
	sxtw	x0, w1	// D.7409, D.7392
	add	x0, x2, x0	// iftmp.59, D.7408, D.7409
.L88:
	ldr	x0, [x0]	// tmp207, *iftmp.58_66
	str	x0, [sp, 80]	// tmp207, f
// varargs-dll.c:75:   long g = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7410, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.61, argv.__stack
	cmp	w1, 0	// D.7410,
	blt	.L91		//,
	add	x1, x0, 15	// D.7415, iftmp.61,
	and	x1, x1, -8	// D.7416, D.7415,
	str	x1, [x19]	// D.7416, argv.__stack
	b	.L92		//
.L91:
	add	w2, w1, 8	// D.7418, D.7410,
	str	w2, [x19, 24]	// D.7418, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7420, argv.__gr_offs
	cmp	w2, 0	// D.7420,
	ble	.L93		//,
	add	x1, x0, 15	// D.7423, iftmp.61,
	and	x1, x1, -8	// D.7424, D.7423,
	str	x1, [x19]	// D.7424, argv.__stack
	b	.L92		//
.L93:
	ldr	x2, [x19, 8]	// D.7426, argv.__gr_top
	sxtw	x0, w1	// D.7427, D.7410
	add	x0, x2, x0	// iftmp.61, D.7426, D.7427
.L92:
	ldr	x0, [x0]	// tmp208, *iftmp.60_68
	str	x0, [sp, 88]	// tmp208, g
// varargs-dll.c:76:   long h = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7428, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.63, argv.__stack
	cmp	w1, 0	// D.7428,
	blt	.L95		//,
	add	x1, x0, 15	// D.7433, iftmp.63,
	and	x1, x1, -8	// D.7434, D.7433,
	str	x1, [x19]	// D.7434, argv.__stack
	b	.L96		//
.L95:
	add	w2, w1, 8	// D.7436, D.7428,
	str	w2, [x19, 24]	// D.7436, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7438, argv.__gr_offs
	cmp	w2, 0	// D.7438,
	ble	.L97		//,
	add	x1, x0, 15	// D.7441, iftmp.63,
	and	x1, x1, -8	// D.7442, D.7441,
	str	x1, [x19]	// D.7442, argv.__stack
	b	.L96		//
.L97:
	ldr	x2, [x19, 8]	// D.7444, argv.__gr_top
	sxtw	x0, w1	// D.7445, D.7428
	add	x0, x2, x0	// iftmp.63, D.7444, D.7445
.L96:
	ldr	x0, [x0]	// tmp209, *iftmp.62_70
	str	x0, [sp, 96]	// tmp209, h
// varargs-dll.c:77:   long i = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7446, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.65, argv.__stack
	cmp	w1, 0	// D.7446,
	blt	.L99		//,
	add	x1, x0, 15	// D.7451, iftmp.65,
	and	x1, x1, -8	// D.7452, D.7451,
	str	x1, [x19]	// D.7452, argv.__stack
	b	.L100		//
.L99:
	add	w2, w1, 8	// D.7454, D.7446,
	str	w2, [x19, 24]	// D.7454, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7456, argv.__gr_offs
	cmp	w2, 0	// D.7456,
	ble	.L101		//,
	add	x1, x0, 15	// D.7459, iftmp.65,
	and	x1, x1, -8	// D.7460, D.7459,
	str	x1, [x19]	// D.7460, argv.__stack
	b	.L100		//
.L101:
	ldr	x2, [x19, 8]	// D.7462, argv.__gr_top
	sxtw	x0, w1	// D.7463, D.7446
	add	x0, x2, x0	// iftmp.65, D.7462, D.7463
.L100:
	ldr	x0, [x0]	// tmp210, *iftmp.64_72
	str	x0, [sp, 104]	// tmp210, i
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x0, [sp, 40]	// tmp211, a
	mov	w1, w0	// _1, tmp211
	ldr	x0, [sp, 48]	// tmp212, b
	add	w0, w1, w0	// _3, _1, _2
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 56]	// tmp213, c
	add	w0, w0, w1	// _5, _3, _4
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 64]	// tmp214, d
	add	w0, w0, w1	// _7, _5, _6
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 72]	// tmp215, e
	add	w0, w0, w1	// _9, _7, _8
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 80]	// tmp216, f
	add	w0, w0, w1	// _11, _9, _10
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 88]	// tmp217, g
	add	w0, w0, w1	// _13, _11, _12
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 96]	// tmp218, h
	add	w0, w0, w1	// _15, _13, _14
// varargs-dll.c:78:   return a + b + c + d + e + f + g + h + i;
	ldr	x1, [sp, 104]	// tmp219, i
	add	w0, w0, w1	// _17, _15, _16
// varargs-dll.c:79: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE11:
	.size	use_va_list_several_longs, .-use_va_list_several_longs
	.align	2
	.global	use_va_args_many_longs
	.type	use_va_args_many_longs, %function
use_va_args_many_longs:
.LFB12:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 344]	//,
	str	x2, [sp, 352]	//,
	str	x3, [sp, 360]	//,
	str	x4, [sp, 368]	//,
	str	x5, [sp, 376]	//,
	str	x6, [sp, 384]	//,
	str	x7, [sp, 392]	//,
	str	q0, [sp, 208]	//,
	str	q1, [sp, 224]	//,
	str	q2, [sp, 240]	//,
	str	q3, [sp, 256]	//,
	str	q4, [sp, 272]	//,
	str	q5, [sp, 288]	//,
	str	q6, [sp, 304]	//,
	str	q7, [sp, 320]	//,
// varargs-dll.c:83: {
	adrp	x0, :got:__stack_chk_guard	// tmp298,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp297, tmp298,
	ldr	x1, [x0]	// tmp340,
	str	x1, [sp, 200]	// tmp340, D.7770
	mov	x1, 0	// tmp340
// varargs-dll.c:85:   va_start (argv, format);
	add	x0, sp, 400	// tmp345,,
	str	x0, [sp, 168]	// tmp345, MEM[(struct  *)&argv].__stack
	add	x0, sp, 400	// tmp346,,
	str	x0, [sp, 176]	// tmp346, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 336	// tmp300,,
	str	x0, [sp, 184]	// tmp300, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp301,
	str	w0, [sp, 192]	// tmp301, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp302,
	str	w0, [sp, 196]	// tmp302, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:86:   long a = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7464, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.67, argv.__stack
	cmp	w1, 0	// D.7464,
	blt	.L105		//,
	add	x1, x0, 15	// D.7469, iftmp.67,
	and	x1, x1, -8	// D.7470, D.7469,
	str	x1, [sp, 168]	// D.7470, argv.__stack
	b	.L106		//
.L105:
	add	w2, w1, 8	// D.7472, D.7464,
	str	w2, [sp, 192]	// D.7472, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7474, argv.__gr_offs
	cmp	w2, 0	// D.7474,
	ble	.L107		//,
	add	x1, x0, 15	// D.7477, iftmp.67,
	and	x1, x1, -8	// D.7478, D.7477,
	str	x1, [sp, 168]	// D.7478, argv.__stack
	b	.L106		//
.L107:
	ldr	x2, [sp, 176]	// D.7480, argv.__gr_top
	sxtw	x0, w1	// D.7481, D.7464
	add	x0, x2, x0	// iftmp.67, D.7480, D.7481
.L106:
	ldr	x0, [x0]	// tmp303, *iftmp.66_107
	str	x0, [sp, 32]	// tmp303, a
// varargs-dll.c:87:   long b = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7482, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.69, argv.__stack
	cmp	w1, 0	// D.7482,
	blt	.L109		//,
	add	x1, x0, 15	// D.7487, iftmp.69,
	and	x1, x1, -8	// D.7488, D.7487,
	str	x1, [sp, 168]	// D.7488, argv.__stack
	b	.L110		//
.L109:
	add	w2, w1, 8	// D.7490, D.7482,
	str	w2, [sp, 192]	// D.7490, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7492, argv.__gr_offs
	cmp	w2, 0	// D.7492,
	ble	.L111		//,
	add	x1, x0, 15	// D.7495, iftmp.69,
	and	x1, x1, -8	// D.7496, D.7495,
	str	x1, [sp, 168]	// D.7496, argv.__stack
	b	.L110		//
.L111:
	ldr	x2, [sp, 176]	// D.7498, argv.__gr_top
	sxtw	x0, w1	// D.7499, D.7482
	add	x0, x2, x0	// iftmp.69, D.7498, D.7499
.L110:
	ldr	x0, [x0]	// tmp304, *iftmp.68_109
	str	x0, [sp, 40]	// tmp304, b
// varargs-dll.c:88:   long c = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7500, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.71, argv.__stack
	cmp	w1, 0	// D.7500,
	blt	.L113		//,
	add	x1, x0, 15	// D.7505, iftmp.71,
	and	x1, x1, -8	// D.7506, D.7505,
	str	x1, [sp, 168]	// D.7506, argv.__stack
	b	.L114		//
.L113:
	add	w2, w1, 8	// D.7508, D.7500,
	str	w2, [sp, 192]	// D.7508, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7510, argv.__gr_offs
	cmp	w2, 0	// D.7510,
	ble	.L115		//,
	add	x1, x0, 15	// D.7513, iftmp.71,
	and	x1, x1, -8	// D.7514, D.7513,
	str	x1, [sp, 168]	// D.7514, argv.__stack
	b	.L114		//
.L115:
	ldr	x2, [sp, 176]	// D.7516, argv.__gr_top
	sxtw	x0, w1	// D.7517, D.7500
	add	x0, x2, x0	// iftmp.71, D.7516, D.7517
.L114:
	ldr	x0, [x0]	// tmp305, *iftmp.70_111
	str	x0, [sp, 48]	// tmp305, c
// varargs-dll.c:89:   long d = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7518, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.73, argv.__stack
	cmp	w1, 0	// D.7518,
	blt	.L117		//,
	add	x1, x0, 15	// D.7523, iftmp.73,
	and	x1, x1, -8	// D.7524, D.7523,
	str	x1, [sp, 168]	// D.7524, argv.__stack
	b	.L118		//
.L117:
	add	w2, w1, 8	// D.7526, D.7518,
	str	w2, [sp, 192]	// D.7526, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7528, argv.__gr_offs
	cmp	w2, 0	// D.7528,
	ble	.L119		//,
	add	x1, x0, 15	// D.7531, iftmp.73,
	and	x1, x1, -8	// D.7532, D.7531,
	str	x1, [sp, 168]	// D.7532, argv.__stack
	b	.L118		//
.L119:
	ldr	x2, [sp, 176]	// D.7534, argv.__gr_top
	sxtw	x0, w1	// D.7535, D.7518
	add	x0, x2, x0	// iftmp.73, D.7534, D.7535
.L118:
	ldr	x0, [x0]	// tmp306, *iftmp.72_113
	str	x0, [sp, 56]	// tmp306, d
// varargs-dll.c:90:   long e = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7536, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.75, argv.__stack
	cmp	w1, 0	// D.7536,
	blt	.L121		//,
	add	x1, x0, 15	// D.7541, iftmp.75,
	and	x1, x1, -8	// D.7542, D.7541,
	str	x1, [sp, 168]	// D.7542, argv.__stack
	b	.L122		//
.L121:
	add	w2, w1, 8	// D.7544, D.7536,
	str	w2, [sp, 192]	// D.7544, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7546, argv.__gr_offs
	cmp	w2, 0	// D.7546,
	ble	.L123		//,
	add	x1, x0, 15	// D.7549, iftmp.75,
	and	x1, x1, -8	// D.7550, D.7549,
	str	x1, [sp, 168]	// D.7550, argv.__stack
	b	.L122		//
.L123:
	ldr	x2, [sp, 176]	// D.7552, argv.__gr_top
	sxtw	x0, w1	// D.7553, D.7536
	add	x0, x2, x0	// iftmp.75, D.7552, D.7553
.L122:
	ldr	x0, [x0]	// tmp307, *iftmp.74_115
	str	x0, [sp, 64]	// tmp307, e
// varargs-dll.c:91:   long f = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7554, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.77, argv.__stack
	cmp	w1, 0	// D.7554,
	blt	.L125		//,
	add	x1, x0, 15	// D.7559, iftmp.77,
	and	x1, x1, -8	// D.7560, D.7559,
	str	x1, [sp, 168]	// D.7560, argv.__stack
	b	.L126		//
.L125:
	add	w2, w1, 8	// D.7562, D.7554,
	str	w2, [sp, 192]	// D.7562, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7564, argv.__gr_offs
	cmp	w2, 0	// D.7564,
	ble	.L127		//,
	add	x1, x0, 15	// D.7567, iftmp.77,
	and	x1, x1, -8	// D.7568, D.7567,
	str	x1, [sp, 168]	// D.7568, argv.__stack
	b	.L126		//
.L127:
	ldr	x2, [sp, 176]	// D.7570, argv.__gr_top
	sxtw	x0, w1	// D.7571, D.7554
	add	x0, x2, x0	// iftmp.77, D.7570, D.7571
.L126:
	ldr	x0, [x0]	// tmp308, *iftmp.76_117
	str	x0, [sp, 72]	// tmp308, f
// varargs-dll.c:92:   long g = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7572, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.79, argv.__stack
	cmp	w1, 0	// D.7572,
	blt	.L129		//,
	add	x1, x0, 15	// D.7577, iftmp.79,
	and	x1, x1, -8	// D.7578, D.7577,
	str	x1, [sp, 168]	// D.7578, argv.__stack
	b	.L130		//
.L129:
	add	w2, w1, 8	// D.7580, D.7572,
	str	w2, [sp, 192]	// D.7580, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7582, argv.__gr_offs
	cmp	w2, 0	// D.7582,
	ble	.L131		//,
	add	x1, x0, 15	// D.7585, iftmp.79,
	and	x1, x1, -8	// D.7586, D.7585,
	str	x1, [sp, 168]	// D.7586, argv.__stack
	b	.L130		//
.L131:
	ldr	x2, [sp, 176]	// D.7588, argv.__gr_top
	sxtw	x0, w1	// D.7589, D.7572
	add	x0, x2, x0	// iftmp.79, D.7588, D.7589
.L130:
	ldr	x0, [x0]	// tmp309, *iftmp.78_119
	str	x0, [sp, 80]	// tmp309, g
// varargs-dll.c:93:   long h = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7590, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.81, argv.__stack
	cmp	w1, 0	// D.7590,
	blt	.L133		//,
	add	x1, x0, 15	// D.7595, iftmp.81,
	and	x1, x1, -8	// D.7596, D.7595,
	str	x1, [sp, 168]	// D.7596, argv.__stack
	b	.L134		//
.L133:
	add	w2, w1, 8	// D.7598, D.7590,
	str	w2, [sp, 192]	// D.7598, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7600, argv.__gr_offs
	cmp	w2, 0	// D.7600,
	ble	.L135		//,
	add	x1, x0, 15	// D.7603, iftmp.81,
	and	x1, x1, -8	// D.7604, D.7603,
	str	x1, [sp, 168]	// D.7604, argv.__stack
	b	.L134		//
.L135:
	ldr	x2, [sp, 176]	// D.7606, argv.__gr_top
	sxtw	x0, w1	// D.7607, D.7590
	add	x0, x2, x0	// iftmp.81, D.7606, D.7607
.L134:
	ldr	x0, [x0]	// tmp310, *iftmp.80_121
	str	x0, [sp, 88]	// tmp310, h
// varargs-dll.c:94:   long i = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7608, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.83, argv.__stack
	cmp	w1, 0	// D.7608,
	blt	.L137		//,
	add	x1, x0, 15	// D.7613, iftmp.83,
	and	x1, x1, -8	// D.7614, D.7613,
	str	x1, [sp, 168]	// D.7614, argv.__stack
	b	.L138		//
.L137:
	add	w2, w1, 8	// D.7616, D.7608,
	str	w2, [sp, 192]	// D.7616, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7618, argv.__gr_offs
	cmp	w2, 0	// D.7618,
	ble	.L139		//,
	add	x1, x0, 15	// D.7621, iftmp.83,
	and	x1, x1, -8	// D.7622, D.7621,
	str	x1, [sp, 168]	// D.7622, argv.__stack
	b	.L138		//
.L139:
	ldr	x2, [sp, 176]	// D.7624, argv.__gr_top
	sxtw	x0, w1	// D.7625, D.7608
	add	x0, x2, x0	// iftmp.83, D.7624, D.7625
.L138:
	ldr	x0, [x0]	// tmp311, *iftmp.82_123
	str	x0, [sp, 96]	// tmp311, i
// varargs-dll.c:95:   long j = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7626, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.85, argv.__stack
	cmp	w1, 0	// D.7626,
	blt	.L141		//,
	add	x1, x0, 15	// D.7631, iftmp.85,
	and	x1, x1, -8	// D.7632, D.7631,
	str	x1, [sp, 168]	// D.7632, argv.__stack
	b	.L142		//
.L141:
	add	w2, w1, 8	// D.7634, D.7626,
	str	w2, [sp, 192]	// D.7634, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7636, argv.__gr_offs
	cmp	w2, 0	// D.7636,
	ble	.L143		//,
	add	x1, x0, 15	// D.7639, iftmp.85,
	and	x1, x1, -8	// D.7640, D.7639,
	str	x1, [sp, 168]	// D.7640, argv.__stack
	b	.L142		//
.L143:
	ldr	x2, [sp, 176]	// D.7642, argv.__gr_top
	sxtw	x0, w1	// D.7643, D.7626
	add	x0, x2, x0	// iftmp.85, D.7642, D.7643
.L142:
	ldr	x0, [x0]	// tmp312, *iftmp.84_125
	str	x0, [sp, 104]	// tmp312, j
// varargs-dll.c:96:   long k = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7644, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.87, argv.__stack
	cmp	w1, 0	// D.7644,
	blt	.L145		//,
	add	x1, x0, 15	// D.7649, iftmp.87,
	and	x1, x1, -8	// D.7650, D.7649,
	str	x1, [sp, 168]	// D.7650, argv.__stack
	b	.L146		//
.L145:
	add	w2, w1, 8	// D.7652, D.7644,
	str	w2, [sp, 192]	// D.7652, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7654, argv.__gr_offs
	cmp	w2, 0	// D.7654,
	ble	.L147		//,
	add	x1, x0, 15	// D.7657, iftmp.87,
	and	x1, x1, -8	// D.7658, D.7657,
	str	x1, [sp, 168]	// D.7658, argv.__stack
	b	.L146		//
.L147:
	ldr	x2, [sp, 176]	// D.7660, argv.__gr_top
	sxtw	x0, w1	// D.7661, D.7644
	add	x0, x2, x0	// iftmp.87, D.7660, D.7661
.L146:
	ldr	x0, [x0]	// tmp313, *iftmp.86_127
	str	x0, [sp, 112]	// tmp313, k
// varargs-dll.c:97:   long l = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7662, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.89, argv.__stack
	cmp	w1, 0	// D.7662,
	blt	.L149		//,
	add	x1, x0, 15	// D.7667, iftmp.89,
	and	x1, x1, -8	// D.7668, D.7667,
	str	x1, [sp, 168]	// D.7668, argv.__stack
	b	.L150		//
.L149:
	add	w2, w1, 8	// D.7670, D.7662,
	str	w2, [sp, 192]	// D.7670, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7672, argv.__gr_offs
	cmp	w2, 0	// D.7672,
	ble	.L151		//,
	add	x1, x0, 15	// D.7675, iftmp.89,
	and	x1, x1, -8	// D.7676, D.7675,
	str	x1, [sp, 168]	// D.7676, argv.__stack
	b	.L150		//
.L151:
	ldr	x2, [sp, 176]	// D.7678, argv.__gr_top
	sxtw	x0, w1	// D.7679, D.7662
	add	x0, x2, x0	// iftmp.89, D.7678, D.7679
.L150:
	ldr	x0, [x0]	// tmp314, *iftmp.88_129
	str	x0, [sp, 120]	// tmp314, l
// varargs-dll.c:98:   long m = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7680, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.91, argv.__stack
	cmp	w1, 0	// D.7680,
	blt	.L153		//,
	add	x1, x0, 15	// D.7685, iftmp.91,
	and	x1, x1, -8	// D.7686, D.7685,
	str	x1, [sp, 168]	// D.7686, argv.__stack
	b	.L154		//
.L153:
	add	w2, w1, 8	// D.7688, D.7680,
	str	w2, [sp, 192]	// D.7688, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7690, argv.__gr_offs
	cmp	w2, 0	// D.7690,
	ble	.L155		//,
	add	x1, x0, 15	// D.7693, iftmp.91,
	and	x1, x1, -8	// D.7694, D.7693,
	str	x1, [sp, 168]	// D.7694, argv.__stack
	b	.L154		//
.L155:
	ldr	x2, [sp, 176]	// D.7696, argv.__gr_top
	sxtw	x0, w1	// D.7697, D.7680
	add	x0, x2, x0	// iftmp.91, D.7696, D.7697
.L154:
	ldr	x0, [x0]	// tmp315, *iftmp.90_131
	str	x0, [sp, 128]	// tmp315, m
// varargs-dll.c:99:   long n = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7698, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.93, argv.__stack
	cmp	w1, 0	// D.7698,
	blt	.L157		//,
	add	x1, x0, 15	// D.7703, iftmp.93,
	and	x1, x1, -8	// D.7704, D.7703,
	str	x1, [sp, 168]	// D.7704, argv.__stack
	b	.L158		//
.L157:
	add	w2, w1, 8	// D.7706, D.7698,
	str	w2, [sp, 192]	// D.7706, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7708, argv.__gr_offs
	cmp	w2, 0	// D.7708,
	ble	.L159		//,
	add	x1, x0, 15	// D.7711, iftmp.93,
	and	x1, x1, -8	// D.7712, D.7711,
	str	x1, [sp, 168]	// D.7712, argv.__stack
	b	.L158		//
.L159:
	ldr	x2, [sp, 176]	// D.7714, argv.__gr_top
	sxtw	x0, w1	// D.7715, D.7698
	add	x0, x2, x0	// iftmp.93, D.7714, D.7715
.L158:
	ldr	x0, [x0]	// tmp316, *iftmp.92_133
	str	x0, [sp, 136]	// tmp316, n
// varargs-dll.c:100:   long o = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7716, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.95, argv.__stack
	cmp	w1, 0	// D.7716,
	blt	.L161		//,
	add	x1, x0, 15	// D.7721, iftmp.95,
	and	x1, x1, -8	// D.7722, D.7721,
	str	x1, [sp, 168]	// D.7722, argv.__stack
	b	.L162		//
.L161:
	add	w2, w1, 8	// D.7724, D.7716,
	str	w2, [sp, 192]	// D.7724, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7726, argv.__gr_offs
	cmp	w2, 0	// D.7726,
	ble	.L163		//,
	add	x1, x0, 15	// D.7729, iftmp.95,
	and	x1, x1, -8	// D.7730, D.7729,
	str	x1, [sp, 168]	// D.7730, argv.__stack
	b	.L162		//
.L163:
	ldr	x2, [sp, 176]	// D.7732, argv.__gr_top
	sxtw	x0, w1	// D.7733, D.7716
	add	x0, x2, x0	// iftmp.95, D.7732, D.7733
.L162:
	ldr	x0, [x0]	// tmp317, *iftmp.94_135
	str	x0, [sp, 144]	// tmp317, o
// varargs-dll.c:101:   long p = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7734, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.97, argv.__stack
	cmp	w1, 0	// D.7734,
	blt	.L165		//,
	add	x1, x0, 15	// D.7739, iftmp.97,
	and	x1, x1, -8	// D.7740, D.7739,
	str	x1, [sp, 168]	// D.7740, argv.__stack
	b	.L166		//
.L165:
	add	w2, w1, 8	// D.7742, D.7734,
	str	w2, [sp, 192]	// D.7742, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7744, argv.__gr_offs
	cmp	w2, 0	// D.7744,
	ble	.L167		//,
	add	x1, x0, 15	// D.7747, iftmp.97,
	and	x1, x1, -8	// D.7748, D.7747,
	str	x1, [sp, 168]	// D.7748, argv.__stack
	b	.L166		//
.L167:
	ldr	x2, [sp, 176]	// D.7750, argv.__gr_top
	sxtw	x0, w1	// D.7751, D.7734
	add	x0, x2, x0	// iftmp.97, D.7750, D.7751
.L166:
	ldr	x0, [x0]	// tmp318, *iftmp.96_137
	str	x0, [sp, 152]	// tmp318, p
// varargs-dll.c:102:   long q = va_arg (argv, long);
	ldr	w1, [sp, 192]	// D.7752, argv.__gr_offs
	ldr	x0, [sp, 168]	// iftmp.99, argv.__stack
	cmp	w1, 0	// D.7752,
	blt	.L169		//,
	add	x1, x0, 15	// D.7757, iftmp.99,
	and	x1, x1, -8	// D.7758, D.7757,
	str	x1, [sp, 168]	// D.7758, argv.__stack
	b	.L170		//
.L169:
	add	w2, w1, 8	// D.7760, D.7752,
	str	w2, [sp, 192]	// D.7760, argv.__gr_offs
	ldr	w2, [sp, 192]	// D.7762, argv.__gr_offs
	cmp	w2, 0	// D.7762,
	ble	.L171		//,
	add	x1, x0, 15	// D.7765, iftmp.99,
	and	x1, x1, -8	// D.7766, D.7765,
	str	x1, [sp, 168]	// D.7766, argv.__stack
	b	.L170		//
.L171:
	ldr	x2, [sp, 176]	// D.7768, argv.__gr_top
	sxtw	x0, w1	// D.7769, D.7752
	add	x0, x2, x0	// iftmp.99, D.7768, D.7769
.L170:
	ldr	x0, [x0]	// tmp319, *iftmp.98_139
	str	x0, [sp, 160]	// tmp319, q
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x0, [sp, 32]	// tmp320, a
	mov	w1, w0	// _1, tmp320
	ldr	x0, [sp, 40]	// tmp321, b
	add	w0, w1, w0	// _3, _1, _2
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 48]	// tmp322, c
	add	w0, w0, w1	// _5, _3, _4
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 56]	// tmp323, d
	add	w0, w0, w1	// _7, _5, _6
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 64]	// tmp324, e
	add	w0, w0, w1	// _9, _7, _8
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 72]	// tmp325, f
	add	w0, w0, w1	// _11, _9, _10
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 80]	// tmp326, g
	add	w0, w0, w1	// _13, _11, _12
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 88]	// tmp327, h
	add	w0, w0, w1	// _15, _13, _14
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 96]	// tmp328, i
	add	w0, w0, w1	// _17, _15, _16
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 104]	// tmp329, j
	add	w0, w0, w1	// _19, _17, _18
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 112]	// tmp330, k
	add	w0, w0, w1	// _21, _19, _20
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 120]	// tmp331, l
	add	w0, w0, w1	// _23, _21, _22
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 128]	// tmp332, m
	add	w0, w0, w1	// _25, _23, _24
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 136]	// tmp333, n
	add	w0, w0, w1	// _27, _25, _26
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 144]	// tmp334, o
	add	w0, w0, w1	// _29, _27, _28
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 152]	// tmp335, p
	add	w0, w0, w1	// _31, _29, _30
// varargs-dll.c:104:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 160]	// tmp336, q
	add	w0, w0, w1	// _33, _31, _32
	mov	w1, w0	// <retval>, _71
// varargs-dll.c:105: }
	adrp	x0, :got:__stack_chk_guard	// tmp339,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp338, tmp339,
	ldr	x3, [sp, 200]	// tmp341, D.7770
	ldr	x2, [x0]	// tmp342,
	subs	x3, x3, x2	// tmp341, tmp342
	mov	x2, 0	// tmp342
	beq	.L174		//,
	bl	__stack_chk_fail		//
.L174:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE12:
	.size	use_va_args_many_longs, .-use_va_args_many_longs
	.align	2
	.global	use_va_list_many_longs
	.type	use_va_list_many_longs, %function
use_va_list_many_longs:
.LFB13:
	.cfi_startproc
	str	x19, [sp, -176]!	//,
	.cfi_def_cfa_offset 176
	.cfi_offset 19, -176
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp297,
// varargs-dll.c:110:   long a = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7774, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.101, argv.__stack
	cmp	w1, 0	// D.7774,
	blt	.L176		//,
	add	x1, x0, 15	// D.7779, iftmp.101,
	and	x1, x1, -8	// D.7780, D.7779,
	str	x1, [x19]	// D.7780, argv.__stack
	b	.L177		//
.L176:
	add	w2, w1, 8	// D.7782, D.7774,
	str	w2, [x19, 24]	// D.7782, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7784, argv.__gr_offs
	cmp	w2, 0	// D.7784,
	ble	.L178		//,
	add	x1, x0, 15	// D.7787, iftmp.101,
	and	x1, x1, -8	// D.7788, D.7787,
	str	x1, [x19]	// D.7788, argv.__stack
	b	.L177		//
.L178:
	ldr	x2, [x19, 8]	// D.7790, argv.__gr_top
	sxtw	x0, w1	// D.7791, D.7774
	add	x0, x2, x0	// iftmp.101, D.7790, D.7791
.L177:
	ldr	x0, [x0]	// tmp298, *iftmp.100_104
	str	x0, [sp, 40]	// tmp298, a
// varargs-dll.c:111:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7792, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.103, argv.__stack
	cmp	w1, 0	// D.7792,
	blt	.L180		//,
	add	x1, x0, 15	// D.7797, iftmp.103,
	and	x1, x1, -8	// D.7798, D.7797,
	str	x1, [x19]	// D.7798, argv.__stack
	b	.L181		//
.L180:
	add	w2, w1, 8	// D.7800, D.7792,
	str	w2, [x19, 24]	// D.7800, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7802, argv.__gr_offs
	cmp	w2, 0	// D.7802,
	ble	.L182		//,
	add	x1, x0, 15	// D.7805, iftmp.103,
	and	x1, x1, -8	// D.7806, D.7805,
	str	x1, [x19]	// D.7806, argv.__stack
	b	.L181		//
.L182:
	ldr	x2, [x19, 8]	// D.7808, argv.__gr_top
	sxtw	x0, w1	// D.7809, D.7792
	add	x0, x2, x0	// iftmp.103, D.7808, D.7809
.L181:
	ldr	x0, [x0]	// tmp299, *iftmp.102_106
	str	x0, [sp, 48]	// tmp299, b
// varargs-dll.c:112:   long c = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7810, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.105, argv.__stack
	cmp	w1, 0	// D.7810,
	blt	.L184		//,
	add	x1, x0, 15	// D.7815, iftmp.105,
	and	x1, x1, -8	// D.7816, D.7815,
	str	x1, [x19]	// D.7816, argv.__stack
	b	.L185		//
.L184:
	add	w2, w1, 8	// D.7818, D.7810,
	str	w2, [x19, 24]	// D.7818, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7820, argv.__gr_offs
	cmp	w2, 0	// D.7820,
	ble	.L186		//,
	add	x1, x0, 15	// D.7823, iftmp.105,
	and	x1, x1, -8	// D.7824, D.7823,
	str	x1, [x19]	// D.7824, argv.__stack
	b	.L185		//
.L186:
	ldr	x2, [x19, 8]	// D.7826, argv.__gr_top
	sxtw	x0, w1	// D.7827, D.7810
	add	x0, x2, x0	// iftmp.105, D.7826, D.7827
.L185:
	ldr	x0, [x0]	// tmp300, *iftmp.104_108
	str	x0, [sp, 56]	// tmp300, c
// varargs-dll.c:113:   long d = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7828, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.107, argv.__stack
	cmp	w1, 0	// D.7828,
	blt	.L188		//,
	add	x1, x0, 15	// D.7833, iftmp.107,
	and	x1, x1, -8	// D.7834, D.7833,
	str	x1, [x19]	// D.7834, argv.__stack
	b	.L189		//
.L188:
	add	w2, w1, 8	// D.7836, D.7828,
	str	w2, [x19, 24]	// D.7836, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7838, argv.__gr_offs
	cmp	w2, 0	// D.7838,
	ble	.L190		//,
	add	x1, x0, 15	// D.7841, iftmp.107,
	and	x1, x1, -8	// D.7842, D.7841,
	str	x1, [x19]	// D.7842, argv.__stack
	b	.L189		//
.L190:
	ldr	x2, [x19, 8]	// D.7844, argv.__gr_top
	sxtw	x0, w1	// D.7845, D.7828
	add	x0, x2, x0	// iftmp.107, D.7844, D.7845
.L189:
	ldr	x0, [x0]	// tmp301, *iftmp.106_110
	str	x0, [sp, 64]	// tmp301, d
// varargs-dll.c:114:   long e = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7846, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.109, argv.__stack
	cmp	w1, 0	// D.7846,
	blt	.L192		//,
	add	x1, x0, 15	// D.7851, iftmp.109,
	and	x1, x1, -8	// D.7852, D.7851,
	str	x1, [x19]	// D.7852, argv.__stack
	b	.L193		//
.L192:
	add	w2, w1, 8	// D.7854, D.7846,
	str	w2, [x19, 24]	// D.7854, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7856, argv.__gr_offs
	cmp	w2, 0	// D.7856,
	ble	.L194		//,
	add	x1, x0, 15	// D.7859, iftmp.109,
	and	x1, x1, -8	// D.7860, D.7859,
	str	x1, [x19]	// D.7860, argv.__stack
	b	.L193		//
.L194:
	ldr	x2, [x19, 8]	// D.7862, argv.__gr_top
	sxtw	x0, w1	// D.7863, D.7846
	add	x0, x2, x0	// iftmp.109, D.7862, D.7863
.L193:
	ldr	x0, [x0]	// tmp302, *iftmp.108_112
	str	x0, [sp, 72]	// tmp302, e
// varargs-dll.c:115:   long f = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7864, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.111, argv.__stack
	cmp	w1, 0	// D.7864,
	blt	.L196		//,
	add	x1, x0, 15	// D.7869, iftmp.111,
	and	x1, x1, -8	// D.7870, D.7869,
	str	x1, [x19]	// D.7870, argv.__stack
	b	.L197		//
.L196:
	add	w2, w1, 8	// D.7872, D.7864,
	str	w2, [x19, 24]	// D.7872, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7874, argv.__gr_offs
	cmp	w2, 0	// D.7874,
	ble	.L198		//,
	add	x1, x0, 15	// D.7877, iftmp.111,
	and	x1, x1, -8	// D.7878, D.7877,
	str	x1, [x19]	// D.7878, argv.__stack
	b	.L197		//
.L198:
	ldr	x2, [x19, 8]	// D.7880, argv.__gr_top
	sxtw	x0, w1	// D.7881, D.7864
	add	x0, x2, x0	// iftmp.111, D.7880, D.7881
.L197:
	ldr	x0, [x0]	// tmp303, *iftmp.110_114
	str	x0, [sp, 80]	// tmp303, f
// varargs-dll.c:116:   long g = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7882, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.113, argv.__stack
	cmp	w1, 0	// D.7882,
	blt	.L200		//,
	add	x1, x0, 15	// D.7887, iftmp.113,
	and	x1, x1, -8	// D.7888, D.7887,
	str	x1, [x19]	// D.7888, argv.__stack
	b	.L201		//
.L200:
	add	w2, w1, 8	// D.7890, D.7882,
	str	w2, [x19, 24]	// D.7890, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7892, argv.__gr_offs
	cmp	w2, 0	// D.7892,
	ble	.L202		//,
	add	x1, x0, 15	// D.7895, iftmp.113,
	and	x1, x1, -8	// D.7896, D.7895,
	str	x1, [x19]	// D.7896, argv.__stack
	b	.L201		//
.L202:
	ldr	x2, [x19, 8]	// D.7898, argv.__gr_top
	sxtw	x0, w1	// D.7899, D.7882
	add	x0, x2, x0	// iftmp.113, D.7898, D.7899
.L201:
	ldr	x0, [x0]	// tmp304, *iftmp.112_116
	str	x0, [sp, 88]	// tmp304, g
// varargs-dll.c:117:   long h = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7900, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.115, argv.__stack
	cmp	w1, 0	// D.7900,
	blt	.L204		//,
	add	x1, x0, 15	// D.7905, iftmp.115,
	and	x1, x1, -8	// D.7906, D.7905,
	str	x1, [x19]	// D.7906, argv.__stack
	b	.L205		//
.L204:
	add	w2, w1, 8	// D.7908, D.7900,
	str	w2, [x19, 24]	// D.7908, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7910, argv.__gr_offs
	cmp	w2, 0	// D.7910,
	ble	.L206		//,
	add	x1, x0, 15	// D.7913, iftmp.115,
	and	x1, x1, -8	// D.7914, D.7913,
	str	x1, [x19]	// D.7914, argv.__stack
	b	.L205		//
.L206:
	ldr	x2, [x19, 8]	// D.7916, argv.__gr_top
	sxtw	x0, w1	// D.7917, D.7900
	add	x0, x2, x0	// iftmp.115, D.7916, D.7917
.L205:
	ldr	x0, [x0]	// tmp305, *iftmp.114_118
	str	x0, [sp, 96]	// tmp305, h
// varargs-dll.c:118:   long i = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7918, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.117, argv.__stack
	cmp	w1, 0	// D.7918,
	blt	.L208		//,
	add	x1, x0, 15	// D.7923, iftmp.117,
	and	x1, x1, -8	// D.7924, D.7923,
	str	x1, [x19]	// D.7924, argv.__stack
	b	.L209		//
.L208:
	add	w2, w1, 8	// D.7926, D.7918,
	str	w2, [x19, 24]	// D.7926, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7928, argv.__gr_offs
	cmp	w2, 0	// D.7928,
	ble	.L210		//,
	add	x1, x0, 15	// D.7931, iftmp.117,
	and	x1, x1, -8	// D.7932, D.7931,
	str	x1, [x19]	// D.7932, argv.__stack
	b	.L209		//
.L210:
	ldr	x2, [x19, 8]	// D.7934, argv.__gr_top
	sxtw	x0, w1	// D.7935, D.7918
	add	x0, x2, x0	// iftmp.117, D.7934, D.7935
.L209:
	ldr	x0, [x0]	// tmp306, *iftmp.116_120
	str	x0, [sp, 104]	// tmp306, i
// varargs-dll.c:119:   long j = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7936, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.119, argv.__stack
	cmp	w1, 0	// D.7936,
	blt	.L212		//,
	add	x1, x0, 15	// D.7941, iftmp.119,
	and	x1, x1, -8	// D.7942, D.7941,
	str	x1, [x19]	// D.7942, argv.__stack
	b	.L213		//
.L212:
	add	w2, w1, 8	// D.7944, D.7936,
	str	w2, [x19, 24]	// D.7944, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7946, argv.__gr_offs
	cmp	w2, 0	// D.7946,
	ble	.L214		//,
	add	x1, x0, 15	// D.7949, iftmp.119,
	and	x1, x1, -8	// D.7950, D.7949,
	str	x1, [x19]	// D.7950, argv.__stack
	b	.L213		//
.L214:
	ldr	x2, [x19, 8]	// D.7952, argv.__gr_top
	sxtw	x0, w1	// D.7953, D.7936
	add	x0, x2, x0	// iftmp.119, D.7952, D.7953
.L213:
	ldr	x0, [x0]	// tmp307, *iftmp.118_122
	str	x0, [sp, 112]	// tmp307, j
// varargs-dll.c:120:   long k = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7954, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.121, argv.__stack
	cmp	w1, 0	// D.7954,
	blt	.L216		//,
	add	x1, x0, 15	// D.7959, iftmp.121,
	and	x1, x1, -8	// D.7960, D.7959,
	str	x1, [x19]	// D.7960, argv.__stack
	b	.L217		//
.L216:
	add	w2, w1, 8	// D.7962, D.7954,
	str	w2, [x19, 24]	// D.7962, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7964, argv.__gr_offs
	cmp	w2, 0	// D.7964,
	ble	.L218		//,
	add	x1, x0, 15	// D.7967, iftmp.121,
	and	x1, x1, -8	// D.7968, D.7967,
	str	x1, [x19]	// D.7968, argv.__stack
	b	.L217		//
.L218:
	ldr	x2, [x19, 8]	// D.7970, argv.__gr_top
	sxtw	x0, w1	// D.7971, D.7954
	add	x0, x2, x0	// iftmp.121, D.7970, D.7971
.L217:
	ldr	x0, [x0]	// tmp308, *iftmp.120_124
	str	x0, [sp, 120]	// tmp308, k
// varargs-dll.c:121:   long l = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7972, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.123, argv.__stack
	cmp	w1, 0	// D.7972,
	blt	.L220		//,
	add	x1, x0, 15	// D.7977, iftmp.123,
	and	x1, x1, -8	// D.7978, D.7977,
	str	x1, [x19]	// D.7978, argv.__stack
	b	.L221		//
.L220:
	add	w2, w1, 8	// D.7980, D.7972,
	str	w2, [x19, 24]	// D.7980, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.7982, argv.__gr_offs
	cmp	w2, 0	// D.7982,
	ble	.L222		//,
	add	x1, x0, 15	// D.7985, iftmp.123,
	and	x1, x1, -8	// D.7986, D.7985,
	str	x1, [x19]	// D.7986, argv.__stack
	b	.L221		//
.L222:
	ldr	x2, [x19, 8]	// D.7988, argv.__gr_top
	sxtw	x0, w1	// D.7989, D.7972
	add	x0, x2, x0	// iftmp.123, D.7988, D.7989
.L221:
	ldr	x0, [x0]	// tmp309, *iftmp.122_126
	str	x0, [sp, 128]	// tmp309, l
// varargs-dll.c:122:   long m = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.7990, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.125, argv.__stack
	cmp	w1, 0	// D.7990,
	blt	.L224		//,
	add	x1, x0, 15	// D.7995, iftmp.125,
	and	x1, x1, -8	// D.7996, D.7995,
	str	x1, [x19]	// D.7996, argv.__stack
	b	.L225		//
.L224:
	add	w2, w1, 8	// D.7998, D.7990,
	str	w2, [x19, 24]	// D.7998, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8000, argv.__gr_offs
	cmp	w2, 0	// D.8000,
	ble	.L226		//,
	add	x1, x0, 15	// D.8003, iftmp.125,
	and	x1, x1, -8	// D.8004, D.8003,
	str	x1, [x19]	// D.8004, argv.__stack
	b	.L225		//
.L226:
	ldr	x2, [x19, 8]	// D.8006, argv.__gr_top
	sxtw	x0, w1	// D.8007, D.7990
	add	x0, x2, x0	// iftmp.125, D.8006, D.8007
.L225:
	ldr	x0, [x0]	// tmp310, *iftmp.124_128
	str	x0, [sp, 136]	// tmp310, m
// varargs-dll.c:123:   long n = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.8008, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.127, argv.__stack
	cmp	w1, 0	// D.8008,
	blt	.L228		//,
	add	x1, x0, 15	// D.8013, iftmp.127,
	and	x1, x1, -8	// D.8014, D.8013,
	str	x1, [x19]	// D.8014, argv.__stack
	b	.L229		//
.L228:
	add	w2, w1, 8	// D.8016, D.8008,
	str	w2, [x19, 24]	// D.8016, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8018, argv.__gr_offs
	cmp	w2, 0	// D.8018,
	ble	.L230		//,
	add	x1, x0, 15	// D.8021, iftmp.127,
	and	x1, x1, -8	// D.8022, D.8021,
	str	x1, [x19]	// D.8022, argv.__stack
	b	.L229		//
.L230:
	ldr	x2, [x19, 8]	// D.8024, argv.__gr_top
	sxtw	x0, w1	// D.8025, D.8008
	add	x0, x2, x0	// iftmp.127, D.8024, D.8025
.L229:
	ldr	x0, [x0]	// tmp311, *iftmp.126_130
	str	x0, [sp, 144]	// tmp311, n
// varargs-dll.c:124:   long o = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.8026, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.129, argv.__stack
	cmp	w1, 0	// D.8026,
	blt	.L232		//,
	add	x1, x0, 15	// D.8031, iftmp.129,
	and	x1, x1, -8	// D.8032, D.8031,
	str	x1, [x19]	// D.8032, argv.__stack
	b	.L233		//
.L232:
	add	w2, w1, 8	// D.8034, D.8026,
	str	w2, [x19, 24]	// D.8034, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8036, argv.__gr_offs
	cmp	w2, 0	// D.8036,
	ble	.L234		//,
	add	x1, x0, 15	// D.8039, iftmp.129,
	and	x1, x1, -8	// D.8040, D.8039,
	str	x1, [x19]	// D.8040, argv.__stack
	b	.L233		//
.L234:
	ldr	x2, [x19, 8]	// D.8042, argv.__gr_top
	sxtw	x0, w1	// D.8043, D.8026
	add	x0, x2, x0	// iftmp.129, D.8042, D.8043
.L233:
	ldr	x0, [x0]	// tmp312, *iftmp.128_132
	str	x0, [sp, 152]	// tmp312, o
// varargs-dll.c:125:   long p = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.8044, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.131, argv.__stack
	cmp	w1, 0	// D.8044,
	blt	.L236		//,
	add	x1, x0, 15	// D.8049, iftmp.131,
	and	x1, x1, -8	// D.8050, D.8049,
	str	x1, [x19]	// D.8050, argv.__stack
	b	.L237		//
.L236:
	add	w2, w1, 8	// D.8052, D.8044,
	str	w2, [x19, 24]	// D.8052, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8054, argv.__gr_offs
	cmp	w2, 0	// D.8054,
	ble	.L238		//,
	add	x1, x0, 15	// D.8057, iftmp.131,
	and	x1, x1, -8	// D.8058, D.8057,
	str	x1, [x19]	// D.8058, argv.__stack
	b	.L237		//
.L238:
	ldr	x2, [x19, 8]	// D.8060, argv.__gr_top
	sxtw	x0, w1	// D.8061, D.8044
	add	x0, x2, x0	// iftmp.131, D.8060, D.8061
.L237:
	ldr	x0, [x0]	// tmp313, *iftmp.130_134
	str	x0, [sp, 160]	// tmp313, p
// varargs-dll.c:126:   long q = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.8062, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.133, argv.__stack
	cmp	w1, 0	// D.8062,
	blt	.L240		//,
	add	x1, x0, 15	// D.8067, iftmp.133,
	and	x1, x1, -8	// D.8068, D.8067,
	str	x1, [x19]	// D.8068, argv.__stack
	b	.L241		//
.L240:
	add	w2, w1, 8	// D.8070, D.8062,
	str	w2, [x19, 24]	// D.8070, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8072, argv.__gr_offs
	cmp	w2, 0	// D.8072,
	ble	.L242		//,
	add	x1, x0, 15	// D.8075, iftmp.133,
	and	x1, x1, -8	// D.8076, D.8075,
	str	x1, [x19]	// D.8076, argv.__stack
	b	.L241		//
.L242:
	ldr	x2, [x19, 8]	// D.8078, argv.__gr_top
	sxtw	x0, w1	// D.8079, D.8062
	add	x0, x2, x0	// iftmp.133, D.8078, D.8079
.L241:
	ldr	x0, [x0]	// tmp314, *iftmp.132_136
	str	x0, [sp, 168]	// tmp314, q
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x0, [sp, 40]	// tmp315, a
	mov	w1, w0	// _1, tmp315
	ldr	x0, [sp, 48]	// tmp316, b
	add	w0, w1, w0	// _3, _1, _2
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 56]	// tmp317, c
	add	w0, w0, w1	// _5, _3, _4
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 64]	// tmp318, d
	add	w0, w0, w1	// _7, _5, _6
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 72]	// tmp319, e
	add	w0, w0, w1	// _9, _7, _8
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 80]	// tmp320, f
	add	w0, w0, w1	// _11, _9, _10
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 88]	// tmp321, g
	add	w0, w0, w1	// _13, _11, _12
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 96]	// tmp322, h
	add	w0, w0, w1	// _15, _13, _14
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 104]	// tmp323, i
	add	w0, w0, w1	// _17, _15, _16
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 112]	// tmp324, j
	add	w0, w0, w1	// _19, _17, _18
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 120]	// tmp325, k
	add	w0, w0, w1	// _21, _19, _20
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 128]	// tmp326, l
	add	w0, w0, w1	// _23, _21, _22
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 136]	// tmp327, m
	add	w0, w0, w1	// _25, _23, _24
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 144]	// tmp328, n
	add	w0, w0, w1	// _27, _25, _26
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 152]	// tmp329, o
	add	w0, w0, w1	// _29, _27, _28
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 160]	// tmp330, p
	add	w0, w0, w1	// _31, _29, _30
// varargs-dll.c:127:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 168]	// tmp331, q
	add	w0, w0, w1	// _33, _31, _32
// varargs-dll.c:128: }
	ldr	x19, [sp], 176	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE13:
	.size	use_va_list_many_longs, .-use_va_list_many_longs
	.align	2
	.global	use_va_args_few_ints
	.type	use_va_args_few_ints, %function
use_va_args_few_ints:
.LFB14:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:132: {
	adrp	x0, :got:__stack_chk_guard	// tmp115,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp114, tmp115,
	ldr	x1, [x0]	// tmp127,
	str	x1, [sp, 72]	// tmp127, D.8116
	mov	x1, 0	// tmp127
// varargs-dll.c:134:   va_start (argv, format);
	add	x0, sp, 272	// tmp132,,
	str	x0, [sp, 40]	// tmp132, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp133,,
	str	x0, [sp, 48]	// tmp133, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp117,,
	str	x0, [sp, 56]	// tmp117, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp118,
	str	w0, [sp, 64]	// tmp118, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp119,
	str	w0, [sp, 68]	// tmp119, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:135:   int a = va_arg (argv, int);
	ldr	w1, [sp, 64]	// D.8080, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.135, argv.__stack
	cmp	w1, 0	// D.8080,
	blt	.L246		//,
	add	x1, x0, 11	// D.8085, iftmp.135,
	and	x1, x1, -8	// D.8086, D.8085,
	str	x1, [sp, 40]	// D.8086, argv.__stack
	b	.L247		//
.L246:
	add	w2, w1, 8	// D.8088, D.8080,
	str	w2, [sp, 64]	// D.8088, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.8090, argv.__gr_offs
	cmp	w2, 0	// D.8090,
	ble	.L248		//,
	add	x1, x0, 11	// D.8093, iftmp.135,
	and	x1, x1, -8	// D.8094, D.8093,
	str	x1, [sp, 40]	// D.8094, argv.__stack
	b	.L247		//
.L248:
	ldr	x2, [sp, 48]	// D.8096, argv.__gr_top
	sxtw	x0, w1	// D.8097, D.8080
	add	x0, x2, x0	// iftmp.135, D.8096, D.8097
.L247:
	ldr	w0, [x0]	// tmp120, *iftmp.134_14
	str	w0, [sp, 32]	// tmp120, a
// varargs-dll.c:136:   int b = va_arg (argv, int);
	ldr	w1, [sp, 64]	// D.8098, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.137, argv.__stack
	cmp	w1, 0	// D.8098,
	blt	.L250		//,
	add	x1, x0, 11	// D.8103, iftmp.137,
	and	x1, x1, -8	// D.8104, D.8103,
	str	x1, [sp, 40]	// D.8104, argv.__stack
	b	.L251		//
.L250:
	add	w2, w1, 8	// D.8106, D.8098,
	str	w2, [sp, 64]	// D.8106, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.8108, argv.__gr_offs
	cmp	w2, 0	// D.8108,
	ble	.L252		//,
	add	x1, x0, 11	// D.8111, iftmp.137,
	and	x1, x1, -8	// D.8112, D.8111,
	str	x1, [sp, 40]	// D.8112, argv.__stack
	b	.L251		//
.L252:
	ldr	x2, [sp, 48]	// D.8114, argv.__gr_top
	sxtw	x0, w1	// D.8115, D.8098
	add	x0, x2, x0	// iftmp.137, D.8114, D.8115
.L251:
	ldr	w0, [x0]	// tmp121, *iftmp.136_16
	str	w0, [sp, 36]	// tmp121, b
// varargs-dll.c:138:   return a + b;
	ldr	w1, [sp, 32]	// tmp122, a
	ldr	w0, [sp, 36]	// tmp123, b
	add	w0, w1, w0	// _8, tmp122, tmp123
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:139: }
	adrp	x0, :got:__stack_chk_guard	// tmp126,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp125, tmp126,
	ldr	x3, [sp, 72]	// tmp128, D.8116
	ldr	x2, [x0]	// tmp129,
	subs	x3, x3, x2	// tmp128, tmp129
	mov	x2, 0	// tmp129
	beq	.L255		//,
	bl	__stack_chk_fail		//
.L255:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE14:
	.size	use_va_args_few_ints, .-use_va_args_few_ints
	.align	2
	.global	use_va_list_few_ints
	.type	use_va_list_few_ints, %function
use_va_list_few_ints:
.LFB15:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp114,
// varargs-dll.c:144:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8120, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.139, argv.__stack
	cmp	w1, 0	// D.8120,
	blt	.L257		//,
	add	x1, x0, 11	// D.8125, iftmp.139,
	and	x1, x1, -8	// D.8126, D.8125,
	str	x1, [x19]	// D.8126, argv.__stack
	b	.L258		//
.L257:
	add	w2, w1, 8	// D.8128, D.8120,
	str	w2, [x19, 24]	// D.8128, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8130, argv.__gr_offs
	cmp	w2, 0	// D.8130,
	ble	.L259		//,
	add	x1, x0, 11	// D.8133, iftmp.139,
	and	x1, x1, -8	// D.8134, D.8133,
	str	x1, [x19]	// D.8134, argv.__stack
	b	.L258		//
.L259:
	ldr	x2, [x19, 8]	// D.8136, argv.__gr_top
	sxtw	x0, w1	// D.8137, D.8120
	add	x0, x2, x0	// iftmp.139, D.8136, D.8137
.L258:
	ldr	w0, [x0]	// tmp115, *iftmp.138_11
	str	w0, [sp, 40]	// tmp115, a
// varargs-dll.c:145:   int b = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8138, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.141, argv.__stack
	cmp	w1, 0	// D.8138,
	blt	.L261		//,
	add	x1, x0, 11	// D.8143, iftmp.141,
	and	x1, x1, -8	// D.8144, D.8143,
	str	x1, [x19]	// D.8144, argv.__stack
	b	.L262		//
.L261:
	add	w2, w1, 8	// D.8146, D.8138,
	str	w2, [x19, 24]	// D.8146, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8148, argv.__gr_offs
	cmp	w2, 0	// D.8148,
	ble	.L263		//,
	add	x1, x0, 11	// D.8151, iftmp.141,
	and	x1, x1, -8	// D.8152, D.8151,
	str	x1, [x19]	// D.8152, argv.__stack
	b	.L262		//
.L263:
	ldr	x2, [x19, 8]	// D.8154, argv.__gr_top
	sxtw	x0, w1	// D.8155, D.8138
	add	x0, x2, x0	// iftmp.141, D.8154, D.8155
.L262:
	ldr	w0, [x0]	// tmp116, *iftmp.140_13
	str	w0, [sp, 44]	// tmp116, b
// varargs-dll.c:146:   return a + b;
	ldr	w1, [sp, 40]	// tmp117, a
	ldr	w0, [sp, 44]	// tmp118, b
	add	w0, w1, w0	// _6, tmp117, tmp118
// varargs-dll.c:147: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE15:
	.size	use_va_list_few_ints, .-use_va_list_few_ints
	.align	2
	.global	use_va_args_several_ints
	.type	use_va_args_several_ints, %function
use_va_args_several_ints:
.LFB16:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:151: {
	adrp	x0, :got:__stack_chk_guard	// tmp192,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp191, tmp192,
	ldr	x1, [x0]	// tmp218,
	str	x1, [sp, 104]	// tmp218, D.8318
	mov	x1, 0	// tmp218
// varargs-dll.c:153:   va_start (argv, format);
	add	x0, sp, 304	// tmp223,,
	str	x0, [sp, 72]	// tmp223, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp224,,
	str	x0, [sp, 80]	// tmp224, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp194,,
	str	x0, [sp, 88]	// tmp194, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp195,
	str	w0, [sp, 96]	// tmp195, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp196,
	str	w0, [sp, 100]	// tmp196, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:154:   int a = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8156, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.143, argv.__stack
	cmp	w1, 0	// D.8156,
	blt	.L267		//,
	add	x1, x0, 11	// D.8161, iftmp.143,
	and	x1, x1, -8	// D.8162, D.8161,
	str	x1, [sp, 72]	// D.8162, argv.__stack
	b	.L268		//
.L267:
	add	w2, w1, 8	// D.8164, D.8156,
	str	w2, [sp, 96]	// D.8164, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8166, argv.__gr_offs
	cmp	w2, 0	// D.8166,
	ble	.L269		//,
	add	x1, x0, 11	// D.8169, iftmp.143,
	and	x1, x1, -8	// D.8170, D.8169,
	str	x1, [sp, 72]	// D.8170, argv.__stack
	b	.L268		//
.L269:
	ldr	x2, [sp, 80]	// D.8172, argv.__gr_top
	sxtw	x0, w1	// D.8173, D.8156
	add	x0, x2, x0	// iftmp.143, D.8172, D.8173
.L268:
	ldr	w0, [x0]	// tmp197, *iftmp.142_49
	str	w0, [sp, 36]	// tmp197, a
// varargs-dll.c:155:   int b = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8174, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.145, argv.__stack
	cmp	w1, 0	// D.8174,
	blt	.L271		//,
	add	x1, x0, 11	// D.8179, iftmp.145,
	and	x1, x1, -8	// D.8180, D.8179,
	str	x1, [sp, 72]	// D.8180, argv.__stack
	b	.L272		//
.L271:
	add	w2, w1, 8	// D.8182, D.8174,
	str	w2, [sp, 96]	// D.8182, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8184, argv.__gr_offs
	cmp	w2, 0	// D.8184,
	ble	.L273		//,
	add	x1, x0, 11	// D.8187, iftmp.145,
	and	x1, x1, -8	// D.8188, D.8187,
	str	x1, [sp, 72]	// D.8188, argv.__stack
	b	.L272		//
.L273:
	ldr	x2, [sp, 80]	// D.8190, argv.__gr_top
	sxtw	x0, w1	// D.8191, D.8174
	add	x0, x2, x0	// iftmp.145, D.8190, D.8191
.L272:
	ldr	w0, [x0]	// tmp198, *iftmp.144_51
	str	w0, [sp, 40]	// tmp198, b
// varargs-dll.c:156:   int c = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8192, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.147, argv.__stack
	cmp	w1, 0	// D.8192,
	blt	.L275		//,
	add	x1, x0, 11	// D.8197, iftmp.147,
	and	x1, x1, -8	// D.8198, D.8197,
	str	x1, [sp, 72]	// D.8198, argv.__stack
	b	.L276		//
.L275:
	add	w2, w1, 8	// D.8200, D.8192,
	str	w2, [sp, 96]	// D.8200, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8202, argv.__gr_offs
	cmp	w2, 0	// D.8202,
	ble	.L277		//,
	add	x1, x0, 11	// D.8205, iftmp.147,
	and	x1, x1, -8	// D.8206, D.8205,
	str	x1, [sp, 72]	// D.8206, argv.__stack
	b	.L276		//
.L277:
	ldr	x2, [sp, 80]	// D.8208, argv.__gr_top
	sxtw	x0, w1	// D.8209, D.8192
	add	x0, x2, x0	// iftmp.147, D.8208, D.8209
.L276:
	ldr	w0, [x0]	// tmp199, *iftmp.146_53
	str	w0, [sp, 44]	// tmp199, c
// varargs-dll.c:157:   int d = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8210, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.149, argv.__stack
	cmp	w1, 0	// D.8210,
	blt	.L279		//,
	add	x1, x0, 11	// D.8215, iftmp.149,
	and	x1, x1, -8	// D.8216, D.8215,
	str	x1, [sp, 72]	// D.8216, argv.__stack
	b	.L280		//
.L279:
	add	w2, w1, 8	// D.8218, D.8210,
	str	w2, [sp, 96]	// D.8218, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8220, argv.__gr_offs
	cmp	w2, 0	// D.8220,
	ble	.L281		//,
	add	x1, x0, 11	// D.8223, iftmp.149,
	and	x1, x1, -8	// D.8224, D.8223,
	str	x1, [sp, 72]	// D.8224, argv.__stack
	b	.L280		//
.L281:
	ldr	x2, [sp, 80]	// D.8226, argv.__gr_top
	sxtw	x0, w1	// D.8227, D.8210
	add	x0, x2, x0	// iftmp.149, D.8226, D.8227
.L280:
	ldr	w0, [x0]	// tmp200, *iftmp.148_55
	str	w0, [sp, 48]	// tmp200, d
// varargs-dll.c:158:   int e = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8228, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.151, argv.__stack
	cmp	w1, 0	// D.8228,
	blt	.L283		//,
	add	x1, x0, 11	// D.8233, iftmp.151,
	and	x1, x1, -8	// D.8234, D.8233,
	str	x1, [sp, 72]	// D.8234, argv.__stack
	b	.L284		//
.L283:
	add	w2, w1, 8	// D.8236, D.8228,
	str	w2, [sp, 96]	// D.8236, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8238, argv.__gr_offs
	cmp	w2, 0	// D.8238,
	ble	.L285		//,
	add	x1, x0, 11	// D.8241, iftmp.151,
	and	x1, x1, -8	// D.8242, D.8241,
	str	x1, [sp, 72]	// D.8242, argv.__stack
	b	.L284		//
.L285:
	ldr	x2, [sp, 80]	// D.8244, argv.__gr_top
	sxtw	x0, w1	// D.8245, D.8228
	add	x0, x2, x0	// iftmp.151, D.8244, D.8245
.L284:
	ldr	w0, [x0]	// tmp201, *iftmp.150_57
	str	w0, [sp, 52]	// tmp201, e
// varargs-dll.c:159:   int f = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8246, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.153, argv.__stack
	cmp	w1, 0	// D.8246,
	blt	.L287		//,
	add	x1, x0, 11	// D.8251, iftmp.153,
	and	x1, x1, -8	// D.8252, D.8251,
	str	x1, [sp, 72]	// D.8252, argv.__stack
	b	.L288		//
.L287:
	add	w2, w1, 8	// D.8254, D.8246,
	str	w2, [sp, 96]	// D.8254, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8256, argv.__gr_offs
	cmp	w2, 0	// D.8256,
	ble	.L289		//,
	add	x1, x0, 11	// D.8259, iftmp.153,
	and	x1, x1, -8	// D.8260, D.8259,
	str	x1, [sp, 72]	// D.8260, argv.__stack
	b	.L288		//
.L289:
	ldr	x2, [sp, 80]	// D.8262, argv.__gr_top
	sxtw	x0, w1	// D.8263, D.8246
	add	x0, x2, x0	// iftmp.153, D.8262, D.8263
.L288:
	ldr	w0, [x0]	// tmp202, *iftmp.152_59
	str	w0, [sp, 56]	// tmp202, f
// varargs-dll.c:160:   int g = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8264, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.155, argv.__stack
	cmp	w1, 0	// D.8264,
	blt	.L291		//,
	add	x1, x0, 11	// D.8269, iftmp.155,
	and	x1, x1, -8	// D.8270, D.8269,
	str	x1, [sp, 72]	// D.8270, argv.__stack
	b	.L292		//
.L291:
	add	w2, w1, 8	// D.8272, D.8264,
	str	w2, [sp, 96]	// D.8272, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8274, argv.__gr_offs
	cmp	w2, 0	// D.8274,
	ble	.L293		//,
	add	x1, x0, 11	// D.8277, iftmp.155,
	and	x1, x1, -8	// D.8278, D.8277,
	str	x1, [sp, 72]	// D.8278, argv.__stack
	b	.L292		//
.L293:
	ldr	x2, [sp, 80]	// D.8280, argv.__gr_top
	sxtw	x0, w1	// D.8281, D.8264
	add	x0, x2, x0	// iftmp.155, D.8280, D.8281
.L292:
	ldr	w0, [x0]	// tmp203, *iftmp.154_61
	str	w0, [sp, 60]	// tmp203, g
// varargs-dll.c:161:   int h = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8282, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.157, argv.__stack
	cmp	w1, 0	// D.8282,
	blt	.L295		//,
	add	x1, x0, 11	// D.8287, iftmp.157,
	and	x1, x1, -8	// D.8288, D.8287,
	str	x1, [sp, 72]	// D.8288, argv.__stack
	b	.L296		//
.L295:
	add	w2, w1, 8	// D.8290, D.8282,
	str	w2, [sp, 96]	// D.8290, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8292, argv.__gr_offs
	cmp	w2, 0	// D.8292,
	ble	.L297		//,
	add	x1, x0, 11	// D.8295, iftmp.157,
	and	x1, x1, -8	// D.8296, D.8295,
	str	x1, [sp, 72]	// D.8296, argv.__stack
	b	.L296		//
.L297:
	ldr	x2, [sp, 80]	// D.8298, argv.__gr_top
	sxtw	x0, w1	// D.8299, D.8282
	add	x0, x2, x0	// iftmp.157, D.8298, D.8299
.L296:
	ldr	w0, [x0]	// tmp204, *iftmp.156_63
	str	w0, [sp, 64]	// tmp204, h
// varargs-dll.c:162:   int i = va_arg (argv, int);
	ldr	w1, [sp, 96]	// D.8300, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.159, argv.__stack
	cmp	w1, 0	// D.8300,
	blt	.L299		//,
	add	x1, x0, 11	// D.8305, iftmp.159,
	and	x1, x1, -8	// D.8306, D.8305,
	str	x1, [sp, 72]	// D.8306, argv.__stack
	b	.L300		//
.L299:
	add	w2, w1, 8	// D.8308, D.8300,
	str	w2, [sp, 96]	// D.8308, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.8310, argv.__gr_offs
	cmp	w2, 0	// D.8310,
	ble	.L301		//,
	add	x1, x0, 11	// D.8313, iftmp.159,
	and	x1, x1, -8	// D.8314, D.8313,
	str	x1, [sp, 72]	// D.8314, argv.__stack
	b	.L300		//
.L301:
	ldr	x2, [sp, 80]	// D.8316, argv.__gr_top
	sxtw	x0, w1	// D.8317, D.8300
	add	x0, x2, x0	// iftmp.159, D.8316, D.8317
.L300:
	ldr	w0, [x0]	// tmp205, *iftmp.158_65
	str	w0, [sp, 68]	// tmp205, i
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp206, a
	ldr	w0, [sp, 40]	// tmp207, b
	add	w1, w1, w0	// _1, tmp206, tmp207
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp208, c
	add	w1, w1, w0	// _2, _1, tmp208
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp209, d
	add	w1, w1, w0	// _3, _2, tmp209
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp210, e
	add	w1, w1, w0	// _4, _3, tmp210
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp211, f
	add	w1, w1, w0	// _5, _4, tmp211
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp212, g
	add	w1, w1, w0	// _6, _5, tmp212
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp213, h
	add	w1, w1, w0	// _7, _6, tmp213
// varargs-dll.c:164:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp214, i
	add	w0, w1, w0	// _29, _7, tmp214
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:165: }
	adrp	x0, :got:__stack_chk_guard	// tmp217,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp216, tmp217,
	ldr	x3, [sp, 104]	// tmp219, D.8318
	ldr	x2, [x0]	// tmp220,
	subs	x3, x3, x2	// tmp219, tmp220
	mov	x2, 0	// tmp220
	beq	.L304		//,
	bl	__stack_chk_fail		//
.L304:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE16:
	.size	use_va_args_several_ints, .-use_va_args_several_ints
	.align	2
	.global	use_va_list_several_ints
	.type	use_va_list_several_ints, %function
use_va_list_several_ints:
.LFB17:
	.cfi_startproc
	str	x19, [sp, -80]!	//,
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -80
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp191,
// varargs-dll.c:170:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8322, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.161, argv.__stack
	cmp	w1, 0	// D.8322,
	blt	.L306		//,
	add	x1, x0, 11	// D.8327, iftmp.161,
	and	x1, x1, -8	// D.8328, D.8327,
	str	x1, [x19]	// D.8328, argv.__stack
	b	.L307		//
.L306:
	add	w2, w1, 8	// D.8330, D.8322,
	str	w2, [x19, 24]	// D.8330, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8332, argv.__gr_offs
	cmp	w2, 0	// D.8332,
	ble	.L308		//,
	add	x1, x0, 11	// D.8335, iftmp.161,
	and	x1, x1, -8	// D.8336, D.8335,
	str	x1, [x19]	// D.8336, argv.__stack
	b	.L307		//
.L308:
	ldr	x2, [x19, 8]	// D.8338, argv.__gr_top
	sxtw	x0, w1	// D.8339, D.8322
	add	x0, x2, x0	// iftmp.161, D.8338, D.8339
.L307:
	ldr	w0, [x0]	// tmp192, *iftmp.160_46
	str	w0, [sp, 44]	// tmp192, a
// varargs-dll.c:171:   int b = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8340, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.163, argv.__stack
	cmp	w1, 0	// D.8340,
	blt	.L310		//,
	add	x1, x0, 11	// D.8345, iftmp.163,
	and	x1, x1, -8	// D.8346, D.8345,
	str	x1, [x19]	// D.8346, argv.__stack
	b	.L311		//
.L310:
	add	w2, w1, 8	// D.8348, D.8340,
	str	w2, [x19, 24]	// D.8348, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8350, argv.__gr_offs
	cmp	w2, 0	// D.8350,
	ble	.L312		//,
	add	x1, x0, 11	// D.8353, iftmp.163,
	and	x1, x1, -8	// D.8354, D.8353,
	str	x1, [x19]	// D.8354, argv.__stack
	b	.L311		//
.L312:
	ldr	x2, [x19, 8]	// D.8356, argv.__gr_top
	sxtw	x0, w1	// D.8357, D.8340
	add	x0, x2, x0	// iftmp.163, D.8356, D.8357
.L311:
	ldr	w0, [x0]	// tmp193, *iftmp.162_48
	str	w0, [sp, 48]	// tmp193, b
// varargs-dll.c:172:   int c = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8358, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.165, argv.__stack
	cmp	w1, 0	// D.8358,
	blt	.L314		//,
	add	x1, x0, 11	// D.8363, iftmp.165,
	and	x1, x1, -8	// D.8364, D.8363,
	str	x1, [x19]	// D.8364, argv.__stack
	b	.L315		//
.L314:
	add	w2, w1, 8	// D.8366, D.8358,
	str	w2, [x19, 24]	// D.8366, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8368, argv.__gr_offs
	cmp	w2, 0	// D.8368,
	ble	.L316		//,
	add	x1, x0, 11	// D.8371, iftmp.165,
	and	x1, x1, -8	// D.8372, D.8371,
	str	x1, [x19]	// D.8372, argv.__stack
	b	.L315		//
.L316:
	ldr	x2, [x19, 8]	// D.8374, argv.__gr_top
	sxtw	x0, w1	// D.8375, D.8358
	add	x0, x2, x0	// iftmp.165, D.8374, D.8375
.L315:
	ldr	w0, [x0]	// tmp194, *iftmp.164_50
	str	w0, [sp, 52]	// tmp194, c
// varargs-dll.c:173:   int d = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8376, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.167, argv.__stack
	cmp	w1, 0	// D.8376,
	blt	.L318		//,
	add	x1, x0, 11	// D.8381, iftmp.167,
	and	x1, x1, -8	// D.8382, D.8381,
	str	x1, [x19]	// D.8382, argv.__stack
	b	.L319		//
.L318:
	add	w2, w1, 8	// D.8384, D.8376,
	str	w2, [x19, 24]	// D.8384, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8386, argv.__gr_offs
	cmp	w2, 0	// D.8386,
	ble	.L320		//,
	add	x1, x0, 11	// D.8389, iftmp.167,
	and	x1, x1, -8	// D.8390, D.8389,
	str	x1, [x19]	// D.8390, argv.__stack
	b	.L319		//
.L320:
	ldr	x2, [x19, 8]	// D.8392, argv.__gr_top
	sxtw	x0, w1	// D.8393, D.8376
	add	x0, x2, x0	// iftmp.167, D.8392, D.8393
.L319:
	ldr	w0, [x0]	// tmp195, *iftmp.166_52
	str	w0, [sp, 56]	// tmp195, d
// varargs-dll.c:174:   int e = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8394, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.169, argv.__stack
	cmp	w1, 0	// D.8394,
	blt	.L322		//,
	add	x1, x0, 11	// D.8399, iftmp.169,
	and	x1, x1, -8	// D.8400, D.8399,
	str	x1, [x19]	// D.8400, argv.__stack
	b	.L323		//
.L322:
	add	w2, w1, 8	// D.8402, D.8394,
	str	w2, [x19, 24]	// D.8402, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8404, argv.__gr_offs
	cmp	w2, 0	// D.8404,
	ble	.L324		//,
	add	x1, x0, 11	// D.8407, iftmp.169,
	and	x1, x1, -8	// D.8408, D.8407,
	str	x1, [x19]	// D.8408, argv.__stack
	b	.L323		//
.L324:
	ldr	x2, [x19, 8]	// D.8410, argv.__gr_top
	sxtw	x0, w1	// D.8411, D.8394
	add	x0, x2, x0	// iftmp.169, D.8410, D.8411
.L323:
	ldr	w0, [x0]	// tmp196, *iftmp.168_54
	str	w0, [sp, 60]	// tmp196, e
// varargs-dll.c:175:   int f = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8412, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.171, argv.__stack
	cmp	w1, 0	// D.8412,
	blt	.L326		//,
	add	x1, x0, 11	// D.8417, iftmp.171,
	and	x1, x1, -8	// D.8418, D.8417,
	str	x1, [x19]	// D.8418, argv.__stack
	b	.L327		//
.L326:
	add	w2, w1, 8	// D.8420, D.8412,
	str	w2, [x19, 24]	// D.8420, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8422, argv.__gr_offs
	cmp	w2, 0	// D.8422,
	ble	.L328		//,
	add	x1, x0, 11	// D.8425, iftmp.171,
	and	x1, x1, -8	// D.8426, D.8425,
	str	x1, [x19]	// D.8426, argv.__stack
	b	.L327		//
.L328:
	ldr	x2, [x19, 8]	// D.8428, argv.__gr_top
	sxtw	x0, w1	// D.8429, D.8412
	add	x0, x2, x0	// iftmp.171, D.8428, D.8429
.L327:
	ldr	w0, [x0]	// tmp197, *iftmp.170_56
	str	w0, [sp, 64]	// tmp197, f
// varargs-dll.c:176:   int g = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8430, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.173, argv.__stack
	cmp	w1, 0	// D.8430,
	blt	.L330		//,
	add	x1, x0, 11	// D.8435, iftmp.173,
	and	x1, x1, -8	// D.8436, D.8435,
	str	x1, [x19]	// D.8436, argv.__stack
	b	.L331		//
.L330:
	add	w2, w1, 8	// D.8438, D.8430,
	str	w2, [x19, 24]	// D.8438, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8440, argv.__gr_offs
	cmp	w2, 0	// D.8440,
	ble	.L332		//,
	add	x1, x0, 11	// D.8443, iftmp.173,
	and	x1, x1, -8	// D.8444, D.8443,
	str	x1, [x19]	// D.8444, argv.__stack
	b	.L331		//
.L332:
	ldr	x2, [x19, 8]	// D.8446, argv.__gr_top
	sxtw	x0, w1	// D.8447, D.8430
	add	x0, x2, x0	// iftmp.173, D.8446, D.8447
.L331:
	ldr	w0, [x0]	// tmp198, *iftmp.172_58
	str	w0, [sp, 68]	// tmp198, g
// varargs-dll.c:177:   int h = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8448, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.175, argv.__stack
	cmp	w1, 0	// D.8448,
	blt	.L334		//,
	add	x1, x0, 11	// D.8453, iftmp.175,
	and	x1, x1, -8	// D.8454, D.8453,
	str	x1, [x19]	// D.8454, argv.__stack
	b	.L335		//
.L334:
	add	w2, w1, 8	// D.8456, D.8448,
	str	w2, [x19, 24]	// D.8456, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8458, argv.__gr_offs
	cmp	w2, 0	// D.8458,
	ble	.L336		//,
	add	x1, x0, 11	// D.8461, iftmp.175,
	and	x1, x1, -8	// D.8462, D.8461,
	str	x1, [x19]	// D.8462, argv.__stack
	b	.L335		//
.L336:
	ldr	x2, [x19, 8]	// D.8464, argv.__gr_top
	sxtw	x0, w1	// D.8465, D.8448
	add	x0, x2, x0	// iftmp.175, D.8464, D.8465
.L335:
	ldr	w0, [x0]	// tmp199, *iftmp.174_60
	str	w0, [sp, 72]	// tmp199, h
// varargs-dll.c:178:   int i = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8466, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.177, argv.__stack
	cmp	w1, 0	// D.8466,
	blt	.L338		//,
	add	x1, x0, 11	// D.8471, iftmp.177,
	and	x1, x1, -8	// D.8472, D.8471,
	str	x1, [x19]	// D.8472, argv.__stack
	b	.L339		//
.L338:
	add	w2, w1, 8	// D.8474, D.8466,
	str	w2, [x19, 24]	// D.8474, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8476, argv.__gr_offs
	cmp	w2, 0	// D.8476,
	ble	.L340		//,
	add	x1, x0, 11	// D.8479, iftmp.177,
	and	x1, x1, -8	// D.8480, D.8479,
	str	x1, [x19]	// D.8480, argv.__stack
	b	.L339		//
.L340:
	ldr	x2, [x19, 8]	// D.8482, argv.__gr_top
	sxtw	x0, w1	// D.8483, D.8466
	add	x0, x2, x0	// iftmp.177, D.8482, D.8483
.L339:
	ldr	w0, [x0]	// tmp200, *iftmp.176_62
	str	w0, [sp, 76]	// tmp200, i
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp201, a
	ldr	w0, [sp, 48]	// tmp202, b
	add	w1, w1, w0	// _1, tmp201, tmp202
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp203, c
	add	w1, w1, w0	// _2, _1, tmp203
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp204, d
	add	w1, w1, w0	// _3, _2, tmp204
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp205, e
	add	w1, w1, w0	// _4, _3, tmp205
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp206, f
	add	w1, w1, w0	// _5, _4, tmp206
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp207, g
	add	w1, w1, w0	// _6, _5, tmp207
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp208, h
	add	w1, w1, w0	// _7, _6, tmp208
// varargs-dll.c:179:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp209, i
	add	w0, w1, w0	// _27, _7, tmp209
// varargs-dll.c:180: }
	ldr	x19, [sp], 80	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE17:
	.size	use_va_list_several_ints, .-use_va_list_several_ints
	.align	2
	.global	use_va_args_many_ints
	.type	use_va_args_many_ints, %function
use_va_args_many_ints:
.LFB18:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:184: {
	adrp	x0, :got:__stack_chk_guard	// tmp280,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp279, tmp280,
	ldr	x1, [x0]	// tmp322,
	str	x1, [sp, 136]	// tmp322, D.8790
	mov	x1, 0	// tmp322
// varargs-dll.c:186:   va_start (argv, format);
	add	x0, sp, 336	// tmp327,,
	str	x0, [sp, 104]	// tmp327, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp328,,
	str	x0, [sp, 112]	// tmp328, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp282,,
	str	x0, [sp, 120]	// tmp282, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp283,
	str	w0, [sp, 128]	// tmp283, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp284,
	str	w0, [sp, 132]	// tmp284, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:187:   int a = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8484, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.179, argv.__stack
	cmp	w1, 0	// D.8484,
	blt	.L344		//,
	add	x1, x0, 11	// D.8489, iftmp.179,
	and	x1, x1, -8	// D.8490, D.8489,
	str	x1, [sp, 104]	// D.8490, argv.__stack
	b	.L345		//
.L344:
	add	w2, w1, 8	// D.8492, D.8484,
	str	w2, [sp, 128]	// D.8492, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8494, argv.__gr_offs
	cmp	w2, 0	// D.8494,
	ble	.L346		//,
	add	x1, x0, 11	// D.8497, iftmp.179,
	and	x1, x1, -8	// D.8498, D.8497,
	str	x1, [sp, 104]	// D.8498, argv.__stack
	b	.L345		//
.L346:
	ldr	x2, [sp, 112]	// D.8500, argv.__gr_top
	sxtw	x0, w1	// D.8501, D.8484
	add	x0, x2, x0	// iftmp.179, D.8500, D.8501
.L345:
	ldr	w0, [x0]	// tmp285, *iftmp.178_89
	str	w0, [sp, 36]	// tmp285, a
// varargs-dll.c:188:   int b = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8502, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.181, argv.__stack
	cmp	w1, 0	// D.8502,
	blt	.L348		//,
	add	x1, x0, 11	// D.8507, iftmp.181,
	and	x1, x1, -8	// D.8508, D.8507,
	str	x1, [sp, 104]	// D.8508, argv.__stack
	b	.L349		//
.L348:
	add	w2, w1, 8	// D.8510, D.8502,
	str	w2, [sp, 128]	// D.8510, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8512, argv.__gr_offs
	cmp	w2, 0	// D.8512,
	ble	.L350		//,
	add	x1, x0, 11	// D.8515, iftmp.181,
	and	x1, x1, -8	// D.8516, D.8515,
	str	x1, [sp, 104]	// D.8516, argv.__stack
	b	.L349		//
.L350:
	ldr	x2, [sp, 112]	// D.8518, argv.__gr_top
	sxtw	x0, w1	// D.8519, D.8502
	add	x0, x2, x0	// iftmp.181, D.8518, D.8519
.L349:
	ldr	w0, [x0]	// tmp286, *iftmp.180_91
	str	w0, [sp, 40]	// tmp286, b
// varargs-dll.c:189:   int c = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8520, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.183, argv.__stack
	cmp	w1, 0	// D.8520,
	blt	.L352		//,
	add	x1, x0, 11	// D.8525, iftmp.183,
	and	x1, x1, -8	// D.8526, D.8525,
	str	x1, [sp, 104]	// D.8526, argv.__stack
	b	.L353		//
.L352:
	add	w2, w1, 8	// D.8528, D.8520,
	str	w2, [sp, 128]	// D.8528, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8530, argv.__gr_offs
	cmp	w2, 0	// D.8530,
	ble	.L354		//,
	add	x1, x0, 11	// D.8533, iftmp.183,
	and	x1, x1, -8	// D.8534, D.8533,
	str	x1, [sp, 104]	// D.8534, argv.__stack
	b	.L353		//
.L354:
	ldr	x2, [sp, 112]	// D.8536, argv.__gr_top
	sxtw	x0, w1	// D.8537, D.8520
	add	x0, x2, x0	// iftmp.183, D.8536, D.8537
.L353:
	ldr	w0, [x0]	// tmp287, *iftmp.182_93
	str	w0, [sp, 44]	// tmp287, c
// varargs-dll.c:190:   int d = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8538, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.185, argv.__stack
	cmp	w1, 0	// D.8538,
	blt	.L356		//,
	add	x1, x0, 11	// D.8543, iftmp.185,
	and	x1, x1, -8	// D.8544, D.8543,
	str	x1, [sp, 104]	// D.8544, argv.__stack
	b	.L357		//
.L356:
	add	w2, w1, 8	// D.8546, D.8538,
	str	w2, [sp, 128]	// D.8546, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8548, argv.__gr_offs
	cmp	w2, 0	// D.8548,
	ble	.L358		//,
	add	x1, x0, 11	// D.8551, iftmp.185,
	and	x1, x1, -8	// D.8552, D.8551,
	str	x1, [sp, 104]	// D.8552, argv.__stack
	b	.L357		//
.L358:
	ldr	x2, [sp, 112]	// D.8554, argv.__gr_top
	sxtw	x0, w1	// D.8555, D.8538
	add	x0, x2, x0	// iftmp.185, D.8554, D.8555
.L357:
	ldr	w0, [x0]	// tmp288, *iftmp.184_95
	str	w0, [sp, 48]	// tmp288, d
// varargs-dll.c:191:   int e = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8556, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.187, argv.__stack
	cmp	w1, 0	// D.8556,
	blt	.L360		//,
	add	x1, x0, 11	// D.8561, iftmp.187,
	and	x1, x1, -8	// D.8562, D.8561,
	str	x1, [sp, 104]	// D.8562, argv.__stack
	b	.L361		//
.L360:
	add	w2, w1, 8	// D.8564, D.8556,
	str	w2, [sp, 128]	// D.8564, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8566, argv.__gr_offs
	cmp	w2, 0	// D.8566,
	ble	.L362		//,
	add	x1, x0, 11	// D.8569, iftmp.187,
	and	x1, x1, -8	// D.8570, D.8569,
	str	x1, [sp, 104]	// D.8570, argv.__stack
	b	.L361		//
.L362:
	ldr	x2, [sp, 112]	// D.8572, argv.__gr_top
	sxtw	x0, w1	// D.8573, D.8556
	add	x0, x2, x0	// iftmp.187, D.8572, D.8573
.L361:
	ldr	w0, [x0]	// tmp289, *iftmp.186_97
	str	w0, [sp, 52]	// tmp289, e
// varargs-dll.c:192:   int f = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8574, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.189, argv.__stack
	cmp	w1, 0	// D.8574,
	blt	.L364		//,
	add	x1, x0, 11	// D.8579, iftmp.189,
	and	x1, x1, -8	// D.8580, D.8579,
	str	x1, [sp, 104]	// D.8580, argv.__stack
	b	.L365		//
.L364:
	add	w2, w1, 8	// D.8582, D.8574,
	str	w2, [sp, 128]	// D.8582, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8584, argv.__gr_offs
	cmp	w2, 0	// D.8584,
	ble	.L366		//,
	add	x1, x0, 11	// D.8587, iftmp.189,
	and	x1, x1, -8	// D.8588, D.8587,
	str	x1, [sp, 104]	// D.8588, argv.__stack
	b	.L365		//
.L366:
	ldr	x2, [sp, 112]	// D.8590, argv.__gr_top
	sxtw	x0, w1	// D.8591, D.8574
	add	x0, x2, x0	// iftmp.189, D.8590, D.8591
.L365:
	ldr	w0, [x0]	// tmp290, *iftmp.188_99
	str	w0, [sp, 56]	// tmp290, f
// varargs-dll.c:193:   int g = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8592, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.191, argv.__stack
	cmp	w1, 0	// D.8592,
	blt	.L368		//,
	add	x1, x0, 11	// D.8597, iftmp.191,
	and	x1, x1, -8	// D.8598, D.8597,
	str	x1, [sp, 104]	// D.8598, argv.__stack
	b	.L369		//
.L368:
	add	w2, w1, 8	// D.8600, D.8592,
	str	w2, [sp, 128]	// D.8600, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8602, argv.__gr_offs
	cmp	w2, 0	// D.8602,
	ble	.L370		//,
	add	x1, x0, 11	// D.8605, iftmp.191,
	and	x1, x1, -8	// D.8606, D.8605,
	str	x1, [sp, 104]	// D.8606, argv.__stack
	b	.L369		//
.L370:
	ldr	x2, [sp, 112]	// D.8608, argv.__gr_top
	sxtw	x0, w1	// D.8609, D.8592
	add	x0, x2, x0	// iftmp.191, D.8608, D.8609
.L369:
	ldr	w0, [x0]	// tmp291, *iftmp.190_101
	str	w0, [sp, 60]	// tmp291, g
// varargs-dll.c:194:   int h = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8610, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.193, argv.__stack
	cmp	w1, 0	// D.8610,
	blt	.L372		//,
	add	x1, x0, 11	// D.8615, iftmp.193,
	and	x1, x1, -8	// D.8616, D.8615,
	str	x1, [sp, 104]	// D.8616, argv.__stack
	b	.L373		//
.L372:
	add	w2, w1, 8	// D.8618, D.8610,
	str	w2, [sp, 128]	// D.8618, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8620, argv.__gr_offs
	cmp	w2, 0	// D.8620,
	ble	.L374		//,
	add	x1, x0, 11	// D.8623, iftmp.193,
	and	x1, x1, -8	// D.8624, D.8623,
	str	x1, [sp, 104]	// D.8624, argv.__stack
	b	.L373		//
.L374:
	ldr	x2, [sp, 112]	// D.8626, argv.__gr_top
	sxtw	x0, w1	// D.8627, D.8610
	add	x0, x2, x0	// iftmp.193, D.8626, D.8627
.L373:
	ldr	w0, [x0]	// tmp292, *iftmp.192_103
	str	w0, [sp, 64]	// tmp292, h
// varargs-dll.c:195:   int i = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8628, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.195, argv.__stack
	cmp	w1, 0	// D.8628,
	blt	.L376		//,
	add	x1, x0, 11	// D.8633, iftmp.195,
	and	x1, x1, -8	// D.8634, D.8633,
	str	x1, [sp, 104]	// D.8634, argv.__stack
	b	.L377		//
.L376:
	add	w2, w1, 8	// D.8636, D.8628,
	str	w2, [sp, 128]	// D.8636, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8638, argv.__gr_offs
	cmp	w2, 0	// D.8638,
	ble	.L378		//,
	add	x1, x0, 11	// D.8641, iftmp.195,
	and	x1, x1, -8	// D.8642, D.8641,
	str	x1, [sp, 104]	// D.8642, argv.__stack
	b	.L377		//
.L378:
	ldr	x2, [sp, 112]	// D.8644, argv.__gr_top
	sxtw	x0, w1	// D.8645, D.8628
	add	x0, x2, x0	// iftmp.195, D.8644, D.8645
.L377:
	ldr	w0, [x0]	// tmp293, *iftmp.194_105
	str	w0, [sp, 68]	// tmp293, i
// varargs-dll.c:196:   int j = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8646, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.197, argv.__stack
	cmp	w1, 0	// D.8646,
	blt	.L380		//,
	add	x1, x0, 11	// D.8651, iftmp.197,
	and	x1, x1, -8	// D.8652, D.8651,
	str	x1, [sp, 104]	// D.8652, argv.__stack
	b	.L381		//
.L380:
	add	w2, w1, 8	// D.8654, D.8646,
	str	w2, [sp, 128]	// D.8654, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8656, argv.__gr_offs
	cmp	w2, 0	// D.8656,
	ble	.L382		//,
	add	x1, x0, 11	// D.8659, iftmp.197,
	and	x1, x1, -8	// D.8660, D.8659,
	str	x1, [sp, 104]	// D.8660, argv.__stack
	b	.L381		//
.L382:
	ldr	x2, [sp, 112]	// D.8662, argv.__gr_top
	sxtw	x0, w1	// D.8663, D.8646
	add	x0, x2, x0	// iftmp.197, D.8662, D.8663
.L381:
	ldr	w0, [x0]	// tmp294, *iftmp.196_107
	str	w0, [sp, 72]	// tmp294, j
// varargs-dll.c:197:   int k = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8664, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.199, argv.__stack
	cmp	w1, 0	// D.8664,
	blt	.L384		//,
	add	x1, x0, 11	// D.8669, iftmp.199,
	and	x1, x1, -8	// D.8670, D.8669,
	str	x1, [sp, 104]	// D.8670, argv.__stack
	b	.L385		//
.L384:
	add	w2, w1, 8	// D.8672, D.8664,
	str	w2, [sp, 128]	// D.8672, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8674, argv.__gr_offs
	cmp	w2, 0	// D.8674,
	ble	.L386		//,
	add	x1, x0, 11	// D.8677, iftmp.199,
	and	x1, x1, -8	// D.8678, D.8677,
	str	x1, [sp, 104]	// D.8678, argv.__stack
	b	.L385		//
.L386:
	ldr	x2, [sp, 112]	// D.8680, argv.__gr_top
	sxtw	x0, w1	// D.8681, D.8664
	add	x0, x2, x0	// iftmp.199, D.8680, D.8681
.L385:
	ldr	w0, [x0]	// tmp295, *iftmp.198_109
	str	w0, [sp, 76]	// tmp295, k
// varargs-dll.c:198:   int l = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8682, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.201, argv.__stack
	cmp	w1, 0	// D.8682,
	blt	.L388		//,
	add	x1, x0, 11	// D.8687, iftmp.201,
	and	x1, x1, -8	// D.8688, D.8687,
	str	x1, [sp, 104]	// D.8688, argv.__stack
	b	.L389		//
.L388:
	add	w2, w1, 8	// D.8690, D.8682,
	str	w2, [sp, 128]	// D.8690, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8692, argv.__gr_offs
	cmp	w2, 0	// D.8692,
	ble	.L390		//,
	add	x1, x0, 11	// D.8695, iftmp.201,
	and	x1, x1, -8	// D.8696, D.8695,
	str	x1, [sp, 104]	// D.8696, argv.__stack
	b	.L389		//
.L390:
	ldr	x2, [sp, 112]	// D.8698, argv.__gr_top
	sxtw	x0, w1	// D.8699, D.8682
	add	x0, x2, x0	// iftmp.201, D.8698, D.8699
.L389:
	ldr	w0, [x0]	// tmp296, *iftmp.200_111
	str	w0, [sp, 80]	// tmp296, l
// varargs-dll.c:199:   int m = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8700, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.203, argv.__stack
	cmp	w1, 0	// D.8700,
	blt	.L392		//,
	add	x1, x0, 11	// D.8705, iftmp.203,
	and	x1, x1, -8	// D.8706, D.8705,
	str	x1, [sp, 104]	// D.8706, argv.__stack
	b	.L393		//
.L392:
	add	w2, w1, 8	// D.8708, D.8700,
	str	w2, [sp, 128]	// D.8708, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8710, argv.__gr_offs
	cmp	w2, 0	// D.8710,
	ble	.L394		//,
	add	x1, x0, 11	// D.8713, iftmp.203,
	and	x1, x1, -8	// D.8714, D.8713,
	str	x1, [sp, 104]	// D.8714, argv.__stack
	b	.L393		//
.L394:
	ldr	x2, [sp, 112]	// D.8716, argv.__gr_top
	sxtw	x0, w1	// D.8717, D.8700
	add	x0, x2, x0	// iftmp.203, D.8716, D.8717
.L393:
	ldr	w0, [x0]	// tmp297, *iftmp.202_113
	str	w0, [sp, 84]	// tmp297, m
// varargs-dll.c:200:   int n = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8718, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.205, argv.__stack
	cmp	w1, 0	// D.8718,
	blt	.L396		//,
	add	x1, x0, 11	// D.8723, iftmp.205,
	and	x1, x1, -8	// D.8724, D.8723,
	str	x1, [sp, 104]	// D.8724, argv.__stack
	b	.L397		//
.L396:
	add	w2, w1, 8	// D.8726, D.8718,
	str	w2, [sp, 128]	// D.8726, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8728, argv.__gr_offs
	cmp	w2, 0	// D.8728,
	ble	.L398		//,
	add	x1, x0, 11	// D.8731, iftmp.205,
	and	x1, x1, -8	// D.8732, D.8731,
	str	x1, [sp, 104]	// D.8732, argv.__stack
	b	.L397		//
.L398:
	ldr	x2, [sp, 112]	// D.8734, argv.__gr_top
	sxtw	x0, w1	// D.8735, D.8718
	add	x0, x2, x0	// iftmp.205, D.8734, D.8735
.L397:
	ldr	w0, [x0]	// tmp298, *iftmp.204_115
	str	w0, [sp, 88]	// tmp298, n
// varargs-dll.c:201:   int o = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8736, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.207, argv.__stack
	cmp	w1, 0	// D.8736,
	blt	.L400		//,
	add	x1, x0, 11	// D.8741, iftmp.207,
	and	x1, x1, -8	// D.8742, D.8741,
	str	x1, [sp, 104]	// D.8742, argv.__stack
	b	.L401		//
.L400:
	add	w2, w1, 8	// D.8744, D.8736,
	str	w2, [sp, 128]	// D.8744, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8746, argv.__gr_offs
	cmp	w2, 0	// D.8746,
	ble	.L402		//,
	add	x1, x0, 11	// D.8749, iftmp.207,
	and	x1, x1, -8	// D.8750, D.8749,
	str	x1, [sp, 104]	// D.8750, argv.__stack
	b	.L401		//
.L402:
	ldr	x2, [sp, 112]	// D.8752, argv.__gr_top
	sxtw	x0, w1	// D.8753, D.8736
	add	x0, x2, x0	// iftmp.207, D.8752, D.8753
.L401:
	ldr	w0, [x0]	// tmp299, *iftmp.206_117
	str	w0, [sp, 92]	// tmp299, o
// varargs-dll.c:202:   int p = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8754, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.209, argv.__stack
	cmp	w1, 0	// D.8754,
	blt	.L404		//,
	add	x1, x0, 11	// D.8759, iftmp.209,
	and	x1, x1, -8	// D.8760, D.8759,
	str	x1, [sp, 104]	// D.8760, argv.__stack
	b	.L405		//
.L404:
	add	w2, w1, 8	// D.8762, D.8754,
	str	w2, [sp, 128]	// D.8762, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8764, argv.__gr_offs
	cmp	w2, 0	// D.8764,
	ble	.L406		//,
	add	x1, x0, 11	// D.8767, iftmp.209,
	and	x1, x1, -8	// D.8768, D.8767,
	str	x1, [sp, 104]	// D.8768, argv.__stack
	b	.L405		//
.L406:
	ldr	x2, [sp, 112]	// D.8770, argv.__gr_top
	sxtw	x0, w1	// D.8771, D.8754
	add	x0, x2, x0	// iftmp.209, D.8770, D.8771
.L405:
	ldr	w0, [x0]	// tmp300, *iftmp.208_119
	str	w0, [sp, 96]	// tmp300, p
// varargs-dll.c:203:   int q = va_arg (argv, int);
	ldr	w1, [sp, 128]	// D.8772, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.211, argv.__stack
	cmp	w1, 0	// D.8772,
	blt	.L408		//,
	add	x1, x0, 11	// D.8777, iftmp.211,
	and	x1, x1, -8	// D.8778, D.8777,
	str	x1, [sp, 104]	// D.8778, argv.__stack
	b	.L409		//
.L408:
	add	w2, w1, 8	// D.8780, D.8772,
	str	w2, [sp, 128]	// D.8780, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.8782, argv.__gr_offs
	cmp	w2, 0	// D.8782,
	ble	.L410		//,
	add	x1, x0, 11	// D.8785, iftmp.211,
	and	x1, x1, -8	// D.8786, D.8785,
	str	x1, [sp, 104]	// D.8786, argv.__stack
	b	.L409		//
.L410:
	ldr	x2, [sp, 112]	// D.8788, argv.__gr_top
	sxtw	x0, w1	// D.8789, D.8772
	add	x0, x2, x0	// iftmp.211, D.8788, D.8789
.L409:
	ldr	w0, [x0]	// tmp301, *iftmp.210_121
	str	w0, [sp, 100]	// tmp301, q
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp302, a
	ldr	w0, [sp, 40]	// tmp303, b
	add	w1, w1, w0	// _1, tmp302, tmp303
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp304, c
	add	w1, w1, w0	// _2, _1, tmp304
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp305, d
	add	w1, w1, w0	// _3, _2, tmp305
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp306, e
	add	w1, w1, w0	// _4, _3, tmp306
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp307, f
	add	w1, w1, w0	// _5, _4, tmp307
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp308, g
	add	w1, w1, w0	// _6, _5, tmp308
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp309, h
	add	w1, w1, w0	// _7, _6, tmp309
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp310, i
	add	w1, w1, w0	// _8, _7, tmp310
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp311, j
	add	w1, w1, w0	// _9, _8, tmp311
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp312, k
	add	w1, w1, w0	// _10, _9, tmp312
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp313, l
	add	w1, w1, w0	// _11, _10, tmp313
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp314, m
	add	w1, w1, w0	// _12, _11, tmp314
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp315, n
	add	w1, w1, w0	// _13, _12, tmp315
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp316, o
	add	w1, w1, w0	// _14, _13, tmp316
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp317, p
	add	w1, w1, w0	// _15, _14, tmp317
// varargs-dll.c:205:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp318, q
	add	w0, w1, w0	// _53, _15, tmp318
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:206: }
	adrp	x0, :got:__stack_chk_guard	// tmp321,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp320, tmp321,
	ldr	x3, [sp, 136]	// tmp323, D.8790
	ldr	x2, [x0]	// tmp324,
	subs	x3, x3, x2	// tmp323, tmp324
	mov	x2, 0	// tmp324
	beq	.L413		//,
	bl	__stack_chk_fail		//
.L413:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE18:
	.size	use_va_args_many_ints, .-use_va_args_many_ints
	.align	2
	.global	use_va_list_many_ints
	.type	use_va_list_many_ints, %function
use_va_list_many_ints:
.LFB19:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp279,
// varargs-dll.c:211:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8794, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.213, argv.__stack
	cmp	w1, 0	// D.8794,
	blt	.L415		//,
	add	x1, x0, 11	// D.8799, iftmp.213,
	and	x1, x1, -8	// D.8800, D.8799,
	str	x1, [x19]	// D.8800, argv.__stack
	b	.L416		//
.L415:
	add	w2, w1, 8	// D.8802, D.8794,
	str	w2, [x19, 24]	// D.8802, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8804, argv.__gr_offs
	cmp	w2, 0	// D.8804,
	ble	.L417		//,
	add	x1, x0, 11	// D.8807, iftmp.213,
	and	x1, x1, -8	// D.8808, D.8807,
	str	x1, [x19]	// D.8808, argv.__stack
	b	.L416		//
.L417:
	ldr	x2, [x19, 8]	// D.8810, argv.__gr_top
	sxtw	x0, w1	// D.8811, D.8794
	add	x0, x2, x0	// iftmp.213, D.8810, D.8811
.L416:
	ldr	w0, [x0]	// tmp280, *iftmp.212_86
	str	w0, [sp, 44]	// tmp280, a
// varargs-dll.c:212:   int b = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8812, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.215, argv.__stack
	cmp	w1, 0	// D.8812,
	blt	.L419		//,
	add	x1, x0, 11	// D.8817, iftmp.215,
	and	x1, x1, -8	// D.8818, D.8817,
	str	x1, [x19]	// D.8818, argv.__stack
	b	.L420		//
.L419:
	add	w2, w1, 8	// D.8820, D.8812,
	str	w2, [x19, 24]	// D.8820, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8822, argv.__gr_offs
	cmp	w2, 0	// D.8822,
	ble	.L421		//,
	add	x1, x0, 11	// D.8825, iftmp.215,
	and	x1, x1, -8	// D.8826, D.8825,
	str	x1, [x19]	// D.8826, argv.__stack
	b	.L420		//
.L421:
	ldr	x2, [x19, 8]	// D.8828, argv.__gr_top
	sxtw	x0, w1	// D.8829, D.8812
	add	x0, x2, x0	// iftmp.215, D.8828, D.8829
.L420:
	ldr	w0, [x0]	// tmp281, *iftmp.214_88
	str	w0, [sp, 48]	// tmp281, b
// varargs-dll.c:213:   int c = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8830, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.217, argv.__stack
	cmp	w1, 0	// D.8830,
	blt	.L423		//,
	add	x1, x0, 11	// D.8835, iftmp.217,
	and	x1, x1, -8	// D.8836, D.8835,
	str	x1, [x19]	// D.8836, argv.__stack
	b	.L424		//
.L423:
	add	w2, w1, 8	// D.8838, D.8830,
	str	w2, [x19, 24]	// D.8838, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8840, argv.__gr_offs
	cmp	w2, 0	// D.8840,
	ble	.L425		//,
	add	x1, x0, 11	// D.8843, iftmp.217,
	and	x1, x1, -8	// D.8844, D.8843,
	str	x1, [x19]	// D.8844, argv.__stack
	b	.L424		//
.L425:
	ldr	x2, [x19, 8]	// D.8846, argv.__gr_top
	sxtw	x0, w1	// D.8847, D.8830
	add	x0, x2, x0	// iftmp.217, D.8846, D.8847
.L424:
	ldr	w0, [x0]	// tmp282, *iftmp.216_90
	str	w0, [sp, 52]	// tmp282, c
// varargs-dll.c:214:   int d = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8848, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.219, argv.__stack
	cmp	w1, 0	// D.8848,
	blt	.L427		//,
	add	x1, x0, 11	// D.8853, iftmp.219,
	and	x1, x1, -8	// D.8854, D.8853,
	str	x1, [x19]	// D.8854, argv.__stack
	b	.L428		//
.L427:
	add	w2, w1, 8	// D.8856, D.8848,
	str	w2, [x19, 24]	// D.8856, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8858, argv.__gr_offs
	cmp	w2, 0	// D.8858,
	ble	.L429		//,
	add	x1, x0, 11	// D.8861, iftmp.219,
	and	x1, x1, -8	// D.8862, D.8861,
	str	x1, [x19]	// D.8862, argv.__stack
	b	.L428		//
.L429:
	ldr	x2, [x19, 8]	// D.8864, argv.__gr_top
	sxtw	x0, w1	// D.8865, D.8848
	add	x0, x2, x0	// iftmp.219, D.8864, D.8865
.L428:
	ldr	w0, [x0]	// tmp283, *iftmp.218_92
	str	w0, [sp, 56]	// tmp283, d
// varargs-dll.c:215:   int e = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8866, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.221, argv.__stack
	cmp	w1, 0	// D.8866,
	blt	.L431		//,
	add	x1, x0, 11	// D.8871, iftmp.221,
	and	x1, x1, -8	// D.8872, D.8871,
	str	x1, [x19]	// D.8872, argv.__stack
	b	.L432		//
.L431:
	add	w2, w1, 8	// D.8874, D.8866,
	str	w2, [x19, 24]	// D.8874, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8876, argv.__gr_offs
	cmp	w2, 0	// D.8876,
	ble	.L433		//,
	add	x1, x0, 11	// D.8879, iftmp.221,
	and	x1, x1, -8	// D.8880, D.8879,
	str	x1, [x19]	// D.8880, argv.__stack
	b	.L432		//
.L433:
	ldr	x2, [x19, 8]	// D.8882, argv.__gr_top
	sxtw	x0, w1	// D.8883, D.8866
	add	x0, x2, x0	// iftmp.221, D.8882, D.8883
.L432:
	ldr	w0, [x0]	// tmp284, *iftmp.220_94
	str	w0, [sp, 60]	// tmp284, e
// varargs-dll.c:216:   int f = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8884, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.223, argv.__stack
	cmp	w1, 0	// D.8884,
	blt	.L435		//,
	add	x1, x0, 11	// D.8889, iftmp.223,
	and	x1, x1, -8	// D.8890, D.8889,
	str	x1, [x19]	// D.8890, argv.__stack
	b	.L436		//
.L435:
	add	w2, w1, 8	// D.8892, D.8884,
	str	w2, [x19, 24]	// D.8892, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8894, argv.__gr_offs
	cmp	w2, 0	// D.8894,
	ble	.L437		//,
	add	x1, x0, 11	// D.8897, iftmp.223,
	and	x1, x1, -8	// D.8898, D.8897,
	str	x1, [x19]	// D.8898, argv.__stack
	b	.L436		//
.L437:
	ldr	x2, [x19, 8]	// D.8900, argv.__gr_top
	sxtw	x0, w1	// D.8901, D.8884
	add	x0, x2, x0	// iftmp.223, D.8900, D.8901
.L436:
	ldr	w0, [x0]	// tmp285, *iftmp.222_96
	str	w0, [sp, 64]	// tmp285, f
// varargs-dll.c:217:   int g = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8902, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.225, argv.__stack
	cmp	w1, 0	// D.8902,
	blt	.L439		//,
	add	x1, x0, 11	// D.8907, iftmp.225,
	and	x1, x1, -8	// D.8908, D.8907,
	str	x1, [x19]	// D.8908, argv.__stack
	b	.L440		//
.L439:
	add	w2, w1, 8	// D.8910, D.8902,
	str	w2, [x19, 24]	// D.8910, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8912, argv.__gr_offs
	cmp	w2, 0	// D.8912,
	ble	.L441		//,
	add	x1, x0, 11	// D.8915, iftmp.225,
	and	x1, x1, -8	// D.8916, D.8915,
	str	x1, [x19]	// D.8916, argv.__stack
	b	.L440		//
.L441:
	ldr	x2, [x19, 8]	// D.8918, argv.__gr_top
	sxtw	x0, w1	// D.8919, D.8902
	add	x0, x2, x0	// iftmp.225, D.8918, D.8919
.L440:
	ldr	w0, [x0]	// tmp286, *iftmp.224_98
	str	w0, [sp, 68]	// tmp286, g
// varargs-dll.c:218:   int h = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8920, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.227, argv.__stack
	cmp	w1, 0	// D.8920,
	blt	.L443		//,
	add	x1, x0, 11	// D.8925, iftmp.227,
	and	x1, x1, -8	// D.8926, D.8925,
	str	x1, [x19]	// D.8926, argv.__stack
	b	.L444		//
.L443:
	add	w2, w1, 8	// D.8928, D.8920,
	str	w2, [x19, 24]	// D.8928, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8930, argv.__gr_offs
	cmp	w2, 0	// D.8930,
	ble	.L445		//,
	add	x1, x0, 11	// D.8933, iftmp.227,
	and	x1, x1, -8	// D.8934, D.8933,
	str	x1, [x19]	// D.8934, argv.__stack
	b	.L444		//
.L445:
	ldr	x2, [x19, 8]	// D.8936, argv.__gr_top
	sxtw	x0, w1	// D.8937, D.8920
	add	x0, x2, x0	// iftmp.227, D.8936, D.8937
.L444:
	ldr	w0, [x0]	// tmp287, *iftmp.226_100
	str	w0, [sp, 72]	// tmp287, h
// varargs-dll.c:219:   int i = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8938, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.229, argv.__stack
	cmp	w1, 0	// D.8938,
	blt	.L447		//,
	add	x1, x0, 11	// D.8943, iftmp.229,
	and	x1, x1, -8	// D.8944, D.8943,
	str	x1, [x19]	// D.8944, argv.__stack
	b	.L448		//
.L447:
	add	w2, w1, 8	// D.8946, D.8938,
	str	w2, [x19, 24]	// D.8946, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8948, argv.__gr_offs
	cmp	w2, 0	// D.8948,
	ble	.L449		//,
	add	x1, x0, 11	// D.8951, iftmp.229,
	and	x1, x1, -8	// D.8952, D.8951,
	str	x1, [x19]	// D.8952, argv.__stack
	b	.L448		//
.L449:
	ldr	x2, [x19, 8]	// D.8954, argv.__gr_top
	sxtw	x0, w1	// D.8955, D.8938
	add	x0, x2, x0	// iftmp.229, D.8954, D.8955
.L448:
	ldr	w0, [x0]	// tmp288, *iftmp.228_102
	str	w0, [sp, 76]	// tmp288, i
// varargs-dll.c:220:   int j = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8956, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.231, argv.__stack
	cmp	w1, 0	// D.8956,
	blt	.L451		//,
	add	x1, x0, 11	// D.8961, iftmp.231,
	and	x1, x1, -8	// D.8962, D.8961,
	str	x1, [x19]	// D.8962, argv.__stack
	b	.L452		//
.L451:
	add	w2, w1, 8	// D.8964, D.8956,
	str	w2, [x19, 24]	// D.8964, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8966, argv.__gr_offs
	cmp	w2, 0	// D.8966,
	ble	.L453		//,
	add	x1, x0, 11	// D.8969, iftmp.231,
	and	x1, x1, -8	// D.8970, D.8969,
	str	x1, [x19]	// D.8970, argv.__stack
	b	.L452		//
.L453:
	ldr	x2, [x19, 8]	// D.8972, argv.__gr_top
	sxtw	x0, w1	// D.8973, D.8956
	add	x0, x2, x0	// iftmp.231, D.8972, D.8973
.L452:
	ldr	w0, [x0]	// tmp289, *iftmp.230_104
	str	w0, [sp, 80]	// tmp289, j
// varargs-dll.c:221:   int k = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8974, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.233, argv.__stack
	cmp	w1, 0	// D.8974,
	blt	.L455		//,
	add	x1, x0, 11	// D.8979, iftmp.233,
	and	x1, x1, -8	// D.8980, D.8979,
	str	x1, [x19]	// D.8980, argv.__stack
	b	.L456		//
.L455:
	add	w2, w1, 8	// D.8982, D.8974,
	str	w2, [x19, 24]	// D.8982, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.8984, argv.__gr_offs
	cmp	w2, 0	// D.8984,
	ble	.L457		//,
	add	x1, x0, 11	// D.8987, iftmp.233,
	and	x1, x1, -8	// D.8988, D.8987,
	str	x1, [x19]	// D.8988, argv.__stack
	b	.L456		//
.L457:
	ldr	x2, [x19, 8]	// D.8990, argv.__gr_top
	sxtw	x0, w1	// D.8991, D.8974
	add	x0, x2, x0	// iftmp.233, D.8990, D.8991
.L456:
	ldr	w0, [x0]	// tmp290, *iftmp.232_106
	str	w0, [sp, 84]	// tmp290, k
// varargs-dll.c:222:   int l = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.8992, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.235, argv.__stack
	cmp	w1, 0	// D.8992,
	blt	.L459		//,
	add	x1, x0, 11	// D.8997, iftmp.235,
	and	x1, x1, -8	// D.8998, D.8997,
	str	x1, [x19]	// D.8998, argv.__stack
	b	.L460		//
.L459:
	add	w2, w1, 8	// D.9000, D.8992,
	str	w2, [x19, 24]	// D.9000, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9002, argv.__gr_offs
	cmp	w2, 0	// D.9002,
	ble	.L461		//,
	add	x1, x0, 11	// D.9005, iftmp.235,
	and	x1, x1, -8	// D.9006, D.9005,
	str	x1, [x19]	// D.9006, argv.__stack
	b	.L460		//
.L461:
	ldr	x2, [x19, 8]	// D.9008, argv.__gr_top
	sxtw	x0, w1	// D.9009, D.8992
	add	x0, x2, x0	// iftmp.235, D.9008, D.9009
.L460:
	ldr	w0, [x0]	// tmp291, *iftmp.234_108
	str	w0, [sp, 88]	// tmp291, l
// varargs-dll.c:223:   int m = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.9010, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.237, argv.__stack
	cmp	w1, 0	// D.9010,
	blt	.L463		//,
	add	x1, x0, 11	// D.9015, iftmp.237,
	and	x1, x1, -8	// D.9016, D.9015,
	str	x1, [x19]	// D.9016, argv.__stack
	b	.L464		//
.L463:
	add	w2, w1, 8	// D.9018, D.9010,
	str	w2, [x19, 24]	// D.9018, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9020, argv.__gr_offs
	cmp	w2, 0	// D.9020,
	ble	.L465		//,
	add	x1, x0, 11	// D.9023, iftmp.237,
	and	x1, x1, -8	// D.9024, D.9023,
	str	x1, [x19]	// D.9024, argv.__stack
	b	.L464		//
.L465:
	ldr	x2, [x19, 8]	// D.9026, argv.__gr_top
	sxtw	x0, w1	// D.9027, D.9010
	add	x0, x2, x0	// iftmp.237, D.9026, D.9027
.L464:
	ldr	w0, [x0]	// tmp292, *iftmp.236_110
	str	w0, [sp, 92]	// tmp292, m
// varargs-dll.c:224:   int n = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.9028, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.239, argv.__stack
	cmp	w1, 0	// D.9028,
	blt	.L467		//,
	add	x1, x0, 11	// D.9033, iftmp.239,
	and	x1, x1, -8	// D.9034, D.9033,
	str	x1, [x19]	// D.9034, argv.__stack
	b	.L468		//
.L467:
	add	w2, w1, 8	// D.9036, D.9028,
	str	w2, [x19, 24]	// D.9036, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9038, argv.__gr_offs
	cmp	w2, 0	// D.9038,
	ble	.L469		//,
	add	x1, x0, 11	// D.9041, iftmp.239,
	and	x1, x1, -8	// D.9042, D.9041,
	str	x1, [x19]	// D.9042, argv.__stack
	b	.L468		//
.L469:
	ldr	x2, [x19, 8]	// D.9044, argv.__gr_top
	sxtw	x0, w1	// D.9045, D.9028
	add	x0, x2, x0	// iftmp.239, D.9044, D.9045
.L468:
	ldr	w0, [x0]	// tmp293, *iftmp.238_112
	str	w0, [sp, 96]	// tmp293, n
// varargs-dll.c:225:   int o = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.9046, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.241, argv.__stack
	cmp	w1, 0	// D.9046,
	blt	.L471		//,
	add	x1, x0, 11	// D.9051, iftmp.241,
	and	x1, x1, -8	// D.9052, D.9051,
	str	x1, [x19]	// D.9052, argv.__stack
	b	.L472		//
.L471:
	add	w2, w1, 8	// D.9054, D.9046,
	str	w2, [x19, 24]	// D.9054, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9056, argv.__gr_offs
	cmp	w2, 0	// D.9056,
	ble	.L473		//,
	add	x1, x0, 11	// D.9059, iftmp.241,
	and	x1, x1, -8	// D.9060, D.9059,
	str	x1, [x19]	// D.9060, argv.__stack
	b	.L472		//
.L473:
	ldr	x2, [x19, 8]	// D.9062, argv.__gr_top
	sxtw	x0, w1	// D.9063, D.9046
	add	x0, x2, x0	// iftmp.241, D.9062, D.9063
.L472:
	ldr	w0, [x0]	// tmp294, *iftmp.240_114
	str	w0, [sp, 100]	// tmp294, o
// varargs-dll.c:226:   int p = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.9064, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.243, argv.__stack
	cmp	w1, 0	// D.9064,
	blt	.L475		//,
	add	x1, x0, 11	// D.9069, iftmp.243,
	and	x1, x1, -8	// D.9070, D.9069,
	str	x1, [x19]	// D.9070, argv.__stack
	b	.L476		//
.L475:
	add	w2, w1, 8	// D.9072, D.9064,
	str	w2, [x19, 24]	// D.9072, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9074, argv.__gr_offs
	cmp	w2, 0	// D.9074,
	ble	.L477		//,
	add	x1, x0, 11	// D.9077, iftmp.243,
	and	x1, x1, -8	// D.9078, D.9077,
	str	x1, [x19]	// D.9078, argv.__stack
	b	.L476		//
.L477:
	ldr	x2, [x19, 8]	// D.9080, argv.__gr_top
	sxtw	x0, w1	// D.9081, D.9064
	add	x0, x2, x0	// iftmp.243, D.9080, D.9081
.L476:
	ldr	w0, [x0]	// tmp295, *iftmp.242_116
	str	w0, [sp, 104]	// tmp295, p
// varargs-dll.c:227:   int q = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.9082, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.245, argv.__stack
	cmp	w1, 0	// D.9082,
	blt	.L479		//,
	add	x1, x0, 11	// D.9087, iftmp.245,
	and	x1, x1, -8	// D.9088, D.9087,
	str	x1, [x19]	// D.9088, argv.__stack
	b	.L480		//
.L479:
	add	w2, w1, 8	// D.9090, D.9082,
	str	w2, [x19, 24]	// D.9090, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.9092, argv.__gr_offs
	cmp	w2, 0	// D.9092,
	ble	.L481		//,
	add	x1, x0, 11	// D.9095, iftmp.245,
	and	x1, x1, -8	// D.9096, D.9095,
	str	x1, [x19]	// D.9096, argv.__stack
	b	.L480		//
.L481:
	ldr	x2, [x19, 8]	// D.9098, argv.__gr_top
	sxtw	x0, w1	// D.9099, D.9082
	add	x0, x2, x0	// iftmp.245, D.9098, D.9099
.L480:
	ldr	w0, [x0]	// tmp296, *iftmp.244_118
	str	w0, [sp, 108]	// tmp296, q
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp297, a
	ldr	w0, [sp, 48]	// tmp298, b
	add	w1, w1, w0	// _1, tmp297, tmp298
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp299, c
	add	w1, w1, w0	// _2, _1, tmp299
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp300, d
	add	w1, w1, w0	// _3, _2, tmp300
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp301, e
	add	w1, w1, w0	// _4, _3, tmp301
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp302, f
	add	w1, w1, w0	// _5, _4, tmp302
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp303, g
	add	w1, w1, w0	// _6, _5, tmp303
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp304, h
	add	w1, w1, w0	// _7, _6, tmp304
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp305, i
	add	w1, w1, w0	// _8, _7, tmp305
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp306, j
	add	w1, w1, w0	// _9, _8, tmp306
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp307, k
	add	w1, w1, w0	// _10, _9, tmp307
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp308, l
	add	w1, w1, w0	// _11, _10, tmp308
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp309, m
	add	w1, w1, w0	// _12, _11, tmp309
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp310, n
	add	w1, w1, w0	// _13, _12, tmp310
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp311, o
	add	w1, w1, w0	// _14, _13, tmp311
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp312, p
	add	w1, w1, w0	// _15, _14, tmp312
// varargs-dll.c:228:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp313, q
	add	w0, w1, w0	// _51, _15, tmp313
// varargs-dll.c:229: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE19:
	.size	use_va_list_many_ints, .-use_va_list_many_ints
	.align	2
	.global	use_va_args_few_doubles
	.type	use_va_args_few_doubles, %function
use_va_args_few_doubles:
.LFB20:
	.cfi_startproc
	stp	x29, x30, [sp, -288]!	//,,,
	.cfi_def_cfa_offset 288
	.cfi_offset 29, -288
	.cfi_offset 30, -280
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 232]	//,
	str	x2, [sp, 240]	//,
	str	x3, [sp, 248]	//,
	str	x4, [sp, 256]	//,
	str	x5, [sp, 264]	//,
	str	x6, [sp, 272]	//,
	str	x7, [sp, 280]	//,
	str	q0, [sp, 96]	//,
	str	q1, [sp, 112]	//,
	str	q2, [sp, 128]	//,
	str	q3, [sp, 144]	//,
	str	q4, [sp, 160]	//,
	str	q5, [sp, 176]	//,
	str	q6, [sp, 192]	//,
	str	q7, [sp, 208]	//,
// varargs-dll.c:233: {
	adrp	x0, :got:__stack_chk_guard	// tmp116,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp115, tmp116,
	ldr	x1, [x0]	// tmp128,
	str	x1, [sp, 88]	// tmp128, D.9136
	mov	x1, 0	// tmp128
// varargs-dll.c:235:   va_start (argv, name);
	add	x0, sp, 288	// tmp133,,
	str	x0, [sp, 56]	// tmp133, MEM[(struct  *)&argv].__stack
	add	x0, sp, 288	// tmp134,,
	str	x0, [sp, 64]	// tmp134, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 224	// tmp118,,
	str	x0, [sp, 72]	// tmp118, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp119,
	str	w0, [sp, 80]	// tmp119, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp120,
	str	w0, [sp, 84]	// tmp120, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:236:   double a = va_arg (argv, double);
	ldr	w1, [sp, 84]	// D.9100, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.247, argv.__stack
	cmp	w1, 0	// D.9100,
	blt	.L485		//,
	add	x1, x0, 15	// D.9105, iftmp.247,
	and	x1, x1, -8	// D.9106, D.9105,
	str	x1, [sp, 56]	// D.9106, argv.__stack
	b	.L486		//
.L485:
	add	w2, w1, 16	// D.9108, D.9100,
	str	w2, [sp, 84]	// D.9108, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.9110, argv.__vr_offs
	cmp	w2, 0	// D.9110,
	ble	.L487		//,
	add	x1, x0, 15	// D.9113, iftmp.247,
	and	x1, x1, -8	// D.9114, D.9113,
	str	x1, [sp, 56]	// D.9114, argv.__stack
	b	.L486		//
.L487:
	ldr	x2, [sp, 72]	// D.9116, argv.__vr_top
	sxtw	x0, w1	// D.9117, D.9100
	add	x0, x2, x0	// iftmp.247, D.9116, D.9117
.L486:
	ldr	d0, [x0]	// tmp121, *iftmp.246_15
	str	d0, [sp, 40]	// tmp121, a
// varargs-dll.c:237:   double b = va_arg (argv, double);
	ldr	w1, [sp, 84]	// D.9118, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.249, argv.__stack
	cmp	w1, 0	// D.9118,
	blt	.L489		//,
	add	x1, x0, 15	// D.9123, iftmp.249,
	and	x1, x1, -8	// D.9124, D.9123,
	str	x1, [sp, 56]	// D.9124, argv.__stack
	b	.L490		//
.L489:
	add	w2, w1, 16	// D.9126, D.9118,
	str	w2, [sp, 84]	// D.9126, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.9128, argv.__vr_offs
	cmp	w2, 0	// D.9128,
	ble	.L491		//,
	add	x1, x0, 15	// D.9131, iftmp.249,
	and	x1, x1, -8	// D.9132, D.9131,
	str	x1, [sp, 56]	// D.9132, argv.__stack
	b	.L490		//
.L491:
	ldr	x2, [sp, 72]	// D.9134, argv.__vr_top
	sxtw	x0, w1	// D.9135, D.9118
	add	x0, x2, x0	// iftmp.249, D.9134, D.9135
.L490:
	ldr	d0, [x0]	// tmp122, *iftmp.248_17
	str	d0, [sp, 48]	// tmp122, b
// varargs-dll.c:239:   return a + b;
	ldr	d1, [sp, 40]	// tmp123, a
	ldr	d0, [sp, 48]	// tmp124, b
	fadd	d0, d1, d0	// _1, tmp123, tmp124
	fcvtzs	w0, d0	// _9, _1
	mov	w1, w0	// <retval>, _9
// varargs-dll.c:240: }
	adrp	x0, :got:__stack_chk_guard	// tmp127,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp126, tmp127,
	ldr	x3, [sp, 88]	// tmp129, D.9136
	ldr	x2, [x0]	// tmp130,
	subs	x3, x3, x2	// tmp129, tmp130
	mov	x2, 0	// tmp130
	beq	.L494		//,
	bl	__stack_chk_fail		//
.L494:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 288	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE20:
	.size	use_va_args_few_doubles, .-use_va_args_few_doubles
	.align	2
	.global	use_va_list_few_doubles
	.type	use_va_list_few_doubles, %function
use_va_list_few_doubles:
.LFB21:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp115,
// varargs-dll.c:245:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9140, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.251, argv.__stack
	cmp	w1, 0	// D.9140,
	blt	.L496		//,
	add	x1, x0, 15	// D.9145, iftmp.251,
	and	x1, x1, -8	// D.9146, D.9145,
	str	x1, [x19]	// D.9146, argv.__stack
	b	.L497		//
.L496:
	add	w2, w1, 16	// D.9148, D.9140,
	str	w2, [x19, 28]	// D.9148, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9150, argv.__vr_offs
	cmp	w2, 0	// D.9150,
	ble	.L498		//,
	add	x1, x0, 15	// D.9153, iftmp.251,
	and	x1, x1, -8	// D.9154, D.9153,
	str	x1, [x19]	// D.9154, argv.__stack
	b	.L497		//
.L498:
	ldr	x2, [x19, 16]	// D.9156, argv.__vr_top
	sxtw	x0, w1	// D.9157, D.9140
	add	x0, x2, x0	// iftmp.251, D.9156, D.9157
.L497:
	ldr	d0, [x0]	// tmp116, *iftmp.250_12
	str	d0, [sp, 32]	// tmp116, a
// varargs-dll.c:246:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9158, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.253, argv.__stack
	cmp	w1, 0	// D.9158,
	blt	.L500		//,
	add	x1, x0, 15	// D.9163, iftmp.253,
	and	x1, x1, -8	// D.9164, D.9163,
	str	x1, [x19]	// D.9164, argv.__stack
	b	.L501		//
.L500:
	add	w2, w1, 16	// D.9166, D.9158,
	str	w2, [x19, 28]	// D.9166, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9168, argv.__vr_offs
	cmp	w2, 0	// D.9168,
	ble	.L502		//,
	add	x1, x0, 15	// D.9171, iftmp.253,
	and	x1, x1, -8	// D.9172, D.9171,
	str	x1, [x19]	// D.9172, argv.__stack
	b	.L501		//
.L502:
	ldr	x2, [x19, 16]	// D.9174, argv.__vr_top
	sxtw	x0, w1	// D.9175, D.9158
	add	x0, x2, x0	// iftmp.253, D.9174, D.9175
.L501:
	ldr	d0, [x0]	// tmp117, *iftmp.252_14
	str	d0, [sp, 40]	// tmp117, b
// varargs-dll.c:247:   return a + b;
	ldr	d1, [sp, 32]	// tmp118, a
	ldr	d0, [sp, 40]	// tmp119, b
	fadd	d0, d1, d0	// _1, tmp118, tmp119
	fcvtzs	w0, d0	// _7, _1
// varargs-dll.c:248: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE21:
	.size	use_va_list_few_doubles, .-use_va_list_few_doubles
	.align	2
	.global	use_va_args_several_doubles
	.type	use_va_args_several_doubles, %function
use_va_args_several_doubles:
.LFB22:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:252: {
	adrp	x0, :got:__stack_chk_guard	// tmp193,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp192, tmp193,
	ldr	x1, [x0]	// tmp219,
	str	x1, [sp, 136]	// tmp219, D.9338
	mov	x1, 0	// tmp219
// varargs-dll.c:254:   va_start (argv, name);
	add	x0, sp, 336	// tmp224,,
	str	x0, [sp, 104]	// tmp224, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp225,,
	str	x0, [sp, 112]	// tmp225, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp195,,
	str	x0, [sp, 120]	// tmp195, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp196,
	str	w0, [sp, 128]	// tmp196, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp197,
	str	w0, [sp, 132]	// tmp197, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:255:   double a = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9176, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.255, argv.__stack
	cmp	w1, 0	// D.9176,
	blt	.L506		//,
	add	x1, x0, 15	// D.9181, iftmp.255,
	and	x1, x1, -8	// D.9182, D.9181,
	str	x1, [sp, 104]	// D.9182, argv.__stack
	b	.L507		//
.L506:
	add	w2, w1, 16	// D.9184, D.9176,
	str	w2, [sp, 132]	// D.9184, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9186, argv.__vr_offs
	cmp	w2, 0	// D.9186,
	ble	.L508		//,
	add	x1, x0, 15	// D.9189, iftmp.255,
	and	x1, x1, -8	// D.9190, D.9189,
	str	x1, [sp, 104]	// D.9190, argv.__stack
	b	.L507		//
.L508:
	ldr	x2, [sp, 120]	// D.9192, argv.__vr_top
	sxtw	x0, w1	// D.9193, D.9176
	add	x0, x2, x0	// iftmp.255, D.9192, D.9193
.L507:
	ldr	d0, [x0]	// tmp198, *iftmp.254_50
	str	d0, [sp, 32]	// tmp198, a
// varargs-dll.c:256:   double b = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9194, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.257, argv.__stack
	cmp	w1, 0	// D.9194,
	blt	.L510		//,
	add	x1, x0, 15	// D.9199, iftmp.257,
	and	x1, x1, -8	// D.9200, D.9199,
	str	x1, [sp, 104]	// D.9200, argv.__stack
	b	.L511		//
.L510:
	add	w2, w1, 16	// D.9202, D.9194,
	str	w2, [sp, 132]	// D.9202, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9204, argv.__vr_offs
	cmp	w2, 0	// D.9204,
	ble	.L512		//,
	add	x1, x0, 15	// D.9207, iftmp.257,
	and	x1, x1, -8	// D.9208, D.9207,
	str	x1, [sp, 104]	// D.9208, argv.__stack
	b	.L511		//
.L512:
	ldr	x2, [sp, 120]	// D.9210, argv.__vr_top
	sxtw	x0, w1	// D.9211, D.9194
	add	x0, x2, x0	// iftmp.257, D.9210, D.9211
.L511:
	ldr	d0, [x0]	// tmp199, *iftmp.256_52
	str	d0, [sp, 40]	// tmp199, b
// varargs-dll.c:257:   double c = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9212, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.259, argv.__stack
	cmp	w1, 0	// D.9212,
	blt	.L514		//,
	add	x1, x0, 15	// D.9217, iftmp.259,
	and	x1, x1, -8	// D.9218, D.9217,
	str	x1, [sp, 104]	// D.9218, argv.__stack
	b	.L515		//
.L514:
	add	w2, w1, 16	// D.9220, D.9212,
	str	w2, [sp, 132]	// D.9220, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9222, argv.__vr_offs
	cmp	w2, 0	// D.9222,
	ble	.L516		//,
	add	x1, x0, 15	// D.9225, iftmp.259,
	and	x1, x1, -8	// D.9226, D.9225,
	str	x1, [sp, 104]	// D.9226, argv.__stack
	b	.L515		//
.L516:
	ldr	x2, [sp, 120]	// D.9228, argv.__vr_top
	sxtw	x0, w1	// D.9229, D.9212
	add	x0, x2, x0	// iftmp.259, D.9228, D.9229
.L515:
	ldr	d0, [x0]	// tmp200, *iftmp.258_54
	str	d0, [sp, 48]	// tmp200, c
// varargs-dll.c:258:   double d = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9230, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.261, argv.__stack
	cmp	w1, 0	// D.9230,
	blt	.L518		//,
	add	x1, x0, 15	// D.9235, iftmp.261,
	and	x1, x1, -8	// D.9236, D.9235,
	str	x1, [sp, 104]	// D.9236, argv.__stack
	b	.L519		//
.L518:
	add	w2, w1, 16	// D.9238, D.9230,
	str	w2, [sp, 132]	// D.9238, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9240, argv.__vr_offs
	cmp	w2, 0	// D.9240,
	ble	.L520		//,
	add	x1, x0, 15	// D.9243, iftmp.261,
	and	x1, x1, -8	// D.9244, D.9243,
	str	x1, [sp, 104]	// D.9244, argv.__stack
	b	.L519		//
.L520:
	ldr	x2, [sp, 120]	// D.9246, argv.__vr_top
	sxtw	x0, w1	// D.9247, D.9230
	add	x0, x2, x0	// iftmp.261, D.9246, D.9247
.L519:
	ldr	d0, [x0]	// tmp201, *iftmp.260_56
	str	d0, [sp, 56]	// tmp201, d
// varargs-dll.c:259:   double e = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9248, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.263, argv.__stack
	cmp	w1, 0	// D.9248,
	blt	.L522		//,
	add	x1, x0, 15	// D.9253, iftmp.263,
	and	x1, x1, -8	// D.9254, D.9253,
	str	x1, [sp, 104]	// D.9254, argv.__stack
	b	.L523		//
.L522:
	add	w2, w1, 16	// D.9256, D.9248,
	str	w2, [sp, 132]	// D.9256, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9258, argv.__vr_offs
	cmp	w2, 0	// D.9258,
	ble	.L524		//,
	add	x1, x0, 15	// D.9261, iftmp.263,
	and	x1, x1, -8	// D.9262, D.9261,
	str	x1, [sp, 104]	// D.9262, argv.__stack
	b	.L523		//
.L524:
	ldr	x2, [sp, 120]	// D.9264, argv.__vr_top
	sxtw	x0, w1	// D.9265, D.9248
	add	x0, x2, x0	// iftmp.263, D.9264, D.9265
.L523:
	ldr	d0, [x0]	// tmp202, *iftmp.262_58
	str	d0, [sp, 64]	// tmp202, e
// varargs-dll.c:260:   double f = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9266, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.265, argv.__stack
	cmp	w1, 0	// D.9266,
	blt	.L526		//,
	add	x1, x0, 15	// D.9271, iftmp.265,
	and	x1, x1, -8	// D.9272, D.9271,
	str	x1, [sp, 104]	// D.9272, argv.__stack
	b	.L527		//
.L526:
	add	w2, w1, 16	// D.9274, D.9266,
	str	w2, [sp, 132]	// D.9274, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9276, argv.__vr_offs
	cmp	w2, 0	// D.9276,
	ble	.L528		//,
	add	x1, x0, 15	// D.9279, iftmp.265,
	and	x1, x1, -8	// D.9280, D.9279,
	str	x1, [sp, 104]	// D.9280, argv.__stack
	b	.L527		//
.L528:
	ldr	x2, [sp, 120]	// D.9282, argv.__vr_top
	sxtw	x0, w1	// D.9283, D.9266
	add	x0, x2, x0	// iftmp.265, D.9282, D.9283
.L527:
	ldr	d0, [x0]	// tmp203, *iftmp.264_60
	str	d0, [sp, 72]	// tmp203, f
// varargs-dll.c:261:   double g = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9284, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.267, argv.__stack
	cmp	w1, 0	// D.9284,
	blt	.L530		//,
	add	x1, x0, 15	// D.9289, iftmp.267,
	and	x1, x1, -8	// D.9290, D.9289,
	str	x1, [sp, 104]	// D.9290, argv.__stack
	b	.L531		//
.L530:
	add	w2, w1, 16	// D.9292, D.9284,
	str	w2, [sp, 132]	// D.9292, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9294, argv.__vr_offs
	cmp	w2, 0	// D.9294,
	ble	.L532		//,
	add	x1, x0, 15	// D.9297, iftmp.267,
	and	x1, x1, -8	// D.9298, D.9297,
	str	x1, [sp, 104]	// D.9298, argv.__stack
	b	.L531		//
.L532:
	ldr	x2, [sp, 120]	// D.9300, argv.__vr_top
	sxtw	x0, w1	// D.9301, D.9284
	add	x0, x2, x0	// iftmp.267, D.9300, D.9301
.L531:
	ldr	d0, [x0]	// tmp204, *iftmp.266_62
	str	d0, [sp, 80]	// tmp204, g
// varargs-dll.c:262:   double h = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9302, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.269, argv.__stack
	cmp	w1, 0	// D.9302,
	blt	.L534		//,
	add	x1, x0, 15	// D.9307, iftmp.269,
	and	x1, x1, -8	// D.9308, D.9307,
	str	x1, [sp, 104]	// D.9308, argv.__stack
	b	.L535		//
.L534:
	add	w2, w1, 16	// D.9310, D.9302,
	str	w2, [sp, 132]	// D.9310, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9312, argv.__vr_offs
	cmp	w2, 0	// D.9312,
	ble	.L536		//,
	add	x1, x0, 15	// D.9315, iftmp.269,
	and	x1, x1, -8	// D.9316, D.9315,
	str	x1, [sp, 104]	// D.9316, argv.__stack
	b	.L535		//
.L536:
	ldr	x2, [sp, 120]	// D.9318, argv.__vr_top
	sxtw	x0, w1	// D.9319, D.9302
	add	x0, x2, x0	// iftmp.269, D.9318, D.9319
.L535:
	ldr	d0, [x0]	// tmp205, *iftmp.268_64
	str	d0, [sp, 88]	// tmp205, h
// varargs-dll.c:263:   double i = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.9320, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.271, argv.__stack
	cmp	w1, 0	// D.9320,
	blt	.L538		//,
	add	x1, x0, 15	// D.9325, iftmp.271,
	and	x1, x1, -8	// D.9326, D.9325,
	str	x1, [sp, 104]	// D.9326, argv.__stack
	b	.L539		//
.L538:
	add	w2, w1, 16	// D.9328, D.9320,
	str	w2, [sp, 132]	// D.9328, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.9330, argv.__vr_offs
	cmp	w2, 0	// D.9330,
	ble	.L540		//,
	add	x1, x0, 15	// D.9333, iftmp.271,
	and	x1, x1, -8	// D.9334, D.9333,
	str	x1, [sp, 104]	// D.9334, argv.__stack
	b	.L539		//
.L540:
	ldr	x2, [sp, 120]	// D.9336, argv.__vr_top
	sxtw	x0, w1	// D.9337, D.9320
	add	x0, x2, x0	// iftmp.271, D.9336, D.9337
.L539:
	ldr	d0, [x0]	// tmp206, *iftmp.270_66
	str	d0, [sp, 96]	// tmp206, i
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 32]	// tmp207, a
	ldr	d0, [sp, 40]	// tmp208, b
	fadd	d1, d1, d0	// _1, tmp207, tmp208
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 48]	// tmp209, c
	fadd	d1, d1, d0	// _2, _1, tmp209
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp210, d
	fadd	d1, d1, d0	// _3, _2, tmp210
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp211, e
	fadd	d1, d1, d0	// _4, _3, tmp211
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp212, f
	fadd	d1, d1, d0	// _5, _4, tmp212
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp213, g
	fadd	d1, d1, d0	// _6, _5, tmp213
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp214, h
	fadd	d1, d1, d0	// _7, _6, tmp214
// varargs-dll.c:265:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp215, i
	fadd	d0, d1, d0	// _8, _7, tmp215
	fcvtzs	w0, d0	// _30, _8
	mov	w1, w0	// <retval>, _30
// varargs-dll.c:266: }
	adrp	x0, :got:__stack_chk_guard	// tmp218,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp217, tmp218,
	ldr	x3, [sp, 136]	// tmp220, D.9338
	ldr	x2, [x0]	// tmp221,
	subs	x3, x3, x2	// tmp220, tmp221
	mov	x2, 0	// tmp221
	beq	.L543		//,
	bl	__stack_chk_fail		//
.L543:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE22:
	.size	use_va_args_several_doubles, .-use_va_args_several_doubles
	.align	2
	.global	use_va_list_several_doubles
	.type	use_va_list_several_doubles, %function
use_va_list_several_doubles:
.LFB23:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp192,
// varargs-dll.c:271:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9342, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.273, argv.__stack
	cmp	w1, 0	// D.9342,
	blt	.L545		//,
	add	x1, x0, 15	// D.9347, iftmp.273,
	and	x1, x1, -8	// D.9348, D.9347,
	str	x1, [x19]	// D.9348, argv.__stack
	b	.L546		//
.L545:
	add	w2, w1, 16	// D.9350, D.9342,
	str	w2, [x19, 28]	// D.9350, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9352, argv.__vr_offs
	cmp	w2, 0	// D.9352,
	ble	.L547		//,
	add	x1, x0, 15	// D.9355, iftmp.273,
	and	x1, x1, -8	// D.9356, D.9355,
	str	x1, [x19]	// D.9356, argv.__stack
	b	.L546		//
.L547:
	ldr	x2, [x19, 16]	// D.9358, argv.__vr_top
	sxtw	x0, w1	// D.9359, D.9342
	add	x0, x2, x0	// iftmp.273, D.9358, D.9359
.L546:
	ldr	d0, [x0]	// tmp193, *iftmp.272_47
	str	d0, [sp, 40]	// tmp193, a
// varargs-dll.c:272:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9360, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.275, argv.__stack
	cmp	w1, 0	// D.9360,
	blt	.L549		//,
	add	x1, x0, 15	// D.9365, iftmp.275,
	and	x1, x1, -8	// D.9366, D.9365,
	str	x1, [x19]	// D.9366, argv.__stack
	b	.L550		//
.L549:
	add	w2, w1, 16	// D.9368, D.9360,
	str	w2, [x19, 28]	// D.9368, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9370, argv.__vr_offs
	cmp	w2, 0	// D.9370,
	ble	.L551		//,
	add	x1, x0, 15	// D.9373, iftmp.275,
	and	x1, x1, -8	// D.9374, D.9373,
	str	x1, [x19]	// D.9374, argv.__stack
	b	.L550		//
.L551:
	ldr	x2, [x19, 16]	// D.9376, argv.__vr_top
	sxtw	x0, w1	// D.9377, D.9360
	add	x0, x2, x0	// iftmp.275, D.9376, D.9377
.L550:
	ldr	d0, [x0]	// tmp194, *iftmp.274_49
	str	d0, [sp, 48]	// tmp194, b
// varargs-dll.c:273:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9378, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.277, argv.__stack
	cmp	w1, 0	// D.9378,
	blt	.L553		//,
	add	x1, x0, 15	// D.9383, iftmp.277,
	and	x1, x1, -8	// D.9384, D.9383,
	str	x1, [x19]	// D.9384, argv.__stack
	b	.L554		//
.L553:
	add	w2, w1, 16	// D.9386, D.9378,
	str	w2, [x19, 28]	// D.9386, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9388, argv.__vr_offs
	cmp	w2, 0	// D.9388,
	ble	.L555		//,
	add	x1, x0, 15	// D.9391, iftmp.277,
	and	x1, x1, -8	// D.9392, D.9391,
	str	x1, [x19]	// D.9392, argv.__stack
	b	.L554		//
.L555:
	ldr	x2, [x19, 16]	// D.9394, argv.__vr_top
	sxtw	x0, w1	// D.9395, D.9378
	add	x0, x2, x0	// iftmp.277, D.9394, D.9395
.L554:
	ldr	d0, [x0]	// tmp195, *iftmp.276_51
	str	d0, [sp, 56]	// tmp195, c
// varargs-dll.c:274:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9396, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.279, argv.__stack
	cmp	w1, 0	// D.9396,
	blt	.L557		//,
	add	x1, x0, 15	// D.9401, iftmp.279,
	and	x1, x1, -8	// D.9402, D.9401,
	str	x1, [x19]	// D.9402, argv.__stack
	b	.L558		//
.L557:
	add	w2, w1, 16	// D.9404, D.9396,
	str	w2, [x19, 28]	// D.9404, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9406, argv.__vr_offs
	cmp	w2, 0	// D.9406,
	ble	.L559		//,
	add	x1, x0, 15	// D.9409, iftmp.279,
	and	x1, x1, -8	// D.9410, D.9409,
	str	x1, [x19]	// D.9410, argv.__stack
	b	.L558		//
.L559:
	ldr	x2, [x19, 16]	// D.9412, argv.__vr_top
	sxtw	x0, w1	// D.9413, D.9396
	add	x0, x2, x0	// iftmp.279, D.9412, D.9413
.L558:
	ldr	d0, [x0]	// tmp196, *iftmp.278_53
	str	d0, [sp, 64]	// tmp196, d
// varargs-dll.c:275:   double e = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9414, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.281, argv.__stack
	cmp	w1, 0	// D.9414,
	blt	.L561		//,
	add	x1, x0, 15	// D.9419, iftmp.281,
	and	x1, x1, -8	// D.9420, D.9419,
	str	x1, [x19]	// D.9420, argv.__stack
	b	.L562		//
.L561:
	add	w2, w1, 16	// D.9422, D.9414,
	str	w2, [x19, 28]	// D.9422, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9424, argv.__vr_offs
	cmp	w2, 0	// D.9424,
	ble	.L563		//,
	add	x1, x0, 15	// D.9427, iftmp.281,
	and	x1, x1, -8	// D.9428, D.9427,
	str	x1, [x19]	// D.9428, argv.__stack
	b	.L562		//
.L563:
	ldr	x2, [x19, 16]	// D.9430, argv.__vr_top
	sxtw	x0, w1	// D.9431, D.9414
	add	x0, x2, x0	// iftmp.281, D.9430, D.9431
.L562:
	ldr	d0, [x0]	// tmp197, *iftmp.280_55
	str	d0, [sp, 72]	// tmp197, e
// varargs-dll.c:276:   double f = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9432, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.283, argv.__stack
	cmp	w1, 0	// D.9432,
	blt	.L565		//,
	add	x1, x0, 15	// D.9437, iftmp.283,
	and	x1, x1, -8	// D.9438, D.9437,
	str	x1, [x19]	// D.9438, argv.__stack
	b	.L566		//
.L565:
	add	w2, w1, 16	// D.9440, D.9432,
	str	w2, [x19, 28]	// D.9440, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9442, argv.__vr_offs
	cmp	w2, 0	// D.9442,
	ble	.L567		//,
	add	x1, x0, 15	// D.9445, iftmp.283,
	and	x1, x1, -8	// D.9446, D.9445,
	str	x1, [x19]	// D.9446, argv.__stack
	b	.L566		//
.L567:
	ldr	x2, [x19, 16]	// D.9448, argv.__vr_top
	sxtw	x0, w1	// D.9449, D.9432
	add	x0, x2, x0	// iftmp.283, D.9448, D.9449
.L566:
	ldr	d0, [x0]	// tmp198, *iftmp.282_57
	str	d0, [sp, 80]	// tmp198, f
// varargs-dll.c:277:   double g = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9450, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.285, argv.__stack
	cmp	w1, 0	// D.9450,
	blt	.L569		//,
	add	x1, x0, 15	// D.9455, iftmp.285,
	and	x1, x1, -8	// D.9456, D.9455,
	str	x1, [x19]	// D.9456, argv.__stack
	b	.L570		//
.L569:
	add	w2, w1, 16	// D.9458, D.9450,
	str	w2, [x19, 28]	// D.9458, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9460, argv.__vr_offs
	cmp	w2, 0	// D.9460,
	ble	.L571		//,
	add	x1, x0, 15	// D.9463, iftmp.285,
	and	x1, x1, -8	// D.9464, D.9463,
	str	x1, [x19]	// D.9464, argv.__stack
	b	.L570		//
.L571:
	ldr	x2, [x19, 16]	// D.9466, argv.__vr_top
	sxtw	x0, w1	// D.9467, D.9450
	add	x0, x2, x0	// iftmp.285, D.9466, D.9467
.L570:
	ldr	d0, [x0]	// tmp199, *iftmp.284_59
	str	d0, [sp, 88]	// tmp199, g
// varargs-dll.c:278:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9468, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.287, argv.__stack
	cmp	w1, 0	// D.9468,
	blt	.L573		//,
	add	x1, x0, 15	// D.9473, iftmp.287,
	and	x1, x1, -8	// D.9474, D.9473,
	str	x1, [x19]	// D.9474, argv.__stack
	b	.L574		//
.L573:
	add	w2, w1, 16	// D.9476, D.9468,
	str	w2, [x19, 28]	// D.9476, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9478, argv.__vr_offs
	cmp	w2, 0	// D.9478,
	ble	.L575		//,
	add	x1, x0, 15	// D.9481, iftmp.287,
	and	x1, x1, -8	// D.9482, D.9481,
	str	x1, [x19]	// D.9482, argv.__stack
	b	.L574		//
.L575:
	ldr	x2, [x19, 16]	// D.9484, argv.__vr_top
	sxtw	x0, w1	// D.9485, D.9468
	add	x0, x2, x0	// iftmp.287, D.9484, D.9485
.L574:
	ldr	d0, [x0]	// tmp200, *iftmp.286_61
	str	d0, [sp, 96]	// tmp200, h
// varargs-dll.c:279:   double i = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9486, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.289, argv.__stack
	cmp	w1, 0	// D.9486,
	blt	.L577		//,
	add	x1, x0, 15	// D.9491, iftmp.289,
	and	x1, x1, -8	// D.9492, D.9491,
	str	x1, [x19]	// D.9492, argv.__stack
	b	.L578		//
.L577:
	add	w2, w1, 16	// D.9494, D.9486,
	str	w2, [x19, 28]	// D.9494, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9496, argv.__vr_offs
	cmp	w2, 0	// D.9496,
	ble	.L579		//,
	add	x1, x0, 15	// D.9499, iftmp.289,
	and	x1, x1, -8	// D.9500, D.9499,
	str	x1, [x19]	// D.9500, argv.__stack
	b	.L578		//
.L579:
	ldr	x2, [x19, 16]	// D.9502, argv.__vr_top
	sxtw	x0, w1	// D.9503, D.9486
	add	x0, x2, x0	// iftmp.289, D.9502, D.9503
.L578:
	ldr	d0, [x0]	// tmp201, *iftmp.288_63
	str	d0, [sp, 104]	// tmp201, i
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 40]	// tmp202, a
	ldr	d0, [sp, 48]	// tmp203, b
	fadd	d1, d1, d0	// _1, tmp202, tmp203
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp204, c
	fadd	d1, d1, d0	// _2, _1, tmp204
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp205, d
	fadd	d1, d1, d0	// _3, _2, tmp205
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp206, e
	fadd	d1, d1, d0	// _4, _3, tmp206
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp207, f
	fadd	d1, d1, d0	// _5, _4, tmp207
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp208, g
	fadd	d1, d1, d0	// _6, _5, tmp208
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp209, h
	fadd	d1, d1, d0	// _7, _6, tmp209
// varargs-dll.c:280:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 104]	// tmp210, i
	fadd	d0, d1, d0	// _8, _7, tmp210
	fcvtzs	w0, d0	// _28, _8
// varargs-dll.c:281: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE23:
	.size	use_va_list_several_doubles, .-use_va_list_several_doubles
	.align	2
	.global	use_va_args_many_doubles
	.type	use_va_args_many_doubles, %function
use_va_args_many_doubles:
.LFB24:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 344]	//,
	str	x2, [sp, 352]	//,
	str	x3, [sp, 360]	//,
	str	x4, [sp, 368]	//,
	str	x5, [sp, 376]	//,
	str	x6, [sp, 384]	//,
	str	x7, [sp, 392]	//,
	str	q0, [sp, 208]	//,
	str	q1, [sp, 224]	//,
	str	q2, [sp, 240]	//,
	str	q3, [sp, 256]	//,
	str	q4, [sp, 272]	//,
	str	q5, [sp, 288]	//,
	str	q6, [sp, 304]	//,
	str	q7, [sp, 320]	//,
// varargs-dll.c:285: {
	adrp	x0, :got:__stack_chk_guard	// tmp281,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp280, tmp281,
	ldr	x1, [x0]	// tmp323,
	str	x1, [sp, 200]	// tmp323, D.9810
	mov	x1, 0	// tmp323
// varargs-dll.c:287:   va_start (argv, name);
	add	x0, sp, 400	// tmp328,,
	str	x0, [sp, 168]	// tmp328, MEM[(struct  *)&argv].__stack
	add	x0, sp, 400	// tmp329,,
	str	x0, [sp, 176]	// tmp329, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 336	// tmp283,,
	str	x0, [sp, 184]	// tmp283, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp284,
	str	w0, [sp, 192]	// tmp284, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp285,
	str	w0, [sp, 196]	// tmp285, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:288:   double a = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9504, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.291, argv.__stack
	cmp	w1, 0	// D.9504,
	blt	.L583		//,
	add	x1, x0, 15	// D.9509, iftmp.291,
	and	x1, x1, -8	// D.9510, D.9509,
	str	x1, [sp, 168]	// D.9510, argv.__stack
	b	.L584		//
.L583:
	add	w2, w1, 16	// D.9512, D.9504,
	str	w2, [sp, 196]	// D.9512, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9514, argv.__vr_offs
	cmp	w2, 0	// D.9514,
	ble	.L585		//,
	add	x1, x0, 15	// D.9517, iftmp.291,
	and	x1, x1, -8	// D.9518, D.9517,
	str	x1, [sp, 168]	// D.9518, argv.__stack
	b	.L584		//
.L585:
	ldr	x2, [sp, 184]	// D.9520, argv.__vr_top
	sxtw	x0, w1	// D.9521, D.9504
	add	x0, x2, x0	// iftmp.291, D.9520, D.9521
.L584:
	ldr	d0, [x0]	// tmp286, *iftmp.290_90
	str	d0, [sp, 32]	// tmp286, a
// varargs-dll.c:289:   double b = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9522, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.293, argv.__stack
	cmp	w1, 0	// D.9522,
	blt	.L587		//,
	add	x1, x0, 15	// D.9527, iftmp.293,
	and	x1, x1, -8	// D.9528, D.9527,
	str	x1, [sp, 168]	// D.9528, argv.__stack
	b	.L588		//
.L587:
	add	w2, w1, 16	// D.9530, D.9522,
	str	w2, [sp, 196]	// D.9530, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9532, argv.__vr_offs
	cmp	w2, 0	// D.9532,
	ble	.L589		//,
	add	x1, x0, 15	// D.9535, iftmp.293,
	and	x1, x1, -8	// D.9536, D.9535,
	str	x1, [sp, 168]	// D.9536, argv.__stack
	b	.L588		//
.L589:
	ldr	x2, [sp, 184]	// D.9538, argv.__vr_top
	sxtw	x0, w1	// D.9539, D.9522
	add	x0, x2, x0	// iftmp.293, D.9538, D.9539
.L588:
	ldr	d0, [x0]	// tmp287, *iftmp.292_92
	str	d0, [sp, 40]	// tmp287, b
// varargs-dll.c:290:   double c = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9540, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.295, argv.__stack
	cmp	w1, 0	// D.9540,
	blt	.L591		//,
	add	x1, x0, 15	// D.9545, iftmp.295,
	and	x1, x1, -8	// D.9546, D.9545,
	str	x1, [sp, 168]	// D.9546, argv.__stack
	b	.L592		//
.L591:
	add	w2, w1, 16	// D.9548, D.9540,
	str	w2, [sp, 196]	// D.9548, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9550, argv.__vr_offs
	cmp	w2, 0	// D.9550,
	ble	.L593		//,
	add	x1, x0, 15	// D.9553, iftmp.295,
	and	x1, x1, -8	// D.9554, D.9553,
	str	x1, [sp, 168]	// D.9554, argv.__stack
	b	.L592		//
.L593:
	ldr	x2, [sp, 184]	// D.9556, argv.__vr_top
	sxtw	x0, w1	// D.9557, D.9540
	add	x0, x2, x0	// iftmp.295, D.9556, D.9557
.L592:
	ldr	d0, [x0]	// tmp288, *iftmp.294_94
	str	d0, [sp, 48]	// tmp288, c
// varargs-dll.c:291:   double d = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9558, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.297, argv.__stack
	cmp	w1, 0	// D.9558,
	blt	.L595		//,
	add	x1, x0, 15	// D.9563, iftmp.297,
	and	x1, x1, -8	// D.9564, D.9563,
	str	x1, [sp, 168]	// D.9564, argv.__stack
	b	.L596		//
.L595:
	add	w2, w1, 16	// D.9566, D.9558,
	str	w2, [sp, 196]	// D.9566, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9568, argv.__vr_offs
	cmp	w2, 0	// D.9568,
	ble	.L597		//,
	add	x1, x0, 15	// D.9571, iftmp.297,
	and	x1, x1, -8	// D.9572, D.9571,
	str	x1, [sp, 168]	// D.9572, argv.__stack
	b	.L596		//
.L597:
	ldr	x2, [sp, 184]	// D.9574, argv.__vr_top
	sxtw	x0, w1	// D.9575, D.9558
	add	x0, x2, x0	// iftmp.297, D.9574, D.9575
.L596:
	ldr	d0, [x0]	// tmp289, *iftmp.296_96
	str	d0, [sp, 56]	// tmp289, d
// varargs-dll.c:292:   double e = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9576, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.299, argv.__stack
	cmp	w1, 0	// D.9576,
	blt	.L599		//,
	add	x1, x0, 15	// D.9581, iftmp.299,
	and	x1, x1, -8	// D.9582, D.9581,
	str	x1, [sp, 168]	// D.9582, argv.__stack
	b	.L600		//
.L599:
	add	w2, w1, 16	// D.9584, D.9576,
	str	w2, [sp, 196]	// D.9584, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9586, argv.__vr_offs
	cmp	w2, 0	// D.9586,
	ble	.L601		//,
	add	x1, x0, 15	// D.9589, iftmp.299,
	and	x1, x1, -8	// D.9590, D.9589,
	str	x1, [sp, 168]	// D.9590, argv.__stack
	b	.L600		//
.L601:
	ldr	x2, [sp, 184]	// D.9592, argv.__vr_top
	sxtw	x0, w1	// D.9593, D.9576
	add	x0, x2, x0	// iftmp.299, D.9592, D.9593
.L600:
	ldr	d0, [x0]	// tmp290, *iftmp.298_98
	str	d0, [sp, 64]	// tmp290, e
// varargs-dll.c:293:   double f = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9594, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.301, argv.__stack
	cmp	w1, 0	// D.9594,
	blt	.L603		//,
	add	x1, x0, 15	// D.9599, iftmp.301,
	and	x1, x1, -8	// D.9600, D.9599,
	str	x1, [sp, 168]	// D.9600, argv.__stack
	b	.L604		//
.L603:
	add	w2, w1, 16	// D.9602, D.9594,
	str	w2, [sp, 196]	// D.9602, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9604, argv.__vr_offs
	cmp	w2, 0	// D.9604,
	ble	.L605		//,
	add	x1, x0, 15	// D.9607, iftmp.301,
	and	x1, x1, -8	// D.9608, D.9607,
	str	x1, [sp, 168]	// D.9608, argv.__stack
	b	.L604		//
.L605:
	ldr	x2, [sp, 184]	// D.9610, argv.__vr_top
	sxtw	x0, w1	// D.9611, D.9594
	add	x0, x2, x0	// iftmp.301, D.9610, D.9611
.L604:
	ldr	d0, [x0]	// tmp291, *iftmp.300_100
	str	d0, [sp, 72]	// tmp291, f
// varargs-dll.c:294:   double g = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9612, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.303, argv.__stack
	cmp	w1, 0	// D.9612,
	blt	.L607		//,
	add	x1, x0, 15	// D.9617, iftmp.303,
	and	x1, x1, -8	// D.9618, D.9617,
	str	x1, [sp, 168]	// D.9618, argv.__stack
	b	.L608		//
.L607:
	add	w2, w1, 16	// D.9620, D.9612,
	str	w2, [sp, 196]	// D.9620, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9622, argv.__vr_offs
	cmp	w2, 0	// D.9622,
	ble	.L609		//,
	add	x1, x0, 15	// D.9625, iftmp.303,
	and	x1, x1, -8	// D.9626, D.9625,
	str	x1, [sp, 168]	// D.9626, argv.__stack
	b	.L608		//
.L609:
	ldr	x2, [sp, 184]	// D.9628, argv.__vr_top
	sxtw	x0, w1	// D.9629, D.9612
	add	x0, x2, x0	// iftmp.303, D.9628, D.9629
.L608:
	ldr	d0, [x0]	// tmp292, *iftmp.302_102
	str	d0, [sp, 80]	// tmp292, g
// varargs-dll.c:295:   double h = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9630, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.305, argv.__stack
	cmp	w1, 0	// D.9630,
	blt	.L611		//,
	add	x1, x0, 15	// D.9635, iftmp.305,
	and	x1, x1, -8	// D.9636, D.9635,
	str	x1, [sp, 168]	// D.9636, argv.__stack
	b	.L612		//
.L611:
	add	w2, w1, 16	// D.9638, D.9630,
	str	w2, [sp, 196]	// D.9638, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9640, argv.__vr_offs
	cmp	w2, 0	// D.9640,
	ble	.L613		//,
	add	x1, x0, 15	// D.9643, iftmp.305,
	and	x1, x1, -8	// D.9644, D.9643,
	str	x1, [sp, 168]	// D.9644, argv.__stack
	b	.L612		//
.L613:
	ldr	x2, [sp, 184]	// D.9646, argv.__vr_top
	sxtw	x0, w1	// D.9647, D.9630
	add	x0, x2, x0	// iftmp.305, D.9646, D.9647
.L612:
	ldr	d0, [x0]	// tmp293, *iftmp.304_104
	str	d0, [sp, 88]	// tmp293, h
// varargs-dll.c:296:   double i = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9648, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.307, argv.__stack
	cmp	w1, 0	// D.9648,
	blt	.L615		//,
	add	x1, x0, 15	// D.9653, iftmp.307,
	and	x1, x1, -8	// D.9654, D.9653,
	str	x1, [sp, 168]	// D.9654, argv.__stack
	b	.L616		//
.L615:
	add	w2, w1, 16	// D.9656, D.9648,
	str	w2, [sp, 196]	// D.9656, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9658, argv.__vr_offs
	cmp	w2, 0	// D.9658,
	ble	.L617		//,
	add	x1, x0, 15	// D.9661, iftmp.307,
	and	x1, x1, -8	// D.9662, D.9661,
	str	x1, [sp, 168]	// D.9662, argv.__stack
	b	.L616		//
.L617:
	ldr	x2, [sp, 184]	// D.9664, argv.__vr_top
	sxtw	x0, w1	// D.9665, D.9648
	add	x0, x2, x0	// iftmp.307, D.9664, D.9665
.L616:
	ldr	d0, [x0]	// tmp294, *iftmp.306_106
	str	d0, [sp, 96]	// tmp294, i
// varargs-dll.c:297:   double j = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9666, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.309, argv.__stack
	cmp	w1, 0	// D.9666,
	blt	.L619		//,
	add	x1, x0, 15	// D.9671, iftmp.309,
	and	x1, x1, -8	// D.9672, D.9671,
	str	x1, [sp, 168]	// D.9672, argv.__stack
	b	.L620		//
.L619:
	add	w2, w1, 16	// D.9674, D.9666,
	str	w2, [sp, 196]	// D.9674, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9676, argv.__vr_offs
	cmp	w2, 0	// D.9676,
	ble	.L621		//,
	add	x1, x0, 15	// D.9679, iftmp.309,
	and	x1, x1, -8	// D.9680, D.9679,
	str	x1, [sp, 168]	// D.9680, argv.__stack
	b	.L620		//
.L621:
	ldr	x2, [sp, 184]	// D.9682, argv.__vr_top
	sxtw	x0, w1	// D.9683, D.9666
	add	x0, x2, x0	// iftmp.309, D.9682, D.9683
.L620:
	ldr	d0, [x0]	// tmp295, *iftmp.308_108
	str	d0, [sp, 104]	// tmp295, j
// varargs-dll.c:298:   double k = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9684, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.311, argv.__stack
	cmp	w1, 0	// D.9684,
	blt	.L623		//,
	add	x1, x0, 15	// D.9689, iftmp.311,
	and	x1, x1, -8	// D.9690, D.9689,
	str	x1, [sp, 168]	// D.9690, argv.__stack
	b	.L624		//
.L623:
	add	w2, w1, 16	// D.9692, D.9684,
	str	w2, [sp, 196]	// D.9692, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9694, argv.__vr_offs
	cmp	w2, 0	// D.9694,
	ble	.L625		//,
	add	x1, x0, 15	// D.9697, iftmp.311,
	and	x1, x1, -8	// D.9698, D.9697,
	str	x1, [sp, 168]	// D.9698, argv.__stack
	b	.L624		//
.L625:
	ldr	x2, [sp, 184]	// D.9700, argv.__vr_top
	sxtw	x0, w1	// D.9701, D.9684
	add	x0, x2, x0	// iftmp.311, D.9700, D.9701
.L624:
	ldr	d0, [x0]	// tmp296, *iftmp.310_110
	str	d0, [sp, 112]	// tmp296, k
// varargs-dll.c:299:   double l = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9702, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.313, argv.__stack
	cmp	w1, 0	// D.9702,
	blt	.L627		//,
	add	x1, x0, 15	// D.9707, iftmp.313,
	and	x1, x1, -8	// D.9708, D.9707,
	str	x1, [sp, 168]	// D.9708, argv.__stack
	b	.L628		//
.L627:
	add	w2, w1, 16	// D.9710, D.9702,
	str	w2, [sp, 196]	// D.9710, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9712, argv.__vr_offs
	cmp	w2, 0	// D.9712,
	ble	.L629		//,
	add	x1, x0, 15	// D.9715, iftmp.313,
	and	x1, x1, -8	// D.9716, D.9715,
	str	x1, [sp, 168]	// D.9716, argv.__stack
	b	.L628		//
.L629:
	ldr	x2, [sp, 184]	// D.9718, argv.__vr_top
	sxtw	x0, w1	// D.9719, D.9702
	add	x0, x2, x0	// iftmp.313, D.9718, D.9719
.L628:
	ldr	d0, [x0]	// tmp297, *iftmp.312_112
	str	d0, [sp, 120]	// tmp297, l
// varargs-dll.c:300:   double m = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9720, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.315, argv.__stack
	cmp	w1, 0	// D.9720,
	blt	.L631		//,
	add	x1, x0, 15	// D.9725, iftmp.315,
	and	x1, x1, -8	// D.9726, D.9725,
	str	x1, [sp, 168]	// D.9726, argv.__stack
	b	.L632		//
.L631:
	add	w2, w1, 16	// D.9728, D.9720,
	str	w2, [sp, 196]	// D.9728, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9730, argv.__vr_offs
	cmp	w2, 0	// D.9730,
	ble	.L633		//,
	add	x1, x0, 15	// D.9733, iftmp.315,
	and	x1, x1, -8	// D.9734, D.9733,
	str	x1, [sp, 168]	// D.9734, argv.__stack
	b	.L632		//
.L633:
	ldr	x2, [sp, 184]	// D.9736, argv.__vr_top
	sxtw	x0, w1	// D.9737, D.9720
	add	x0, x2, x0	// iftmp.315, D.9736, D.9737
.L632:
	ldr	d0, [x0]	// tmp298, *iftmp.314_114
	str	d0, [sp, 128]	// tmp298, m
// varargs-dll.c:301:   double n = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9738, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.317, argv.__stack
	cmp	w1, 0	// D.9738,
	blt	.L635		//,
	add	x1, x0, 15	// D.9743, iftmp.317,
	and	x1, x1, -8	// D.9744, D.9743,
	str	x1, [sp, 168]	// D.9744, argv.__stack
	b	.L636		//
.L635:
	add	w2, w1, 16	// D.9746, D.9738,
	str	w2, [sp, 196]	// D.9746, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9748, argv.__vr_offs
	cmp	w2, 0	// D.9748,
	ble	.L637		//,
	add	x1, x0, 15	// D.9751, iftmp.317,
	and	x1, x1, -8	// D.9752, D.9751,
	str	x1, [sp, 168]	// D.9752, argv.__stack
	b	.L636		//
.L637:
	ldr	x2, [sp, 184]	// D.9754, argv.__vr_top
	sxtw	x0, w1	// D.9755, D.9738
	add	x0, x2, x0	// iftmp.317, D.9754, D.9755
.L636:
	ldr	d0, [x0]	// tmp299, *iftmp.316_116
	str	d0, [sp, 136]	// tmp299, n
// varargs-dll.c:302:   double o = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9756, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.319, argv.__stack
	cmp	w1, 0	// D.9756,
	blt	.L639		//,
	add	x1, x0, 15	// D.9761, iftmp.319,
	and	x1, x1, -8	// D.9762, D.9761,
	str	x1, [sp, 168]	// D.9762, argv.__stack
	b	.L640		//
.L639:
	add	w2, w1, 16	// D.9764, D.9756,
	str	w2, [sp, 196]	// D.9764, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9766, argv.__vr_offs
	cmp	w2, 0	// D.9766,
	ble	.L641		//,
	add	x1, x0, 15	// D.9769, iftmp.319,
	and	x1, x1, -8	// D.9770, D.9769,
	str	x1, [sp, 168]	// D.9770, argv.__stack
	b	.L640		//
.L641:
	ldr	x2, [sp, 184]	// D.9772, argv.__vr_top
	sxtw	x0, w1	// D.9773, D.9756
	add	x0, x2, x0	// iftmp.319, D.9772, D.9773
.L640:
	ldr	d0, [x0]	// tmp300, *iftmp.318_118
	str	d0, [sp, 144]	// tmp300, o
// varargs-dll.c:303:   double p = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9774, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.321, argv.__stack
	cmp	w1, 0	// D.9774,
	blt	.L643		//,
	add	x1, x0, 15	// D.9779, iftmp.321,
	and	x1, x1, -8	// D.9780, D.9779,
	str	x1, [sp, 168]	// D.9780, argv.__stack
	b	.L644		//
.L643:
	add	w2, w1, 16	// D.9782, D.9774,
	str	w2, [sp, 196]	// D.9782, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9784, argv.__vr_offs
	cmp	w2, 0	// D.9784,
	ble	.L645		//,
	add	x1, x0, 15	// D.9787, iftmp.321,
	and	x1, x1, -8	// D.9788, D.9787,
	str	x1, [sp, 168]	// D.9788, argv.__stack
	b	.L644		//
.L645:
	ldr	x2, [sp, 184]	// D.9790, argv.__vr_top
	sxtw	x0, w1	// D.9791, D.9774
	add	x0, x2, x0	// iftmp.321, D.9790, D.9791
.L644:
	ldr	d0, [x0]	// tmp301, *iftmp.320_120
	str	d0, [sp, 152]	// tmp301, p
// varargs-dll.c:304:   double q = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.9792, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.323, argv.__stack
	cmp	w1, 0	// D.9792,
	blt	.L647		//,
	add	x1, x0, 15	// D.9797, iftmp.323,
	and	x1, x1, -8	// D.9798, D.9797,
	str	x1, [sp, 168]	// D.9798, argv.__stack
	b	.L648		//
.L647:
	add	w2, w1, 16	// D.9800, D.9792,
	str	w2, [sp, 196]	// D.9800, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.9802, argv.__vr_offs
	cmp	w2, 0	// D.9802,
	ble	.L649		//,
	add	x1, x0, 15	// D.9805, iftmp.323,
	and	x1, x1, -8	// D.9806, D.9805,
	str	x1, [sp, 168]	// D.9806, argv.__stack
	b	.L648		//
.L649:
	ldr	x2, [sp, 184]	// D.9808, argv.__vr_top
	sxtw	x0, w1	// D.9809, D.9792
	add	x0, x2, x0	// iftmp.323, D.9808, D.9809
.L648:
	ldr	d0, [x0]	// tmp302, *iftmp.322_122
	str	d0, [sp, 160]	// tmp302, q
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 32]	// tmp303, a
	ldr	d0, [sp, 40]	// tmp304, b
	fadd	d1, d1, d0	// _1, tmp303, tmp304
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 48]	// tmp305, c
	fadd	d1, d1, d0	// _2, _1, tmp305
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp306, d
	fadd	d1, d1, d0	// _3, _2, tmp306
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp307, e
	fadd	d1, d1, d0	// _4, _3, tmp307
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp308, f
	fadd	d1, d1, d0	// _5, _4, tmp308
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp309, g
	fadd	d1, d1, d0	// _6, _5, tmp309
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp310, h
	fadd	d1, d1, d0	// _7, _6, tmp310
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp311, i
	fadd	d1, d1, d0	// _8, _7, tmp311
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp312, j
	fadd	d1, d1, d0	// _9, _8, tmp312
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp313, k
	fadd	d1, d1, d0	// _10, _9, tmp313
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp314, l
	fadd	d1, d1, d0	// _11, _10, tmp314
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp315, m
	fadd	d1, d1, d0	// _12, _11, tmp315
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp316, n
	fadd	d1, d1, d0	// _13, _12, tmp316
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp317, o
	fadd	d1, d1, d0	// _14, _13, tmp317
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp318, p
	fadd	d1, d1, d0	// _15, _14, tmp318
// varargs-dll.c:306:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp319, q
	fadd	d0, d1, d0	// _16, _15, tmp319
	fcvtzs	w0, d0	// _54, _16
	mov	w1, w0	// <retval>, _54
// varargs-dll.c:307: }
	adrp	x0, :got:__stack_chk_guard	// tmp322,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp321, tmp322,
	ldr	x3, [sp, 200]	// tmp324, D.9810
	ldr	x2, [x0]	// tmp325,
	subs	x3, x3, x2	// tmp324, tmp325
	mov	x2, 0	// tmp325
	beq	.L652		//,
	bl	__stack_chk_fail		//
.L652:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE24:
	.size	use_va_args_many_doubles, .-use_va_args_many_doubles
	.align	2
	.global	use_va_list_many_doubles
	.type	use_va_list_many_doubles, %function
use_va_list_many_doubles:
.LFB25:
	.cfi_startproc
	str	x19, [sp, -176]!	//,
	.cfi_def_cfa_offset 176
	.cfi_offset 19, -176
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp280,
// varargs-dll.c:312:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9814, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.325, argv.__stack
	cmp	w1, 0	// D.9814,
	blt	.L654		//,
	add	x1, x0, 15	// D.9819, iftmp.325,
	and	x1, x1, -8	// D.9820, D.9819,
	str	x1, [x19]	// D.9820, argv.__stack
	b	.L655		//
.L654:
	add	w2, w1, 16	// D.9822, D.9814,
	str	w2, [x19, 28]	// D.9822, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9824, argv.__vr_offs
	cmp	w2, 0	// D.9824,
	ble	.L656		//,
	add	x1, x0, 15	// D.9827, iftmp.325,
	and	x1, x1, -8	// D.9828, D.9827,
	str	x1, [x19]	// D.9828, argv.__stack
	b	.L655		//
.L656:
	ldr	x2, [x19, 16]	// D.9830, argv.__vr_top
	sxtw	x0, w1	// D.9831, D.9814
	add	x0, x2, x0	// iftmp.325, D.9830, D.9831
.L655:
	ldr	d0, [x0]	// tmp281, *iftmp.324_87
	str	d0, [sp, 40]	// tmp281, a
// varargs-dll.c:313:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9832, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.327, argv.__stack
	cmp	w1, 0	// D.9832,
	blt	.L658		//,
	add	x1, x0, 15	// D.9837, iftmp.327,
	and	x1, x1, -8	// D.9838, D.9837,
	str	x1, [x19]	// D.9838, argv.__stack
	b	.L659		//
.L658:
	add	w2, w1, 16	// D.9840, D.9832,
	str	w2, [x19, 28]	// D.9840, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9842, argv.__vr_offs
	cmp	w2, 0	// D.9842,
	ble	.L660		//,
	add	x1, x0, 15	// D.9845, iftmp.327,
	and	x1, x1, -8	// D.9846, D.9845,
	str	x1, [x19]	// D.9846, argv.__stack
	b	.L659		//
.L660:
	ldr	x2, [x19, 16]	// D.9848, argv.__vr_top
	sxtw	x0, w1	// D.9849, D.9832
	add	x0, x2, x0	// iftmp.327, D.9848, D.9849
.L659:
	ldr	d0, [x0]	// tmp282, *iftmp.326_89
	str	d0, [sp, 48]	// tmp282, b
// varargs-dll.c:314:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9850, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.329, argv.__stack
	cmp	w1, 0	// D.9850,
	blt	.L662		//,
	add	x1, x0, 15	// D.9855, iftmp.329,
	and	x1, x1, -8	// D.9856, D.9855,
	str	x1, [x19]	// D.9856, argv.__stack
	b	.L663		//
.L662:
	add	w2, w1, 16	// D.9858, D.9850,
	str	w2, [x19, 28]	// D.9858, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9860, argv.__vr_offs
	cmp	w2, 0	// D.9860,
	ble	.L664		//,
	add	x1, x0, 15	// D.9863, iftmp.329,
	and	x1, x1, -8	// D.9864, D.9863,
	str	x1, [x19]	// D.9864, argv.__stack
	b	.L663		//
.L664:
	ldr	x2, [x19, 16]	// D.9866, argv.__vr_top
	sxtw	x0, w1	// D.9867, D.9850
	add	x0, x2, x0	// iftmp.329, D.9866, D.9867
.L663:
	ldr	d0, [x0]	// tmp283, *iftmp.328_91
	str	d0, [sp, 56]	// tmp283, c
// varargs-dll.c:315:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9868, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.331, argv.__stack
	cmp	w1, 0	// D.9868,
	blt	.L666		//,
	add	x1, x0, 15	// D.9873, iftmp.331,
	and	x1, x1, -8	// D.9874, D.9873,
	str	x1, [x19]	// D.9874, argv.__stack
	b	.L667		//
.L666:
	add	w2, w1, 16	// D.9876, D.9868,
	str	w2, [x19, 28]	// D.9876, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9878, argv.__vr_offs
	cmp	w2, 0	// D.9878,
	ble	.L668		//,
	add	x1, x0, 15	// D.9881, iftmp.331,
	and	x1, x1, -8	// D.9882, D.9881,
	str	x1, [x19]	// D.9882, argv.__stack
	b	.L667		//
.L668:
	ldr	x2, [x19, 16]	// D.9884, argv.__vr_top
	sxtw	x0, w1	// D.9885, D.9868
	add	x0, x2, x0	// iftmp.331, D.9884, D.9885
.L667:
	ldr	d0, [x0]	// tmp284, *iftmp.330_93
	str	d0, [sp, 64]	// tmp284, d
// varargs-dll.c:316:   double e = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9886, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.333, argv.__stack
	cmp	w1, 0	// D.9886,
	blt	.L670		//,
	add	x1, x0, 15	// D.9891, iftmp.333,
	and	x1, x1, -8	// D.9892, D.9891,
	str	x1, [x19]	// D.9892, argv.__stack
	b	.L671		//
.L670:
	add	w2, w1, 16	// D.9894, D.9886,
	str	w2, [x19, 28]	// D.9894, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9896, argv.__vr_offs
	cmp	w2, 0	// D.9896,
	ble	.L672		//,
	add	x1, x0, 15	// D.9899, iftmp.333,
	and	x1, x1, -8	// D.9900, D.9899,
	str	x1, [x19]	// D.9900, argv.__stack
	b	.L671		//
.L672:
	ldr	x2, [x19, 16]	// D.9902, argv.__vr_top
	sxtw	x0, w1	// D.9903, D.9886
	add	x0, x2, x0	// iftmp.333, D.9902, D.9903
.L671:
	ldr	d0, [x0]	// tmp285, *iftmp.332_95
	str	d0, [sp, 72]	// tmp285, e
// varargs-dll.c:317:   double f = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9904, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.335, argv.__stack
	cmp	w1, 0	// D.9904,
	blt	.L674		//,
	add	x1, x0, 15	// D.9909, iftmp.335,
	and	x1, x1, -8	// D.9910, D.9909,
	str	x1, [x19]	// D.9910, argv.__stack
	b	.L675		//
.L674:
	add	w2, w1, 16	// D.9912, D.9904,
	str	w2, [x19, 28]	// D.9912, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9914, argv.__vr_offs
	cmp	w2, 0	// D.9914,
	ble	.L676		//,
	add	x1, x0, 15	// D.9917, iftmp.335,
	and	x1, x1, -8	// D.9918, D.9917,
	str	x1, [x19]	// D.9918, argv.__stack
	b	.L675		//
.L676:
	ldr	x2, [x19, 16]	// D.9920, argv.__vr_top
	sxtw	x0, w1	// D.9921, D.9904
	add	x0, x2, x0	// iftmp.335, D.9920, D.9921
.L675:
	ldr	d0, [x0]	// tmp286, *iftmp.334_97
	str	d0, [sp, 80]	// tmp286, f
// varargs-dll.c:318:   double g = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9922, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.337, argv.__stack
	cmp	w1, 0	// D.9922,
	blt	.L678		//,
	add	x1, x0, 15	// D.9927, iftmp.337,
	and	x1, x1, -8	// D.9928, D.9927,
	str	x1, [x19]	// D.9928, argv.__stack
	b	.L679		//
.L678:
	add	w2, w1, 16	// D.9930, D.9922,
	str	w2, [x19, 28]	// D.9930, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9932, argv.__vr_offs
	cmp	w2, 0	// D.9932,
	ble	.L680		//,
	add	x1, x0, 15	// D.9935, iftmp.337,
	and	x1, x1, -8	// D.9936, D.9935,
	str	x1, [x19]	// D.9936, argv.__stack
	b	.L679		//
.L680:
	ldr	x2, [x19, 16]	// D.9938, argv.__vr_top
	sxtw	x0, w1	// D.9939, D.9922
	add	x0, x2, x0	// iftmp.337, D.9938, D.9939
.L679:
	ldr	d0, [x0]	// tmp287, *iftmp.336_99
	str	d0, [sp, 88]	// tmp287, g
// varargs-dll.c:319:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9940, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.339, argv.__stack
	cmp	w1, 0	// D.9940,
	blt	.L682		//,
	add	x1, x0, 15	// D.9945, iftmp.339,
	and	x1, x1, -8	// D.9946, D.9945,
	str	x1, [x19]	// D.9946, argv.__stack
	b	.L683		//
.L682:
	add	w2, w1, 16	// D.9948, D.9940,
	str	w2, [x19, 28]	// D.9948, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9950, argv.__vr_offs
	cmp	w2, 0	// D.9950,
	ble	.L684		//,
	add	x1, x0, 15	// D.9953, iftmp.339,
	and	x1, x1, -8	// D.9954, D.9953,
	str	x1, [x19]	// D.9954, argv.__stack
	b	.L683		//
.L684:
	ldr	x2, [x19, 16]	// D.9956, argv.__vr_top
	sxtw	x0, w1	// D.9957, D.9940
	add	x0, x2, x0	// iftmp.339, D.9956, D.9957
.L683:
	ldr	d0, [x0]	// tmp288, *iftmp.338_101
	str	d0, [sp, 96]	// tmp288, h
// varargs-dll.c:320:   double i = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9958, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.341, argv.__stack
	cmp	w1, 0	// D.9958,
	blt	.L686		//,
	add	x1, x0, 15	// D.9963, iftmp.341,
	and	x1, x1, -8	// D.9964, D.9963,
	str	x1, [x19]	// D.9964, argv.__stack
	b	.L687		//
.L686:
	add	w2, w1, 16	// D.9966, D.9958,
	str	w2, [x19, 28]	// D.9966, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9968, argv.__vr_offs
	cmp	w2, 0	// D.9968,
	ble	.L688		//,
	add	x1, x0, 15	// D.9971, iftmp.341,
	and	x1, x1, -8	// D.9972, D.9971,
	str	x1, [x19]	// D.9972, argv.__stack
	b	.L687		//
.L688:
	ldr	x2, [x19, 16]	// D.9974, argv.__vr_top
	sxtw	x0, w1	// D.9975, D.9958
	add	x0, x2, x0	// iftmp.341, D.9974, D.9975
.L687:
	ldr	d0, [x0]	// tmp289, *iftmp.340_103
	str	d0, [sp, 104]	// tmp289, i
// varargs-dll.c:321:   double j = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9976, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.343, argv.__stack
	cmp	w1, 0	// D.9976,
	blt	.L690		//,
	add	x1, x0, 15	// D.9981, iftmp.343,
	and	x1, x1, -8	// D.9982, D.9981,
	str	x1, [x19]	// D.9982, argv.__stack
	b	.L691		//
.L690:
	add	w2, w1, 16	// D.9984, D.9976,
	str	w2, [x19, 28]	// D.9984, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.9986, argv.__vr_offs
	cmp	w2, 0	// D.9986,
	ble	.L692		//,
	add	x1, x0, 15	// D.9989, iftmp.343,
	and	x1, x1, -8	// D.9990, D.9989,
	str	x1, [x19]	// D.9990, argv.__stack
	b	.L691		//
.L692:
	ldr	x2, [x19, 16]	// D.9992, argv.__vr_top
	sxtw	x0, w1	// D.9993, D.9976
	add	x0, x2, x0	// iftmp.343, D.9992, D.9993
.L691:
	ldr	d0, [x0]	// tmp290, *iftmp.342_105
	str	d0, [sp, 112]	// tmp290, j
// varargs-dll.c:322:   double k = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.9994, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.345, argv.__stack
	cmp	w1, 0	// D.9994,
	blt	.L694		//,
	add	x1, x0, 15	// D.9999, iftmp.345,
	and	x1, x1, -8	// D.10000, D.9999,
	str	x1, [x19]	// D.10000, argv.__stack
	b	.L695		//
.L694:
	add	w2, w1, 16	// D.10002, D.9994,
	str	w2, [x19, 28]	// D.10002, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10004, argv.__vr_offs
	cmp	w2, 0	// D.10004,
	ble	.L696		//,
	add	x1, x0, 15	// D.10007, iftmp.345,
	and	x1, x1, -8	// D.10008, D.10007,
	str	x1, [x19]	// D.10008, argv.__stack
	b	.L695		//
.L696:
	ldr	x2, [x19, 16]	// D.10010, argv.__vr_top
	sxtw	x0, w1	// D.10011, D.9994
	add	x0, x2, x0	// iftmp.345, D.10010, D.10011
.L695:
	ldr	d0, [x0]	// tmp291, *iftmp.344_107
	str	d0, [sp, 120]	// tmp291, k
// varargs-dll.c:323:   double l = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10012, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.347, argv.__stack
	cmp	w1, 0	// D.10012,
	blt	.L698		//,
	add	x1, x0, 15	// D.10017, iftmp.347,
	and	x1, x1, -8	// D.10018, D.10017,
	str	x1, [x19]	// D.10018, argv.__stack
	b	.L699		//
.L698:
	add	w2, w1, 16	// D.10020, D.10012,
	str	w2, [x19, 28]	// D.10020, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10022, argv.__vr_offs
	cmp	w2, 0	// D.10022,
	ble	.L700		//,
	add	x1, x0, 15	// D.10025, iftmp.347,
	and	x1, x1, -8	// D.10026, D.10025,
	str	x1, [x19]	// D.10026, argv.__stack
	b	.L699		//
.L700:
	ldr	x2, [x19, 16]	// D.10028, argv.__vr_top
	sxtw	x0, w1	// D.10029, D.10012
	add	x0, x2, x0	// iftmp.347, D.10028, D.10029
.L699:
	ldr	d0, [x0]	// tmp292, *iftmp.346_109
	str	d0, [sp, 128]	// tmp292, l
// varargs-dll.c:324:   double m = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10030, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.349, argv.__stack
	cmp	w1, 0	// D.10030,
	blt	.L702		//,
	add	x1, x0, 15	// D.10035, iftmp.349,
	and	x1, x1, -8	// D.10036, D.10035,
	str	x1, [x19]	// D.10036, argv.__stack
	b	.L703		//
.L702:
	add	w2, w1, 16	// D.10038, D.10030,
	str	w2, [x19, 28]	// D.10038, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10040, argv.__vr_offs
	cmp	w2, 0	// D.10040,
	ble	.L704		//,
	add	x1, x0, 15	// D.10043, iftmp.349,
	and	x1, x1, -8	// D.10044, D.10043,
	str	x1, [x19]	// D.10044, argv.__stack
	b	.L703		//
.L704:
	ldr	x2, [x19, 16]	// D.10046, argv.__vr_top
	sxtw	x0, w1	// D.10047, D.10030
	add	x0, x2, x0	// iftmp.349, D.10046, D.10047
.L703:
	ldr	d0, [x0]	// tmp293, *iftmp.348_111
	str	d0, [sp, 136]	// tmp293, m
// varargs-dll.c:325:   double n = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10048, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.351, argv.__stack
	cmp	w1, 0	// D.10048,
	blt	.L706		//,
	add	x1, x0, 15	// D.10053, iftmp.351,
	and	x1, x1, -8	// D.10054, D.10053,
	str	x1, [x19]	// D.10054, argv.__stack
	b	.L707		//
.L706:
	add	w2, w1, 16	// D.10056, D.10048,
	str	w2, [x19, 28]	// D.10056, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10058, argv.__vr_offs
	cmp	w2, 0	// D.10058,
	ble	.L708		//,
	add	x1, x0, 15	// D.10061, iftmp.351,
	and	x1, x1, -8	// D.10062, D.10061,
	str	x1, [x19]	// D.10062, argv.__stack
	b	.L707		//
.L708:
	ldr	x2, [x19, 16]	// D.10064, argv.__vr_top
	sxtw	x0, w1	// D.10065, D.10048
	add	x0, x2, x0	// iftmp.351, D.10064, D.10065
.L707:
	ldr	d0, [x0]	// tmp294, *iftmp.350_113
	str	d0, [sp, 144]	// tmp294, n
// varargs-dll.c:326:   double o = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10066, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.353, argv.__stack
	cmp	w1, 0	// D.10066,
	blt	.L710		//,
	add	x1, x0, 15	// D.10071, iftmp.353,
	and	x1, x1, -8	// D.10072, D.10071,
	str	x1, [x19]	// D.10072, argv.__stack
	b	.L711		//
.L710:
	add	w2, w1, 16	// D.10074, D.10066,
	str	w2, [x19, 28]	// D.10074, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10076, argv.__vr_offs
	cmp	w2, 0	// D.10076,
	ble	.L712		//,
	add	x1, x0, 15	// D.10079, iftmp.353,
	and	x1, x1, -8	// D.10080, D.10079,
	str	x1, [x19]	// D.10080, argv.__stack
	b	.L711		//
.L712:
	ldr	x2, [x19, 16]	// D.10082, argv.__vr_top
	sxtw	x0, w1	// D.10083, D.10066
	add	x0, x2, x0	// iftmp.353, D.10082, D.10083
.L711:
	ldr	d0, [x0]	// tmp295, *iftmp.352_115
	str	d0, [sp, 152]	// tmp295, o
// varargs-dll.c:327:   double p = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10084, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.355, argv.__stack
	cmp	w1, 0	// D.10084,
	blt	.L714		//,
	add	x1, x0, 15	// D.10089, iftmp.355,
	and	x1, x1, -8	// D.10090, D.10089,
	str	x1, [x19]	// D.10090, argv.__stack
	b	.L715		//
.L714:
	add	w2, w1, 16	// D.10092, D.10084,
	str	w2, [x19, 28]	// D.10092, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10094, argv.__vr_offs
	cmp	w2, 0	// D.10094,
	ble	.L716		//,
	add	x1, x0, 15	// D.10097, iftmp.355,
	and	x1, x1, -8	// D.10098, D.10097,
	str	x1, [x19]	// D.10098, argv.__stack
	b	.L715		//
.L716:
	ldr	x2, [x19, 16]	// D.10100, argv.__vr_top
	sxtw	x0, w1	// D.10101, D.10084
	add	x0, x2, x0	// iftmp.355, D.10100, D.10101
.L715:
	ldr	d0, [x0]	// tmp296, *iftmp.354_117
	str	d0, [sp, 160]	// tmp296, p
// varargs-dll.c:328:   double q = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10102, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.357, argv.__stack
	cmp	w1, 0	// D.10102,
	blt	.L718		//,
	add	x1, x0, 15	// D.10107, iftmp.357,
	and	x1, x1, -8	// D.10108, D.10107,
	str	x1, [x19]	// D.10108, argv.__stack
	b	.L719		//
.L718:
	add	w2, w1, 16	// D.10110, D.10102,
	str	w2, [x19, 28]	// D.10110, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10112, argv.__vr_offs
	cmp	w2, 0	// D.10112,
	ble	.L720		//,
	add	x1, x0, 15	// D.10115, iftmp.357,
	and	x1, x1, -8	// D.10116, D.10115,
	str	x1, [x19]	// D.10116, argv.__stack
	b	.L719		//
.L720:
	ldr	x2, [x19, 16]	// D.10118, argv.__vr_top
	sxtw	x0, w1	// D.10119, D.10102
	add	x0, x2, x0	// iftmp.357, D.10118, D.10119
.L719:
	ldr	d0, [x0]	// tmp297, *iftmp.356_119
	str	d0, [sp, 168]	// tmp297, q
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 40]	// tmp298, a
	ldr	d0, [sp, 48]	// tmp299, b
	fadd	d1, d1, d0	// _1, tmp298, tmp299
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp300, c
	fadd	d1, d1, d0	// _2, _1, tmp300
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp301, d
	fadd	d1, d1, d0	// _3, _2, tmp301
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp302, e
	fadd	d1, d1, d0	// _4, _3, tmp302
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp303, f
	fadd	d1, d1, d0	// _5, _4, tmp303
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp304, g
	fadd	d1, d1, d0	// _6, _5, tmp304
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp305, h
	fadd	d1, d1, d0	// _7, _6, tmp305
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp306, i
	fadd	d1, d1, d0	// _8, _7, tmp306
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp307, j
	fadd	d1, d1, d0	// _9, _8, tmp307
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp308, k
	fadd	d1, d1, d0	// _10, _9, tmp308
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp309, l
	fadd	d1, d1, d0	// _11, _10, tmp309
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp310, m
	fadd	d1, d1, d0	// _12, _11, tmp310
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp311, n
	fadd	d1, d1, d0	// _13, _12, tmp311
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp312, o
	fadd	d1, d1, d0	// _14, _13, tmp312
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp313, p
	fadd	d1, d1, d0	// _15, _14, tmp313
// varargs-dll.c:329:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 168]	// tmp314, q
	fadd	d0, d1, d0	// _16, _15, tmp314
	fcvtzs	w0, d0	// _52, _16
// varargs-dll.c:330: }
	ldr	x19, [sp], 176	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE25:
	.size	use_va_list_many_doubles, .-use_va_list_many_doubles
	.align	2
	.global	use_va_args_few_floats
	.type	use_va_args_few_floats, %function
use_va_args_few_floats:
.LFB26:
	.cfi_startproc
	stp	x29, x30, [sp, -288]!	//,,,
	.cfi_def_cfa_offset 288
	.cfi_offset 29, -288
	.cfi_offset 30, -280
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 232]	//,
	str	x2, [sp, 240]	//,
	str	x3, [sp, 248]	//,
	str	x4, [sp, 256]	//,
	str	x5, [sp, 264]	//,
	str	x6, [sp, 272]	//,
	str	x7, [sp, 280]	//,
	str	q0, [sp, 96]	//,
	str	q1, [sp, 112]	//,
	str	q2, [sp, 128]	//,
	str	q3, [sp, 144]	//,
	str	q4, [sp, 160]	//,
	str	q5, [sp, 176]	//,
	str	q6, [sp, 192]	//,
	str	q7, [sp, 208]	//,
// varargs-dll.c:334: {
	adrp	x0, :got:__stack_chk_guard	// tmp116,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp115, tmp116,
	ldr	x1, [x0]	// tmp128,
	str	x1, [sp, 88]	// tmp128, D.10156
	mov	x1, 0	// tmp128
// varargs-dll.c:337:   va_start (argv, name);
	add	x0, sp, 288	// tmp133,,
	str	x0, [sp, 56]	// tmp133, MEM[(struct  *)&argv].__stack
	add	x0, sp, 288	// tmp134,,
	str	x0, [sp, 64]	// tmp134, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 224	// tmp118,,
	str	x0, [sp, 72]	// tmp118, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp119,
	str	w0, [sp, 80]	// tmp119, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp120,
	str	w0, [sp, 84]	// tmp120, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:338:   double a = va_arg (argv, double);
	ldr	w1, [sp, 84]	// D.10120, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.359, argv.__stack
	cmp	w1, 0	// D.10120,
	blt	.L724		//,
	add	x1, x0, 15	// D.10125, iftmp.359,
	and	x1, x1, -8	// D.10126, D.10125,
	str	x1, [sp, 56]	// D.10126, argv.__stack
	b	.L725		//
.L724:
	add	w2, w1, 16	// D.10128, D.10120,
	str	w2, [sp, 84]	// D.10128, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.10130, argv.__vr_offs
	cmp	w2, 0	// D.10130,
	ble	.L726		//,
	add	x1, x0, 15	// D.10133, iftmp.359,
	and	x1, x1, -8	// D.10134, D.10133,
	str	x1, [sp, 56]	// D.10134, argv.__stack
	b	.L725		//
.L726:
	ldr	x2, [sp, 72]	// D.10136, argv.__vr_top
	sxtw	x0, w1	// D.10137, D.10120
	add	x0, x2, x0	// iftmp.359, D.10136, D.10137
.L725:
	ldr	d0, [x0]	// tmp121, *iftmp.358_15
	str	d0, [sp, 40]	// tmp121, a
// varargs-dll.c:339:   double b = va_arg (argv, double);
	ldr	w1, [sp, 84]	// D.10138, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.361, argv.__stack
	cmp	w1, 0	// D.10138,
	blt	.L728		//,
	add	x1, x0, 15	// D.10143, iftmp.361,
	and	x1, x1, -8	// D.10144, D.10143,
	str	x1, [sp, 56]	// D.10144, argv.__stack
	b	.L729		//
.L728:
	add	w2, w1, 16	// D.10146, D.10138,
	str	w2, [sp, 84]	// D.10146, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.10148, argv.__vr_offs
	cmp	w2, 0	// D.10148,
	ble	.L730		//,
	add	x1, x0, 15	// D.10151, iftmp.361,
	and	x1, x1, -8	// D.10152, D.10151,
	str	x1, [sp, 56]	// D.10152, argv.__stack
	b	.L729		//
.L730:
	ldr	x2, [sp, 72]	// D.10154, argv.__vr_top
	sxtw	x0, w1	// D.10155, D.10138
	add	x0, x2, x0	// iftmp.361, D.10154, D.10155
.L729:
	ldr	d0, [x0]	// tmp122, *iftmp.360_17
	str	d0, [sp, 48]	// tmp122, b
// varargs-dll.c:341:   return a + b;
	ldr	d1, [sp, 40]	// tmp123, a
	ldr	d0, [sp, 48]	// tmp124, b
	fadd	d0, d1, d0	// _1, tmp123, tmp124
	fcvtzs	w0, d0	// _9, _1
	mov	w1, w0	// <retval>, _9
// varargs-dll.c:342: }
	adrp	x0, :got:__stack_chk_guard	// tmp127,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp126, tmp127,
	ldr	x3, [sp, 88]	// tmp129, D.10156
	ldr	x2, [x0]	// tmp130,
	subs	x3, x3, x2	// tmp129, tmp130
	mov	x2, 0	// tmp130
	beq	.L733		//,
	bl	__stack_chk_fail		//
.L733:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 288	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE26:
	.size	use_va_args_few_floats, .-use_va_args_few_floats
	.align	2
	.global	use_va_list_few_floats
	.type	use_va_list_few_floats, %function
use_va_list_few_floats:
.LFB27:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp115,
// varargs-dll.c:348:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10160, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.363, argv.__stack
	cmp	w1, 0	// D.10160,
	blt	.L735		//,
	add	x1, x0, 15	// D.10165, iftmp.363,
	and	x1, x1, -8	// D.10166, D.10165,
	str	x1, [x19]	// D.10166, argv.__stack
	b	.L736		//
.L735:
	add	w2, w1, 16	// D.10168, D.10160,
	str	w2, [x19, 28]	// D.10168, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10170, argv.__vr_offs
	cmp	w2, 0	// D.10170,
	ble	.L737		//,
	add	x1, x0, 15	// D.10173, iftmp.363,
	and	x1, x1, -8	// D.10174, D.10173,
	str	x1, [x19]	// D.10174, argv.__stack
	b	.L736		//
.L737:
	ldr	x2, [x19, 16]	// D.10176, argv.__vr_top
	sxtw	x0, w1	// D.10177, D.10160
	add	x0, x2, x0	// iftmp.363, D.10176, D.10177
.L736:
	ldr	d0, [x0]	// tmp116, *iftmp.362_12
	str	d0, [sp, 32]	// tmp116, a
// varargs-dll.c:349:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10178, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.365, argv.__stack
	cmp	w1, 0	// D.10178,
	blt	.L739		//,
	add	x1, x0, 15	// D.10183, iftmp.365,
	and	x1, x1, -8	// D.10184, D.10183,
	str	x1, [x19]	// D.10184, argv.__stack
	b	.L740		//
.L739:
	add	w2, w1, 16	// D.10186, D.10178,
	str	w2, [x19, 28]	// D.10186, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10188, argv.__vr_offs
	cmp	w2, 0	// D.10188,
	ble	.L741		//,
	add	x1, x0, 15	// D.10191, iftmp.365,
	and	x1, x1, -8	// D.10192, D.10191,
	str	x1, [x19]	// D.10192, argv.__stack
	b	.L740		//
.L741:
	ldr	x2, [x19, 16]	// D.10194, argv.__vr_top
	sxtw	x0, w1	// D.10195, D.10178
	add	x0, x2, x0	// iftmp.365, D.10194, D.10195
.L740:
	ldr	d0, [x0]	// tmp117, *iftmp.364_14
	str	d0, [sp, 40]	// tmp117, b
// varargs-dll.c:350:   return a + b;
	ldr	d1, [sp, 32]	// tmp118, a
	ldr	d0, [sp, 40]	// tmp119, b
	fadd	d0, d1, d0	// _1, tmp118, tmp119
	fcvtzs	w0, d0	// _7, _1
// varargs-dll.c:351: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE27:
	.size	use_va_list_few_floats, .-use_va_list_few_floats
	.align	2
	.global	use_va_args_several_floats
	.type	use_va_args_several_floats, %function
use_va_args_several_floats:
.LFB28:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:355: {
	adrp	x0, :got:__stack_chk_guard	// tmp193,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp192, tmp193,
	ldr	x1, [x0]	// tmp219,
	str	x1, [sp, 136]	// tmp219, D.10358
	mov	x1, 0	// tmp219
// varargs-dll.c:358:   va_start (argv, name);
	add	x0, sp, 336	// tmp224,,
	str	x0, [sp, 104]	// tmp224, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp225,,
	str	x0, [sp, 112]	// tmp225, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp195,,
	str	x0, [sp, 120]	// tmp195, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp196,
	str	w0, [sp, 128]	// tmp196, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp197,
	str	w0, [sp, 132]	// tmp197, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:359:   double a = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10196, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.367, argv.__stack
	cmp	w1, 0	// D.10196,
	blt	.L745		//,
	add	x1, x0, 15	// D.10201, iftmp.367,
	and	x1, x1, -8	// D.10202, D.10201,
	str	x1, [sp, 104]	// D.10202, argv.__stack
	b	.L746		//
.L745:
	add	w2, w1, 16	// D.10204, D.10196,
	str	w2, [sp, 132]	// D.10204, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10206, argv.__vr_offs
	cmp	w2, 0	// D.10206,
	ble	.L747		//,
	add	x1, x0, 15	// D.10209, iftmp.367,
	and	x1, x1, -8	// D.10210, D.10209,
	str	x1, [sp, 104]	// D.10210, argv.__stack
	b	.L746		//
.L747:
	ldr	x2, [sp, 120]	// D.10212, argv.__vr_top
	sxtw	x0, w1	// D.10213, D.10196
	add	x0, x2, x0	// iftmp.367, D.10212, D.10213
.L746:
	ldr	d0, [x0]	// tmp198, *iftmp.366_50
	str	d0, [sp, 32]	// tmp198, a
// varargs-dll.c:360:   double b = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10214, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.369, argv.__stack
	cmp	w1, 0	// D.10214,
	blt	.L749		//,
	add	x1, x0, 15	// D.10219, iftmp.369,
	and	x1, x1, -8	// D.10220, D.10219,
	str	x1, [sp, 104]	// D.10220, argv.__stack
	b	.L750		//
.L749:
	add	w2, w1, 16	// D.10222, D.10214,
	str	w2, [sp, 132]	// D.10222, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10224, argv.__vr_offs
	cmp	w2, 0	// D.10224,
	ble	.L751		//,
	add	x1, x0, 15	// D.10227, iftmp.369,
	and	x1, x1, -8	// D.10228, D.10227,
	str	x1, [sp, 104]	// D.10228, argv.__stack
	b	.L750		//
.L751:
	ldr	x2, [sp, 120]	// D.10230, argv.__vr_top
	sxtw	x0, w1	// D.10231, D.10214
	add	x0, x2, x0	// iftmp.369, D.10230, D.10231
.L750:
	ldr	d0, [x0]	// tmp199, *iftmp.368_52
	str	d0, [sp, 40]	// tmp199, b
// varargs-dll.c:361:   double c = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10232, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.371, argv.__stack
	cmp	w1, 0	// D.10232,
	blt	.L753		//,
	add	x1, x0, 15	// D.10237, iftmp.371,
	and	x1, x1, -8	// D.10238, D.10237,
	str	x1, [sp, 104]	// D.10238, argv.__stack
	b	.L754		//
.L753:
	add	w2, w1, 16	// D.10240, D.10232,
	str	w2, [sp, 132]	// D.10240, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10242, argv.__vr_offs
	cmp	w2, 0	// D.10242,
	ble	.L755		//,
	add	x1, x0, 15	// D.10245, iftmp.371,
	and	x1, x1, -8	// D.10246, D.10245,
	str	x1, [sp, 104]	// D.10246, argv.__stack
	b	.L754		//
.L755:
	ldr	x2, [sp, 120]	// D.10248, argv.__vr_top
	sxtw	x0, w1	// D.10249, D.10232
	add	x0, x2, x0	// iftmp.371, D.10248, D.10249
.L754:
	ldr	d0, [x0]	// tmp200, *iftmp.370_54
	str	d0, [sp, 48]	// tmp200, c
// varargs-dll.c:362:   double d = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10250, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.373, argv.__stack
	cmp	w1, 0	// D.10250,
	blt	.L757		//,
	add	x1, x0, 15	// D.10255, iftmp.373,
	and	x1, x1, -8	// D.10256, D.10255,
	str	x1, [sp, 104]	// D.10256, argv.__stack
	b	.L758		//
.L757:
	add	w2, w1, 16	// D.10258, D.10250,
	str	w2, [sp, 132]	// D.10258, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10260, argv.__vr_offs
	cmp	w2, 0	// D.10260,
	ble	.L759		//,
	add	x1, x0, 15	// D.10263, iftmp.373,
	and	x1, x1, -8	// D.10264, D.10263,
	str	x1, [sp, 104]	// D.10264, argv.__stack
	b	.L758		//
.L759:
	ldr	x2, [sp, 120]	// D.10266, argv.__vr_top
	sxtw	x0, w1	// D.10267, D.10250
	add	x0, x2, x0	// iftmp.373, D.10266, D.10267
.L758:
	ldr	d0, [x0]	// tmp201, *iftmp.372_56
	str	d0, [sp, 56]	// tmp201, d
// varargs-dll.c:363:   double e = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10268, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.375, argv.__stack
	cmp	w1, 0	// D.10268,
	blt	.L761		//,
	add	x1, x0, 15	// D.10273, iftmp.375,
	and	x1, x1, -8	// D.10274, D.10273,
	str	x1, [sp, 104]	// D.10274, argv.__stack
	b	.L762		//
.L761:
	add	w2, w1, 16	// D.10276, D.10268,
	str	w2, [sp, 132]	// D.10276, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10278, argv.__vr_offs
	cmp	w2, 0	// D.10278,
	ble	.L763		//,
	add	x1, x0, 15	// D.10281, iftmp.375,
	and	x1, x1, -8	// D.10282, D.10281,
	str	x1, [sp, 104]	// D.10282, argv.__stack
	b	.L762		//
.L763:
	ldr	x2, [sp, 120]	// D.10284, argv.__vr_top
	sxtw	x0, w1	// D.10285, D.10268
	add	x0, x2, x0	// iftmp.375, D.10284, D.10285
.L762:
	ldr	d0, [x0]	// tmp202, *iftmp.374_58
	str	d0, [sp, 64]	// tmp202, e
// varargs-dll.c:364:   double f = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10286, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.377, argv.__stack
	cmp	w1, 0	// D.10286,
	blt	.L765		//,
	add	x1, x0, 15	// D.10291, iftmp.377,
	and	x1, x1, -8	// D.10292, D.10291,
	str	x1, [sp, 104]	// D.10292, argv.__stack
	b	.L766		//
.L765:
	add	w2, w1, 16	// D.10294, D.10286,
	str	w2, [sp, 132]	// D.10294, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10296, argv.__vr_offs
	cmp	w2, 0	// D.10296,
	ble	.L767		//,
	add	x1, x0, 15	// D.10299, iftmp.377,
	and	x1, x1, -8	// D.10300, D.10299,
	str	x1, [sp, 104]	// D.10300, argv.__stack
	b	.L766		//
.L767:
	ldr	x2, [sp, 120]	// D.10302, argv.__vr_top
	sxtw	x0, w1	// D.10303, D.10286
	add	x0, x2, x0	// iftmp.377, D.10302, D.10303
.L766:
	ldr	d0, [x0]	// tmp203, *iftmp.376_60
	str	d0, [sp, 72]	// tmp203, f
// varargs-dll.c:365:   double g = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10304, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.379, argv.__stack
	cmp	w1, 0	// D.10304,
	blt	.L769		//,
	add	x1, x0, 15	// D.10309, iftmp.379,
	and	x1, x1, -8	// D.10310, D.10309,
	str	x1, [sp, 104]	// D.10310, argv.__stack
	b	.L770		//
.L769:
	add	w2, w1, 16	// D.10312, D.10304,
	str	w2, [sp, 132]	// D.10312, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10314, argv.__vr_offs
	cmp	w2, 0	// D.10314,
	ble	.L771		//,
	add	x1, x0, 15	// D.10317, iftmp.379,
	and	x1, x1, -8	// D.10318, D.10317,
	str	x1, [sp, 104]	// D.10318, argv.__stack
	b	.L770		//
.L771:
	ldr	x2, [sp, 120]	// D.10320, argv.__vr_top
	sxtw	x0, w1	// D.10321, D.10304
	add	x0, x2, x0	// iftmp.379, D.10320, D.10321
.L770:
	ldr	d0, [x0]	// tmp204, *iftmp.378_62
	str	d0, [sp, 80]	// tmp204, g
// varargs-dll.c:366:   double h = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10322, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.381, argv.__stack
	cmp	w1, 0	// D.10322,
	blt	.L773		//,
	add	x1, x0, 15	// D.10327, iftmp.381,
	and	x1, x1, -8	// D.10328, D.10327,
	str	x1, [sp, 104]	// D.10328, argv.__stack
	b	.L774		//
.L773:
	add	w2, w1, 16	// D.10330, D.10322,
	str	w2, [sp, 132]	// D.10330, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10332, argv.__vr_offs
	cmp	w2, 0	// D.10332,
	ble	.L775		//,
	add	x1, x0, 15	// D.10335, iftmp.381,
	and	x1, x1, -8	// D.10336, D.10335,
	str	x1, [sp, 104]	// D.10336, argv.__stack
	b	.L774		//
.L775:
	ldr	x2, [sp, 120]	// D.10338, argv.__vr_top
	sxtw	x0, w1	// D.10339, D.10322
	add	x0, x2, x0	// iftmp.381, D.10338, D.10339
.L774:
	ldr	d0, [x0]	// tmp205, *iftmp.380_64
	str	d0, [sp, 88]	// tmp205, h
// varargs-dll.c:367:   double i = va_arg (argv, double);
	ldr	w1, [sp, 132]	// D.10340, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.383, argv.__stack
	cmp	w1, 0	// D.10340,
	blt	.L777		//,
	add	x1, x0, 15	// D.10345, iftmp.383,
	and	x1, x1, -8	// D.10346, D.10345,
	str	x1, [sp, 104]	// D.10346, argv.__stack
	b	.L778		//
.L777:
	add	w2, w1, 16	// D.10348, D.10340,
	str	w2, [sp, 132]	// D.10348, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.10350, argv.__vr_offs
	cmp	w2, 0	// D.10350,
	ble	.L779		//,
	add	x1, x0, 15	// D.10353, iftmp.383,
	and	x1, x1, -8	// D.10354, D.10353,
	str	x1, [sp, 104]	// D.10354, argv.__stack
	b	.L778		//
.L779:
	ldr	x2, [sp, 120]	// D.10356, argv.__vr_top
	sxtw	x0, w1	// D.10357, D.10340
	add	x0, x2, x0	// iftmp.383, D.10356, D.10357
.L778:
	ldr	d0, [x0]	// tmp206, *iftmp.382_66
	str	d0, [sp, 96]	// tmp206, i
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 32]	// tmp207, a
	ldr	d0, [sp, 40]	// tmp208, b
	fadd	d1, d1, d0	// _1, tmp207, tmp208
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 48]	// tmp209, c
	fadd	d1, d1, d0	// _2, _1, tmp209
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp210, d
	fadd	d1, d1, d0	// _3, _2, tmp210
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp211, e
	fadd	d1, d1, d0	// _4, _3, tmp211
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp212, f
	fadd	d1, d1, d0	// _5, _4, tmp212
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp213, g
	fadd	d1, d1, d0	// _6, _5, tmp213
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp214, h
	fadd	d1, d1, d0	// _7, _6, tmp214
// varargs-dll.c:369:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp215, i
	fadd	d0, d1, d0	// _8, _7, tmp215
	fcvtzs	w0, d0	// _30, _8
	mov	w1, w0	// <retval>, _30
// varargs-dll.c:370: }
	adrp	x0, :got:__stack_chk_guard	// tmp218,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp217, tmp218,
	ldr	x3, [sp, 136]	// tmp220, D.10358
	ldr	x2, [x0]	// tmp221,
	subs	x3, x3, x2	// tmp220, tmp221
	mov	x2, 0	// tmp221
	beq	.L782		//,
	bl	__stack_chk_fail		//
.L782:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE28:
	.size	use_va_args_several_floats, .-use_va_args_several_floats
	.align	2
	.global	use_va_list_several_floats
	.type	use_va_list_several_floats, %function
use_va_list_several_floats:
.LFB29:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp192,
// varargs-dll.c:376:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10362, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.385, argv.__stack
	cmp	w1, 0	// D.10362,
	blt	.L784		//,
	add	x1, x0, 15	// D.10367, iftmp.385,
	and	x1, x1, -8	// D.10368, D.10367,
	str	x1, [x19]	// D.10368, argv.__stack
	b	.L785		//
.L784:
	add	w2, w1, 16	// D.10370, D.10362,
	str	w2, [x19, 28]	// D.10370, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10372, argv.__vr_offs
	cmp	w2, 0	// D.10372,
	ble	.L786		//,
	add	x1, x0, 15	// D.10375, iftmp.385,
	and	x1, x1, -8	// D.10376, D.10375,
	str	x1, [x19]	// D.10376, argv.__stack
	b	.L785		//
.L786:
	ldr	x2, [x19, 16]	// D.10378, argv.__vr_top
	sxtw	x0, w1	// D.10379, D.10362
	add	x0, x2, x0	// iftmp.385, D.10378, D.10379
.L785:
	ldr	d0, [x0]	// tmp193, *iftmp.384_47
	str	d0, [sp, 40]	// tmp193, a
// varargs-dll.c:377:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10380, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.387, argv.__stack
	cmp	w1, 0	// D.10380,
	blt	.L788		//,
	add	x1, x0, 15	// D.10385, iftmp.387,
	and	x1, x1, -8	// D.10386, D.10385,
	str	x1, [x19]	// D.10386, argv.__stack
	b	.L789		//
.L788:
	add	w2, w1, 16	// D.10388, D.10380,
	str	w2, [x19, 28]	// D.10388, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10390, argv.__vr_offs
	cmp	w2, 0	// D.10390,
	ble	.L790		//,
	add	x1, x0, 15	// D.10393, iftmp.387,
	and	x1, x1, -8	// D.10394, D.10393,
	str	x1, [x19]	// D.10394, argv.__stack
	b	.L789		//
.L790:
	ldr	x2, [x19, 16]	// D.10396, argv.__vr_top
	sxtw	x0, w1	// D.10397, D.10380
	add	x0, x2, x0	// iftmp.387, D.10396, D.10397
.L789:
	ldr	d0, [x0]	// tmp194, *iftmp.386_49
	str	d0, [sp, 48]	// tmp194, b
// varargs-dll.c:378:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10398, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.389, argv.__stack
	cmp	w1, 0	// D.10398,
	blt	.L792		//,
	add	x1, x0, 15	// D.10403, iftmp.389,
	and	x1, x1, -8	// D.10404, D.10403,
	str	x1, [x19]	// D.10404, argv.__stack
	b	.L793		//
.L792:
	add	w2, w1, 16	// D.10406, D.10398,
	str	w2, [x19, 28]	// D.10406, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10408, argv.__vr_offs
	cmp	w2, 0	// D.10408,
	ble	.L794		//,
	add	x1, x0, 15	// D.10411, iftmp.389,
	and	x1, x1, -8	// D.10412, D.10411,
	str	x1, [x19]	// D.10412, argv.__stack
	b	.L793		//
.L794:
	ldr	x2, [x19, 16]	// D.10414, argv.__vr_top
	sxtw	x0, w1	// D.10415, D.10398
	add	x0, x2, x0	// iftmp.389, D.10414, D.10415
.L793:
	ldr	d0, [x0]	// tmp195, *iftmp.388_51
	str	d0, [sp, 56]	// tmp195, c
// varargs-dll.c:379:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10416, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.391, argv.__stack
	cmp	w1, 0	// D.10416,
	blt	.L796		//,
	add	x1, x0, 15	// D.10421, iftmp.391,
	and	x1, x1, -8	// D.10422, D.10421,
	str	x1, [x19]	// D.10422, argv.__stack
	b	.L797		//
.L796:
	add	w2, w1, 16	// D.10424, D.10416,
	str	w2, [x19, 28]	// D.10424, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10426, argv.__vr_offs
	cmp	w2, 0	// D.10426,
	ble	.L798		//,
	add	x1, x0, 15	// D.10429, iftmp.391,
	and	x1, x1, -8	// D.10430, D.10429,
	str	x1, [x19]	// D.10430, argv.__stack
	b	.L797		//
.L798:
	ldr	x2, [x19, 16]	// D.10432, argv.__vr_top
	sxtw	x0, w1	// D.10433, D.10416
	add	x0, x2, x0	// iftmp.391, D.10432, D.10433
.L797:
	ldr	d0, [x0]	// tmp196, *iftmp.390_53
	str	d0, [sp, 64]	// tmp196, d
// varargs-dll.c:380:   double e = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10434, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.393, argv.__stack
	cmp	w1, 0	// D.10434,
	blt	.L800		//,
	add	x1, x0, 15	// D.10439, iftmp.393,
	and	x1, x1, -8	// D.10440, D.10439,
	str	x1, [x19]	// D.10440, argv.__stack
	b	.L801		//
.L800:
	add	w2, w1, 16	// D.10442, D.10434,
	str	w2, [x19, 28]	// D.10442, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10444, argv.__vr_offs
	cmp	w2, 0	// D.10444,
	ble	.L802		//,
	add	x1, x0, 15	// D.10447, iftmp.393,
	and	x1, x1, -8	// D.10448, D.10447,
	str	x1, [x19]	// D.10448, argv.__stack
	b	.L801		//
.L802:
	ldr	x2, [x19, 16]	// D.10450, argv.__vr_top
	sxtw	x0, w1	// D.10451, D.10434
	add	x0, x2, x0	// iftmp.393, D.10450, D.10451
.L801:
	ldr	d0, [x0]	// tmp197, *iftmp.392_55
	str	d0, [sp, 72]	// tmp197, e
// varargs-dll.c:381:   double f = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10452, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.395, argv.__stack
	cmp	w1, 0	// D.10452,
	blt	.L804		//,
	add	x1, x0, 15	// D.10457, iftmp.395,
	and	x1, x1, -8	// D.10458, D.10457,
	str	x1, [x19]	// D.10458, argv.__stack
	b	.L805		//
.L804:
	add	w2, w1, 16	// D.10460, D.10452,
	str	w2, [x19, 28]	// D.10460, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10462, argv.__vr_offs
	cmp	w2, 0	// D.10462,
	ble	.L806		//,
	add	x1, x0, 15	// D.10465, iftmp.395,
	and	x1, x1, -8	// D.10466, D.10465,
	str	x1, [x19]	// D.10466, argv.__stack
	b	.L805		//
.L806:
	ldr	x2, [x19, 16]	// D.10468, argv.__vr_top
	sxtw	x0, w1	// D.10469, D.10452
	add	x0, x2, x0	// iftmp.395, D.10468, D.10469
.L805:
	ldr	d0, [x0]	// tmp198, *iftmp.394_57
	str	d0, [sp, 80]	// tmp198, f
// varargs-dll.c:382:   double g = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10470, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.397, argv.__stack
	cmp	w1, 0	// D.10470,
	blt	.L808		//,
	add	x1, x0, 15	// D.10475, iftmp.397,
	and	x1, x1, -8	// D.10476, D.10475,
	str	x1, [x19]	// D.10476, argv.__stack
	b	.L809		//
.L808:
	add	w2, w1, 16	// D.10478, D.10470,
	str	w2, [x19, 28]	// D.10478, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10480, argv.__vr_offs
	cmp	w2, 0	// D.10480,
	ble	.L810		//,
	add	x1, x0, 15	// D.10483, iftmp.397,
	and	x1, x1, -8	// D.10484, D.10483,
	str	x1, [x19]	// D.10484, argv.__stack
	b	.L809		//
.L810:
	ldr	x2, [x19, 16]	// D.10486, argv.__vr_top
	sxtw	x0, w1	// D.10487, D.10470
	add	x0, x2, x0	// iftmp.397, D.10486, D.10487
.L809:
	ldr	d0, [x0]	// tmp199, *iftmp.396_59
	str	d0, [sp, 88]	// tmp199, g
// varargs-dll.c:383:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10488, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.399, argv.__stack
	cmp	w1, 0	// D.10488,
	blt	.L812		//,
	add	x1, x0, 15	// D.10493, iftmp.399,
	and	x1, x1, -8	// D.10494, D.10493,
	str	x1, [x19]	// D.10494, argv.__stack
	b	.L813		//
.L812:
	add	w2, w1, 16	// D.10496, D.10488,
	str	w2, [x19, 28]	// D.10496, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10498, argv.__vr_offs
	cmp	w2, 0	// D.10498,
	ble	.L814		//,
	add	x1, x0, 15	// D.10501, iftmp.399,
	and	x1, x1, -8	// D.10502, D.10501,
	str	x1, [x19]	// D.10502, argv.__stack
	b	.L813		//
.L814:
	ldr	x2, [x19, 16]	// D.10504, argv.__vr_top
	sxtw	x0, w1	// D.10505, D.10488
	add	x0, x2, x0	// iftmp.399, D.10504, D.10505
.L813:
	ldr	d0, [x0]	// tmp200, *iftmp.398_61
	str	d0, [sp, 96]	// tmp200, h
// varargs-dll.c:384:   double i = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10506, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.401, argv.__stack
	cmp	w1, 0	// D.10506,
	blt	.L816		//,
	add	x1, x0, 15	// D.10511, iftmp.401,
	and	x1, x1, -8	// D.10512, D.10511,
	str	x1, [x19]	// D.10512, argv.__stack
	b	.L817		//
.L816:
	add	w2, w1, 16	// D.10514, D.10506,
	str	w2, [x19, 28]	// D.10514, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10516, argv.__vr_offs
	cmp	w2, 0	// D.10516,
	ble	.L818		//,
	add	x1, x0, 15	// D.10519, iftmp.401,
	and	x1, x1, -8	// D.10520, D.10519,
	str	x1, [x19]	// D.10520, argv.__stack
	b	.L817		//
.L818:
	ldr	x2, [x19, 16]	// D.10522, argv.__vr_top
	sxtw	x0, w1	// D.10523, D.10506
	add	x0, x2, x0	// iftmp.401, D.10522, D.10523
.L817:
	ldr	d0, [x0]	// tmp201, *iftmp.400_63
	str	d0, [sp, 104]	// tmp201, i
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 40]	// tmp202, a
	ldr	d0, [sp, 48]	// tmp203, b
	fadd	d1, d1, d0	// _1, tmp202, tmp203
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp204, c
	fadd	d1, d1, d0	// _2, _1, tmp204
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp205, d
	fadd	d1, d1, d0	// _3, _2, tmp205
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp206, e
	fadd	d1, d1, d0	// _4, _3, tmp206
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp207, f
	fadd	d1, d1, d0	// _5, _4, tmp207
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp208, g
	fadd	d1, d1, d0	// _6, _5, tmp208
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp209, h
	fadd	d1, d1, d0	// _7, _6, tmp209
// varargs-dll.c:385:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 104]	// tmp210, i
	fadd	d0, d1, d0	// _8, _7, tmp210
	fcvtzs	w0, d0	// _28, _8
// varargs-dll.c:386: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE29:
	.size	use_va_list_several_floats, .-use_va_list_several_floats
	.align	2
	.global	use_va_args_many_floats
	.type	use_va_args_many_floats, %function
use_va_args_many_floats:
.LFB30:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x0, [sp, 24]	// name, name
	str	x1, [sp, 344]	//,
	str	x2, [sp, 352]	//,
	str	x3, [sp, 360]	//,
	str	x4, [sp, 368]	//,
	str	x5, [sp, 376]	//,
	str	x6, [sp, 384]	//,
	str	x7, [sp, 392]	//,
	str	q0, [sp, 208]	//,
	str	q1, [sp, 224]	//,
	str	q2, [sp, 240]	//,
	str	q3, [sp, 256]	//,
	str	q4, [sp, 272]	//,
	str	q5, [sp, 288]	//,
	str	q6, [sp, 304]	//,
	str	q7, [sp, 320]	//,
// varargs-dll.c:390: {
	adrp	x0, :got:__stack_chk_guard	// tmp281,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp280, tmp281,
	ldr	x1, [x0]	// tmp323,
	str	x1, [sp, 200]	// tmp323, D.10830
	mov	x1, 0	// tmp323
// varargs-dll.c:393:   va_start (argv, name);
	add	x0, sp, 400	// tmp328,,
	str	x0, [sp, 168]	// tmp328, MEM[(struct  *)&argv].__stack
	add	x0, sp, 400	// tmp329,,
	str	x0, [sp, 176]	// tmp329, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 336	// tmp283,,
	str	x0, [sp, 184]	// tmp283, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp284,
	str	w0, [sp, 192]	// tmp284, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp285,
	str	w0, [sp, 196]	// tmp285, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:394:   double a = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10524, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.403, argv.__stack
	cmp	w1, 0	// D.10524,
	blt	.L822		//,
	add	x1, x0, 15	// D.10529, iftmp.403,
	and	x1, x1, -8	// D.10530, D.10529,
	str	x1, [sp, 168]	// D.10530, argv.__stack
	b	.L823		//
.L822:
	add	w2, w1, 16	// D.10532, D.10524,
	str	w2, [sp, 196]	// D.10532, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10534, argv.__vr_offs
	cmp	w2, 0	// D.10534,
	ble	.L824		//,
	add	x1, x0, 15	// D.10537, iftmp.403,
	and	x1, x1, -8	// D.10538, D.10537,
	str	x1, [sp, 168]	// D.10538, argv.__stack
	b	.L823		//
.L824:
	ldr	x2, [sp, 184]	// D.10540, argv.__vr_top
	sxtw	x0, w1	// D.10541, D.10524
	add	x0, x2, x0	// iftmp.403, D.10540, D.10541
.L823:
	ldr	d0, [x0]	// tmp286, *iftmp.402_90
	str	d0, [sp, 32]	// tmp286, a
// varargs-dll.c:395:   double b = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10542, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.405, argv.__stack
	cmp	w1, 0	// D.10542,
	blt	.L826		//,
	add	x1, x0, 15	// D.10547, iftmp.405,
	and	x1, x1, -8	// D.10548, D.10547,
	str	x1, [sp, 168]	// D.10548, argv.__stack
	b	.L827		//
.L826:
	add	w2, w1, 16	// D.10550, D.10542,
	str	w2, [sp, 196]	// D.10550, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10552, argv.__vr_offs
	cmp	w2, 0	// D.10552,
	ble	.L828		//,
	add	x1, x0, 15	// D.10555, iftmp.405,
	and	x1, x1, -8	// D.10556, D.10555,
	str	x1, [sp, 168]	// D.10556, argv.__stack
	b	.L827		//
.L828:
	ldr	x2, [sp, 184]	// D.10558, argv.__vr_top
	sxtw	x0, w1	// D.10559, D.10542
	add	x0, x2, x0	// iftmp.405, D.10558, D.10559
.L827:
	ldr	d0, [x0]	// tmp287, *iftmp.404_92
	str	d0, [sp, 40]	// tmp287, b
// varargs-dll.c:396:   double c = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10560, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.407, argv.__stack
	cmp	w1, 0	// D.10560,
	blt	.L830		//,
	add	x1, x0, 15	// D.10565, iftmp.407,
	and	x1, x1, -8	// D.10566, D.10565,
	str	x1, [sp, 168]	// D.10566, argv.__stack
	b	.L831		//
.L830:
	add	w2, w1, 16	// D.10568, D.10560,
	str	w2, [sp, 196]	// D.10568, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10570, argv.__vr_offs
	cmp	w2, 0	// D.10570,
	ble	.L832		//,
	add	x1, x0, 15	// D.10573, iftmp.407,
	and	x1, x1, -8	// D.10574, D.10573,
	str	x1, [sp, 168]	// D.10574, argv.__stack
	b	.L831		//
.L832:
	ldr	x2, [sp, 184]	// D.10576, argv.__vr_top
	sxtw	x0, w1	// D.10577, D.10560
	add	x0, x2, x0	// iftmp.407, D.10576, D.10577
.L831:
	ldr	d0, [x0]	// tmp288, *iftmp.406_94
	str	d0, [sp, 48]	// tmp288, c
// varargs-dll.c:397:   double d = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10578, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.409, argv.__stack
	cmp	w1, 0	// D.10578,
	blt	.L834		//,
	add	x1, x0, 15	// D.10583, iftmp.409,
	and	x1, x1, -8	// D.10584, D.10583,
	str	x1, [sp, 168]	// D.10584, argv.__stack
	b	.L835		//
.L834:
	add	w2, w1, 16	// D.10586, D.10578,
	str	w2, [sp, 196]	// D.10586, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10588, argv.__vr_offs
	cmp	w2, 0	// D.10588,
	ble	.L836		//,
	add	x1, x0, 15	// D.10591, iftmp.409,
	and	x1, x1, -8	// D.10592, D.10591,
	str	x1, [sp, 168]	// D.10592, argv.__stack
	b	.L835		//
.L836:
	ldr	x2, [sp, 184]	// D.10594, argv.__vr_top
	sxtw	x0, w1	// D.10595, D.10578
	add	x0, x2, x0	// iftmp.409, D.10594, D.10595
.L835:
	ldr	d0, [x0]	// tmp289, *iftmp.408_96
	str	d0, [sp, 56]	// tmp289, d
// varargs-dll.c:398:   double e = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10596, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.411, argv.__stack
	cmp	w1, 0	// D.10596,
	blt	.L838		//,
	add	x1, x0, 15	// D.10601, iftmp.411,
	and	x1, x1, -8	// D.10602, D.10601,
	str	x1, [sp, 168]	// D.10602, argv.__stack
	b	.L839		//
.L838:
	add	w2, w1, 16	// D.10604, D.10596,
	str	w2, [sp, 196]	// D.10604, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10606, argv.__vr_offs
	cmp	w2, 0	// D.10606,
	ble	.L840		//,
	add	x1, x0, 15	// D.10609, iftmp.411,
	and	x1, x1, -8	// D.10610, D.10609,
	str	x1, [sp, 168]	// D.10610, argv.__stack
	b	.L839		//
.L840:
	ldr	x2, [sp, 184]	// D.10612, argv.__vr_top
	sxtw	x0, w1	// D.10613, D.10596
	add	x0, x2, x0	// iftmp.411, D.10612, D.10613
.L839:
	ldr	d0, [x0]	// tmp290, *iftmp.410_98
	str	d0, [sp, 64]	// tmp290, e
// varargs-dll.c:399:   double f = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10614, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.413, argv.__stack
	cmp	w1, 0	// D.10614,
	blt	.L842		//,
	add	x1, x0, 15	// D.10619, iftmp.413,
	and	x1, x1, -8	// D.10620, D.10619,
	str	x1, [sp, 168]	// D.10620, argv.__stack
	b	.L843		//
.L842:
	add	w2, w1, 16	// D.10622, D.10614,
	str	w2, [sp, 196]	// D.10622, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10624, argv.__vr_offs
	cmp	w2, 0	// D.10624,
	ble	.L844		//,
	add	x1, x0, 15	// D.10627, iftmp.413,
	and	x1, x1, -8	// D.10628, D.10627,
	str	x1, [sp, 168]	// D.10628, argv.__stack
	b	.L843		//
.L844:
	ldr	x2, [sp, 184]	// D.10630, argv.__vr_top
	sxtw	x0, w1	// D.10631, D.10614
	add	x0, x2, x0	// iftmp.413, D.10630, D.10631
.L843:
	ldr	d0, [x0]	// tmp291, *iftmp.412_100
	str	d0, [sp, 72]	// tmp291, f
// varargs-dll.c:400:   double g = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10632, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.415, argv.__stack
	cmp	w1, 0	// D.10632,
	blt	.L846		//,
	add	x1, x0, 15	// D.10637, iftmp.415,
	and	x1, x1, -8	// D.10638, D.10637,
	str	x1, [sp, 168]	// D.10638, argv.__stack
	b	.L847		//
.L846:
	add	w2, w1, 16	// D.10640, D.10632,
	str	w2, [sp, 196]	// D.10640, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10642, argv.__vr_offs
	cmp	w2, 0	// D.10642,
	ble	.L848		//,
	add	x1, x0, 15	// D.10645, iftmp.415,
	and	x1, x1, -8	// D.10646, D.10645,
	str	x1, [sp, 168]	// D.10646, argv.__stack
	b	.L847		//
.L848:
	ldr	x2, [sp, 184]	// D.10648, argv.__vr_top
	sxtw	x0, w1	// D.10649, D.10632
	add	x0, x2, x0	// iftmp.415, D.10648, D.10649
.L847:
	ldr	d0, [x0]	// tmp292, *iftmp.414_102
	str	d0, [sp, 80]	// tmp292, g
// varargs-dll.c:401:   double h = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10650, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.417, argv.__stack
	cmp	w1, 0	// D.10650,
	blt	.L850		//,
	add	x1, x0, 15	// D.10655, iftmp.417,
	and	x1, x1, -8	// D.10656, D.10655,
	str	x1, [sp, 168]	// D.10656, argv.__stack
	b	.L851		//
.L850:
	add	w2, w1, 16	// D.10658, D.10650,
	str	w2, [sp, 196]	// D.10658, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10660, argv.__vr_offs
	cmp	w2, 0	// D.10660,
	ble	.L852		//,
	add	x1, x0, 15	// D.10663, iftmp.417,
	and	x1, x1, -8	// D.10664, D.10663,
	str	x1, [sp, 168]	// D.10664, argv.__stack
	b	.L851		//
.L852:
	ldr	x2, [sp, 184]	// D.10666, argv.__vr_top
	sxtw	x0, w1	// D.10667, D.10650
	add	x0, x2, x0	// iftmp.417, D.10666, D.10667
.L851:
	ldr	d0, [x0]	// tmp293, *iftmp.416_104
	str	d0, [sp, 88]	// tmp293, h
// varargs-dll.c:402:   double i = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10668, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.419, argv.__stack
	cmp	w1, 0	// D.10668,
	blt	.L854		//,
	add	x1, x0, 15	// D.10673, iftmp.419,
	and	x1, x1, -8	// D.10674, D.10673,
	str	x1, [sp, 168]	// D.10674, argv.__stack
	b	.L855		//
.L854:
	add	w2, w1, 16	// D.10676, D.10668,
	str	w2, [sp, 196]	// D.10676, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10678, argv.__vr_offs
	cmp	w2, 0	// D.10678,
	ble	.L856		//,
	add	x1, x0, 15	// D.10681, iftmp.419,
	and	x1, x1, -8	// D.10682, D.10681,
	str	x1, [sp, 168]	// D.10682, argv.__stack
	b	.L855		//
.L856:
	ldr	x2, [sp, 184]	// D.10684, argv.__vr_top
	sxtw	x0, w1	// D.10685, D.10668
	add	x0, x2, x0	// iftmp.419, D.10684, D.10685
.L855:
	ldr	d0, [x0]	// tmp294, *iftmp.418_106
	str	d0, [sp, 96]	// tmp294, i
// varargs-dll.c:403:   double j = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10686, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.421, argv.__stack
	cmp	w1, 0	// D.10686,
	blt	.L858		//,
	add	x1, x0, 15	// D.10691, iftmp.421,
	and	x1, x1, -8	// D.10692, D.10691,
	str	x1, [sp, 168]	// D.10692, argv.__stack
	b	.L859		//
.L858:
	add	w2, w1, 16	// D.10694, D.10686,
	str	w2, [sp, 196]	// D.10694, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10696, argv.__vr_offs
	cmp	w2, 0	// D.10696,
	ble	.L860		//,
	add	x1, x0, 15	// D.10699, iftmp.421,
	and	x1, x1, -8	// D.10700, D.10699,
	str	x1, [sp, 168]	// D.10700, argv.__stack
	b	.L859		//
.L860:
	ldr	x2, [sp, 184]	// D.10702, argv.__vr_top
	sxtw	x0, w1	// D.10703, D.10686
	add	x0, x2, x0	// iftmp.421, D.10702, D.10703
.L859:
	ldr	d0, [x0]	// tmp295, *iftmp.420_108
	str	d0, [sp, 104]	// tmp295, j
// varargs-dll.c:404:   double k = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10704, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.423, argv.__stack
	cmp	w1, 0	// D.10704,
	blt	.L862		//,
	add	x1, x0, 15	// D.10709, iftmp.423,
	and	x1, x1, -8	// D.10710, D.10709,
	str	x1, [sp, 168]	// D.10710, argv.__stack
	b	.L863		//
.L862:
	add	w2, w1, 16	// D.10712, D.10704,
	str	w2, [sp, 196]	// D.10712, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10714, argv.__vr_offs
	cmp	w2, 0	// D.10714,
	ble	.L864		//,
	add	x1, x0, 15	// D.10717, iftmp.423,
	and	x1, x1, -8	// D.10718, D.10717,
	str	x1, [sp, 168]	// D.10718, argv.__stack
	b	.L863		//
.L864:
	ldr	x2, [sp, 184]	// D.10720, argv.__vr_top
	sxtw	x0, w1	// D.10721, D.10704
	add	x0, x2, x0	// iftmp.423, D.10720, D.10721
.L863:
	ldr	d0, [x0]	// tmp296, *iftmp.422_110
	str	d0, [sp, 112]	// tmp296, k
// varargs-dll.c:405:   double l = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10722, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.425, argv.__stack
	cmp	w1, 0	// D.10722,
	blt	.L866		//,
	add	x1, x0, 15	// D.10727, iftmp.425,
	and	x1, x1, -8	// D.10728, D.10727,
	str	x1, [sp, 168]	// D.10728, argv.__stack
	b	.L867		//
.L866:
	add	w2, w1, 16	// D.10730, D.10722,
	str	w2, [sp, 196]	// D.10730, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10732, argv.__vr_offs
	cmp	w2, 0	// D.10732,
	ble	.L868		//,
	add	x1, x0, 15	// D.10735, iftmp.425,
	and	x1, x1, -8	// D.10736, D.10735,
	str	x1, [sp, 168]	// D.10736, argv.__stack
	b	.L867		//
.L868:
	ldr	x2, [sp, 184]	// D.10738, argv.__vr_top
	sxtw	x0, w1	// D.10739, D.10722
	add	x0, x2, x0	// iftmp.425, D.10738, D.10739
.L867:
	ldr	d0, [x0]	// tmp297, *iftmp.424_112
	str	d0, [sp, 120]	// tmp297, l
// varargs-dll.c:406:   double m = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10740, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.427, argv.__stack
	cmp	w1, 0	// D.10740,
	blt	.L870		//,
	add	x1, x0, 15	// D.10745, iftmp.427,
	and	x1, x1, -8	// D.10746, D.10745,
	str	x1, [sp, 168]	// D.10746, argv.__stack
	b	.L871		//
.L870:
	add	w2, w1, 16	// D.10748, D.10740,
	str	w2, [sp, 196]	// D.10748, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10750, argv.__vr_offs
	cmp	w2, 0	// D.10750,
	ble	.L872		//,
	add	x1, x0, 15	// D.10753, iftmp.427,
	and	x1, x1, -8	// D.10754, D.10753,
	str	x1, [sp, 168]	// D.10754, argv.__stack
	b	.L871		//
.L872:
	ldr	x2, [sp, 184]	// D.10756, argv.__vr_top
	sxtw	x0, w1	// D.10757, D.10740
	add	x0, x2, x0	// iftmp.427, D.10756, D.10757
.L871:
	ldr	d0, [x0]	// tmp298, *iftmp.426_114
	str	d0, [sp, 128]	// tmp298, m
// varargs-dll.c:407:   double n = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10758, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.429, argv.__stack
	cmp	w1, 0	// D.10758,
	blt	.L874		//,
	add	x1, x0, 15	// D.10763, iftmp.429,
	and	x1, x1, -8	// D.10764, D.10763,
	str	x1, [sp, 168]	// D.10764, argv.__stack
	b	.L875		//
.L874:
	add	w2, w1, 16	// D.10766, D.10758,
	str	w2, [sp, 196]	// D.10766, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10768, argv.__vr_offs
	cmp	w2, 0	// D.10768,
	ble	.L876		//,
	add	x1, x0, 15	// D.10771, iftmp.429,
	and	x1, x1, -8	// D.10772, D.10771,
	str	x1, [sp, 168]	// D.10772, argv.__stack
	b	.L875		//
.L876:
	ldr	x2, [sp, 184]	// D.10774, argv.__vr_top
	sxtw	x0, w1	// D.10775, D.10758
	add	x0, x2, x0	// iftmp.429, D.10774, D.10775
.L875:
	ldr	d0, [x0]	// tmp299, *iftmp.428_116
	str	d0, [sp, 136]	// tmp299, n
// varargs-dll.c:408:   double o = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10776, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.431, argv.__stack
	cmp	w1, 0	// D.10776,
	blt	.L878		//,
	add	x1, x0, 15	// D.10781, iftmp.431,
	and	x1, x1, -8	// D.10782, D.10781,
	str	x1, [sp, 168]	// D.10782, argv.__stack
	b	.L879		//
.L878:
	add	w2, w1, 16	// D.10784, D.10776,
	str	w2, [sp, 196]	// D.10784, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10786, argv.__vr_offs
	cmp	w2, 0	// D.10786,
	ble	.L880		//,
	add	x1, x0, 15	// D.10789, iftmp.431,
	and	x1, x1, -8	// D.10790, D.10789,
	str	x1, [sp, 168]	// D.10790, argv.__stack
	b	.L879		//
.L880:
	ldr	x2, [sp, 184]	// D.10792, argv.__vr_top
	sxtw	x0, w1	// D.10793, D.10776
	add	x0, x2, x0	// iftmp.431, D.10792, D.10793
.L879:
	ldr	d0, [x0]	// tmp300, *iftmp.430_118
	str	d0, [sp, 144]	// tmp300, o
// varargs-dll.c:409:   double p = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10794, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.433, argv.__stack
	cmp	w1, 0	// D.10794,
	blt	.L882		//,
	add	x1, x0, 15	// D.10799, iftmp.433,
	and	x1, x1, -8	// D.10800, D.10799,
	str	x1, [sp, 168]	// D.10800, argv.__stack
	b	.L883		//
.L882:
	add	w2, w1, 16	// D.10802, D.10794,
	str	w2, [sp, 196]	// D.10802, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10804, argv.__vr_offs
	cmp	w2, 0	// D.10804,
	ble	.L884		//,
	add	x1, x0, 15	// D.10807, iftmp.433,
	and	x1, x1, -8	// D.10808, D.10807,
	str	x1, [sp, 168]	// D.10808, argv.__stack
	b	.L883		//
.L884:
	ldr	x2, [sp, 184]	// D.10810, argv.__vr_top
	sxtw	x0, w1	// D.10811, D.10794
	add	x0, x2, x0	// iftmp.433, D.10810, D.10811
.L883:
	ldr	d0, [x0]	// tmp301, *iftmp.432_120
	str	d0, [sp, 152]	// tmp301, p
// varargs-dll.c:410:   double q = va_arg (argv, double);
	ldr	w1, [sp, 196]	// D.10812, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.435, argv.__stack
	cmp	w1, 0	// D.10812,
	blt	.L886		//,
	add	x1, x0, 15	// D.10817, iftmp.435,
	and	x1, x1, -8	// D.10818, D.10817,
	str	x1, [sp, 168]	// D.10818, argv.__stack
	b	.L887		//
.L886:
	add	w2, w1, 16	// D.10820, D.10812,
	str	w2, [sp, 196]	// D.10820, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.10822, argv.__vr_offs
	cmp	w2, 0	// D.10822,
	ble	.L888		//,
	add	x1, x0, 15	// D.10825, iftmp.435,
	and	x1, x1, -8	// D.10826, D.10825,
	str	x1, [sp, 168]	// D.10826, argv.__stack
	b	.L887		//
.L888:
	ldr	x2, [sp, 184]	// D.10828, argv.__vr_top
	sxtw	x0, w1	// D.10829, D.10812
	add	x0, x2, x0	// iftmp.435, D.10828, D.10829
.L887:
	ldr	d0, [x0]	// tmp302, *iftmp.434_122
	str	d0, [sp, 160]	// tmp302, q
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 32]	// tmp303, a
	ldr	d0, [sp, 40]	// tmp304, b
	fadd	d1, d1, d0	// _1, tmp303, tmp304
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 48]	// tmp305, c
	fadd	d1, d1, d0	// _2, _1, tmp305
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp306, d
	fadd	d1, d1, d0	// _3, _2, tmp306
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp307, e
	fadd	d1, d1, d0	// _4, _3, tmp307
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp308, f
	fadd	d1, d1, d0	// _5, _4, tmp308
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp309, g
	fadd	d1, d1, d0	// _6, _5, tmp309
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp310, h
	fadd	d1, d1, d0	// _7, _6, tmp310
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp311, i
	fadd	d1, d1, d0	// _8, _7, tmp311
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp312, j
	fadd	d1, d1, d0	// _9, _8, tmp312
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp313, k
	fadd	d1, d1, d0	// _10, _9, tmp313
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp314, l
	fadd	d1, d1, d0	// _11, _10, tmp314
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp315, m
	fadd	d1, d1, d0	// _12, _11, tmp315
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp316, n
	fadd	d1, d1, d0	// _13, _12, tmp316
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp317, o
	fadd	d1, d1, d0	// _14, _13, tmp317
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp318, p
	fadd	d1, d1, d0	// _15, _14, tmp318
// varargs-dll.c:412:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp319, q
	fadd	d0, d1, d0	// _16, _15, tmp319
	fcvtzs	w0, d0	// _54, _16
	mov	w1, w0	// <retval>, _54
// varargs-dll.c:413: }
	adrp	x0, :got:__stack_chk_guard	// tmp322,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp321, tmp322,
	ldr	x3, [sp, 200]	// tmp324, D.10830
	ldr	x2, [x0]	// tmp325,
	subs	x3, x3, x2	// tmp324, tmp325
	mov	x2, 0	// tmp325
	beq	.L891		//,
	bl	__stack_chk_fail		//
.L891:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE30:
	.size	use_va_args_many_floats, .-use_va_args_many_floats
	.align	2
	.global	use_va_list_many_floats
	.type	use_va_list_many_floats, %function
use_va_list_many_floats:
.LFB31:
	.cfi_startproc
	str	x19, [sp, -176]!	//,
	.cfi_def_cfa_offset 176
	.cfi_offset 19, -176
	str	x0, [sp, 24]	// name, name
	mov	x19, x1	// tmp280,
// varargs-dll.c:419:   double a = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10834, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.437, argv.__stack
	cmp	w1, 0	// D.10834,
	blt	.L893		//,
	add	x1, x0, 15	// D.10839, iftmp.437,
	and	x1, x1, -8	// D.10840, D.10839,
	str	x1, [x19]	// D.10840, argv.__stack
	b	.L894		//
.L893:
	add	w2, w1, 16	// D.10842, D.10834,
	str	w2, [x19, 28]	// D.10842, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10844, argv.__vr_offs
	cmp	w2, 0	// D.10844,
	ble	.L895		//,
	add	x1, x0, 15	// D.10847, iftmp.437,
	and	x1, x1, -8	// D.10848, D.10847,
	str	x1, [x19]	// D.10848, argv.__stack
	b	.L894		//
.L895:
	ldr	x2, [x19, 16]	// D.10850, argv.__vr_top
	sxtw	x0, w1	// D.10851, D.10834
	add	x0, x2, x0	// iftmp.437, D.10850, D.10851
.L894:
	ldr	d0, [x0]	// tmp281, *iftmp.436_87
	str	d0, [sp, 40]	// tmp281, a
// varargs-dll.c:420:   double b = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10852, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.439, argv.__stack
	cmp	w1, 0	// D.10852,
	blt	.L897		//,
	add	x1, x0, 15	// D.10857, iftmp.439,
	and	x1, x1, -8	// D.10858, D.10857,
	str	x1, [x19]	// D.10858, argv.__stack
	b	.L898		//
.L897:
	add	w2, w1, 16	// D.10860, D.10852,
	str	w2, [x19, 28]	// D.10860, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10862, argv.__vr_offs
	cmp	w2, 0	// D.10862,
	ble	.L899		//,
	add	x1, x0, 15	// D.10865, iftmp.439,
	and	x1, x1, -8	// D.10866, D.10865,
	str	x1, [x19]	// D.10866, argv.__stack
	b	.L898		//
.L899:
	ldr	x2, [x19, 16]	// D.10868, argv.__vr_top
	sxtw	x0, w1	// D.10869, D.10852
	add	x0, x2, x0	// iftmp.439, D.10868, D.10869
.L898:
	ldr	d0, [x0]	// tmp282, *iftmp.438_89
	str	d0, [sp, 48]	// tmp282, b
// varargs-dll.c:421:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10870, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.441, argv.__stack
	cmp	w1, 0	// D.10870,
	blt	.L901		//,
	add	x1, x0, 15	// D.10875, iftmp.441,
	and	x1, x1, -8	// D.10876, D.10875,
	str	x1, [x19]	// D.10876, argv.__stack
	b	.L902		//
.L901:
	add	w2, w1, 16	// D.10878, D.10870,
	str	w2, [x19, 28]	// D.10878, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10880, argv.__vr_offs
	cmp	w2, 0	// D.10880,
	ble	.L903		//,
	add	x1, x0, 15	// D.10883, iftmp.441,
	and	x1, x1, -8	// D.10884, D.10883,
	str	x1, [x19]	// D.10884, argv.__stack
	b	.L902		//
.L903:
	ldr	x2, [x19, 16]	// D.10886, argv.__vr_top
	sxtw	x0, w1	// D.10887, D.10870
	add	x0, x2, x0	// iftmp.441, D.10886, D.10887
.L902:
	ldr	d0, [x0]	// tmp283, *iftmp.440_91
	str	d0, [sp, 56]	// tmp283, c
// varargs-dll.c:422:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10888, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.443, argv.__stack
	cmp	w1, 0	// D.10888,
	blt	.L905		//,
	add	x1, x0, 15	// D.10893, iftmp.443,
	and	x1, x1, -8	// D.10894, D.10893,
	str	x1, [x19]	// D.10894, argv.__stack
	b	.L906		//
.L905:
	add	w2, w1, 16	// D.10896, D.10888,
	str	w2, [x19, 28]	// D.10896, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10898, argv.__vr_offs
	cmp	w2, 0	// D.10898,
	ble	.L907		//,
	add	x1, x0, 15	// D.10901, iftmp.443,
	and	x1, x1, -8	// D.10902, D.10901,
	str	x1, [x19]	// D.10902, argv.__stack
	b	.L906		//
.L907:
	ldr	x2, [x19, 16]	// D.10904, argv.__vr_top
	sxtw	x0, w1	// D.10905, D.10888
	add	x0, x2, x0	// iftmp.443, D.10904, D.10905
.L906:
	ldr	d0, [x0]	// tmp284, *iftmp.442_93
	str	d0, [sp, 64]	// tmp284, d
// varargs-dll.c:423:   double e = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10906, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.445, argv.__stack
	cmp	w1, 0	// D.10906,
	blt	.L909		//,
	add	x1, x0, 15	// D.10911, iftmp.445,
	and	x1, x1, -8	// D.10912, D.10911,
	str	x1, [x19]	// D.10912, argv.__stack
	b	.L910		//
.L909:
	add	w2, w1, 16	// D.10914, D.10906,
	str	w2, [x19, 28]	// D.10914, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10916, argv.__vr_offs
	cmp	w2, 0	// D.10916,
	ble	.L911		//,
	add	x1, x0, 15	// D.10919, iftmp.445,
	and	x1, x1, -8	// D.10920, D.10919,
	str	x1, [x19]	// D.10920, argv.__stack
	b	.L910		//
.L911:
	ldr	x2, [x19, 16]	// D.10922, argv.__vr_top
	sxtw	x0, w1	// D.10923, D.10906
	add	x0, x2, x0	// iftmp.445, D.10922, D.10923
.L910:
	ldr	d0, [x0]	// tmp285, *iftmp.444_95
	str	d0, [sp, 72]	// tmp285, e
// varargs-dll.c:424:   double f = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10924, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.447, argv.__stack
	cmp	w1, 0	// D.10924,
	blt	.L913		//,
	add	x1, x0, 15	// D.10929, iftmp.447,
	and	x1, x1, -8	// D.10930, D.10929,
	str	x1, [x19]	// D.10930, argv.__stack
	b	.L914		//
.L913:
	add	w2, w1, 16	// D.10932, D.10924,
	str	w2, [x19, 28]	// D.10932, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10934, argv.__vr_offs
	cmp	w2, 0	// D.10934,
	ble	.L915		//,
	add	x1, x0, 15	// D.10937, iftmp.447,
	and	x1, x1, -8	// D.10938, D.10937,
	str	x1, [x19]	// D.10938, argv.__stack
	b	.L914		//
.L915:
	ldr	x2, [x19, 16]	// D.10940, argv.__vr_top
	sxtw	x0, w1	// D.10941, D.10924
	add	x0, x2, x0	// iftmp.447, D.10940, D.10941
.L914:
	ldr	d0, [x0]	// tmp286, *iftmp.446_97
	str	d0, [sp, 80]	// tmp286, f
// varargs-dll.c:425:   double g = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10942, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.449, argv.__stack
	cmp	w1, 0	// D.10942,
	blt	.L917		//,
	add	x1, x0, 15	// D.10947, iftmp.449,
	and	x1, x1, -8	// D.10948, D.10947,
	str	x1, [x19]	// D.10948, argv.__stack
	b	.L918		//
.L917:
	add	w2, w1, 16	// D.10950, D.10942,
	str	w2, [x19, 28]	// D.10950, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10952, argv.__vr_offs
	cmp	w2, 0	// D.10952,
	ble	.L919		//,
	add	x1, x0, 15	// D.10955, iftmp.449,
	and	x1, x1, -8	// D.10956, D.10955,
	str	x1, [x19]	// D.10956, argv.__stack
	b	.L918		//
.L919:
	ldr	x2, [x19, 16]	// D.10958, argv.__vr_top
	sxtw	x0, w1	// D.10959, D.10942
	add	x0, x2, x0	// iftmp.449, D.10958, D.10959
.L918:
	ldr	d0, [x0]	// tmp287, *iftmp.448_99
	str	d0, [sp, 88]	// tmp287, g
// varargs-dll.c:426:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10960, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.451, argv.__stack
	cmp	w1, 0	// D.10960,
	blt	.L921		//,
	add	x1, x0, 15	// D.10965, iftmp.451,
	and	x1, x1, -8	// D.10966, D.10965,
	str	x1, [x19]	// D.10966, argv.__stack
	b	.L922		//
.L921:
	add	w2, w1, 16	// D.10968, D.10960,
	str	w2, [x19, 28]	// D.10968, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10970, argv.__vr_offs
	cmp	w2, 0	// D.10970,
	ble	.L923		//,
	add	x1, x0, 15	// D.10973, iftmp.451,
	and	x1, x1, -8	// D.10974, D.10973,
	str	x1, [x19]	// D.10974, argv.__stack
	b	.L922		//
.L923:
	ldr	x2, [x19, 16]	// D.10976, argv.__vr_top
	sxtw	x0, w1	// D.10977, D.10960
	add	x0, x2, x0	// iftmp.451, D.10976, D.10977
.L922:
	ldr	d0, [x0]	// tmp288, *iftmp.450_101
	str	d0, [sp, 96]	// tmp288, h
// varargs-dll.c:427:   double i = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10978, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.453, argv.__stack
	cmp	w1, 0	// D.10978,
	blt	.L925		//,
	add	x1, x0, 15	// D.10983, iftmp.453,
	and	x1, x1, -8	// D.10984, D.10983,
	str	x1, [x19]	// D.10984, argv.__stack
	b	.L926		//
.L925:
	add	w2, w1, 16	// D.10986, D.10978,
	str	w2, [x19, 28]	// D.10986, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.10988, argv.__vr_offs
	cmp	w2, 0	// D.10988,
	ble	.L927		//,
	add	x1, x0, 15	// D.10991, iftmp.453,
	and	x1, x1, -8	// D.10992, D.10991,
	str	x1, [x19]	// D.10992, argv.__stack
	b	.L926		//
.L927:
	ldr	x2, [x19, 16]	// D.10994, argv.__vr_top
	sxtw	x0, w1	// D.10995, D.10978
	add	x0, x2, x0	// iftmp.453, D.10994, D.10995
.L926:
	ldr	d0, [x0]	// tmp289, *iftmp.452_103
	str	d0, [sp, 104]	// tmp289, i
// varargs-dll.c:428:   double j = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.10996, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.455, argv.__stack
	cmp	w1, 0	// D.10996,
	blt	.L929		//,
	add	x1, x0, 15	// D.11001, iftmp.455,
	and	x1, x1, -8	// D.11002, D.11001,
	str	x1, [x19]	// D.11002, argv.__stack
	b	.L930		//
.L929:
	add	w2, w1, 16	// D.11004, D.10996,
	str	w2, [x19, 28]	// D.11004, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11006, argv.__vr_offs
	cmp	w2, 0	// D.11006,
	ble	.L931		//,
	add	x1, x0, 15	// D.11009, iftmp.455,
	and	x1, x1, -8	// D.11010, D.11009,
	str	x1, [x19]	// D.11010, argv.__stack
	b	.L930		//
.L931:
	ldr	x2, [x19, 16]	// D.11012, argv.__vr_top
	sxtw	x0, w1	// D.11013, D.10996
	add	x0, x2, x0	// iftmp.455, D.11012, D.11013
.L930:
	ldr	d0, [x0]	// tmp290, *iftmp.454_105
	str	d0, [sp, 112]	// tmp290, j
// varargs-dll.c:429:   double k = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11014, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.457, argv.__stack
	cmp	w1, 0	// D.11014,
	blt	.L933		//,
	add	x1, x0, 15	// D.11019, iftmp.457,
	and	x1, x1, -8	// D.11020, D.11019,
	str	x1, [x19]	// D.11020, argv.__stack
	b	.L934		//
.L933:
	add	w2, w1, 16	// D.11022, D.11014,
	str	w2, [x19, 28]	// D.11022, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11024, argv.__vr_offs
	cmp	w2, 0	// D.11024,
	ble	.L935		//,
	add	x1, x0, 15	// D.11027, iftmp.457,
	and	x1, x1, -8	// D.11028, D.11027,
	str	x1, [x19]	// D.11028, argv.__stack
	b	.L934		//
.L935:
	ldr	x2, [x19, 16]	// D.11030, argv.__vr_top
	sxtw	x0, w1	// D.11031, D.11014
	add	x0, x2, x0	// iftmp.457, D.11030, D.11031
.L934:
	ldr	d0, [x0]	// tmp291, *iftmp.456_107
	str	d0, [sp, 120]	// tmp291, k
// varargs-dll.c:430:   double l = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11032, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.459, argv.__stack
	cmp	w1, 0	// D.11032,
	blt	.L937		//,
	add	x1, x0, 15	// D.11037, iftmp.459,
	and	x1, x1, -8	// D.11038, D.11037,
	str	x1, [x19]	// D.11038, argv.__stack
	b	.L938		//
.L937:
	add	w2, w1, 16	// D.11040, D.11032,
	str	w2, [x19, 28]	// D.11040, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11042, argv.__vr_offs
	cmp	w2, 0	// D.11042,
	ble	.L939		//,
	add	x1, x0, 15	// D.11045, iftmp.459,
	and	x1, x1, -8	// D.11046, D.11045,
	str	x1, [x19]	// D.11046, argv.__stack
	b	.L938		//
.L939:
	ldr	x2, [x19, 16]	// D.11048, argv.__vr_top
	sxtw	x0, w1	// D.11049, D.11032
	add	x0, x2, x0	// iftmp.459, D.11048, D.11049
.L938:
	ldr	d0, [x0]	// tmp292, *iftmp.458_109
	str	d0, [sp, 128]	// tmp292, l
// varargs-dll.c:431:   double m = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11050, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.461, argv.__stack
	cmp	w1, 0	// D.11050,
	blt	.L941		//,
	add	x1, x0, 15	// D.11055, iftmp.461,
	and	x1, x1, -8	// D.11056, D.11055,
	str	x1, [x19]	// D.11056, argv.__stack
	b	.L942		//
.L941:
	add	w2, w1, 16	// D.11058, D.11050,
	str	w2, [x19, 28]	// D.11058, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11060, argv.__vr_offs
	cmp	w2, 0	// D.11060,
	ble	.L943		//,
	add	x1, x0, 15	// D.11063, iftmp.461,
	and	x1, x1, -8	// D.11064, D.11063,
	str	x1, [x19]	// D.11064, argv.__stack
	b	.L942		//
.L943:
	ldr	x2, [x19, 16]	// D.11066, argv.__vr_top
	sxtw	x0, w1	// D.11067, D.11050
	add	x0, x2, x0	// iftmp.461, D.11066, D.11067
.L942:
	ldr	d0, [x0]	// tmp293, *iftmp.460_111
	str	d0, [sp, 136]	// tmp293, m
// varargs-dll.c:432:   double n = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11068, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.463, argv.__stack
	cmp	w1, 0	// D.11068,
	blt	.L945		//,
	add	x1, x0, 15	// D.11073, iftmp.463,
	and	x1, x1, -8	// D.11074, D.11073,
	str	x1, [x19]	// D.11074, argv.__stack
	b	.L946		//
.L945:
	add	w2, w1, 16	// D.11076, D.11068,
	str	w2, [x19, 28]	// D.11076, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11078, argv.__vr_offs
	cmp	w2, 0	// D.11078,
	ble	.L947		//,
	add	x1, x0, 15	// D.11081, iftmp.463,
	and	x1, x1, -8	// D.11082, D.11081,
	str	x1, [x19]	// D.11082, argv.__stack
	b	.L946		//
.L947:
	ldr	x2, [x19, 16]	// D.11084, argv.__vr_top
	sxtw	x0, w1	// D.11085, D.11068
	add	x0, x2, x0	// iftmp.463, D.11084, D.11085
.L946:
	ldr	d0, [x0]	// tmp294, *iftmp.462_113
	str	d0, [sp, 144]	// tmp294, n
// varargs-dll.c:433:   double o = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11086, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.465, argv.__stack
	cmp	w1, 0	// D.11086,
	blt	.L949		//,
	add	x1, x0, 15	// D.11091, iftmp.465,
	and	x1, x1, -8	// D.11092, D.11091,
	str	x1, [x19]	// D.11092, argv.__stack
	b	.L950		//
.L949:
	add	w2, w1, 16	// D.11094, D.11086,
	str	w2, [x19, 28]	// D.11094, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11096, argv.__vr_offs
	cmp	w2, 0	// D.11096,
	ble	.L951		//,
	add	x1, x0, 15	// D.11099, iftmp.465,
	and	x1, x1, -8	// D.11100, D.11099,
	str	x1, [x19]	// D.11100, argv.__stack
	b	.L950		//
.L951:
	ldr	x2, [x19, 16]	// D.11102, argv.__vr_top
	sxtw	x0, w1	// D.11103, D.11086
	add	x0, x2, x0	// iftmp.465, D.11102, D.11103
.L950:
	ldr	d0, [x0]	// tmp295, *iftmp.464_115
	str	d0, [sp, 152]	// tmp295, o
// varargs-dll.c:434:   double p = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11104, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.467, argv.__stack
	cmp	w1, 0	// D.11104,
	blt	.L953		//,
	add	x1, x0, 15	// D.11109, iftmp.467,
	and	x1, x1, -8	// D.11110, D.11109,
	str	x1, [x19]	// D.11110, argv.__stack
	b	.L954		//
.L953:
	add	w2, w1, 16	// D.11112, D.11104,
	str	w2, [x19, 28]	// D.11112, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11114, argv.__vr_offs
	cmp	w2, 0	// D.11114,
	ble	.L955		//,
	add	x1, x0, 15	// D.11117, iftmp.467,
	and	x1, x1, -8	// D.11118, D.11117,
	str	x1, [x19]	// D.11118, argv.__stack
	b	.L954		//
.L955:
	ldr	x2, [x19, 16]	// D.11120, argv.__vr_top
	sxtw	x0, w1	// D.11121, D.11104
	add	x0, x2, x0	// iftmp.467, D.11120, D.11121
.L954:
	ldr	d0, [x0]	// tmp296, *iftmp.466_117
	str	d0, [sp, 160]	// tmp296, p
// varargs-dll.c:435:   double q = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.11122, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.469, argv.__stack
	cmp	w1, 0	// D.11122,
	blt	.L957		//,
	add	x1, x0, 15	// D.11127, iftmp.469,
	and	x1, x1, -8	// D.11128, D.11127,
	str	x1, [x19]	// D.11128, argv.__stack
	b	.L958		//
.L957:
	add	w2, w1, 16	// D.11130, D.11122,
	str	w2, [x19, 28]	// D.11130, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.11132, argv.__vr_offs
	cmp	w2, 0	// D.11132,
	ble	.L959		//,
	add	x1, x0, 15	// D.11135, iftmp.469,
	and	x1, x1, -8	// D.11136, D.11135,
	str	x1, [x19]	// D.11136, argv.__stack
	b	.L958		//
.L959:
	ldr	x2, [x19, 16]	// D.11138, argv.__vr_top
	sxtw	x0, w1	// D.11139, D.11122
	add	x0, x2, x0	// iftmp.469, D.11138, D.11139
.L958:
	ldr	d0, [x0]	// tmp297, *iftmp.468_119
	str	d0, [sp, 168]	// tmp297, q
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 40]	// tmp298, a
	ldr	d0, [sp, 48]	// tmp299, b
	fadd	d1, d1, d0	// _1, tmp298, tmp299
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp300, c
	fadd	d1, d1, d0	// _2, _1, tmp300
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp301, d
	fadd	d1, d1, d0	// _3, _2, tmp301
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp302, e
	fadd	d1, d1, d0	// _4, _3, tmp302
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp303, f
	fadd	d1, d1, d0	// _5, _4, tmp303
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp304, g
	fadd	d1, d1, d0	// _6, _5, tmp304
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp305, h
	fadd	d1, d1, d0	// _7, _6, tmp305
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp306, i
	fadd	d1, d1, d0	// _8, _7, tmp306
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp307, j
	fadd	d1, d1, d0	// _9, _8, tmp307
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp308, k
	fadd	d1, d1, d0	// _10, _9, tmp308
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp309, l
	fadd	d1, d1, d0	// _11, _10, tmp309
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp310, m
	fadd	d1, d1, d0	// _12, _11, tmp310
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp311, n
	fadd	d1, d1, d0	// _13, _12, tmp311
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp312, o
	fadd	d1, d1, d0	// _14, _13, tmp312
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp313, p
	fadd	d1, d1, d0	// _15, _14, tmp313
// varargs-dll.c:436:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 168]	// tmp314, q
	fadd	d0, d1, d0	// _16, _15, tmp314
	fcvtzs	w0, d0	// _52, _16
// varargs-dll.c:437: }
	ldr	x19, [sp], 176	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE31:
	.size	use_va_list_many_floats, .-use_va_list_many_floats
	.align	2
	.global	use_va_args_few_strings
	.type	use_va_args_few_strings, %function
use_va_args_few_strings:
.LFB32:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:441: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp127,
	str	x1, [sp, 72]	// tmp127, D.11176
	mov	x1, 0	// tmp127
// varargs-dll.c:443:   va_start (argv, format);
	add	x0, sp, 272	// tmp132,,
	str	x0, [sp, 40]	// tmp132, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp133,,
	str	x0, [sp, 48]	// tmp133, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:444:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 64]	// D.11140, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.471, argv.__stack
	cmp	w1, 0	// D.11140,
	blt	.L963		//,
	add	x1, x0, 15	// D.11145, iftmp.471,
	and	x1, x1, -8	// D.11146, D.11145,
	str	x1, [sp, 40]	// D.11146, argv.__stack
	b	.L964		//
.L963:
	add	w2, w1, 8	// D.11148, D.11140,
	str	w2, [sp, 64]	// D.11148, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.11150, argv.__gr_offs
	cmp	w2, 0	// D.11150,
	ble	.L965		//,
	add	x1, x0, 15	// D.11153, iftmp.471,
	and	x1, x1, -8	// D.11154, D.11153,
	str	x1, [sp, 40]	// D.11154, argv.__stack
	b	.L964		//
.L965:
	ldr	x2, [sp, 48]	// D.11156, argv.__gr_top
	sxtw	x0, w1	// D.11157, D.11140
	add	x0, x2, x0	// iftmp.471, D.11156, D.11157
.L964:
	ldr	x0, [x0]	// _1, *iftmp.470_16
	bl	atoi		//
	str	w0, [sp, 32]	//, a
// varargs-dll.c:445:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 64]	// D.11158, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.473, argv.__stack
	cmp	w1, 0	// D.11158,
	blt	.L967		//,
	add	x1, x0, 15	// D.11163, iftmp.473,
	and	x1, x1, -8	// D.11164, D.11163,
	str	x1, [sp, 40]	// D.11164, argv.__stack
	b	.L968		//
.L967:
	add	w2, w1, 8	// D.11166, D.11158,
	str	w2, [sp, 64]	// D.11166, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.11168, argv.__gr_offs
	cmp	w2, 0	// D.11168,
	ble	.L969		//,
	add	x1, x0, 15	// D.11171, iftmp.473,
	and	x1, x1, -8	// D.11172, D.11171,
	str	x1, [sp, 40]	// D.11172, argv.__stack
	b	.L968		//
.L969:
	ldr	x2, [sp, 48]	// D.11174, argv.__gr_top
	sxtw	x0, w1	// D.11175, D.11158
	add	x0, x2, x0	// iftmp.473, D.11174, D.11175
.L968:
	ldr	x0, [x0]	// _2, *iftmp.472_18
	bl	atoi		//
	str	w0, [sp, 36]	//, b
// varargs-dll.c:447:   return a + b;
	ldr	w1, [sp, 32]	// tmp122, a
	ldr	w0, [sp, 36]	// tmp123, b
	add	w0, w1, w0	// _10, tmp122, tmp123
	mov	w1, w0	// <retval>, _10
// varargs-dll.c:448: }
	adrp	x0, :got:__stack_chk_guard	// tmp126,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp125, tmp126,
	ldr	x3, [sp, 72]	// tmp128, D.11176
	ldr	x2, [x0]	// tmp129,
	subs	x3, x3, x2	// tmp128, tmp129
	mov	x2, 0	// tmp129
	beq	.L972		//,
	bl	__stack_chk_fail		//
.L972:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE32:
	.size	use_va_args_few_strings, .-use_va_args_few_strings
	.align	2
	.global	use_va_list_few_strings
	.type	use_va_list_few_strings, %function
use_va_list_few_strings:
.LFB33:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!	//,,,
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -48
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:453:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11180, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.475, argv.__stack
	cmp	w1, 0	// D.11180,
	blt	.L974		//,
	add	x1, x0, 15	// D.11185, iftmp.475,
	and	x1, x1, -8	// D.11186, D.11185,
	str	x1, [x19]	// D.11186, argv.__stack
	b	.L975		//
.L974:
	add	w2, w1, 8	// D.11188, D.11180,
	str	w2, [x19, 24]	// D.11188, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11190, argv.__gr_offs
	cmp	w2, 0	// D.11190,
	ble	.L976		//,
	add	x1, x0, 15	// D.11193, iftmp.475,
	and	x1, x1, -8	// D.11194, D.11193,
	str	x1, [x19]	// D.11194, argv.__stack
	b	.L975		//
.L976:
	ldr	x2, [x19, 8]	// D.11196, argv.__gr_top
	sxtw	x0, w1	// D.11197, D.11180
	add	x0, x2, x0	// iftmp.475, D.11196, D.11197
.L975:
	ldr	x0, [x0]	// _1, *iftmp.474_13
	bl	atoi		//
	str	w0, [sp, 56]	//, a
// varargs-dll.c:454:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11198, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.477, argv.__stack
	cmp	w1, 0	// D.11198,
	blt	.L978		//,
	add	x1, x0, 15	// D.11203, iftmp.477,
	and	x1, x1, -8	// D.11204, D.11203,
	str	x1, [x19]	// D.11204, argv.__stack
	b	.L979		//
.L978:
	add	w2, w1, 8	// D.11206, D.11198,
	str	w2, [x19, 24]	// D.11206, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11208, argv.__gr_offs
	cmp	w2, 0	// D.11208,
	ble	.L980		//,
	add	x1, x0, 15	// D.11211, iftmp.477,
	and	x1, x1, -8	// D.11212, D.11211,
	str	x1, [x19]	// D.11212, argv.__stack
	b	.L979		//
.L980:
	ldr	x2, [x19, 8]	// D.11214, argv.__gr_top
	sxtw	x0, w1	// D.11215, D.11198
	add	x0, x2, x0	// iftmp.477, D.11214, D.11215
.L979:
	ldr	x0, [x0]	// _2, *iftmp.476_15
	bl	atoi		//
	str	w0, [sp, 60]	//, b
// varargs-dll.c:455:   return a + b;
	ldr	w1, [sp, 56]	// tmp117, a
	ldr	w0, [sp, 60]	// tmp118, b
	add	w0, w1, w0	// _8, tmp117, tmp118
// varargs-dll.c:456: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE33:
	.size	use_va_list_few_strings, .-use_va_list_few_strings
	.align	2
	.global	use_va_args_several_strings
	.type	use_va_args_several_strings, %function
use_va_args_several_strings:
.LFB34:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:460: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp218,
	str	x1, [sp, 104]	// tmp218, D.11378
	mov	x1, 0	// tmp218
// varargs-dll.c:462:   va_start (argv, format);
	add	x0, sp, 304	// tmp223,,
	str	x0, [sp, 72]	// tmp223, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp224,,
	str	x0, [sp, 80]	// tmp224, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:463:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11216, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.479, argv.__stack
	cmp	w1, 0	// D.11216,
	blt	.L984		//,
	add	x1, x0, 15	// D.11221, iftmp.479,
	and	x1, x1, -8	// D.11222, D.11221,
	str	x1, [sp, 72]	// D.11222, argv.__stack
	b	.L985		//
.L984:
	add	w2, w1, 8	// D.11224, D.11216,
	str	w2, [sp, 96]	// D.11224, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11226, argv.__gr_offs
	cmp	w2, 0	// D.11226,
	ble	.L986		//,
	add	x1, x0, 15	// D.11229, iftmp.479,
	and	x1, x1, -8	// D.11230, D.11229,
	str	x1, [sp, 72]	// D.11230, argv.__stack
	b	.L985		//
.L986:
	ldr	x2, [sp, 80]	// D.11232, argv.__gr_top
	sxtw	x0, w1	// D.11233, D.11216
	add	x0, x2, x0	// iftmp.479, D.11232, D.11233
.L985:
	ldr	x0, [x0]	// _1, *iftmp.478_58
	bl	atoi		//
	str	w0, [sp, 36]	//, a
// varargs-dll.c:464:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11234, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.481, argv.__stack
	cmp	w1, 0	// D.11234,
	blt	.L988		//,
	add	x1, x0, 15	// D.11239, iftmp.481,
	and	x1, x1, -8	// D.11240, D.11239,
	str	x1, [sp, 72]	// D.11240, argv.__stack
	b	.L989		//
.L988:
	add	w2, w1, 8	// D.11242, D.11234,
	str	w2, [sp, 96]	// D.11242, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11244, argv.__gr_offs
	cmp	w2, 0	// D.11244,
	ble	.L990		//,
	add	x1, x0, 15	// D.11247, iftmp.481,
	and	x1, x1, -8	// D.11248, D.11247,
	str	x1, [sp, 72]	// D.11248, argv.__stack
	b	.L989		//
.L990:
	ldr	x2, [sp, 80]	// D.11250, argv.__gr_top
	sxtw	x0, w1	// D.11251, D.11234
	add	x0, x2, x0	// iftmp.481, D.11250, D.11251
.L989:
	ldr	x0, [x0]	// _2, *iftmp.480_60
	bl	atoi		//
	str	w0, [sp, 40]	//, b
// varargs-dll.c:465:   int c = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11252, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.483, argv.__stack
	cmp	w1, 0	// D.11252,
	blt	.L992		//,
	add	x1, x0, 15	// D.11257, iftmp.483,
	and	x1, x1, -8	// D.11258, D.11257,
	str	x1, [sp, 72]	// D.11258, argv.__stack
	b	.L993		//
.L992:
	add	w2, w1, 8	// D.11260, D.11252,
	str	w2, [sp, 96]	// D.11260, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11262, argv.__gr_offs
	cmp	w2, 0	// D.11262,
	ble	.L994		//,
	add	x1, x0, 15	// D.11265, iftmp.483,
	and	x1, x1, -8	// D.11266, D.11265,
	str	x1, [sp, 72]	// D.11266, argv.__stack
	b	.L993		//
.L994:
	ldr	x2, [sp, 80]	// D.11268, argv.__gr_top
	sxtw	x0, w1	// D.11269, D.11252
	add	x0, x2, x0	// iftmp.483, D.11268, D.11269
.L993:
	ldr	x0, [x0]	// _3, *iftmp.482_62
	bl	atoi		//
	str	w0, [sp, 44]	//, c
// varargs-dll.c:466:   int d = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11270, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.485, argv.__stack
	cmp	w1, 0	// D.11270,
	blt	.L996		//,
	add	x1, x0, 15	// D.11275, iftmp.485,
	and	x1, x1, -8	// D.11276, D.11275,
	str	x1, [sp, 72]	// D.11276, argv.__stack
	b	.L997		//
.L996:
	add	w2, w1, 8	// D.11278, D.11270,
	str	w2, [sp, 96]	// D.11278, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11280, argv.__gr_offs
	cmp	w2, 0	// D.11280,
	ble	.L998		//,
	add	x1, x0, 15	// D.11283, iftmp.485,
	and	x1, x1, -8	// D.11284, D.11283,
	str	x1, [sp, 72]	// D.11284, argv.__stack
	b	.L997		//
.L998:
	ldr	x2, [sp, 80]	// D.11286, argv.__gr_top
	sxtw	x0, w1	// D.11287, D.11270
	add	x0, x2, x0	// iftmp.485, D.11286, D.11287
.L997:
	ldr	x0, [x0]	// _4, *iftmp.484_64
	bl	atoi		//
	str	w0, [sp, 48]	//, d
// varargs-dll.c:467:   int e = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11288, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.487, argv.__stack
	cmp	w1, 0	// D.11288,
	blt	.L1000		//,
	add	x1, x0, 15	// D.11293, iftmp.487,
	and	x1, x1, -8	// D.11294, D.11293,
	str	x1, [sp, 72]	// D.11294, argv.__stack
	b	.L1001		//
.L1000:
	add	w2, w1, 8	// D.11296, D.11288,
	str	w2, [sp, 96]	// D.11296, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11298, argv.__gr_offs
	cmp	w2, 0	// D.11298,
	ble	.L1002		//,
	add	x1, x0, 15	// D.11301, iftmp.487,
	and	x1, x1, -8	// D.11302, D.11301,
	str	x1, [sp, 72]	// D.11302, argv.__stack
	b	.L1001		//
.L1002:
	ldr	x2, [sp, 80]	// D.11304, argv.__gr_top
	sxtw	x0, w1	// D.11305, D.11288
	add	x0, x2, x0	// iftmp.487, D.11304, D.11305
.L1001:
	ldr	x0, [x0]	// _5, *iftmp.486_66
	bl	atoi		//
	str	w0, [sp, 52]	//, e
// varargs-dll.c:468:   int f = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11306, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.489, argv.__stack
	cmp	w1, 0	// D.11306,
	blt	.L1004		//,
	add	x1, x0, 15	// D.11311, iftmp.489,
	and	x1, x1, -8	// D.11312, D.11311,
	str	x1, [sp, 72]	// D.11312, argv.__stack
	b	.L1005		//
.L1004:
	add	w2, w1, 8	// D.11314, D.11306,
	str	w2, [sp, 96]	// D.11314, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11316, argv.__gr_offs
	cmp	w2, 0	// D.11316,
	ble	.L1006		//,
	add	x1, x0, 15	// D.11319, iftmp.489,
	and	x1, x1, -8	// D.11320, D.11319,
	str	x1, [sp, 72]	// D.11320, argv.__stack
	b	.L1005		//
.L1006:
	ldr	x2, [sp, 80]	// D.11322, argv.__gr_top
	sxtw	x0, w1	// D.11323, D.11306
	add	x0, x2, x0	// iftmp.489, D.11322, D.11323
.L1005:
	ldr	x0, [x0]	// _6, *iftmp.488_68
	bl	atoi		//
	str	w0, [sp, 56]	//, f
// varargs-dll.c:469:   int g = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11324, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.491, argv.__stack
	cmp	w1, 0	// D.11324,
	blt	.L1008		//,
	add	x1, x0, 15	// D.11329, iftmp.491,
	and	x1, x1, -8	// D.11330, D.11329,
	str	x1, [sp, 72]	// D.11330, argv.__stack
	b	.L1009		//
.L1008:
	add	w2, w1, 8	// D.11332, D.11324,
	str	w2, [sp, 96]	// D.11332, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11334, argv.__gr_offs
	cmp	w2, 0	// D.11334,
	ble	.L1010		//,
	add	x1, x0, 15	// D.11337, iftmp.491,
	and	x1, x1, -8	// D.11338, D.11337,
	str	x1, [sp, 72]	// D.11338, argv.__stack
	b	.L1009		//
.L1010:
	ldr	x2, [sp, 80]	// D.11340, argv.__gr_top
	sxtw	x0, w1	// D.11341, D.11324
	add	x0, x2, x0	// iftmp.491, D.11340, D.11341
.L1009:
	ldr	x0, [x0]	// _7, *iftmp.490_70
	bl	atoi		//
	str	w0, [sp, 60]	//, g
// varargs-dll.c:470:   int h = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11342, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.493, argv.__stack
	cmp	w1, 0	// D.11342,
	blt	.L1012		//,
	add	x1, x0, 15	// D.11347, iftmp.493,
	and	x1, x1, -8	// D.11348, D.11347,
	str	x1, [sp, 72]	// D.11348, argv.__stack
	b	.L1013		//
.L1012:
	add	w2, w1, 8	// D.11350, D.11342,
	str	w2, [sp, 96]	// D.11350, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11352, argv.__gr_offs
	cmp	w2, 0	// D.11352,
	ble	.L1014		//,
	add	x1, x0, 15	// D.11355, iftmp.493,
	and	x1, x1, -8	// D.11356, D.11355,
	str	x1, [sp, 72]	// D.11356, argv.__stack
	b	.L1013		//
.L1014:
	ldr	x2, [sp, 80]	// D.11358, argv.__gr_top
	sxtw	x0, w1	// D.11359, D.11342
	add	x0, x2, x0	// iftmp.493, D.11358, D.11359
.L1013:
	ldr	x0, [x0]	// _8, *iftmp.492_72
	bl	atoi		//
	str	w0, [sp, 64]	//, h
// varargs-dll.c:471:   int i = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 96]	// D.11360, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.495, argv.__stack
	cmp	w1, 0	// D.11360,
	blt	.L1016		//,
	add	x1, x0, 15	// D.11365, iftmp.495,
	and	x1, x1, -8	// D.11366, D.11365,
	str	x1, [sp, 72]	// D.11366, argv.__stack
	b	.L1017		//
.L1016:
	add	w2, w1, 8	// D.11368, D.11360,
	str	w2, [sp, 96]	// D.11368, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.11370, argv.__gr_offs
	cmp	w2, 0	// D.11370,
	ble	.L1018		//,
	add	x1, x0, 15	// D.11373, iftmp.495,
	and	x1, x1, -8	// D.11374, D.11373,
	str	x1, [sp, 72]	// D.11374, argv.__stack
	b	.L1017		//
.L1018:
	ldr	x2, [sp, 80]	// D.11376, argv.__gr_top
	sxtw	x0, w1	// D.11377, D.11360
	add	x0, x2, x0	// iftmp.495, D.11376, D.11377
.L1017:
	ldr	x0, [x0]	// _9, *iftmp.494_74
	bl	atoi		//
	str	w0, [sp, 68]	//, i
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp206, a
	ldr	w0, [sp, 40]	// tmp207, b
	add	w1, w1, w0	// _10, tmp206, tmp207
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp208, c
	add	w1, w1, w0	// _11, _10, tmp208
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp209, d
	add	w1, w1, w0	// _12, _11, tmp209
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp210, e
	add	w1, w1, w0	// _13, _12, tmp210
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp211, f
	add	w1, w1, w0	// _14, _13, tmp211
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp212, g
	add	w1, w1, w0	// _15, _14, tmp212
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp213, h
	add	w1, w1, w0	// _16, _15, tmp213
// varargs-dll.c:473:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp214, i
	add	w0, w1, w0	// _38, _16, tmp214
	mov	w1, w0	// <retval>, _38
// varargs-dll.c:474: }
	adrp	x0, :got:__stack_chk_guard	// tmp217,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp216, tmp217,
	ldr	x3, [sp, 104]	// tmp219, D.11378
	ldr	x2, [x0]	// tmp220,
	subs	x3, x3, x2	// tmp219, tmp220
	mov	x2, 0	// tmp220
	beq	.L1021		//,
	bl	__stack_chk_fail		//
.L1021:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE34:
	.size	use_va_args_several_strings, .-use_va_args_several_strings
	.align	2
	.global	use_va_list_several_strings
	.type	use_va_list_several_strings, %function
use_va_list_several_strings:
.LFB35:
	.cfi_startproc
	stp	x29, x30, [sp, -96]!	//,,,
	.cfi_def_cfa_offset 96
	.cfi_offset 29, -96
	.cfi_offset 30, -88
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -80
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:479:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11382, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.497, argv.__stack
	cmp	w1, 0	// D.11382,
	blt	.L1023		//,
	add	x1, x0, 15	// D.11387, iftmp.497,
	and	x1, x1, -8	// D.11388, D.11387,
	str	x1, [x19]	// D.11388, argv.__stack
	b	.L1024		//
.L1023:
	add	w2, w1, 8	// D.11390, D.11382,
	str	w2, [x19, 24]	// D.11390, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11392, argv.__gr_offs
	cmp	w2, 0	// D.11392,
	ble	.L1025		//,
	add	x1, x0, 15	// D.11395, iftmp.497,
	and	x1, x1, -8	// D.11396, D.11395,
	str	x1, [x19]	// D.11396, argv.__stack
	b	.L1024		//
.L1025:
	ldr	x2, [x19, 8]	// D.11398, argv.__gr_top
	sxtw	x0, w1	// D.11399, D.11382
	add	x0, x2, x0	// iftmp.497, D.11398, D.11399
.L1024:
	ldr	x0, [x0]	// _1, *iftmp.496_55
	bl	atoi		//
	str	w0, [sp, 60]	//, a
// varargs-dll.c:480:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11400, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.499, argv.__stack
	cmp	w1, 0	// D.11400,
	blt	.L1027		//,
	add	x1, x0, 15	// D.11405, iftmp.499,
	and	x1, x1, -8	// D.11406, D.11405,
	str	x1, [x19]	// D.11406, argv.__stack
	b	.L1028		//
.L1027:
	add	w2, w1, 8	// D.11408, D.11400,
	str	w2, [x19, 24]	// D.11408, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11410, argv.__gr_offs
	cmp	w2, 0	// D.11410,
	ble	.L1029		//,
	add	x1, x0, 15	// D.11413, iftmp.499,
	and	x1, x1, -8	// D.11414, D.11413,
	str	x1, [x19]	// D.11414, argv.__stack
	b	.L1028		//
.L1029:
	ldr	x2, [x19, 8]	// D.11416, argv.__gr_top
	sxtw	x0, w1	// D.11417, D.11400
	add	x0, x2, x0	// iftmp.499, D.11416, D.11417
.L1028:
	ldr	x0, [x0]	// _2, *iftmp.498_57
	bl	atoi		//
	str	w0, [sp, 64]	//, b
// varargs-dll.c:481:   int c = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11418, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.501, argv.__stack
	cmp	w1, 0	// D.11418,
	blt	.L1031		//,
	add	x1, x0, 15	// D.11423, iftmp.501,
	and	x1, x1, -8	// D.11424, D.11423,
	str	x1, [x19]	// D.11424, argv.__stack
	b	.L1032		//
.L1031:
	add	w2, w1, 8	// D.11426, D.11418,
	str	w2, [x19, 24]	// D.11426, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11428, argv.__gr_offs
	cmp	w2, 0	// D.11428,
	ble	.L1033		//,
	add	x1, x0, 15	// D.11431, iftmp.501,
	and	x1, x1, -8	// D.11432, D.11431,
	str	x1, [x19]	// D.11432, argv.__stack
	b	.L1032		//
.L1033:
	ldr	x2, [x19, 8]	// D.11434, argv.__gr_top
	sxtw	x0, w1	// D.11435, D.11418
	add	x0, x2, x0	// iftmp.501, D.11434, D.11435
.L1032:
	ldr	x0, [x0]	// _3, *iftmp.500_59
	bl	atoi		//
	str	w0, [sp, 68]	//, c
// varargs-dll.c:482:   int d = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11436, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.503, argv.__stack
	cmp	w1, 0	// D.11436,
	blt	.L1035		//,
	add	x1, x0, 15	// D.11441, iftmp.503,
	and	x1, x1, -8	// D.11442, D.11441,
	str	x1, [x19]	// D.11442, argv.__stack
	b	.L1036		//
.L1035:
	add	w2, w1, 8	// D.11444, D.11436,
	str	w2, [x19, 24]	// D.11444, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11446, argv.__gr_offs
	cmp	w2, 0	// D.11446,
	ble	.L1037		//,
	add	x1, x0, 15	// D.11449, iftmp.503,
	and	x1, x1, -8	// D.11450, D.11449,
	str	x1, [x19]	// D.11450, argv.__stack
	b	.L1036		//
.L1037:
	ldr	x2, [x19, 8]	// D.11452, argv.__gr_top
	sxtw	x0, w1	// D.11453, D.11436
	add	x0, x2, x0	// iftmp.503, D.11452, D.11453
.L1036:
	ldr	x0, [x0]	// _4, *iftmp.502_61
	bl	atoi		//
	str	w0, [sp, 72]	//, d
// varargs-dll.c:483:   int e = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11454, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.505, argv.__stack
	cmp	w1, 0	// D.11454,
	blt	.L1039		//,
	add	x1, x0, 15	// D.11459, iftmp.505,
	and	x1, x1, -8	// D.11460, D.11459,
	str	x1, [x19]	// D.11460, argv.__stack
	b	.L1040		//
.L1039:
	add	w2, w1, 8	// D.11462, D.11454,
	str	w2, [x19, 24]	// D.11462, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11464, argv.__gr_offs
	cmp	w2, 0	// D.11464,
	ble	.L1041		//,
	add	x1, x0, 15	// D.11467, iftmp.505,
	and	x1, x1, -8	// D.11468, D.11467,
	str	x1, [x19]	// D.11468, argv.__stack
	b	.L1040		//
.L1041:
	ldr	x2, [x19, 8]	// D.11470, argv.__gr_top
	sxtw	x0, w1	// D.11471, D.11454
	add	x0, x2, x0	// iftmp.505, D.11470, D.11471
.L1040:
	ldr	x0, [x0]	// _5, *iftmp.504_63
	bl	atoi		//
	str	w0, [sp, 76]	//, e
// varargs-dll.c:484:   int f = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11472, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.507, argv.__stack
	cmp	w1, 0	// D.11472,
	blt	.L1043		//,
	add	x1, x0, 15	// D.11477, iftmp.507,
	and	x1, x1, -8	// D.11478, D.11477,
	str	x1, [x19]	// D.11478, argv.__stack
	b	.L1044		//
.L1043:
	add	w2, w1, 8	// D.11480, D.11472,
	str	w2, [x19, 24]	// D.11480, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11482, argv.__gr_offs
	cmp	w2, 0	// D.11482,
	ble	.L1045		//,
	add	x1, x0, 15	// D.11485, iftmp.507,
	and	x1, x1, -8	// D.11486, D.11485,
	str	x1, [x19]	// D.11486, argv.__stack
	b	.L1044		//
.L1045:
	ldr	x2, [x19, 8]	// D.11488, argv.__gr_top
	sxtw	x0, w1	// D.11489, D.11472
	add	x0, x2, x0	// iftmp.507, D.11488, D.11489
.L1044:
	ldr	x0, [x0]	// _6, *iftmp.506_65
	bl	atoi		//
	str	w0, [sp, 80]	//, f
// varargs-dll.c:485:   int g = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11490, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.509, argv.__stack
	cmp	w1, 0	// D.11490,
	blt	.L1047		//,
	add	x1, x0, 15	// D.11495, iftmp.509,
	and	x1, x1, -8	// D.11496, D.11495,
	str	x1, [x19]	// D.11496, argv.__stack
	b	.L1048		//
.L1047:
	add	w2, w1, 8	// D.11498, D.11490,
	str	w2, [x19, 24]	// D.11498, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11500, argv.__gr_offs
	cmp	w2, 0	// D.11500,
	ble	.L1049		//,
	add	x1, x0, 15	// D.11503, iftmp.509,
	and	x1, x1, -8	// D.11504, D.11503,
	str	x1, [x19]	// D.11504, argv.__stack
	b	.L1048		//
.L1049:
	ldr	x2, [x19, 8]	// D.11506, argv.__gr_top
	sxtw	x0, w1	// D.11507, D.11490
	add	x0, x2, x0	// iftmp.509, D.11506, D.11507
.L1048:
	ldr	x0, [x0]	// _7, *iftmp.508_67
	bl	atoi		//
	str	w0, [sp, 84]	//, g
// varargs-dll.c:486:   int h = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11508, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.511, argv.__stack
	cmp	w1, 0	// D.11508,
	blt	.L1051		//,
	add	x1, x0, 15	// D.11513, iftmp.511,
	and	x1, x1, -8	// D.11514, D.11513,
	str	x1, [x19]	// D.11514, argv.__stack
	b	.L1052		//
.L1051:
	add	w2, w1, 8	// D.11516, D.11508,
	str	w2, [x19, 24]	// D.11516, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11518, argv.__gr_offs
	cmp	w2, 0	// D.11518,
	ble	.L1053		//,
	add	x1, x0, 15	// D.11521, iftmp.511,
	and	x1, x1, -8	// D.11522, D.11521,
	str	x1, [x19]	// D.11522, argv.__stack
	b	.L1052		//
.L1053:
	ldr	x2, [x19, 8]	// D.11524, argv.__gr_top
	sxtw	x0, w1	// D.11525, D.11508
	add	x0, x2, x0	// iftmp.511, D.11524, D.11525
.L1052:
	ldr	x0, [x0]	// _8, *iftmp.510_69
	bl	atoi		//
	str	w0, [sp, 88]	//, h
// varargs-dll.c:487:   int i = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11526, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.513, argv.__stack
	cmp	w1, 0	// D.11526,
	blt	.L1055		//,
	add	x1, x0, 15	// D.11531, iftmp.513,
	and	x1, x1, -8	// D.11532, D.11531,
	str	x1, [x19]	// D.11532, argv.__stack
	b	.L1056		//
.L1055:
	add	w2, w1, 8	// D.11534, D.11526,
	str	w2, [x19, 24]	// D.11534, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11536, argv.__gr_offs
	cmp	w2, 0	// D.11536,
	ble	.L1057		//,
	add	x1, x0, 15	// D.11539, iftmp.513,
	and	x1, x1, -8	// D.11540, D.11539,
	str	x1, [x19]	// D.11540, argv.__stack
	b	.L1056		//
.L1057:
	ldr	x2, [x19, 8]	// D.11542, argv.__gr_top
	sxtw	x0, w1	// D.11543, D.11526
	add	x0, x2, x0	// iftmp.513, D.11542, D.11543
.L1056:
	ldr	x0, [x0]	// _9, *iftmp.512_71
	bl	atoi		//
	str	w0, [sp, 92]	//, i
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 60]	// tmp201, a
	ldr	w0, [sp, 64]	// tmp202, b
	add	w1, w1, w0	// _10, tmp201, tmp202
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp203, c
	add	w1, w1, w0	// _11, _10, tmp203
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp204, d
	add	w1, w1, w0	// _12, _11, tmp204
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp205, e
	add	w1, w1, w0	// _13, _12, tmp205
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 80]	// tmp206, f
	add	w1, w1, w0	// _14, _13, tmp206
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 84]	// tmp207, g
	add	w1, w1, w0	// _15, _14, tmp207
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 88]	// tmp208, h
	add	w1, w1, w0	// _16, _15, tmp208
// varargs-dll.c:488:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 92]	// tmp209, i
	add	w0, w1, w0	// _36, _16, tmp209
// varargs-dll.c:489: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 96	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE35:
	.size	use_va_list_several_strings, .-use_va_list_several_strings
	.align	2
	.global	use_va_args_many_strings
	.type	use_va_args_many_strings, %function
use_va_args_many_strings:
.LFB36:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:493: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp322,
	str	x1, [sp, 136]	// tmp322, D.11850
	mov	x1, 0	// tmp322
// varargs-dll.c:495:   va_start (argv, format);
	add	x0, sp, 336	// tmp327,,
	str	x0, [sp, 104]	// tmp327, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp328,,
	str	x0, [sp, 112]	// tmp328, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:496:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11544, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.515, argv.__stack
	cmp	w1, 0	// D.11544,
	blt	.L1061		//,
	add	x1, x0, 15	// D.11549, iftmp.515,
	and	x1, x1, -8	// D.11550, D.11549,
	str	x1, [sp, 104]	// D.11550, argv.__stack
	b	.L1062		//
.L1061:
	add	w2, w1, 8	// D.11552, D.11544,
	str	w2, [sp, 128]	// D.11552, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11554, argv.__gr_offs
	cmp	w2, 0	// D.11554,
	ble	.L1063		//,
	add	x1, x0, 15	// D.11557, iftmp.515,
	and	x1, x1, -8	// D.11558, D.11557,
	str	x1, [sp, 104]	// D.11558, argv.__stack
	b	.L1062		//
.L1063:
	ldr	x2, [sp, 112]	// D.11560, argv.__gr_top
	sxtw	x0, w1	// D.11561, D.11544
	add	x0, x2, x0	// iftmp.515, D.11560, D.11561
.L1062:
	ldr	x0, [x0]	// _1, *iftmp.514_106
	bl	atoi		//
	str	w0, [sp, 36]	//, a
// varargs-dll.c:497:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11562, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.517, argv.__stack
	cmp	w1, 0	// D.11562,
	blt	.L1065		//,
	add	x1, x0, 15	// D.11567, iftmp.517,
	and	x1, x1, -8	// D.11568, D.11567,
	str	x1, [sp, 104]	// D.11568, argv.__stack
	b	.L1066		//
.L1065:
	add	w2, w1, 8	// D.11570, D.11562,
	str	w2, [sp, 128]	// D.11570, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11572, argv.__gr_offs
	cmp	w2, 0	// D.11572,
	ble	.L1067		//,
	add	x1, x0, 15	// D.11575, iftmp.517,
	and	x1, x1, -8	// D.11576, D.11575,
	str	x1, [sp, 104]	// D.11576, argv.__stack
	b	.L1066		//
.L1067:
	ldr	x2, [sp, 112]	// D.11578, argv.__gr_top
	sxtw	x0, w1	// D.11579, D.11562
	add	x0, x2, x0	// iftmp.517, D.11578, D.11579
.L1066:
	ldr	x0, [x0]	// _2, *iftmp.516_108
	bl	atoi		//
	str	w0, [sp, 40]	//, b
// varargs-dll.c:498:   int c = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11580, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.519, argv.__stack
	cmp	w1, 0	// D.11580,
	blt	.L1069		//,
	add	x1, x0, 15	// D.11585, iftmp.519,
	and	x1, x1, -8	// D.11586, D.11585,
	str	x1, [sp, 104]	// D.11586, argv.__stack
	b	.L1070		//
.L1069:
	add	w2, w1, 8	// D.11588, D.11580,
	str	w2, [sp, 128]	// D.11588, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11590, argv.__gr_offs
	cmp	w2, 0	// D.11590,
	ble	.L1071		//,
	add	x1, x0, 15	// D.11593, iftmp.519,
	and	x1, x1, -8	// D.11594, D.11593,
	str	x1, [sp, 104]	// D.11594, argv.__stack
	b	.L1070		//
.L1071:
	ldr	x2, [sp, 112]	// D.11596, argv.__gr_top
	sxtw	x0, w1	// D.11597, D.11580
	add	x0, x2, x0	// iftmp.519, D.11596, D.11597
.L1070:
	ldr	x0, [x0]	// _3, *iftmp.518_110
	bl	atoi		//
	str	w0, [sp, 44]	//, c
// varargs-dll.c:499:   int d = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11598, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.521, argv.__stack
	cmp	w1, 0	// D.11598,
	blt	.L1073		//,
	add	x1, x0, 15	// D.11603, iftmp.521,
	and	x1, x1, -8	// D.11604, D.11603,
	str	x1, [sp, 104]	// D.11604, argv.__stack
	b	.L1074		//
.L1073:
	add	w2, w1, 8	// D.11606, D.11598,
	str	w2, [sp, 128]	// D.11606, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11608, argv.__gr_offs
	cmp	w2, 0	// D.11608,
	ble	.L1075		//,
	add	x1, x0, 15	// D.11611, iftmp.521,
	and	x1, x1, -8	// D.11612, D.11611,
	str	x1, [sp, 104]	// D.11612, argv.__stack
	b	.L1074		//
.L1075:
	ldr	x2, [sp, 112]	// D.11614, argv.__gr_top
	sxtw	x0, w1	// D.11615, D.11598
	add	x0, x2, x0	// iftmp.521, D.11614, D.11615
.L1074:
	ldr	x0, [x0]	// _4, *iftmp.520_112
	bl	atoi		//
	str	w0, [sp, 48]	//, d
// varargs-dll.c:500:   int e = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11616, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.523, argv.__stack
	cmp	w1, 0	// D.11616,
	blt	.L1077		//,
	add	x1, x0, 15	// D.11621, iftmp.523,
	and	x1, x1, -8	// D.11622, D.11621,
	str	x1, [sp, 104]	// D.11622, argv.__stack
	b	.L1078		//
.L1077:
	add	w2, w1, 8	// D.11624, D.11616,
	str	w2, [sp, 128]	// D.11624, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11626, argv.__gr_offs
	cmp	w2, 0	// D.11626,
	ble	.L1079		//,
	add	x1, x0, 15	// D.11629, iftmp.523,
	and	x1, x1, -8	// D.11630, D.11629,
	str	x1, [sp, 104]	// D.11630, argv.__stack
	b	.L1078		//
.L1079:
	ldr	x2, [sp, 112]	// D.11632, argv.__gr_top
	sxtw	x0, w1	// D.11633, D.11616
	add	x0, x2, x0	// iftmp.523, D.11632, D.11633
.L1078:
	ldr	x0, [x0]	// _5, *iftmp.522_114
	bl	atoi		//
	str	w0, [sp, 52]	//, e
// varargs-dll.c:501:   int f = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11634, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.525, argv.__stack
	cmp	w1, 0	// D.11634,
	blt	.L1081		//,
	add	x1, x0, 15	// D.11639, iftmp.525,
	and	x1, x1, -8	// D.11640, D.11639,
	str	x1, [sp, 104]	// D.11640, argv.__stack
	b	.L1082		//
.L1081:
	add	w2, w1, 8	// D.11642, D.11634,
	str	w2, [sp, 128]	// D.11642, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11644, argv.__gr_offs
	cmp	w2, 0	// D.11644,
	ble	.L1083		//,
	add	x1, x0, 15	// D.11647, iftmp.525,
	and	x1, x1, -8	// D.11648, D.11647,
	str	x1, [sp, 104]	// D.11648, argv.__stack
	b	.L1082		//
.L1083:
	ldr	x2, [sp, 112]	// D.11650, argv.__gr_top
	sxtw	x0, w1	// D.11651, D.11634
	add	x0, x2, x0	// iftmp.525, D.11650, D.11651
.L1082:
	ldr	x0, [x0]	// _6, *iftmp.524_116
	bl	atoi		//
	str	w0, [sp, 56]	//, f
// varargs-dll.c:502:   int g = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11652, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.527, argv.__stack
	cmp	w1, 0	// D.11652,
	blt	.L1085		//,
	add	x1, x0, 15	// D.11657, iftmp.527,
	and	x1, x1, -8	// D.11658, D.11657,
	str	x1, [sp, 104]	// D.11658, argv.__stack
	b	.L1086		//
.L1085:
	add	w2, w1, 8	// D.11660, D.11652,
	str	w2, [sp, 128]	// D.11660, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11662, argv.__gr_offs
	cmp	w2, 0	// D.11662,
	ble	.L1087		//,
	add	x1, x0, 15	// D.11665, iftmp.527,
	and	x1, x1, -8	// D.11666, D.11665,
	str	x1, [sp, 104]	// D.11666, argv.__stack
	b	.L1086		//
.L1087:
	ldr	x2, [sp, 112]	// D.11668, argv.__gr_top
	sxtw	x0, w1	// D.11669, D.11652
	add	x0, x2, x0	// iftmp.527, D.11668, D.11669
.L1086:
	ldr	x0, [x0]	// _7, *iftmp.526_118
	bl	atoi		//
	str	w0, [sp, 60]	//, g
// varargs-dll.c:503:   int h = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11670, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.529, argv.__stack
	cmp	w1, 0	// D.11670,
	blt	.L1089		//,
	add	x1, x0, 15	// D.11675, iftmp.529,
	and	x1, x1, -8	// D.11676, D.11675,
	str	x1, [sp, 104]	// D.11676, argv.__stack
	b	.L1090		//
.L1089:
	add	w2, w1, 8	// D.11678, D.11670,
	str	w2, [sp, 128]	// D.11678, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11680, argv.__gr_offs
	cmp	w2, 0	// D.11680,
	ble	.L1091		//,
	add	x1, x0, 15	// D.11683, iftmp.529,
	and	x1, x1, -8	// D.11684, D.11683,
	str	x1, [sp, 104]	// D.11684, argv.__stack
	b	.L1090		//
.L1091:
	ldr	x2, [sp, 112]	// D.11686, argv.__gr_top
	sxtw	x0, w1	// D.11687, D.11670
	add	x0, x2, x0	// iftmp.529, D.11686, D.11687
.L1090:
	ldr	x0, [x0]	// _8, *iftmp.528_120
	bl	atoi		//
	str	w0, [sp, 64]	//, h
// varargs-dll.c:504:   int i = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11688, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.531, argv.__stack
	cmp	w1, 0	// D.11688,
	blt	.L1093		//,
	add	x1, x0, 15	// D.11693, iftmp.531,
	and	x1, x1, -8	// D.11694, D.11693,
	str	x1, [sp, 104]	// D.11694, argv.__stack
	b	.L1094		//
.L1093:
	add	w2, w1, 8	// D.11696, D.11688,
	str	w2, [sp, 128]	// D.11696, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11698, argv.__gr_offs
	cmp	w2, 0	// D.11698,
	ble	.L1095		//,
	add	x1, x0, 15	// D.11701, iftmp.531,
	and	x1, x1, -8	// D.11702, D.11701,
	str	x1, [sp, 104]	// D.11702, argv.__stack
	b	.L1094		//
.L1095:
	ldr	x2, [sp, 112]	// D.11704, argv.__gr_top
	sxtw	x0, w1	// D.11705, D.11688
	add	x0, x2, x0	// iftmp.531, D.11704, D.11705
.L1094:
	ldr	x0, [x0]	// _9, *iftmp.530_122
	bl	atoi		//
	str	w0, [sp, 68]	//, i
// varargs-dll.c:505:   int j = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11706, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.533, argv.__stack
	cmp	w1, 0	// D.11706,
	blt	.L1097		//,
	add	x1, x0, 15	// D.11711, iftmp.533,
	and	x1, x1, -8	// D.11712, D.11711,
	str	x1, [sp, 104]	// D.11712, argv.__stack
	b	.L1098		//
.L1097:
	add	w2, w1, 8	// D.11714, D.11706,
	str	w2, [sp, 128]	// D.11714, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11716, argv.__gr_offs
	cmp	w2, 0	// D.11716,
	ble	.L1099		//,
	add	x1, x0, 15	// D.11719, iftmp.533,
	and	x1, x1, -8	// D.11720, D.11719,
	str	x1, [sp, 104]	// D.11720, argv.__stack
	b	.L1098		//
.L1099:
	ldr	x2, [sp, 112]	// D.11722, argv.__gr_top
	sxtw	x0, w1	// D.11723, D.11706
	add	x0, x2, x0	// iftmp.533, D.11722, D.11723
.L1098:
	ldr	x0, [x0]	// _10, *iftmp.532_124
	bl	atoi		//
	str	w0, [sp, 72]	//, j
// varargs-dll.c:506:   int k = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11724, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.535, argv.__stack
	cmp	w1, 0	// D.11724,
	blt	.L1101		//,
	add	x1, x0, 15	// D.11729, iftmp.535,
	and	x1, x1, -8	// D.11730, D.11729,
	str	x1, [sp, 104]	// D.11730, argv.__stack
	b	.L1102		//
.L1101:
	add	w2, w1, 8	// D.11732, D.11724,
	str	w2, [sp, 128]	// D.11732, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11734, argv.__gr_offs
	cmp	w2, 0	// D.11734,
	ble	.L1103		//,
	add	x1, x0, 15	// D.11737, iftmp.535,
	and	x1, x1, -8	// D.11738, D.11737,
	str	x1, [sp, 104]	// D.11738, argv.__stack
	b	.L1102		//
.L1103:
	ldr	x2, [sp, 112]	// D.11740, argv.__gr_top
	sxtw	x0, w1	// D.11741, D.11724
	add	x0, x2, x0	// iftmp.535, D.11740, D.11741
.L1102:
	ldr	x0, [x0]	// _11, *iftmp.534_126
	bl	atoi		//
	str	w0, [sp, 76]	//, k
// varargs-dll.c:507:   int l = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11742, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.537, argv.__stack
	cmp	w1, 0	// D.11742,
	blt	.L1105		//,
	add	x1, x0, 15	// D.11747, iftmp.537,
	and	x1, x1, -8	// D.11748, D.11747,
	str	x1, [sp, 104]	// D.11748, argv.__stack
	b	.L1106		//
.L1105:
	add	w2, w1, 8	// D.11750, D.11742,
	str	w2, [sp, 128]	// D.11750, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11752, argv.__gr_offs
	cmp	w2, 0	// D.11752,
	ble	.L1107		//,
	add	x1, x0, 15	// D.11755, iftmp.537,
	and	x1, x1, -8	// D.11756, D.11755,
	str	x1, [sp, 104]	// D.11756, argv.__stack
	b	.L1106		//
.L1107:
	ldr	x2, [sp, 112]	// D.11758, argv.__gr_top
	sxtw	x0, w1	// D.11759, D.11742
	add	x0, x2, x0	// iftmp.537, D.11758, D.11759
.L1106:
	ldr	x0, [x0]	// _12, *iftmp.536_128
	bl	atoi		//
	str	w0, [sp, 80]	//, l
// varargs-dll.c:508:   int m = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11760, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.539, argv.__stack
	cmp	w1, 0	// D.11760,
	blt	.L1109		//,
	add	x1, x0, 15	// D.11765, iftmp.539,
	and	x1, x1, -8	// D.11766, D.11765,
	str	x1, [sp, 104]	// D.11766, argv.__stack
	b	.L1110		//
.L1109:
	add	w2, w1, 8	// D.11768, D.11760,
	str	w2, [sp, 128]	// D.11768, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11770, argv.__gr_offs
	cmp	w2, 0	// D.11770,
	ble	.L1111		//,
	add	x1, x0, 15	// D.11773, iftmp.539,
	and	x1, x1, -8	// D.11774, D.11773,
	str	x1, [sp, 104]	// D.11774, argv.__stack
	b	.L1110		//
.L1111:
	ldr	x2, [sp, 112]	// D.11776, argv.__gr_top
	sxtw	x0, w1	// D.11777, D.11760
	add	x0, x2, x0	// iftmp.539, D.11776, D.11777
.L1110:
	ldr	x0, [x0]	// _13, *iftmp.538_130
	bl	atoi		//
	str	w0, [sp, 84]	//, m
// varargs-dll.c:509:   int n = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11778, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.541, argv.__stack
	cmp	w1, 0	// D.11778,
	blt	.L1113		//,
	add	x1, x0, 15	// D.11783, iftmp.541,
	and	x1, x1, -8	// D.11784, D.11783,
	str	x1, [sp, 104]	// D.11784, argv.__stack
	b	.L1114		//
.L1113:
	add	w2, w1, 8	// D.11786, D.11778,
	str	w2, [sp, 128]	// D.11786, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11788, argv.__gr_offs
	cmp	w2, 0	// D.11788,
	ble	.L1115		//,
	add	x1, x0, 15	// D.11791, iftmp.541,
	and	x1, x1, -8	// D.11792, D.11791,
	str	x1, [sp, 104]	// D.11792, argv.__stack
	b	.L1114		//
.L1115:
	ldr	x2, [sp, 112]	// D.11794, argv.__gr_top
	sxtw	x0, w1	// D.11795, D.11778
	add	x0, x2, x0	// iftmp.541, D.11794, D.11795
.L1114:
	ldr	x0, [x0]	// _14, *iftmp.540_132
	bl	atoi		//
	str	w0, [sp, 88]	//, n
// varargs-dll.c:510:   int o = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11796, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.543, argv.__stack
	cmp	w1, 0	// D.11796,
	blt	.L1117		//,
	add	x1, x0, 15	// D.11801, iftmp.543,
	and	x1, x1, -8	// D.11802, D.11801,
	str	x1, [sp, 104]	// D.11802, argv.__stack
	b	.L1118		//
.L1117:
	add	w2, w1, 8	// D.11804, D.11796,
	str	w2, [sp, 128]	// D.11804, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11806, argv.__gr_offs
	cmp	w2, 0	// D.11806,
	ble	.L1119		//,
	add	x1, x0, 15	// D.11809, iftmp.543,
	and	x1, x1, -8	// D.11810, D.11809,
	str	x1, [sp, 104]	// D.11810, argv.__stack
	b	.L1118		//
.L1119:
	ldr	x2, [sp, 112]	// D.11812, argv.__gr_top
	sxtw	x0, w1	// D.11813, D.11796
	add	x0, x2, x0	// iftmp.543, D.11812, D.11813
.L1118:
	ldr	x0, [x0]	// _15, *iftmp.542_134
	bl	atoi		//
	str	w0, [sp, 92]	//, o
// varargs-dll.c:511:   int p = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11814, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.545, argv.__stack
	cmp	w1, 0	// D.11814,
	blt	.L1121		//,
	add	x1, x0, 15	// D.11819, iftmp.545,
	and	x1, x1, -8	// D.11820, D.11819,
	str	x1, [sp, 104]	// D.11820, argv.__stack
	b	.L1122		//
.L1121:
	add	w2, w1, 8	// D.11822, D.11814,
	str	w2, [sp, 128]	// D.11822, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11824, argv.__gr_offs
	cmp	w2, 0	// D.11824,
	ble	.L1123		//,
	add	x1, x0, 15	// D.11827, iftmp.545,
	and	x1, x1, -8	// D.11828, D.11827,
	str	x1, [sp, 104]	// D.11828, argv.__stack
	b	.L1122		//
.L1123:
	ldr	x2, [sp, 112]	// D.11830, argv.__gr_top
	sxtw	x0, w1	// D.11831, D.11814
	add	x0, x2, x0	// iftmp.545, D.11830, D.11831
.L1122:
	ldr	x0, [x0]	// _16, *iftmp.544_136
	bl	atoi		//
	str	w0, [sp, 96]	//, p
// varargs-dll.c:512:   int q = atoi (va_arg (argv, const char *));
	ldr	w1, [sp, 128]	// D.11832, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.547, argv.__stack
	cmp	w1, 0	// D.11832,
	blt	.L1125		//,
	add	x1, x0, 15	// D.11837, iftmp.547,
	and	x1, x1, -8	// D.11838, D.11837,
	str	x1, [sp, 104]	// D.11838, argv.__stack
	b	.L1126		//
.L1125:
	add	w2, w1, 8	// D.11840, D.11832,
	str	w2, [sp, 128]	// D.11840, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.11842, argv.__gr_offs
	cmp	w2, 0	// D.11842,
	ble	.L1127		//,
	add	x1, x0, 15	// D.11845, iftmp.547,
	and	x1, x1, -8	// D.11846, D.11845,
	str	x1, [sp, 104]	// D.11846, argv.__stack
	b	.L1126		//
.L1127:
	ldr	x2, [sp, 112]	// D.11848, argv.__gr_top
	sxtw	x0, w1	// D.11849, D.11832
	add	x0, x2, x0	// iftmp.547, D.11848, D.11849
.L1126:
	ldr	x0, [x0]	// _17, *iftmp.546_138
	bl	atoi		//
	str	w0, [sp, 100]	//, q
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp302, a
	ldr	w0, [sp, 40]	// tmp303, b
	add	w1, w1, w0	// _18, tmp302, tmp303
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp304, c
	add	w1, w1, w0	// _19, _18, tmp304
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp305, d
	add	w1, w1, w0	// _20, _19, tmp305
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp306, e
	add	w1, w1, w0	// _21, _20, tmp306
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp307, f
	add	w1, w1, w0	// _22, _21, tmp307
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp308, g
	add	w1, w1, w0	// _23, _22, tmp308
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp309, h
	add	w1, w1, w0	// _24, _23, tmp309
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp310, i
	add	w1, w1, w0	// _25, _24, tmp310
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp311, j
	add	w1, w1, w0	// _26, _25, tmp311
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp312, k
	add	w1, w1, w0	// _27, _26, tmp312
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp313, l
	add	w1, w1, w0	// _28, _27, tmp313
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp314, m
	add	w1, w1, w0	// _29, _28, tmp314
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp315, n
	add	w1, w1, w0	// _30, _29, tmp315
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp316, o
	add	w1, w1, w0	// _31, _30, tmp316
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp317, p
	add	w1, w1, w0	// _32, _31, tmp317
// varargs-dll.c:514:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp318, q
	add	w0, w1, w0	// _70, _32, tmp318
	mov	w1, w0	// <retval>, _70
// varargs-dll.c:515: }
	adrp	x0, :got:__stack_chk_guard	// tmp321,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp320, tmp321,
	ldr	x3, [sp, 136]	// tmp323, D.11850
	ldr	x2, [x0]	// tmp324,
	subs	x3, x3, x2	// tmp323, tmp324
	mov	x2, 0	// tmp324
	beq	.L1130		//,
	bl	__stack_chk_fail		//
.L1130:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE36:
	.size	use_va_args_many_strings, .-use_va_args_many_strings
	.align	2
	.global	use_va_list_many_strings
	.type	use_va_list_many_strings, %function
use_va_list_many_strings:
.LFB37:
	.cfi_startproc
	stp	x29, x30, [sp, -128]!	//,,,
	.cfi_def_cfa_offset 128
	.cfi_offset 29, -128
	.cfi_offset 30, -120
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -112
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:520:   int a = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11854, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.549, argv.__stack
	cmp	w1, 0	// D.11854,
	blt	.L1132		//,
	add	x1, x0, 15	// D.11859, iftmp.549,
	and	x1, x1, -8	// D.11860, D.11859,
	str	x1, [x19]	// D.11860, argv.__stack
	b	.L1133		//
.L1132:
	add	w2, w1, 8	// D.11862, D.11854,
	str	w2, [x19, 24]	// D.11862, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11864, argv.__gr_offs
	cmp	w2, 0	// D.11864,
	ble	.L1134		//,
	add	x1, x0, 15	// D.11867, iftmp.549,
	and	x1, x1, -8	// D.11868, D.11867,
	str	x1, [x19]	// D.11868, argv.__stack
	b	.L1133		//
.L1134:
	ldr	x2, [x19, 8]	// D.11870, argv.__gr_top
	sxtw	x0, w1	// D.11871, D.11854
	add	x0, x2, x0	// iftmp.549, D.11870, D.11871
.L1133:
	ldr	x0, [x0]	// _1, *iftmp.548_103
	bl	atoi		//
	str	w0, [sp, 60]	//, a
// varargs-dll.c:521:   int b = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11872, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.551, argv.__stack
	cmp	w1, 0	// D.11872,
	blt	.L1136		//,
	add	x1, x0, 15	// D.11877, iftmp.551,
	and	x1, x1, -8	// D.11878, D.11877,
	str	x1, [x19]	// D.11878, argv.__stack
	b	.L1137		//
.L1136:
	add	w2, w1, 8	// D.11880, D.11872,
	str	w2, [x19, 24]	// D.11880, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11882, argv.__gr_offs
	cmp	w2, 0	// D.11882,
	ble	.L1138		//,
	add	x1, x0, 15	// D.11885, iftmp.551,
	and	x1, x1, -8	// D.11886, D.11885,
	str	x1, [x19]	// D.11886, argv.__stack
	b	.L1137		//
.L1138:
	ldr	x2, [x19, 8]	// D.11888, argv.__gr_top
	sxtw	x0, w1	// D.11889, D.11872
	add	x0, x2, x0	// iftmp.551, D.11888, D.11889
.L1137:
	ldr	x0, [x0]	// _2, *iftmp.550_105
	bl	atoi		//
	str	w0, [sp, 64]	//, b
// varargs-dll.c:522:   int c = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11890, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.553, argv.__stack
	cmp	w1, 0	// D.11890,
	blt	.L1140		//,
	add	x1, x0, 15	// D.11895, iftmp.553,
	and	x1, x1, -8	// D.11896, D.11895,
	str	x1, [x19]	// D.11896, argv.__stack
	b	.L1141		//
.L1140:
	add	w2, w1, 8	// D.11898, D.11890,
	str	w2, [x19, 24]	// D.11898, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11900, argv.__gr_offs
	cmp	w2, 0	// D.11900,
	ble	.L1142		//,
	add	x1, x0, 15	// D.11903, iftmp.553,
	and	x1, x1, -8	// D.11904, D.11903,
	str	x1, [x19]	// D.11904, argv.__stack
	b	.L1141		//
.L1142:
	ldr	x2, [x19, 8]	// D.11906, argv.__gr_top
	sxtw	x0, w1	// D.11907, D.11890
	add	x0, x2, x0	// iftmp.553, D.11906, D.11907
.L1141:
	ldr	x0, [x0]	// _3, *iftmp.552_107
	bl	atoi		//
	str	w0, [sp, 68]	//, c
// varargs-dll.c:523:   int d = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11908, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.555, argv.__stack
	cmp	w1, 0	// D.11908,
	blt	.L1144		//,
	add	x1, x0, 15	// D.11913, iftmp.555,
	and	x1, x1, -8	// D.11914, D.11913,
	str	x1, [x19]	// D.11914, argv.__stack
	b	.L1145		//
.L1144:
	add	w2, w1, 8	// D.11916, D.11908,
	str	w2, [x19, 24]	// D.11916, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11918, argv.__gr_offs
	cmp	w2, 0	// D.11918,
	ble	.L1146		//,
	add	x1, x0, 15	// D.11921, iftmp.555,
	and	x1, x1, -8	// D.11922, D.11921,
	str	x1, [x19]	// D.11922, argv.__stack
	b	.L1145		//
.L1146:
	ldr	x2, [x19, 8]	// D.11924, argv.__gr_top
	sxtw	x0, w1	// D.11925, D.11908
	add	x0, x2, x0	// iftmp.555, D.11924, D.11925
.L1145:
	ldr	x0, [x0]	// _4, *iftmp.554_109
	bl	atoi		//
	str	w0, [sp, 72]	//, d
// varargs-dll.c:524:   int e = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11926, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.557, argv.__stack
	cmp	w1, 0	// D.11926,
	blt	.L1148		//,
	add	x1, x0, 15	// D.11931, iftmp.557,
	and	x1, x1, -8	// D.11932, D.11931,
	str	x1, [x19]	// D.11932, argv.__stack
	b	.L1149		//
.L1148:
	add	w2, w1, 8	// D.11934, D.11926,
	str	w2, [x19, 24]	// D.11934, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11936, argv.__gr_offs
	cmp	w2, 0	// D.11936,
	ble	.L1150		//,
	add	x1, x0, 15	// D.11939, iftmp.557,
	and	x1, x1, -8	// D.11940, D.11939,
	str	x1, [x19]	// D.11940, argv.__stack
	b	.L1149		//
.L1150:
	ldr	x2, [x19, 8]	// D.11942, argv.__gr_top
	sxtw	x0, w1	// D.11943, D.11926
	add	x0, x2, x0	// iftmp.557, D.11942, D.11943
.L1149:
	ldr	x0, [x0]	// _5, *iftmp.556_111
	bl	atoi		//
	str	w0, [sp, 76]	//, e
// varargs-dll.c:525:   int f = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11944, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.559, argv.__stack
	cmp	w1, 0	// D.11944,
	blt	.L1152		//,
	add	x1, x0, 15	// D.11949, iftmp.559,
	and	x1, x1, -8	// D.11950, D.11949,
	str	x1, [x19]	// D.11950, argv.__stack
	b	.L1153		//
.L1152:
	add	w2, w1, 8	// D.11952, D.11944,
	str	w2, [x19, 24]	// D.11952, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11954, argv.__gr_offs
	cmp	w2, 0	// D.11954,
	ble	.L1154		//,
	add	x1, x0, 15	// D.11957, iftmp.559,
	and	x1, x1, -8	// D.11958, D.11957,
	str	x1, [x19]	// D.11958, argv.__stack
	b	.L1153		//
.L1154:
	ldr	x2, [x19, 8]	// D.11960, argv.__gr_top
	sxtw	x0, w1	// D.11961, D.11944
	add	x0, x2, x0	// iftmp.559, D.11960, D.11961
.L1153:
	ldr	x0, [x0]	// _6, *iftmp.558_113
	bl	atoi		//
	str	w0, [sp, 80]	//, f
// varargs-dll.c:526:   int g = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11962, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.561, argv.__stack
	cmp	w1, 0	// D.11962,
	blt	.L1156		//,
	add	x1, x0, 15	// D.11967, iftmp.561,
	and	x1, x1, -8	// D.11968, D.11967,
	str	x1, [x19]	// D.11968, argv.__stack
	b	.L1157		//
.L1156:
	add	w2, w1, 8	// D.11970, D.11962,
	str	w2, [x19, 24]	// D.11970, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11972, argv.__gr_offs
	cmp	w2, 0	// D.11972,
	ble	.L1158		//,
	add	x1, x0, 15	// D.11975, iftmp.561,
	and	x1, x1, -8	// D.11976, D.11975,
	str	x1, [x19]	// D.11976, argv.__stack
	b	.L1157		//
.L1158:
	ldr	x2, [x19, 8]	// D.11978, argv.__gr_top
	sxtw	x0, w1	// D.11979, D.11962
	add	x0, x2, x0	// iftmp.561, D.11978, D.11979
.L1157:
	ldr	x0, [x0]	// _7, *iftmp.560_115
	bl	atoi		//
	str	w0, [sp, 84]	//, g
// varargs-dll.c:527:   int h = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11980, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.563, argv.__stack
	cmp	w1, 0	// D.11980,
	blt	.L1160		//,
	add	x1, x0, 15	// D.11985, iftmp.563,
	and	x1, x1, -8	// D.11986, D.11985,
	str	x1, [x19]	// D.11986, argv.__stack
	b	.L1161		//
.L1160:
	add	w2, w1, 8	// D.11988, D.11980,
	str	w2, [x19, 24]	// D.11988, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.11990, argv.__gr_offs
	cmp	w2, 0	// D.11990,
	ble	.L1162		//,
	add	x1, x0, 15	// D.11993, iftmp.563,
	and	x1, x1, -8	// D.11994, D.11993,
	str	x1, [x19]	// D.11994, argv.__stack
	b	.L1161		//
.L1162:
	ldr	x2, [x19, 8]	// D.11996, argv.__gr_top
	sxtw	x0, w1	// D.11997, D.11980
	add	x0, x2, x0	// iftmp.563, D.11996, D.11997
.L1161:
	ldr	x0, [x0]	// _8, *iftmp.562_117
	bl	atoi		//
	str	w0, [sp, 88]	//, h
// varargs-dll.c:528:   int i = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.11998, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.565, argv.__stack
	cmp	w1, 0	// D.11998,
	blt	.L1164		//,
	add	x1, x0, 15	// D.12003, iftmp.565,
	and	x1, x1, -8	// D.12004, D.12003,
	str	x1, [x19]	// D.12004, argv.__stack
	b	.L1165		//
.L1164:
	add	w2, w1, 8	// D.12006, D.11998,
	str	w2, [x19, 24]	// D.12006, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12008, argv.__gr_offs
	cmp	w2, 0	// D.12008,
	ble	.L1166		//,
	add	x1, x0, 15	// D.12011, iftmp.565,
	and	x1, x1, -8	// D.12012, D.12011,
	str	x1, [x19]	// D.12012, argv.__stack
	b	.L1165		//
.L1166:
	ldr	x2, [x19, 8]	// D.12014, argv.__gr_top
	sxtw	x0, w1	// D.12015, D.11998
	add	x0, x2, x0	// iftmp.565, D.12014, D.12015
.L1165:
	ldr	x0, [x0]	// _9, *iftmp.564_119
	bl	atoi		//
	str	w0, [sp, 92]	//, i
// varargs-dll.c:529:   int j = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12016, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.567, argv.__stack
	cmp	w1, 0	// D.12016,
	blt	.L1168		//,
	add	x1, x0, 15	// D.12021, iftmp.567,
	and	x1, x1, -8	// D.12022, D.12021,
	str	x1, [x19]	// D.12022, argv.__stack
	b	.L1169		//
.L1168:
	add	w2, w1, 8	// D.12024, D.12016,
	str	w2, [x19, 24]	// D.12024, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12026, argv.__gr_offs
	cmp	w2, 0	// D.12026,
	ble	.L1170		//,
	add	x1, x0, 15	// D.12029, iftmp.567,
	and	x1, x1, -8	// D.12030, D.12029,
	str	x1, [x19]	// D.12030, argv.__stack
	b	.L1169		//
.L1170:
	ldr	x2, [x19, 8]	// D.12032, argv.__gr_top
	sxtw	x0, w1	// D.12033, D.12016
	add	x0, x2, x0	// iftmp.567, D.12032, D.12033
.L1169:
	ldr	x0, [x0]	// _10, *iftmp.566_121
	bl	atoi		//
	str	w0, [sp, 96]	//, j
// varargs-dll.c:530:   int k = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12034, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.569, argv.__stack
	cmp	w1, 0	// D.12034,
	blt	.L1172		//,
	add	x1, x0, 15	// D.12039, iftmp.569,
	and	x1, x1, -8	// D.12040, D.12039,
	str	x1, [x19]	// D.12040, argv.__stack
	b	.L1173		//
.L1172:
	add	w2, w1, 8	// D.12042, D.12034,
	str	w2, [x19, 24]	// D.12042, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12044, argv.__gr_offs
	cmp	w2, 0	// D.12044,
	ble	.L1174		//,
	add	x1, x0, 15	// D.12047, iftmp.569,
	and	x1, x1, -8	// D.12048, D.12047,
	str	x1, [x19]	// D.12048, argv.__stack
	b	.L1173		//
.L1174:
	ldr	x2, [x19, 8]	// D.12050, argv.__gr_top
	sxtw	x0, w1	// D.12051, D.12034
	add	x0, x2, x0	// iftmp.569, D.12050, D.12051
.L1173:
	ldr	x0, [x0]	// _11, *iftmp.568_123
	bl	atoi		//
	str	w0, [sp, 100]	//, k
// varargs-dll.c:531:   int l = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12052, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.571, argv.__stack
	cmp	w1, 0	// D.12052,
	blt	.L1176		//,
	add	x1, x0, 15	// D.12057, iftmp.571,
	and	x1, x1, -8	// D.12058, D.12057,
	str	x1, [x19]	// D.12058, argv.__stack
	b	.L1177		//
.L1176:
	add	w2, w1, 8	// D.12060, D.12052,
	str	w2, [x19, 24]	// D.12060, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12062, argv.__gr_offs
	cmp	w2, 0	// D.12062,
	ble	.L1178		//,
	add	x1, x0, 15	// D.12065, iftmp.571,
	and	x1, x1, -8	// D.12066, D.12065,
	str	x1, [x19]	// D.12066, argv.__stack
	b	.L1177		//
.L1178:
	ldr	x2, [x19, 8]	// D.12068, argv.__gr_top
	sxtw	x0, w1	// D.12069, D.12052
	add	x0, x2, x0	// iftmp.571, D.12068, D.12069
.L1177:
	ldr	x0, [x0]	// _12, *iftmp.570_125
	bl	atoi		//
	str	w0, [sp, 104]	//, l
// varargs-dll.c:532:   int m = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12070, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.573, argv.__stack
	cmp	w1, 0	// D.12070,
	blt	.L1180		//,
	add	x1, x0, 15	// D.12075, iftmp.573,
	and	x1, x1, -8	// D.12076, D.12075,
	str	x1, [x19]	// D.12076, argv.__stack
	b	.L1181		//
.L1180:
	add	w2, w1, 8	// D.12078, D.12070,
	str	w2, [x19, 24]	// D.12078, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12080, argv.__gr_offs
	cmp	w2, 0	// D.12080,
	ble	.L1182		//,
	add	x1, x0, 15	// D.12083, iftmp.573,
	and	x1, x1, -8	// D.12084, D.12083,
	str	x1, [x19]	// D.12084, argv.__stack
	b	.L1181		//
.L1182:
	ldr	x2, [x19, 8]	// D.12086, argv.__gr_top
	sxtw	x0, w1	// D.12087, D.12070
	add	x0, x2, x0	// iftmp.573, D.12086, D.12087
.L1181:
	ldr	x0, [x0]	// _13, *iftmp.572_127
	bl	atoi		//
	str	w0, [sp, 108]	//, m
// varargs-dll.c:533:   int n = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12088, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.575, argv.__stack
	cmp	w1, 0	// D.12088,
	blt	.L1184		//,
	add	x1, x0, 15	// D.12093, iftmp.575,
	and	x1, x1, -8	// D.12094, D.12093,
	str	x1, [x19]	// D.12094, argv.__stack
	b	.L1185		//
.L1184:
	add	w2, w1, 8	// D.12096, D.12088,
	str	w2, [x19, 24]	// D.12096, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12098, argv.__gr_offs
	cmp	w2, 0	// D.12098,
	ble	.L1186		//,
	add	x1, x0, 15	// D.12101, iftmp.575,
	and	x1, x1, -8	// D.12102, D.12101,
	str	x1, [x19]	// D.12102, argv.__stack
	b	.L1185		//
.L1186:
	ldr	x2, [x19, 8]	// D.12104, argv.__gr_top
	sxtw	x0, w1	// D.12105, D.12088
	add	x0, x2, x0	// iftmp.575, D.12104, D.12105
.L1185:
	ldr	x0, [x0]	// _14, *iftmp.574_129
	bl	atoi		//
	str	w0, [sp, 112]	//, n
// varargs-dll.c:534:   int o = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12106, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.577, argv.__stack
	cmp	w1, 0	// D.12106,
	blt	.L1188		//,
	add	x1, x0, 15	// D.12111, iftmp.577,
	and	x1, x1, -8	// D.12112, D.12111,
	str	x1, [x19]	// D.12112, argv.__stack
	b	.L1189		//
.L1188:
	add	w2, w1, 8	// D.12114, D.12106,
	str	w2, [x19, 24]	// D.12114, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12116, argv.__gr_offs
	cmp	w2, 0	// D.12116,
	ble	.L1190		//,
	add	x1, x0, 15	// D.12119, iftmp.577,
	and	x1, x1, -8	// D.12120, D.12119,
	str	x1, [x19]	// D.12120, argv.__stack
	b	.L1189		//
.L1190:
	ldr	x2, [x19, 8]	// D.12122, argv.__gr_top
	sxtw	x0, w1	// D.12123, D.12106
	add	x0, x2, x0	// iftmp.577, D.12122, D.12123
.L1189:
	ldr	x0, [x0]	// _15, *iftmp.576_131
	bl	atoi		//
	str	w0, [sp, 116]	//, o
// varargs-dll.c:535:   int p = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12124, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.579, argv.__stack
	cmp	w1, 0	// D.12124,
	blt	.L1192		//,
	add	x1, x0, 15	// D.12129, iftmp.579,
	and	x1, x1, -8	// D.12130, D.12129,
	str	x1, [x19]	// D.12130, argv.__stack
	b	.L1193		//
.L1192:
	add	w2, w1, 8	// D.12132, D.12124,
	str	w2, [x19, 24]	// D.12132, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12134, argv.__gr_offs
	cmp	w2, 0	// D.12134,
	ble	.L1194		//,
	add	x1, x0, 15	// D.12137, iftmp.579,
	and	x1, x1, -8	// D.12138, D.12137,
	str	x1, [x19]	// D.12138, argv.__stack
	b	.L1193		//
.L1194:
	ldr	x2, [x19, 8]	// D.12140, argv.__gr_top
	sxtw	x0, w1	// D.12141, D.12124
	add	x0, x2, x0	// iftmp.579, D.12140, D.12141
.L1193:
	ldr	x0, [x0]	// _16, *iftmp.578_133
	bl	atoi		//
	str	w0, [sp, 120]	//, p
// varargs-dll.c:536:   int q = atoi (va_arg (argv, const char *));
	ldr	w1, [x19, 24]	// D.12142, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.581, argv.__stack
	cmp	w1, 0	// D.12142,
	blt	.L1196		//,
	add	x1, x0, 15	// D.12147, iftmp.581,
	and	x1, x1, -8	// D.12148, D.12147,
	str	x1, [x19]	// D.12148, argv.__stack
	b	.L1197		//
.L1196:
	add	w2, w1, 8	// D.12150, D.12142,
	str	w2, [x19, 24]	// D.12150, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12152, argv.__gr_offs
	cmp	w2, 0	// D.12152,
	ble	.L1198		//,
	add	x1, x0, 15	// D.12155, iftmp.581,
	and	x1, x1, -8	// D.12156, D.12155,
	str	x1, [x19]	// D.12156, argv.__stack
	b	.L1197		//
.L1198:
	ldr	x2, [x19, 8]	// D.12158, argv.__gr_top
	sxtw	x0, w1	// D.12159, D.12142
	add	x0, x2, x0	// iftmp.581, D.12158, D.12159
.L1197:
	ldr	x0, [x0]	// _17, *iftmp.580_135
	bl	atoi		//
	str	w0, [sp, 124]	//, q
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 60]	// tmp297, a
	ldr	w0, [sp, 64]	// tmp298, b
	add	w1, w1, w0	// _18, tmp297, tmp298
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp299, c
	add	w1, w1, w0	// _19, _18, tmp299
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp300, d
	add	w1, w1, w0	// _20, _19, tmp300
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp301, e
	add	w1, w1, w0	// _21, _20, tmp301
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp302, f
	add	w1, w1, w0	// _22, _21, tmp302
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp303, g
	add	w1, w1, w0	// _23, _22, tmp303
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp304, h
	add	w1, w1, w0	// _24, _23, tmp304
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp305, i
	add	w1, w1, w0	// _25, _24, tmp305
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp306, j
	add	w1, w1, w0	// _26, _25, tmp306
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp307, k
	add	w1, w1, w0	// _27, _26, tmp307
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp308, l
	add	w1, w1, w0	// _28, _27, tmp308
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp309, m
	add	w1, w1, w0	// _29, _28, tmp309
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 112]	// tmp310, n
	add	w1, w1, w0	// _30, _29, tmp310
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 116]	// tmp311, o
	add	w1, w1, w0	// _31, _30, tmp311
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 120]	// tmp312, p
	add	w1, w1, w0	// _32, _31, tmp312
// varargs-dll.c:537:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 124]	// tmp313, q
	add	w0, w1, w0	// _68, _32, tmp313
// varargs-dll.c:538: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 128	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE37:
	.size	use_va_list_many_strings, .-use_va_list_many_strings
	.align	2
	.global	use_va_args_few_composites
	.type	use_va_args_few_composites, %function
use_va_args_few_composites:
.LFB38:
	.cfi_startproc
	stp	x29, x30, [sp, -432]!	//,,,
	.cfi_def_cfa_offset 432
	.cfi_offset 29, -432
	.cfi_offset 30, -424
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 376]	//,
	str	x2, [sp, 384]	//,
	str	x3, [sp, 392]	//,
	str	x4, [sp, 400]	//,
	str	x5, [sp, 408]	//,
	str	x6, [sp, 416]	//,
	str	x7, [sp, 424]	//,
	str	q0, [sp, 240]	//,
	str	q1, [sp, 256]	//,
	str	q2, [sp, 272]	//,
	str	q3, [sp, 288]	//,
	str	q4, [sp, 304]	//,
	str	q5, [sp, 320]	//,
	str	q6, [sp, 336]	//,
	str	q7, [sp, 352]	//,
// varargs-dll.c:542: {
	adrp	x0, :got:__stack_chk_guard	// tmp118,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp117, tmp118,
	ldr	x1, [x0]	// tmp143,
	str	x1, [sp, 232]	// tmp143, D.12198
	mov	x1, 0	// tmp143
// varargs-dll.c:544:   va_start (argv, format);
	add	x0, sp, 432	// tmp148,,
	str	x0, [sp, 40]	// tmp148, MEM[(struct  *)&argv].__stack
	add	x0, sp, 432	// tmp149,,
	str	x0, [sp, 48]	// tmp149, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 368	// tmp120,,
	str	x0, [sp, 56]	// tmp120, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp121,
	str	w0, [sp, 64]	// tmp121, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp122,
	str	w0, [sp, 68]	// tmp122, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:545:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 64]	// D.12160, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.583, argv.__stack
	cmp	w1, 0	// D.12160,
	blt	.L1202		//,
	add	x1, x0, 15	// D.12165, iftmp.583,
	and	x1, x1, -8	// D.12166, D.12165,
	str	x1, [sp, 40]	// D.12166, argv.__stack
	b	.L1203		//
.L1202:
	add	w2, w1, 8	// D.12168, D.12160,
	str	w2, [sp, 64]	// D.12168, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.12170, argv.__gr_offs
	cmp	w2, 0	// D.12170,
	ble	.L1204		//,
	add	x1, x0, 15	// D.12173, iftmp.583,
	and	x1, x1, -8	// D.12174, D.12173,
	str	x1, [sp, 40]	// D.12174, argv.__stack
	b	.L1203		//
.L1204:
	ldr	x2, [sp, 48]	// D.12176, argv.__gr_top
	sxtw	x0, w1	// D.12177, D.12160
	add	x0, x2, x0	// iftmp.583, D.12176, D.12177
.L1203:
	ldr	x1, [x0]	// D.12178, *iftmp.582_15
	add	x0, sp, 72	// tmp123,,
	ldp	q0, q1, [x1]	// tmp125, tmp126, *_36
	stp	q0, q1, [x0]	// tmp125, tmp126, D.6061
	ldp	q0, q1, [x1, 32]	// tmp127, tmp128, *_36
	stp	q0, q1, [x0, 32]	// tmp127, tmp128, D.6061
	ldr	q0, [x1, 64]	// tmp129, *_36
	str	q0, [x0, 64]	// tmp129, D.6061
// varargs-dll.c:545:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 72]	// tmp130, D.6061.a
	strb	w0, [sp, 35]	// tmp130, a
// varargs-dll.c:546:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 64]	// D.12179, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.585, argv.__stack
	cmp	w1, 0	// D.12179,
	blt	.L1206		//,
	add	x1, x0, 15	// D.12184, iftmp.585,
	and	x1, x1, -8	// D.12185, D.12184,
	str	x1, [sp, 40]	// D.12185, argv.__stack
	b	.L1207		//
.L1206:
	add	w2, w1, 8	// D.12187, D.12179,
	str	w2, [sp, 64]	// D.12187, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.12189, argv.__gr_offs
	cmp	w2, 0	// D.12189,
	ble	.L1208		//,
	add	x1, x0, 15	// D.12192, iftmp.585,
	and	x1, x1, -8	// D.12193, D.12192,
	str	x1, [sp, 40]	// D.12193, argv.__stack
	b	.L1207		//
.L1208:
	ldr	x2, [sp, 48]	// D.12195, argv.__gr_top
	sxtw	x0, w1	// D.12196, D.12179
	add	x0, x2, x0	// iftmp.585, D.12195, D.12196
.L1207:
	ldr	x1, [x0]	// D.12197, *iftmp.584_17
	add	x0, sp, 152	// tmp131,,
	ldp	q0, q1, [x1]	// tmp133, tmp134, *_55
	stp	q0, q1, [x0]	// tmp133, tmp134, D.6062
	ldp	q0, q1, [x1, 32]	// tmp135, tmp136, *_55
	stp	q0, q1, [x0, 32]	// tmp135, tmp136, D.6062
	ldr	q0, [x1, 64]	// tmp137, *_55
	str	q0, [x0, 64]	// tmp137, D.6062
// varargs-dll.c:546:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 156]	// tmp138, D.6062.b
	str	w0, [sp, 36]	// tmp138, b
// varargs-dll.c:548:   return a + b;
	ldrb	w1, [sp, 35]	// _1, a
	ldr	w0, [sp, 36]	// tmp139, b
	add	w0, w1, w0	// _9, _1, tmp139
	mov	w1, w0	// <retval>, _9
// varargs-dll.c:549: }
	adrp	x0, :got:__stack_chk_guard	// tmp142,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp141, tmp142,
	ldr	x3, [sp, 232]	// tmp144, D.12198
	ldr	x2, [x0]	// tmp145,
	subs	x3, x3, x2	// tmp144, tmp145
	mov	x2, 0	// tmp145
	beq	.L1211		//,
	bl	__stack_chk_fail		//
.L1211:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 432	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE38:
	.size	use_va_args_few_composites, .-use_va_args_few_composites
	.align	2
	.global	use_va_list_few_composites
	.type	use_va_list_few_composites, %function
use_va_list_few_composites:
.LFB39:
	.cfi_startproc
	str	x19, [sp, -208]!	//,
	.cfi_def_cfa_offset 208
	.cfi_offset 19, -208
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp117,
// varargs-dll.c:554:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12202, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.587, argv.__stack
	cmp	w1, 0	// D.12202,
	blt	.L1213		//,
	add	x1, x0, 15	// D.12207, iftmp.587,
	and	x1, x1, -8	// D.12208, D.12207,
	str	x1, [x19]	// D.12208, argv.__stack
	b	.L1214		//
.L1213:
	add	w2, w1, 8	// D.12210, D.12202,
	str	w2, [x19, 24]	// D.12210, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12212, argv.__gr_offs
	cmp	w2, 0	// D.12212,
	ble	.L1215		//,
	add	x1, x0, 15	// D.12215, iftmp.587,
	and	x1, x1, -8	// D.12216, D.12215,
	str	x1, [x19]	// D.12216, argv.__stack
	b	.L1214		//
.L1215:
	ldr	x2, [x19, 8]	// D.12218, argv.__gr_top
	sxtw	x0, w1	// D.12219, D.12202
	add	x0, x2, x0	// iftmp.587, D.12218, D.12219
.L1214:
	ldr	x1, [x0]	// D.12220, *iftmp.586_12
	add	x0, sp, 48	// tmp118,,
	ldp	q0, q1, [x1]	// tmp120, tmp121, *_33
	stp	q0, q1, [x0]	// tmp120, tmp121, D.6066
	ldp	q0, q1, [x1, 32]	// tmp122, tmp123, *_33
	stp	q0, q1, [x0, 32]	// tmp122, tmp123, D.6066
	ldr	q0, [x1, 64]	// tmp124, *_33
	str	q0, [x0, 64]	// tmp124, D.6066
// varargs-dll.c:554:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 48]	// tmp125, D.6066.a
	strb	w0, [sp, 43]	// tmp125, a
// varargs-dll.c:555:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12221, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.589, argv.__stack
	cmp	w1, 0	// D.12221,
	blt	.L1217		//,
	add	x1, x0, 15	// D.12226, iftmp.589,
	and	x1, x1, -8	// D.12227, D.12226,
	str	x1, [x19]	// D.12227, argv.__stack
	b	.L1218		//
.L1217:
	add	w2, w1, 8	// D.12229, D.12221,
	str	w2, [x19, 24]	// D.12229, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12231, argv.__gr_offs
	cmp	w2, 0	// D.12231,
	ble	.L1219		//,
	add	x1, x0, 15	// D.12234, iftmp.589,
	and	x1, x1, -8	// D.12235, D.12234,
	str	x1, [x19]	// D.12235, argv.__stack
	b	.L1218		//
.L1219:
	ldr	x2, [x19, 8]	// D.12237, argv.__gr_top
	sxtw	x0, w1	// D.12238, D.12221
	add	x0, x2, x0	// iftmp.589, D.12237, D.12238
.L1218:
	ldr	x1, [x0]	// D.12239, *iftmp.588_14
	add	x0, sp, 128	// tmp126,,
	ldp	q0, q1, [x1]	// tmp128, tmp129, *_52
	stp	q0, q1, [x0]	// tmp128, tmp129, D.6067
	ldp	q0, q1, [x1, 32]	// tmp130, tmp131, *_52
	stp	q0, q1, [x0, 32]	// tmp130, tmp131, D.6067
	ldr	q0, [x1, 64]	// tmp132, *_52
	str	q0, [x0, 64]	// tmp132, D.6067
// varargs-dll.c:555:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 132]	// tmp133, D.6067.b
	str	w0, [sp, 44]	// tmp133, b
// varargs-dll.c:556:   return a + b;
	ldrb	w1, [sp, 43]	// _1, a
	ldr	w0, [sp, 44]	// tmp134, b
	add	w0, w1, w0	// _7, _1, tmp134
// varargs-dll.c:557: }
	ldr	x19, [sp], 208	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE39:
	.size	use_va_list_few_composites, .-use_va_list_few_composites
	.align	2
	.global	use_va_args_several_composites
	.type	use_va_args_several_composites, %function
use_va_args_several_composites:
.LFB40:
	.cfi_startproc
	sub	sp, sp, #1024	//,,
	.cfi_def_cfa_offset 1024
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1024
	.cfi_offset 30, -1016
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 968]	//,
	str	x2, [sp, 976]	//,
	str	x3, [sp, 984]	//,
	str	x4, [sp, 992]	//,
	str	x5, [sp, 1000]	//,
	str	x6, [sp, 1008]	//,
	str	x7, [sp, 1016]	//,
	add	x0, sp, 1024	// tmp295,,
	str	q0, [x0, -192]	//,
	add	x0, sp, 1024	// tmp297,,
	str	q1, [x0, -176]	//,
	add	x0, sp, 1024	// tmp299,,
	str	q2, [x0, -160]	//,
	add	x0, sp, 1024	// tmp301,,
	str	q3, [x0, -144]	//,
	add	x0, sp, 1024	// tmp303,,
	str	q4, [x0, -128]	//,
	add	x0, sp, 1024	// tmp305,,
	str	q5, [x0, -112]	//,
	add	x0, sp, 1024	// tmp307,,
	str	q6, [x0, -96]	//,
	add	x0, sp, 1024	// tmp309,,
	str	q7, [x0, -80]	//,
// varargs-dll.c:561: {
	adrp	x0, :got:__stack_chk_guard	// tmp207,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp206, tmp207,
	ldr	x1, [x0]	// tmp290,
	str	x1, [sp, 824]	// tmp290, D.12411
	mov	x1, 0	// tmp290
// varargs-dll.c:563:   va_start (argv, format);
	add	x0, sp, 1024	// tmp311,,
	str	x0, [sp, 72]	// tmp311, MEM[(struct  *)&argv].__stack
	add	x0, sp, 1024	// tmp312,,
	str	x0, [sp, 80]	// tmp312, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 960	// tmp209,,
	str	x0, [sp, 88]	// tmp209, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp210,
	str	w0, [sp, 96]	// tmp210, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp211,
	str	w0, [sp, 100]	// tmp211, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:564:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 96]	// D.12240, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.591, argv.__stack
	cmp	w1, 0	// D.12240,
	blt	.L1223		//,
	add	x1, x0, 15	// D.12245, iftmp.591,
	and	x1, x1, -8	// D.12246, D.12245,
	str	x1, [sp, 72]	// D.12246, argv.__stack
	b	.L1224		//
.L1223:
	add	w2, w1, 8	// D.12248, D.12240,
	str	w2, [sp, 96]	// D.12248, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12250, argv.__gr_offs
	cmp	w2, 0	// D.12250,
	ble	.L1225		//,
	add	x1, x0, 15	// D.12253, iftmp.591,
	and	x1, x1, -8	// D.12254, D.12253,
	str	x1, [sp, 72]	// D.12254, argv.__stack
	b	.L1224		//
.L1225:
	ldr	x2, [sp, 80]	// D.12256, argv.__gr_top
	sxtw	x0, w1	// D.12257, D.12240
	add	x0, x2, x0	// iftmp.591, D.12256, D.12257
.L1224:
	ldr	x1, [x0]	// D.12258, *iftmp.590_55
	add	x0, sp, 104	// tmp212,,
	ldp	q0, q1, [x1]	// tmp214, tmp215, *_90
	stp	q0, q1, [x0]	// tmp214, tmp215, D.6070
	ldp	q0, q1, [x1, 32]	// tmp216, tmp217, *_90
	stp	q0, q1, [x0, 32]	// tmp216, tmp217, D.6070
	ldr	q0, [x1, 64]	// tmp218, *_90
	str	q0, [x0, 64]	// tmp218, D.6070
// varargs-dll.c:564:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 104]	// tmp219, D.6070.a
	strb	w0, [sp, 45]	// tmp219, a
// varargs-dll.c:565:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 96]	// D.12259, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.593, argv.__stack
	cmp	w1, 0	// D.12259,
	blt	.L1227		//,
	add	x1, x0, 15	// D.12264, iftmp.593,
	and	x1, x1, -8	// D.12265, D.12264,
	str	x1, [sp, 72]	// D.12265, argv.__stack
	b	.L1228		//
.L1227:
	add	w2, w1, 8	// D.12267, D.12259,
	str	w2, [sp, 96]	// D.12267, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12269, argv.__gr_offs
	cmp	w2, 0	// D.12269,
	ble	.L1229		//,
	add	x1, x0, 15	// D.12272, iftmp.593,
	and	x1, x1, -8	// D.12273, D.12272,
	str	x1, [sp, 72]	// D.12273, argv.__stack
	b	.L1228		//
.L1229:
	ldr	x2, [sp, 80]	// D.12275, argv.__gr_top
	sxtw	x0, w1	// D.12276, D.12259
	add	x0, x2, x0	// iftmp.593, D.12275, D.12276
.L1228:
	ldr	x1, [x0]	// D.12277, *iftmp.592_57
	add	x0, sp, 184	// tmp220,,
	ldp	q0, q1, [x1]	// tmp222, tmp223, *_109
	stp	q0, q1, [x0]	// tmp222, tmp223, D.6071
	ldp	q0, q1, [x1, 32]	// tmp224, tmp225, *_109
	stp	q0, q1, [x0, 32]	// tmp224, tmp225, D.6071
	ldr	q0, [x1, 64]	// tmp226, *_109
	str	q0, [x0, 64]	// tmp226, D.6071
// varargs-dll.c:565:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 188]	// tmp227, D.6071.b
	str	w0, [sp, 48]	// tmp227, b
// varargs-dll.c:566:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 96]	// D.12278, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.595, argv.__stack
	cmp	w1, 0	// D.12278,
	blt	.L1231		//,
	add	x1, x0, 15	// D.12283, iftmp.595,
	and	x1, x1, -8	// D.12284, D.12283,
	str	x1, [sp, 72]	// D.12284, argv.__stack
	b	.L1232		//
.L1231:
	add	w2, w1, 8	// D.12286, D.12278,
	str	w2, [sp, 96]	// D.12286, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12288, argv.__gr_offs
	cmp	w2, 0	// D.12288,
	ble	.L1233		//,
	add	x1, x0, 15	// D.12291, iftmp.595,
	and	x1, x1, -8	// D.12292, D.12291,
	str	x1, [sp, 72]	// D.12292, argv.__stack
	b	.L1232		//
.L1233:
	ldr	x2, [sp, 80]	// D.12294, argv.__gr_top
	sxtw	x0, w1	// D.12295, D.12278
	add	x0, x2, x0	// iftmp.595, D.12294, D.12295
.L1232:
	ldr	x1, [x0]	// D.12296, *iftmp.594_59
	add	x0, sp, 264	// tmp228,,
	ldp	q0, q1, [x1]	// tmp230, tmp231, *_128
	stp	q0, q1, [x0]	// tmp230, tmp231, D.6072
	ldp	q0, q1, [x1, 32]	// tmp232, tmp233, *_128
	stp	q0, q1, [x0, 32]	// tmp232, tmp233, D.6072
	ldr	q0, [x1, 64]	// tmp234, *_128
	str	q0, [x0, 64]	// tmp234, D.6072
// varargs-dll.c:566:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 272]	// _1, D.6072.c
	bl	atoi		//
	str	w0, [sp, 52]	//, c
// varargs-dll.c:567:   char d = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 96]	// D.12297, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.597, argv.__stack
	cmp	w1, 0	// D.12297,
	blt	.L1235		//,
	add	x1, x0, 15	// D.12302, iftmp.597,
	and	x1, x1, -8	// D.12303, D.12302,
	str	x1, [sp, 72]	// D.12303, argv.__stack
	b	.L1236		//
.L1235:
	add	w2, w1, 8	// D.12305, D.12297,
	str	w2, [sp, 96]	// D.12305, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12307, argv.__gr_offs
	cmp	w2, 0	// D.12307,
	ble	.L1237		//,
	add	x1, x0, 15	// D.12310, iftmp.597,
	and	x1, x1, -8	// D.12311, D.12310,
	str	x1, [sp, 72]	// D.12311, argv.__stack
	b	.L1236		//
.L1237:
	ldr	x2, [sp, 80]	// D.12313, argv.__gr_top
	sxtw	x0, w1	// D.12314, D.12297
	add	x0, x2, x0	// iftmp.597, D.12313, D.12314
.L1236:
	ldr	x1, [x0]	// D.12315, *iftmp.596_61
	add	x0, sp, 344	// tmp235,,
	ldp	q0, q1, [x1]	// tmp237, tmp238, *_147
	stp	q0, q1, [x0]	// tmp237, tmp238, D.6073
	ldp	q0, q1, [x1, 32]	// tmp239, tmp240, *_147
	stp	q0, q1, [x0, 32]	// tmp239, tmp240, D.6073
	ldr	q0, [x1, 64]	// tmp241, *_147
	str	q0, [x0, 64]	// tmp241, D.6073
// varargs-dll.c:567:   char d = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 344]	// tmp242, D.6073.a
	strb	w0, [sp, 46]	// tmp242, d
// varargs-dll.c:568:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 96]	// D.12316, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.599, argv.__stack
	cmp	w1, 0	// D.12316,
	blt	.L1239		//,
	add	x1, x0, 15	// D.12321, iftmp.599,
	and	x1, x1, -8	// D.12322, D.12321,
	str	x1, [sp, 72]	// D.12322, argv.__stack
	b	.L1240		//
.L1239:
	add	w2, w1, 8	// D.12324, D.12316,
	str	w2, [sp, 96]	// D.12324, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12326, argv.__gr_offs
	cmp	w2, 0	// D.12326,
	ble	.L1241		//,
	add	x1, x0, 15	// D.12329, iftmp.599,
	and	x1, x1, -8	// D.12330, D.12329,
	str	x1, [sp, 72]	// D.12330, argv.__stack
	b	.L1240		//
.L1241:
	ldr	x2, [sp, 80]	// D.12332, argv.__gr_top
	sxtw	x0, w1	// D.12333, D.12316
	add	x0, x2, x0	// iftmp.599, D.12332, D.12333
.L1240:
	ldr	x1, [x0]	// D.12334, *iftmp.598_63
	add	x0, sp, 424	// tmp243,,
	ldp	q0, q1, [x1]	// tmp245, tmp246, *_166
	stp	q0, q1, [x0]	// tmp245, tmp246, D.6074
	ldp	q0, q1, [x1, 32]	// tmp247, tmp248, *_166
	stp	q0, q1, [x0, 32]	// tmp247, tmp248, D.6074
	ldr	q0, [x1, 64]	// tmp249, *_166
	str	q0, [x0, 64]	// tmp249, D.6074
// varargs-dll.c:568:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 428]	// tmp250, D.6074.b
	str	w0, [sp, 56]	// tmp250, e
// varargs-dll.c:569:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 96]	// D.12335, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.601, argv.__stack
	cmp	w1, 0	// D.12335,
	blt	.L1243		//,
	add	x1, x0, 15	// D.12340, iftmp.601,
	and	x1, x1, -8	// D.12341, D.12340,
	str	x1, [sp, 72]	// D.12341, argv.__stack
	b	.L1244		//
.L1243:
	add	w2, w1, 8	// D.12343, D.12335,
	str	w2, [sp, 96]	// D.12343, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12345, argv.__gr_offs
	cmp	w2, 0	// D.12345,
	ble	.L1245		//,
	add	x1, x0, 15	// D.12348, iftmp.601,
	and	x1, x1, -8	// D.12349, D.12348,
	str	x1, [sp, 72]	// D.12349, argv.__stack
	b	.L1244		//
.L1245:
	ldr	x2, [sp, 80]	// D.12351, argv.__gr_top
	sxtw	x0, w1	// D.12352, D.12335
	add	x0, x2, x0	// iftmp.601, D.12351, D.12352
.L1244:
	ldr	x1, [x0]	// D.12353, *iftmp.600_65
	add	x0, sp, 504	// tmp251,,
	ldp	q0, q1, [x1]	// tmp253, tmp254, *_185
	stp	q0, q1, [x0]	// tmp253, tmp254, D.6075
	ldp	q0, q1, [x1, 32]	// tmp255, tmp256, *_185
	stp	q0, q1, [x0, 32]	// tmp255, tmp256, D.6075
	ldr	q0, [x1, 64]	// tmp257, *_185
	str	q0, [x0, 64]	// tmp257, D.6075
// varargs-dll.c:569:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 512]	// _2, D.6075.c
	bl	atoi		//
	str	w0, [sp, 60]	//, f
// varargs-dll.c:570:   char g = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 96]	// D.12354, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.603, argv.__stack
	cmp	w1, 0	// D.12354,
	blt	.L1247		//,
	add	x1, x0, 15	// D.12359, iftmp.603,
	and	x1, x1, -8	// D.12360, D.12359,
	str	x1, [sp, 72]	// D.12360, argv.__stack
	b	.L1248		//
.L1247:
	add	w2, w1, 8	// D.12362, D.12354,
	str	w2, [sp, 96]	// D.12362, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12364, argv.__gr_offs
	cmp	w2, 0	// D.12364,
	ble	.L1249		//,
	add	x1, x0, 15	// D.12367, iftmp.603,
	and	x1, x1, -8	// D.12368, D.12367,
	str	x1, [sp, 72]	// D.12368, argv.__stack
	b	.L1248		//
.L1249:
	ldr	x2, [sp, 80]	// D.12370, argv.__gr_top
	sxtw	x0, w1	// D.12371, D.12354
	add	x0, x2, x0	// iftmp.603, D.12370, D.12371
.L1248:
	ldr	x1, [x0]	// D.12372, *iftmp.602_67
	add	x0, sp, 584	// tmp258,,
	ldp	q0, q1, [x1]	// tmp260, tmp261, *_204
	stp	q0, q1, [x0]	// tmp260, tmp261, D.6076
	ldp	q0, q1, [x1, 32]	// tmp262, tmp263, *_204
	stp	q0, q1, [x0, 32]	// tmp262, tmp263, D.6076
	ldr	q0, [x1, 64]	// tmp264, *_204
	str	q0, [x0, 64]	// tmp264, D.6076
// varargs-dll.c:570:   char g = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 584]	// tmp265, D.6076.a
	strb	w0, [sp, 47]	// tmp265, g
// varargs-dll.c:571:   int h = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 96]	// D.12373, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.605, argv.__stack
	cmp	w1, 0	// D.12373,
	blt	.L1251		//,
	add	x1, x0, 15	// D.12378, iftmp.605,
	and	x1, x1, -8	// D.12379, D.12378,
	str	x1, [sp, 72]	// D.12379, argv.__stack
	b	.L1252		//
.L1251:
	add	w2, w1, 8	// D.12381, D.12373,
	str	w2, [sp, 96]	// D.12381, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12383, argv.__gr_offs
	cmp	w2, 0	// D.12383,
	ble	.L1253		//,
	add	x1, x0, 15	// D.12386, iftmp.605,
	and	x1, x1, -8	// D.12387, D.12386,
	str	x1, [sp, 72]	// D.12387, argv.__stack
	b	.L1252		//
.L1253:
	ldr	x2, [sp, 80]	// D.12389, argv.__gr_top
	sxtw	x0, w1	// D.12390, D.12373
	add	x0, x2, x0	// iftmp.605, D.12389, D.12390
.L1252:
	ldr	x1, [x0]	// D.12391, *iftmp.604_69
	add	x0, sp, 664	// tmp266,,
	ldp	q0, q1, [x1]	// tmp268, tmp269, *_223
	stp	q0, q1, [x0]	// tmp268, tmp269, D.6077
	ldp	q0, q1, [x1, 32]	// tmp270, tmp271, *_223
	stp	q0, q1, [x0, 32]	// tmp270, tmp271, D.6077
	ldr	q0, [x1, 64]	// tmp272, *_223
	str	q0, [x0, 64]	// tmp272, D.6077
// varargs-dll.c:571:   int h = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 668]	// tmp273, D.6077.b
	str	w0, [sp, 64]	// tmp273, h
// varargs-dll.c:572:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 96]	// D.12392, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.607, argv.__stack
	cmp	w1, 0	// D.12392,
	blt	.L1255		//,
	add	x1, x0, 15	// D.12397, iftmp.607,
	and	x1, x1, -8	// D.12398, D.12397,
	str	x1, [sp, 72]	// D.12398, argv.__stack
	b	.L1256		//
.L1255:
	add	w2, w1, 8	// D.12400, D.12392,
	str	w2, [sp, 96]	// D.12400, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.12402, argv.__gr_offs
	cmp	w2, 0	// D.12402,
	ble	.L1257		//,
	add	x1, x0, 15	// D.12405, iftmp.607,
	and	x1, x1, -8	// D.12406, D.12405,
	str	x1, [sp, 72]	// D.12406, argv.__stack
	b	.L1256		//
.L1257:
	ldr	x2, [sp, 80]	// D.12408, argv.__gr_top
	sxtw	x0, w1	// D.12409, D.12392
	add	x0, x2, x0	// iftmp.607, D.12408, D.12409
.L1256:
	ldr	x1, [x0]	// D.12410, *iftmp.606_71
	add	x0, sp, 744	// tmp274,,
	ldp	q0, q1, [x1]	// tmp276, tmp277, *_242
	stp	q0, q1, [x0]	// tmp276, tmp277, D.6078
	ldp	q0, q1, [x1, 32]	// tmp278, tmp279, *_242
	stp	q0, q1, [x0, 32]	// tmp278, tmp279, D.6078
	ldr	q0, [x1, 64]	// tmp280, *_242
	str	q0, [x0, 64]	// tmp280, D.6078
// varargs-dll.c:572:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 752]	// _3, D.6078.c
	bl	atoi		//
	str	w0, [sp, 68]	//, i
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldrb	w1, [sp, 45]	// _4, a
	ldr	w0, [sp, 48]	// tmp281, b
	add	w1, w1, w0	// _5, _4, tmp281
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp282, c
	add	w1, w1, w0	// _6, _5, tmp282
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldrb	w0, [sp, 46]	// _7, d
	add	w1, w1, w0	// _8, _6, _7
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp283, e
	add	w1, w1, w0	// _9, _8, tmp283
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp284, f
	add	w1, w1, w0	// _10, _9, tmp284
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldrb	w0, [sp, 47]	// _11, g
	add	w1, w1, w0	// _12, _10, _11
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp285, h
	add	w1, w1, w0	// _13, _12, tmp285
// varargs-dll.c:574:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp286, i
	add	w0, w1, w0	// _35, _13, tmp286
	mov	w1, w0	// <retval>, _35
// varargs-dll.c:575: }
	adrp	x0, :got:__stack_chk_guard	// tmp289,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp288, tmp289,
	ldr	x3, [sp, 824]	// tmp291, D.12411
	ldr	x2, [x0]	// tmp292,
	subs	x3, x3, x2	// tmp291, tmp292
	mov	x2, 0	// tmp292
	beq	.L1260		//,
	bl	__stack_chk_fail		//
.L1260:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1024	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE40:
	.size	use_va_args_several_composites, .-use_va_args_several_composites
	.align	2
	.global	use_va_list_several_composites
	.type	use_va_list_several_composites, %function
use_va_list_several_composites:
.LFB41:
	.cfi_startproc
	sub	sp, sp, #800	//,,
	.cfi_def_cfa_offset 800
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -800
	.cfi_offset 30, -792
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -784
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp206,
// varargs-dll.c:580:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12415, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.609, argv.__stack
	cmp	w1, 0	// D.12415,
	blt	.L1262		//,
	add	x1, x0, 15	// D.12420, iftmp.609,
	and	x1, x1, -8	// D.12421, D.12420,
	str	x1, [x19]	// D.12421, argv.__stack
	b	.L1263		//
.L1262:
	add	w2, w1, 8	// D.12423, D.12415,
	str	w2, [x19, 24]	// D.12423, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12425, argv.__gr_offs
	cmp	w2, 0	// D.12425,
	ble	.L1264		//,
	add	x1, x0, 15	// D.12428, iftmp.609,
	and	x1, x1, -8	// D.12429, D.12428,
	str	x1, [x19]	// D.12429, argv.__stack
	b	.L1263		//
.L1264:
	ldr	x2, [x19, 8]	// D.12431, argv.__gr_top
	sxtw	x0, w1	// D.12432, D.12415
	add	x0, x2, x0	// iftmp.609, D.12431, D.12432
.L1263:
	ldr	x1, [x0]	// D.12433, *iftmp.608_52
	add	x0, sp, 80	// tmp207,,
	ldp	q0, q1, [x1]	// tmp209, tmp210, *_87
	stp	q0, q1, [x0]	// tmp209, tmp210, D.6082
	ldp	q0, q1, [x1, 32]	// tmp211, tmp212, *_87
	stp	q0, q1, [x0, 32]	// tmp211, tmp212, D.6082
	ldr	q0, [x1, 64]	// tmp213, *_87
	str	q0, [x0, 64]	// tmp213, D.6082
// varargs-dll.c:580:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 80]	// tmp214, D.6082.a
	strb	w0, [sp, 53]	// tmp214, a
// varargs-dll.c:581:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12434, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.611, argv.__stack
	cmp	w1, 0	// D.12434,
	blt	.L1266		//,
	add	x1, x0, 15	// D.12439, iftmp.611,
	and	x1, x1, -8	// D.12440, D.12439,
	str	x1, [x19]	// D.12440, argv.__stack
	b	.L1267		//
.L1266:
	add	w2, w1, 8	// D.12442, D.12434,
	str	w2, [x19, 24]	// D.12442, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12444, argv.__gr_offs
	cmp	w2, 0	// D.12444,
	ble	.L1268		//,
	add	x1, x0, 15	// D.12447, iftmp.611,
	and	x1, x1, -8	// D.12448, D.12447,
	str	x1, [x19]	// D.12448, argv.__stack
	b	.L1267		//
.L1268:
	ldr	x2, [x19, 8]	// D.12450, argv.__gr_top
	sxtw	x0, w1	// D.12451, D.12434
	add	x0, x2, x0	// iftmp.611, D.12450, D.12451
.L1267:
	ldr	x1, [x0]	// D.12452, *iftmp.610_54
	add	x0, sp, 160	// tmp215,,
	ldp	q0, q1, [x1]	// tmp217, tmp218, *_106
	stp	q0, q1, [x0]	// tmp217, tmp218, D.6083
	ldp	q0, q1, [x1, 32]	// tmp219, tmp220, *_106
	stp	q0, q1, [x0, 32]	// tmp219, tmp220, D.6083
	ldr	q0, [x1, 64]	// tmp221, *_106
	str	q0, [x0, 64]	// tmp221, D.6083
// varargs-dll.c:581:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 164]	// tmp222, D.6083.b
	str	w0, [sp, 56]	// tmp222, b
// varargs-dll.c:582:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.12453, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.613, argv.__stack
	cmp	w1, 0	// D.12453,
	blt	.L1270		//,
	add	x1, x0, 15	// D.12458, iftmp.613,
	and	x1, x1, -8	// D.12459, D.12458,
	str	x1, [x19]	// D.12459, argv.__stack
	b	.L1271		//
.L1270:
	add	w2, w1, 8	// D.12461, D.12453,
	str	w2, [x19, 24]	// D.12461, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12463, argv.__gr_offs
	cmp	w2, 0	// D.12463,
	ble	.L1272		//,
	add	x1, x0, 15	// D.12466, iftmp.613,
	and	x1, x1, -8	// D.12467, D.12466,
	str	x1, [x19]	// D.12467, argv.__stack
	b	.L1271		//
.L1272:
	ldr	x2, [x19, 8]	// D.12469, argv.__gr_top
	sxtw	x0, w1	// D.12470, D.12453
	add	x0, x2, x0	// iftmp.613, D.12469, D.12470
.L1271:
	ldr	x1, [x0]	// D.12471, *iftmp.612_56
	add	x0, sp, 240	// tmp223,,
	ldp	q0, q1, [x1]	// tmp225, tmp226, *_125
	stp	q0, q1, [x0]	// tmp225, tmp226, D.6084
	ldp	q0, q1, [x1, 32]	// tmp227, tmp228, *_125
	stp	q0, q1, [x0, 32]	// tmp227, tmp228, D.6084
	ldr	q0, [x1, 64]	// tmp229, *_125
	str	q0, [x0, 64]	// tmp229, D.6084
// varargs-dll.c:582:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 248]	// _1, D.6084.c
	bl	atoi		//
	str	w0, [sp, 60]	//, c
// varargs-dll.c:583:   char d = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12472, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.615, argv.__stack
	cmp	w1, 0	// D.12472,
	blt	.L1274		//,
	add	x1, x0, 15	// D.12477, iftmp.615,
	and	x1, x1, -8	// D.12478, D.12477,
	str	x1, [x19]	// D.12478, argv.__stack
	b	.L1275		//
.L1274:
	add	w2, w1, 8	// D.12480, D.12472,
	str	w2, [x19, 24]	// D.12480, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12482, argv.__gr_offs
	cmp	w2, 0	// D.12482,
	ble	.L1276		//,
	add	x1, x0, 15	// D.12485, iftmp.615,
	and	x1, x1, -8	// D.12486, D.12485,
	str	x1, [x19]	// D.12486, argv.__stack
	b	.L1275		//
.L1276:
	ldr	x2, [x19, 8]	// D.12488, argv.__gr_top
	sxtw	x0, w1	// D.12489, D.12472
	add	x0, x2, x0	// iftmp.615, D.12488, D.12489
.L1275:
	ldr	x1, [x0]	// D.12490, *iftmp.614_58
	add	x0, sp, 320	// tmp230,,
	ldp	q0, q1, [x1]	// tmp232, tmp233, *_144
	stp	q0, q1, [x0]	// tmp232, tmp233, D.6085
	ldp	q0, q1, [x1, 32]	// tmp234, tmp235, *_144
	stp	q0, q1, [x0, 32]	// tmp234, tmp235, D.6085
	ldr	q0, [x1, 64]	// tmp236, *_144
	str	q0, [x0, 64]	// tmp236, D.6085
// varargs-dll.c:583:   char d = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 320]	// tmp237, D.6085.a
	strb	w0, [sp, 54]	// tmp237, d
// varargs-dll.c:584:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12491, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.617, argv.__stack
	cmp	w1, 0	// D.12491,
	blt	.L1278		//,
	add	x1, x0, 15	// D.12496, iftmp.617,
	and	x1, x1, -8	// D.12497, D.12496,
	str	x1, [x19]	// D.12497, argv.__stack
	b	.L1279		//
.L1278:
	add	w2, w1, 8	// D.12499, D.12491,
	str	w2, [x19, 24]	// D.12499, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12501, argv.__gr_offs
	cmp	w2, 0	// D.12501,
	ble	.L1280		//,
	add	x1, x0, 15	// D.12504, iftmp.617,
	and	x1, x1, -8	// D.12505, D.12504,
	str	x1, [x19]	// D.12505, argv.__stack
	b	.L1279		//
.L1280:
	ldr	x2, [x19, 8]	// D.12507, argv.__gr_top
	sxtw	x0, w1	// D.12508, D.12491
	add	x0, x2, x0	// iftmp.617, D.12507, D.12508
.L1279:
	ldr	x1, [x0]	// D.12509, *iftmp.616_60
	add	x0, sp, 400	// tmp238,,
	ldp	q0, q1, [x1]	// tmp240, tmp241, *_163
	stp	q0, q1, [x0]	// tmp240, tmp241, D.6086
	ldp	q0, q1, [x1, 32]	// tmp242, tmp243, *_163
	stp	q0, q1, [x0, 32]	// tmp242, tmp243, D.6086
	ldr	q0, [x1, 64]	// tmp244, *_163
	str	q0, [x0, 64]	// tmp244, D.6086
// varargs-dll.c:584:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 404]	// tmp245, D.6086.b
	str	w0, [sp, 64]	// tmp245, e
// varargs-dll.c:585:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.12510, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.619, argv.__stack
	cmp	w1, 0	// D.12510,
	blt	.L1282		//,
	add	x1, x0, 15	// D.12515, iftmp.619,
	and	x1, x1, -8	// D.12516, D.12515,
	str	x1, [x19]	// D.12516, argv.__stack
	b	.L1283		//
.L1282:
	add	w2, w1, 8	// D.12518, D.12510,
	str	w2, [x19, 24]	// D.12518, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12520, argv.__gr_offs
	cmp	w2, 0	// D.12520,
	ble	.L1284		//,
	add	x1, x0, 15	// D.12523, iftmp.619,
	and	x1, x1, -8	// D.12524, D.12523,
	str	x1, [x19]	// D.12524, argv.__stack
	b	.L1283		//
.L1284:
	ldr	x2, [x19, 8]	// D.12526, argv.__gr_top
	sxtw	x0, w1	// D.12527, D.12510
	add	x0, x2, x0	// iftmp.619, D.12526, D.12527
.L1283:
	ldr	x1, [x0]	// D.12528, *iftmp.618_62
	add	x0, sp, 480	// tmp246,,
	ldp	q0, q1, [x1]	// tmp248, tmp249, *_182
	stp	q0, q1, [x0]	// tmp248, tmp249, D.6087
	ldp	q0, q1, [x1, 32]	// tmp250, tmp251, *_182
	stp	q0, q1, [x0, 32]	// tmp250, tmp251, D.6087
	ldr	q0, [x1, 64]	// tmp252, *_182
	str	q0, [x0, 64]	// tmp252, D.6087
// varargs-dll.c:585:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 488]	// _2, D.6087.c
	bl	atoi		//
	str	w0, [sp, 68]	//, f
// varargs-dll.c:586:   char g = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12529, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.621, argv.__stack
	cmp	w1, 0	// D.12529,
	blt	.L1286		//,
	add	x1, x0, 15	// D.12534, iftmp.621,
	and	x1, x1, -8	// D.12535, D.12534,
	str	x1, [x19]	// D.12535, argv.__stack
	b	.L1287		//
.L1286:
	add	w2, w1, 8	// D.12537, D.12529,
	str	w2, [x19, 24]	// D.12537, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12539, argv.__gr_offs
	cmp	w2, 0	// D.12539,
	ble	.L1288		//,
	add	x1, x0, 15	// D.12542, iftmp.621,
	and	x1, x1, -8	// D.12543, D.12542,
	str	x1, [x19]	// D.12543, argv.__stack
	b	.L1287		//
.L1288:
	ldr	x2, [x19, 8]	// D.12545, argv.__gr_top
	sxtw	x0, w1	// D.12546, D.12529
	add	x0, x2, x0	// iftmp.621, D.12545, D.12546
.L1287:
	ldr	x1, [x0]	// D.12547, *iftmp.620_64
	add	x0, sp, 560	// tmp253,,
	ldp	q0, q1, [x1]	// tmp255, tmp256, *_201
	stp	q0, q1, [x0]	// tmp255, tmp256, D.6088
	ldp	q0, q1, [x1, 32]	// tmp257, tmp258, *_201
	stp	q0, q1, [x0, 32]	// tmp257, tmp258, D.6088
	ldr	q0, [x1, 64]	// tmp259, *_201
	str	q0, [x0, 64]	// tmp259, D.6088
// varargs-dll.c:586:   char g = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 560]	// tmp260, D.6088.a
	strb	w0, [sp, 55]	// tmp260, g
// varargs-dll.c:587:   int h = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12548, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.623, argv.__stack
	cmp	w1, 0	// D.12548,
	blt	.L1290		//,
	add	x1, x0, 15	// D.12553, iftmp.623,
	and	x1, x1, -8	// D.12554, D.12553,
	str	x1, [x19]	// D.12554, argv.__stack
	b	.L1291		//
.L1290:
	add	w2, w1, 8	// D.12556, D.12548,
	str	w2, [x19, 24]	// D.12556, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12558, argv.__gr_offs
	cmp	w2, 0	// D.12558,
	ble	.L1292		//,
	add	x1, x0, 15	// D.12561, iftmp.623,
	and	x1, x1, -8	// D.12562, D.12561,
	str	x1, [x19]	// D.12562, argv.__stack
	b	.L1291		//
.L1292:
	ldr	x2, [x19, 8]	// D.12564, argv.__gr_top
	sxtw	x0, w1	// D.12565, D.12548
	add	x0, x2, x0	// iftmp.623, D.12564, D.12565
.L1291:
	ldr	x1, [x0]	// D.12566, *iftmp.622_66
	add	x0, sp, 640	// tmp261,,
	ldp	q0, q1, [x1]	// tmp263, tmp264, *_220
	stp	q0, q1, [x0]	// tmp263, tmp264, D.6089
	ldp	q0, q1, [x1, 32]	// tmp265, tmp266, *_220
	stp	q0, q1, [x0, 32]	// tmp265, tmp266, D.6089
	ldr	q0, [x1, 64]	// tmp267, *_220
	str	q0, [x0, 64]	// tmp267, D.6089
// varargs-dll.c:587:   int h = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 644]	// tmp268, D.6089.b
	str	w0, [sp, 72]	// tmp268, h
// varargs-dll.c:588:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.12567, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.625, argv.__stack
	cmp	w1, 0	// D.12567,
	blt	.L1294		//,
	add	x1, x0, 15	// D.12572, iftmp.625,
	and	x1, x1, -8	// D.12573, D.12572,
	str	x1, [x19]	// D.12573, argv.__stack
	b	.L1295		//
.L1294:
	add	w2, w1, 8	// D.12575, D.12567,
	str	w2, [x19, 24]	// D.12575, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12577, argv.__gr_offs
	cmp	w2, 0	// D.12577,
	ble	.L1296		//,
	add	x1, x0, 15	// D.12580, iftmp.625,
	and	x1, x1, -8	// D.12581, D.12580,
	str	x1, [x19]	// D.12581, argv.__stack
	b	.L1295		//
.L1296:
	ldr	x2, [x19, 8]	// D.12583, argv.__gr_top
	sxtw	x0, w1	// D.12584, D.12567
	add	x0, x2, x0	// iftmp.625, D.12583, D.12584
.L1295:
	ldr	x1, [x0]	// D.12585, *iftmp.624_68
	add	x0, sp, 720	// tmp269,,
	ldp	q0, q1, [x1]	// tmp271, tmp272, *_239
	stp	q0, q1, [x0]	// tmp271, tmp272, D.6090
	ldp	q0, q1, [x1, 32]	// tmp273, tmp274, *_239
	stp	q0, q1, [x0, 32]	// tmp273, tmp274, D.6090
	ldr	q0, [x1, 64]	// tmp275, *_239
	str	q0, [x0, 64]	// tmp275, D.6090
// varargs-dll.c:588:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 728]	// _3, D.6090.c
	bl	atoi		//
	str	w0, [sp, 76]	//, i
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldrb	w1, [sp, 53]	// _4, a
	ldr	w0, [sp, 56]	// tmp276, b
	add	w1, w1, w0	// _5, _4, tmp276
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp277, c
	add	w1, w1, w0	// _6, _5, tmp277
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldrb	w0, [sp, 54]	// _7, d
	add	w1, w1, w0	// _8, _6, _7
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp278, e
	add	w1, w1, w0	// _9, _8, tmp278
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp279, f
	add	w1, w1, w0	// _10, _9, tmp279
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldrb	w0, [sp, 55]	// _11, g
	add	w1, w1, w0	// _12, _10, _11
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp280, h
	add	w1, w1, w0	// _13, _12, tmp280
// varargs-dll.c:589:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp281, i
	add	w0, w1, w0	// _33, _13, tmp281
// varargs-dll.c:590: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 800	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE41:
	.size	use_va_list_several_composites, .-use_va_list_several_composites
	.align	2
	.global	use_va_args_many_composites
	.type	use_va_args_many_composites, %function
use_va_args_many_composites:
.LFB42:
	.cfi_startproc
	sub	sp, sp, #1680	//,,
	.cfi_def_cfa_offset 1680
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1680
	.cfi_offset 30, -1672
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 1624]	//,
	str	x2, [sp, 1632]	//,
	str	x3, [sp, 1640]	//,
	str	x4, [sp, 1648]	//,
	str	x5, [sp, 1656]	//,
	str	x6, [sp, 1664]	//,
	str	x7, [sp, 1672]	//,
	add	x0, sp, 1536	// tmp463,,
	str	q0, [x0, -48]	//,
	add	x0, sp, 1536	// tmp465,,
	str	q1, [x0, -32]	//,
	add	x0, sp, 1536	// tmp467,,
	str	q2, [x0, -16]	//,
	add	x0, sp, 1536	// tmp469,,
	str	q3, [x0]	//,
	add	x0, sp, 1536	// tmp471,,
	str	q4, [x0, 16]	//,
	add	x0, sp, 1536	// tmp473,,
	str	q5, [x0, 32]	//,
	add	x0, sp, 1536	// tmp475,,
	str	q6, [x0, 48]	//,
	add	x0, sp, 1536	// tmp477,,
	str	q7, [x0, 64]	//,
// varargs-dll.c:594: {
	adrp	x0, :got:__stack_chk_guard	// tmp306,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp305, tmp306,
	ldr	x1, [x0]	// tmp458,
	str	x1, [sp, 1480]	// tmp458, D.12909
	mov	x1, 0	// tmp458
// varargs-dll.c:596:   va_start (argv, format);
	add	x0, sp, 1680	// tmp479,,
	str	x0, [sp, 88]	// tmp479, MEM[(struct  *)&argv].__stack
	add	x0, sp, 1680	// tmp480,,
	str	x0, [sp, 96]	// tmp480, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 1616	// tmp308,,
	str	x0, [sp, 104]	// tmp308, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp309,
	str	w0, [sp, 112]	// tmp309, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp310,
	str	w0, [sp, 116]	// tmp310, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:597:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 112]	// D.12586, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.627, argv.__stack
	cmp	w1, 0	// D.12586,
	blt	.L1300		//,
	add	x1, x0, 15	// D.12591, iftmp.627,
	and	x1, x1, -8	// D.12592, D.12591,
	str	x1, [sp, 88]	// D.12592, argv.__stack
	b	.L1301		//
.L1300:
	add	w2, w1, 8	// D.12594, D.12586,
	str	w2, [sp, 112]	// D.12594, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12596, argv.__gr_offs
	cmp	w2, 0	// D.12596,
	ble	.L1302		//,
	add	x1, x0, 15	// D.12599, iftmp.627,
	and	x1, x1, -8	// D.12600, D.12599,
	str	x1, [sp, 88]	// D.12600, argv.__stack
	b	.L1301		//
.L1302:
	ldr	x2, [sp, 96]	// D.12602, argv.__gr_top
	sxtw	x0, w1	// D.12603, D.12586
	add	x0, x2, x0	// iftmp.627, D.12602, D.12603
.L1301:
	ldr	x1, [x0]	// D.12604, *iftmp.626_98
	add	x0, sp, 120	// tmp311,,
	ldp	q0, q1, [x1]	// tmp313, tmp314, *_149
	stp	q0, q1, [x0]	// tmp313, tmp314, D.6093
	ldp	q0, q1, [x1, 32]	// tmp315, tmp316, *_149
	stp	q0, q1, [x0, 32]	// tmp315, tmp316, D.6093
	ldr	q0, [x1, 64]	// tmp317, *_149
	str	q0, [x0, 64]	// tmp317, D.6093
// varargs-dll.c:597:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 120]	// tmp318, D.6093.a
	strb	w0, [sp, 32]	// tmp318, a
// varargs-dll.c:598:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12605, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.629, argv.__stack
	cmp	w1, 0	// D.12605,
	blt	.L1304		//,
	add	x1, x0, 15	// D.12610, iftmp.629,
	and	x1, x1, -8	// D.12611, D.12610,
	str	x1, [sp, 88]	// D.12611, argv.__stack
	b	.L1305		//
.L1304:
	add	w2, w1, 8	// D.12613, D.12605,
	str	w2, [sp, 112]	// D.12613, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12615, argv.__gr_offs
	cmp	w2, 0	// D.12615,
	ble	.L1306		//,
	add	x1, x0, 15	// D.12618, iftmp.629,
	and	x1, x1, -8	// D.12619, D.12618,
	str	x1, [sp, 88]	// D.12619, argv.__stack
	b	.L1305		//
.L1306:
	ldr	x2, [sp, 96]	// D.12621, argv.__gr_top
	sxtw	x0, w1	// D.12622, D.12605
	add	x0, x2, x0	// iftmp.629, D.12621, D.12622
.L1305:
	ldr	x1, [x0]	// D.12623, *iftmp.628_100
	add	x0, sp, 200	// tmp319,,
	ldp	q0, q1, [x1]	// tmp321, tmp322, *_168
	stp	q0, q1, [x0]	// tmp321, tmp322, D.6094
	ldp	q0, q1, [x1, 32]	// tmp323, tmp324, *_168
	stp	q0, q1, [x0, 32]	// tmp323, tmp324, D.6094
	ldr	q0, [x1, 64]	// tmp325, *_168
	str	q0, [x0, 64]	// tmp325, D.6094
// varargs-dll.c:598:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 204]	// tmp326, D.6094.b
	str	w0, [sp, 36]	// tmp326, b
// varargs-dll.c:599:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 112]	// D.12624, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.631, argv.__stack
	cmp	w1, 0	// D.12624,
	blt	.L1308		//,
	add	x1, x0, 15	// D.12629, iftmp.631,
	and	x1, x1, -8	// D.12630, D.12629,
	str	x1, [sp, 88]	// D.12630, argv.__stack
	b	.L1309		//
.L1308:
	add	w2, w1, 8	// D.12632, D.12624,
	str	w2, [sp, 112]	// D.12632, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12634, argv.__gr_offs
	cmp	w2, 0	// D.12634,
	ble	.L1310		//,
	add	x1, x0, 15	// D.12637, iftmp.631,
	and	x1, x1, -8	// D.12638, D.12637,
	str	x1, [sp, 88]	// D.12638, argv.__stack
	b	.L1309		//
.L1310:
	ldr	x2, [sp, 96]	// D.12640, argv.__gr_top
	sxtw	x0, w1	// D.12641, D.12624
	add	x0, x2, x0	// iftmp.631, D.12640, D.12641
.L1309:
	ldr	x1, [x0]	// D.12642, *iftmp.630_102
	add	x0, sp, 280	// tmp327,,
	ldp	q0, q1, [x1]	// tmp329, tmp330, *_187
	stp	q0, q1, [x0]	// tmp329, tmp330, D.6095
	ldp	q0, q1, [x1, 32]	// tmp331, tmp332, *_187
	stp	q0, q1, [x0, 32]	// tmp331, tmp332, D.6095
	ldr	q0, [x1, 64]	// tmp333, *_187
	str	q0, [x0, 64]	// tmp333, D.6095
// varargs-dll.c:599:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 288]	// _1, D.6095.c
	bl	atoi		//
	str	w0, [sp, 40]	//, c
// varargs-dll.c:600:   char d = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 112]	// D.12643, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.633, argv.__stack
	cmp	w1, 0	// D.12643,
	blt	.L1312		//,
	add	x1, x0, 15	// D.12648, iftmp.633,
	and	x1, x1, -8	// D.12649, D.12648,
	str	x1, [sp, 88]	// D.12649, argv.__stack
	b	.L1313		//
.L1312:
	add	w2, w1, 8	// D.12651, D.12643,
	str	w2, [sp, 112]	// D.12651, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12653, argv.__gr_offs
	cmp	w2, 0	// D.12653,
	ble	.L1314		//,
	add	x1, x0, 15	// D.12656, iftmp.633,
	and	x1, x1, -8	// D.12657, D.12656,
	str	x1, [sp, 88]	// D.12657, argv.__stack
	b	.L1313		//
.L1314:
	ldr	x2, [sp, 96]	// D.12659, argv.__gr_top
	sxtw	x0, w1	// D.12660, D.12643
	add	x0, x2, x0	// iftmp.633, D.12659, D.12660
.L1313:
	ldr	x1, [x0]	// D.12661, *iftmp.632_104
	add	x0, sp, 360	// tmp334,,
	ldp	q0, q1, [x1]	// tmp336, tmp337, *_206
	stp	q0, q1, [x0]	// tmp336, tmp337, D.6096
	ldp	q0, q1, [x1, 32]	// tmp338, tmp339, *_206
	stp	q0, q1, [x0, 32]	// tmp338, tmp339, D.6096
	ldr	q0, [x1, 64]	// tmp340, *_206
	str	q0, [x0, 64]	// tmp340, D.6096
// varargs-dll.c:600:   char d = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 360]	// tmp341, D.6096.a
	strb	w0, [sp, 33]	// tmp341, d
// varargs-dll.c:601:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12662, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.635, argv.__stack
	cmp	w1, 0	// D.12662,
	blt	.L1316		//,
	add	x1, x0, 15	// D.12667, iftmp.635,
	and	x1, x1, -8	// D.12668, D.12667,
	str	x1, [sp, 88]	// D.12668, argv.__stack
	b	.L1317		//
.L1316:
	add	w2, w1, 8	// D.12670, D.12662,
	str	w2, [sp, 112]	// D.12670, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12672, argv.__gr_offs
	cmp	w2, 0	// D.12672,
	ble	.L1318		//,
	add	x1, x0, 15	// D.12675, iftmp.635,
	and	x1, x1, -8	// D.12676, D.12675,
	str	x1, [sp, 88]	// D.12676, argv.__stack
	b	.L1317		//
.L1318:
	ldr	x2, [sp, 96]	// D.12678, argv.__gr_top
	sxtw	x0, w1	// D.12679, D.12662
	add	x0, x2, x0	// iftmp.635, D.12678, D.12679
.L1317:
	ldr	x1, [x0]	// D.12680, *iftmp.634_106
	add	x0, sp, 440	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_225
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6097
	ldp	q0, q1, [x1, 32]	// tmp346, tmp347, *_225
	stp	q0, q1, [x0, 32]	// tmp346, tmp347, D.6097
	ldr	q0, [x1, 64]	// tmp348, *_225
	str	q0, [x0, 64]	// tmp348, D.6097
// varargs-dll.c:601:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 444]	// tmp349, D.6097.b
	str	w0, [sp, 44]	// tmp349, e
// varargs-dll.c:602:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 112]	// D.12681, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.637, argv.__stack
	cmp	w1, 0	// D.12681,
	blt	.L1320		//,
	add	x1, x0, 15	// D.12686, iftmp.637,
	and	x1, x1, -8	// D.12687, D.12686,
	str	x1, [sp, 88]	// D.12687, argv.__stack
	b	.L1321		//
.L1320:
	add	w2, w1, 8	// D.12689, D.12681,
	str	w2, [sp, 112]	// D.12689, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12691, argv.__gr_offs
	cmp	w2, 0	// D.12691,
	ble	.L1322		//,
	add	x1, x0, 15	// D.12694, iftmp.637,
	and	x1, x1, -8	// D.12695, D.12694,
	str	x1, [sp, 88]	// D.12695, argv.__stack
	b	.L1321		//
.L1322:
	ldr	x2, [sp, 96]	// D.12697, argv.__gr_top
	sxtw	x0, w1	// D.12698, D.12681
	add	x0, x2, x0	// iftmp.637, D.12697, D.12698
.L1321:
	ldr	x1, [x0]	// D.12699, *iftmp.636_108
	add	x0, sp, 520	// tmp350,,
	ldp	q0, q1, [x1]	// tmp352, tmp353, *_244
	stp	q0, q1, [x0]	// tmp352, tmp353, D.6098
	ldp	q0, q1, [x1, 32]	// tmp354, tmp355, *_244
	stp	q0, q1, [x0, 32]	// tmp354, tmp355, D.6098
	ldr	q0, [x1, 64]	// tmp356, *_244
	str	q0, [x0, 64]	// tmp356, D.6098
// varargs-dll.c:602:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 528]	// _2, D.6098.c
	bl	atoi		//
	str	w0, [sp, 48]	//, f
// varargs-dll.c:603:   char g = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 112]	// D.12700, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.639, argv.__stack
	cmp	w1, 0	// D.12700,
	blt	.L1324		//,
	add	x1, x0, 15	// D.12705, iftmp.639,
	and	x1, x1, -8	// D.12706, D.12705,
	str	x1, [sp, 88]	// D.12706, argv.__stack
	b	.L1325		//
.L1324:
	add	w2, w1, 8	// D.12708, D.12700,
	str	w2, [sp, 112]	// D.12708, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12710, argv.__gr_offs
	cmp	w2, 0	// D.12710,
	ble	.L1326		//,
	add	x1, x0, 15	// D.12713, iftmp.639,
	and	x1, x1, -8	// D.12714, D.12713,
	str	x1, [sp, 88]	// D.12714, argv.__stack
	b	.L1325		//
.L1326:
	ldr	x2, [sp, 96]	// D.12716, argv.__gr_top
	sxtw	x0, w1	// D.12717, D.12700
	add	x0, x2, x0	// iftmp.639, D.12716, D.12717
.L1325:
	ldr	x1, [x0]	// D.12718, *iftmp.638_110
	add	x0, sp, 600	// tmp357,,
	ldp	q0, q1, [x1]	// tmp359, tmp360, *_263
	stp	q0, q1, [x0]	// tmp359, tmp360, D.6099
	ldp	q0, q1, [x1, 32]	// tmp361, tmp362, *_263
	stp	q0, q1, [x0, 32]	// tmp361, tmp362, D.6099
	ldr	q0, [x1, 64]	// tmp363, *_263
	str	q0, [x0, 64]	// tmp363, D.6099
// varargs-dll.c:603:   char g = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 600]	// tmp364, D.6099.a
	strb	w0, [sp, 34]	// tmp364, g
// varargs-dll.c:604:   int h = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12719, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.641, argv.__stack
	cmp	w1, 0	// D.12719,
	blt	.L1328		//,
	add	x1, x0, 15	// D.12724, iftmp.641,
	and	x1, x1, -8	// D.12725, D.12724,
	str	x1, [sp, 88]	// D.12725, argv.__stack
	b	.L1329		//
.L1328:
	add	w2, w1, 8	// D.12727, D.12719,
	str	w2, [sp, 112]	// D.12727, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12729, argv.__gr_offs
	cmp	w2, 0	// D.12729,
	ble	.L1330		//,
	add	x1, x0, 15	// D.12732, iftmp.641,
	and	x1, x1, -8	// D.12733, D.12732,
	str	x1, [sp, 88]	// D.12733, argv.__stack
	b	.L1329		//
.L1330:
	ldr	x2, [sp, 96]	// D.12735, argv.__gr_top
	sxtw	x0, w1	// D.12736, D.12719
	add	x0, x2, x0	// iftmp.641, D.12735, D.12736
.L1329:
	ldr	x1, [x0]	// D.12737, *iftmp.640_112
	add	x0, sp, 680	// tmp365,,
	ldp	q0, q1, [x1]	// tmp367, tmp368, *_282
	stp	q0, q1, [x0]	// tmp367, tmp368, D.6100
	ldp	q0, q1, [x1, 32]	// tmp369, tmp370, *_282
	stp	q0, q1, [x0, 32]	// tmp369, tmp370, D.6100
	ldr	q0, [x1, 64]	// tmp371, *_282
	str	q0, [x0, 64]	// tmp371, D.6100
// varargs-dll.c:604:   int h = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 684]	// tmp372, D.6100.b
	str	w0, [sp, 52]	// tmp372, h
// varargs-dll.c:605:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 112]	// D.12738, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.643, argv.__stack
	cmp	w1, 0	// D.12738,
	blt	.L1332		//,
	add	x1, x0, 15	// D.12743, iftmp.643,
	and	x1, x1, -8	// D.12744, D.12743,
	str	x1, [sp, 88]	// D.12744, argv.__stack
	b	.L1333		//
.L1332:
	add	w2, w1, 8	// D.12746, D.12738,
	str	w2, [sp, 112]	// D.12746, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12748, argv.__gr_offs
	cmp	w2, 0	// D.12748,
	ble	.L1334		//,
	add	x1, x0, 15	// D.12751, iftmp.643,
	and	x1, x1, -8	// D.12752, D.12751,
	str	x1, [sp, 88]	// D.12752, argv.__stack
	b	.L1333		//
.L1334:
	ldr	x2, [sp, 96]	// D.12754, argv.__gr_top
	sxtw	x0, w1	// D.12755, D.12738
	add	x0, x2, x0	// iftmp.643, D.12754, D.12755
.L1333:
	ldr	x1, [x0]	// D.12756, *iftmp.642_114
	add	x0, sp, 760	// tmp373,,
	ldp	q0, q1, [x1]	// tmp375, tmp376, *_301
	stp	q0, q1, [x0]	// tmp375, tmp376, D.6101
	ldp	q0, q1, [x1, 32]	// tmp377, tmp378, *_301
	stp	q0, q1, [x0, 32]	// tmp377, tmp378, D.6101
	ldr	q0, [x1, 64]	// tmp379, *_301
	str	q0, [x0, 64]	// tmp379, D.6101
// varargs-dll.c:605:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 768]	// _3, D.6101.c
	bl	atoi		//
	str	w0, [sp, 56]	//, i
// varargs-dll.c:606:   char j = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 112]	// D.12757, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.645, argv.__stack
	cmp	w1, 0	// D.12757,
	blt	.L1336		//,
	add	x1, x0, 15	// D.12762, iftmp.645,
	and	x1, x1, -8	// D.12763, D.12762,
	str	x1, [sp, 88]	// D.12763, argv.__stack
	b	.L1337		//
.L1336:
	add	w2, w1, 8	// D.12765, D.12757,
	str	w2, [sp, 112]	// D.12765, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12767, argv.__gr_offs
	cmp	w2, 0	// D.12767,
	ble	.L1338		//,
	add	x1, x0, 15	// D.12770, iftmp.645,
	and	x1, x1, -8	// D.12771, D.12770,
	str	x1, [sp, 88]	// D.12771, argv.__stack
	b	.L1337		//
.L1338:
	ldr	x2, [sp, 96]	// D.12773, argv.__gr_top
	sxtw	x0, w1	// D.12774, D.12757
	add	x0, x2, x0	// iftmp.645, D.12773, D.12774
.L1337:
	ldr	x1, [x0]	// D.12775, *iftmp.644_116
	add	x0, sp, 840	// tmp380,,
	ldp	q0, q1, [x1]	// tmp382, tmp383, *_320
	stp	q0, q1, [x0]	// tmp382, tmp383, D.6102
	ldp	q0, q1, [x1, 32]	// tmp384, tmp385, *_320
	stp	q0, q1, [x0, 32]	// tmp384, tmp385, D.6102
	ldr	q0, [x1, 64]	// tmp386, *_320
	str	q0, [x0, 64]	// tmp386, D.6102
// varargs-dll.c:606:   char j = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 840]	// tmp387, D.6102.a
	strb	w0, [sp, 35]	// tmp387, j
// varargs-dll.c:607:   int k = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12776, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.647, argv.__stack
	cmp	w1, 0	// D.12776,
	blt	.L1340		//,
	add	x1, x0, 15	// D.12781, iftmp.647,
	and	x1, x1, -8	// D.12782, D.12781,
	str	x1, [sp, 88]	// D.12782, argv.__stack
	b	.L1341		//
.L1340:
	add	w2, w1, 8	// D.12784, D.12776,
	str	w2, [sp, 112]	// D.12784, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12786, argv.__gr_offs
	cmp	w2, 0	// D.12786,
	ble	.L1342		//,
	add	x1, x0, 15	// D.12789, iftmp.647,
	and	x1, x1, -8	// D.12790, D.12789,
	str	x1, [sp, 88]	// D.12790, argv.__stack
	b	.L1341		//
.L1342:
	ldr	x2, [sp, 96]	// D.12792, argv.__gr_top
	sxtw	x0, w1	// D.12793, D.12776
	add	x0, x2, x0	// iftmp.647, D.12792, D.12793
.L1341:
	ldr	x1, [x0]	// D.12794, *iftmp.646_118
	add	x0, sp, 920	// tmp388,,
	ldp	q0, q1, [x1]	// tmp390, tmp391, *_339
	stp	q0, q1, [x0]	// tmp390, tmp391, D.6103
	ldp	q0, q1, [x1, 32]	// tmp392, tmp393, *_339
	stp	q0, q1, [x0, 32]	// tmp392, tmp393, D.6103
	ldr	q0, [x1, 64]	// tmp394, *_339
	str	q0, [x0, 64]	// tmp394, D.6103
// varargs-dll.c:607:   int k = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 924]	// tmp395, D.6103.b
	str	w0, [sp, 60]	// tmp395, k
// varargs-dll.c:608:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 112]	// D.12795, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.649, argv.__stack
	cmp	w1, 0	// D.12795,
	blt	.L1344		//,
	add	x1, x0, 15	// D.12800, iftmp.649,
	and	x1, x1, -8	// D.12801, D.12800,
	str	x1, [sp, 88]	// D.12801, argv.__stack
	b	.L1345		//
.L1344:
	add	w2, w1, 8	// D.12803, D.12795,
	str	w2, [sp, 112]	// D.12803, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12805, argv.__gr_offs
	cmp	w2, 0	// D.12805,
	ble	.L1346		//,
	add	x1, x0, 15	// D.12808, iftmp.649,
	and	x1, x1, -8	// D.12809, D.12808,
	str	x1, [sp, 88]	// D.12809, argv.__stack
	b	.L1345		//
.L1346:
	ldr	x2, [sp, 96]	// D.12811, argv.__gr_top
	sxtw	x0, w1	// D.12812, D.12795
	add	x0, x2, x0	// iftmp.649, D.12811, D.12812
.L1345:
	ldr	x1, [x0]	// D.12813, *iftmp.648_120
	add	x0, sp, 1000	// tmp396,,
	ldp	q0, q1, [x1]	// tmp398, tmp399, *_358
	stp	q0, q1, [x0]	// tmp398, tmp399, D.6104
	ldp	q0, q1, [x1, 32]	// tmp400, tmp401, *_358
	stp	q0, q1, [x0, 32]	// tmp400, tmp401, D.6104
	ldr	q0, [x1, 64]	// tmp402, *_358
	str	q0, [x0, 64]	// tmp402, D.6104
// varargs-dll.c:608:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 1008]	// _4, D.6104.c
	bl	atoi		//
	str	w0, [sp, 64]	//, l
// varargs-dll.c:609:   int m = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12814, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.651, argv.__stack
	cmp	w1, 0	// D.12814,
	blt	.L1348		//,
	add	x1, x0, 15	// D.12819, iftmp.651,
	and	x1, x1, -8	// D.12820, D.12819,
	str	x1, [sp, 88]	// D.12820, argv.__stack
	b	.L1349		//
.L1348:
	add	w2, w1, 8	// D.12822, D.12814,
	str	w2, [sp, 112]	// D.12822, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12824, argv.__gr_offs
	cmp	w2, 0	// D.12824,
	ble	.L1350		//,
	add	x1, x0, 15	// D.12827, iftmp.651,
	and	x1, x1, -8	// D.12828, D.12827,
	str	x1, [sp, 88]	// D.12828, argv.__stack
	b	.L1349		//
.L1350:
	ldr	x2, [sp, 96]	// D.12830, argv.__gr_top
	sxtw	x0, w1	// D.12831, D.12814
	add	x0, x2, x0	// iftmp.651, D.12830, D.12831
.L1349:
	ldr	x1, [x0]	// D.12832, *iftmp.650_122
	add	x0, sp, 1080	// tmp403,,
	ldp	q0, q1, [x1]	// tmp405, tmp406, *_377
	stp	q0, q1, [x0]	// tmp405, tmp406, D.6105
	ldp	q0, q1, [x1, 32]	// tmp407, tmp408, *_377
	stp	q0, q1, [x0, 32]	// tmp407, tmp408, D.6105
	ldr	q0, [x1, 64]	// tmp409, *_377
	str	q0, [x0, 64]	// tmp409, D.6105
// varargs-dll.c:609:   int m = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1084]	// tmp410, D.6105.b
	str	w0, [sp, 68]	// tmp410, m
// varargs-dll.c:610:   int n = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12833, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.653, argv.__stack
	cmp	w1, 0	// D.12833,
	blt	.L1352		//,
	add	x1, x0, 15	// D.12838, iftmp.653,
	and	x1, x1, -8	// D.12839, D.12838,
	str	x1, [sp, 88]	// D.12839, argv.__stack
	b	.L1353		//
.L1352:
	add	w2, w1, 8	// D.12841, D.12833,
	str	w2, [sp, 112]	// D.12841, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12843, argv.__gr_offs
	cmp	w2, 0	// D.12843,
	ble	.L1354		//,
	add	x1, x0, 15	// D.12846, iftmp.653,
	and	x1, x1, -8	// D.12847, D.12846,
	str	x1, [sp, 88]	// D.12847, argv.__stack
	b	.L1353		//
.L1354:
	ldr	x2, [sp, 96]	// D.12849, argv.__gr_top
	sxtw	x0, w1	// D.12850, D.12833
	add	x0, x2, x0	// iftmp.653, D.12849, D.12850
.L1353:
	ldr	x1, [x0]	// D.12851, *iftmp.652_124
	add	x0, sp, 1160	// tmp411,,
	ldp	q0, q1, [x1]	// tmp413, tmp414, *_396
	stp	q0, q1, [x0]	// tmp413, tmp414, D.6106
	ldp	q0, q1, [x1, 32]	// tmp415, tmp416, *_396
	stp	q0, q1, [x0, 32]	// tmp415, tmp416, D.6106
	ldr	q0, [x1, 64]	// tmp417, *_396
	str	q0, [x0, 64]	// tmp417, D.6106
// varargs-dll.c:610:   int n = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1164]	// tmp418, D.6106.b
	str	w0, [sp, 72]	// tmp418, n
// varargs-dll.c:611:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 112]	// D.12852, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.655, argv.__stack
	cmp	w1, 0	// D.12852,
	blt	.L1356		//,
	add	x1, x0, 15	// D.12857, iftmp.655,
	and	x1, x1, -8	// D.12858, D.12857,
	str	x1, [sp, 88]	// D.12858, argv.__stack
	b	.L1357		//
.L1356:
	add	w2, w1, 8	// D.12860, D.12852,
	str	w2, [sp, 112]	// D.12860, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12862, argv.__gr_offs
	cmp	w2, 0	// D.12862,
	ble	.L1358		//,
	add	x1, x0, 15	// D.12865, iftmp.655,
	and	x1, x1, -8	// D.12866, D.12865,
	str	x1, [sp, 88]	// D.12866, argv.__stack
	b	.L1357		//
.L1358:
	ldr	x2, [sp, 96]	// D.12868, argv.__gr_top
	sxtw	x0, w1	// D.12869, D.12852
	add	x0, x2, x0	// iftmp.655, D.12868, D.12869
.L1357:
	ldr	x1, [x0]	// D.12870, *iftmp.654_126
	add	x0, sp, 1240	// tmp419,,
	ldp	q0, q1, [x1]	// tmp421, tmp422, *_415
	stp	q0, q1, [x0]	// tmp421, tmp422, D.6107
	ldp	q0, q1, [x1, 32]	// tmp423, tmp424, *_415
	stp	q0, q1, [x0, 32]	// tmp423, tmp424, D.6107
	ldr	q0, [x1, 64]	// tmp425, *_415
	str	q0, [x0, 64]	// tmp425, D.6107
// varargs-dll.c:611:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 1248]	// _5, D.6107.c
	bl	atoi		//
	str	w0, [sp, 76]	//, o
// varargs-dll.c:612:   int p = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12871, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.657, argv.__stack
	cmp	w1, 0	// D.12871,
	blt	.L1360		//,
	add	x1, x0, 15	// D.12876, iftmp.657,
	and	x1, x1, -8	// D.12877, D.12876,
	str	x1, [sp, 88]	// D.12877, argv.__stack
	b	.L1361		//
.L1360:
	add	w2, w1, 8	// D.12879, D.12871,
	str	w2, [sp, 112]	// D.12879, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12881, argv.__gr_offs
	cmp	w2, 0	// D.12881,
	ble	.L1362		//,
	add	x1, x0, 15	// D.12884, iftmp.657,
	and	x1, x1, -8	// D.12885, D.12884,
	str	x1, [sp, 88]	// D.12885, argv.__stack
	b	.L1361		//
.L1362:
	ldr	x2, [sp, 96]	// D.12887, argv.__gr_top
	sxtw	x0, w1	// D.12888, D.12871
	add	x0, x2, x0	// iftmp.657, D.12887, D.12888
.L1361:
	ldr	x1, [x0]	// D.12889, *iftmp.656_128
	add	x0, sp, 1320	// tmp426,,
	ldp	q0, q1, [x1]	// tmp428, tmp429, *_434
	stp	q0, q1, [x0]	// tmp428, tmp429, D.6108
	ldp	q0, q1, [x1, 32]	// tmp430, tmp431, *_434
	stp	q0, q1, [x0, 32]	// tmp430, tmp431, D.6108
	ldr	q0, [x1, 64]	// tmp432, *_434
	str	q0, [x0, 64]	// tmp432, D.6108
// varargs-dll.c:612:   int p = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1324]	// tmp433, D.6108.b
	str	w0, [sp, 80]	// tmp433, p
// varargs-dll.c:613:   int q = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 112]	// D.12890, argv.__gr_offs
	ldr	x0, [sp, 88]	// iftmp.659, argv.__stack
	cmp	w1, 0	// D.12890,
	blt	.L1364		//,
	add	x1, x0, 15	// D.12895, iftmp.659,
	and	x1, x1, -8	// D.12896, D.12895,
	str	x1, [sp, 88]	// D.12896, argv.__stack
	b	.L1365		//
.L1364:
	add	w2, w1, 8	// D.12898, D.12890,
	str	w2, [sp, 112]	// D.12898, argv.__gr_offs
	ldr	w2, [sp, 112]	// D.12900, argv.__gr_offs
	cmp	w2, 0	// D.12900,
	ble	.L1366		//,
	add	x1, x0, 15	// D.12903, iftmp.659,
	and	x1, x1, -8	// D.12904, D.12903,
	str	x1, [sp, 88]	// D.12904, argv.__stack
	b	.L1365		//
.L1366:
	ldr	x2, [sp, 96]	// D.12906, argv.__gr_top
	sxtw	x0, w1	// D.12907, D.12890
	add	x0, x2, x0	// iftmp.659, D.12906, D.12907
.L1365:
	ldr	x1, [x0]	// D.12908, *iftmp.658_130
	add	x0, sp, 1400	// tmp434,,
	ldp	q0, q1, [x1]	// tmp436, tmp437, *_453
	stp	q0, q1, [x0]	// tmp436, tmp437, D.6109
	ldp	q0, q1, [x1, 32]	// tmp438, tmp439, *_453
	stp	q0, q1, [x0, 32]	// tmp438, tmp439, D.6109
	ldr	q0, [x1, 64]	// tmp440, *_453
	str	q0, [x0, 64]	// tmp440, D.6109
// varargs-dll.c:613:   int q = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1404]	// tmp441, D.6109.b
	str	w0, [sp, 84]	// tmp441, q
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w1, [sp, 32]	// _6, a
	ldr	w0, [sp, 36]	// tmp442, b
	add	w1, w1, w0	// _7, _6, tmp442
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 40]	// tmp443, c
	add	w1, w1, w0	// _8, _7, tmp443
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 33]	// _9, d
	add	w1, w1, w0	// _10, _8, _9
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp444, e
	add	w1, w1, w0	// _11, _10, tmp444
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp445, f
	add	w1, w1, w0	// _12, _11, tmp445
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 34]	// _13, g
	add	w1, w1, w0	// _14, _12, _13
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp446, h
	add	w1, w1, w0	// _15, _14, tmp446
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp447, i
	add	w1, w1, w0	// _16, _15, tmp447
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 35]	// _17, j
	add	w1, w1, w0	// _18, _16, _17
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp448, k
	add	w1, w1, w0	// _19, _18, tmp448
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp449, l
	add	w1, w1, w0	// _20, _19, tmp449
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp450, m
	add	w1, w1, w0	// _21, _20, tmp450
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp451, n
	add	w1, w1, w0	// _22, _21, tmp451
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp452, o
	add	w1, w1, w0	// _23, _22, tmp452
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp453, p
	add	w1, w1, w0	// _24, _23, tmp453
// varargs-dll.c:615:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp454, q
	add	w0, w1, w0	// _62, _24, tmp454
	mov	w1, w0	// <retval>, _62
// varargs-dll.c:616: }
	adrp	x0, :got:__stack_chk_guard	// tmp457,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp456, tmp457,
	ldr	x3, [sp, 1480]	// tmp459, D.12909
	ldr	x2, [x0]	// tmp460,
	subs	x3, x3, x2	// tmp459, tmp460
	mov	x2, 0	// tmp460
	beq	.L1369		//,
	bl	__stack_chk_fail		//
.L1369:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1680	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE42:
	.size	use_va_args_many_composites, .-use_va_args_many_composites
	.align	2
	.global	use_va_list_many_composites
	.type	use_va_list_many_composites, %function
use_va_list_many_composites:
.LFB43:
	.cfi_startproc
	sub	sp, sp, #1472	//,,
	.cfi_def_cfa_offset 1472
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1472
	.cfi_offset 30, -1464
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -1456
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp305,
// varargs-dll.c:621:   char a = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12913, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.661, argv.__stack
	cmp	w1, 0	// D.12913,
	blt	.L1371		//,
	add	x1, x0, 15	// D.12918, iftmp.661,
	and	x1, x1, -8	// D.12919, D.12918,
	str	x1, [x19]	// D.12919, argv.__stack
	b	.L1372		//
.L1371:
	add	w2, w1, 8	// D.12921, D.12913,
	str	w2, [x19, 24]	// D.12921, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12923, argv.__gr_offs
	cmp	w2, 0	// D.12923,
	ble	.L1373		//,
	add	x1, x0, 15	// D.12926, iftmp.661,
	and	x1, x1, -8	// D.12927, D.12926,
	str	x1, [x19]	// D.12927, argv.__stack
	b	.L1372		//
.L1373:
	ldr	x2, [x19, 8]	// D.12929, argv.__gr_top
	sxtw	x0, w1	// D.12930, D.12913
	add	x0, x2, x0	// iftmp.661, D.12929, D.12930
.L1372:
	ldr	x1, [x0]	// D.12931, *iftmp.660_95
	add	x0, sp, 112	// tmp306,,
	ldp	q0, q1, [x1]	// tmp308, tmp309, *_146
	stp	q0, q1, [x0]	// tmp308, tmp309, D.6113
	ldp	q0, q1, [x1, 32]	// tmp310, tmp311, *_146
	stp	q0, q1, [x0, 32]	// tmp310, tmp311, D.6113
	ldr	q0, [x1, 64]	// tmp312, *_146
	str	q0, [x0, 64]	// tmp312, D.6113
// varargs-dll.c:621:   char a = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 112]	// tmp313, D.6113.a
	strb	w0, [sp, 56]	// tmp313, a
// varargs-dll.c:622:   int b = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12932, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.663, argv.__stack
	cmp	w1, 0	// D.12932,
	blt	.L1375		//,
	add	x1, x0, 15	// D.12937, iftmp.663,
	and	x1, x1, -8	// D.12938, D.12937,
	str	x1, [x19]	// D.12938, argv.__stack
	b	.L1376		//
.L1375:
	add	w2, w1, 8	// D.12940, D.12932,
	str	w2, [x19, 24]	// D.12940, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12942, argv.__gr_offs
	cmp	w2, 0	// D.12942,
	ble	.L1377		//,
	add	x1, x0, 15	// D.12945, iftmp.663,
	and	x1, x1, -8	// D.12946, D.12945,
	str	x1, [x19]	// D.12946, argv.__stack
	b	.L1376		//
.L1377:
	ldr	x2, [x19, 8]	// D.12948, argv.__gr_top
	sxtw	x0, w1	// D.12949, D.12932
	add	x0, x2, x0	// iftmp.663, D.12948, D.12949
.L1376:
	ldr	x1, [x0]	// D.12950, *iftmp.662_97
	add	x0, sp, 192	// tmp314,,
	ldp	q0, q1, [x1]	// tmp316, tmp317, *_165
	stp	q0, q1, [x0]	// tmp316, tmp317, D.6114
	ldp	q0, q1, [x1, 32]	// tmp318, tmp319, *_165
	stp	q0, q1, [x0, 32]	// tmp318, tmp319, D.6114
	ldr	q0, [x1, 64]	// tmp320, *_165
	str	q0, [x0, 64]	// tmp320, D.6114
// varargs-dll.c:622:   int b = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 196]	// tmp321, D.6114.b
	str	w0, [sp, 60]	// tmp321, b
// varargs-dll.c:623:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.12951, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.665, argv.__stack
	cmp	w1, 0	// D.12951,
	blt	.L1379		//,
	add	x1, x0, 15	// D.12956, iftmp.665,
	and	x1, x1, -8	// D.12957, D.12956,
	str	x1, [x19]	// D.12957, argv.__stack
	b	.L1380		//
.L1379:
	add	w2, w1, 8	// D.12959, D.12951,
	str	w2, [x19, 24]	// D.12959, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12961, argv.__gr_offs
	cmp	w2, 0	// D.12961,
	ble	.L1381		//,
	add	x1, x0, 15	// D.12964, iftmp.665,
	and	x1, x1, -8	// D.12965, D.12964,
	str	x1, [x19]	// D.12965, argv.__stack
	b	.L1380		//
.L1381:
	ldr	x2, [x19, 8]	// D.12967, argv.__gr_top
	sxtw	x0, w1	// D.12968, D.12951
	add	x0, x2, x0	// iftmp.665, D.12967, D.12968
.L1380:
	ldr	x1, [x0]	// D.12969, *iftmp.664_99
	add	x0, sp, 272	// tmp322,,
	ldp	q0, q1, [x1]	// tmp324, tmp325, *_184
	stp	q0, q1, [x0]	// tmp324, tmp325, D.6115
	ldp	q0, q1, [x1, 32]	// tmp326, tmp327, *_184
	stp	q0, q1, [x0, 32]	// tmp326, tmp327, D.6115
	ldr	q0, [x1, 64]	// tmp328, *_184
	str	q0, [x0, 64]	// tmp328, D.6115
// varargs-dll.c:623:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 280]	// _1, D.6115.c
	bl	atoi		//
	str	w0, [sp, 64]	//, c
// varargs-dll.c:624:   char d = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.12970, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.667, argv.__stack
	cmp	w1, 0	// D.12970,
	blt	.L1383		//,
	add	x1, x0, 15	// D.12975, iftmp.667,
	and	x1, x1, -8	// D.12976, D.12975,
	str	x1, [x19]	// D.12976, argv.__stack
	b	.L1384		//
.L1383:
	add	w2, w1, 8	// D.12978, D.12970,
	str	w2, [x19, 24]	// D.12978, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12980, argv.__gr_offs
	cmp	w2, 0	// D.12980,
	ble	.L1385		//,
	add	x1, x0, 15	// D.12983, iftmp.667,
	and	x1, x1, -8	// D.12984, D.12983,
	str	x1, [x19]	// D.12984, argv.__stack
	b	.L1384		//
.L1385:
	ldr	x2, [x19, 8]	// D.12986, argv.__gr_top
	sxtw	x0, w1	// D.12987, D.12970
	add	x0, x2, x0	// iftmp.667, D.12986, D.12987
.L1384:
	ldr	x1, [x0]	// D.12988, *iftmp.666_101
	add	x0, sp, 352	// tmp329,,
	ldp	q0, q1, [x1]	// tmp331, tmp332, *_203
	stp	q0, q1, [x0]	// tmp331, tmp332, D.6116
	ldp	q0, q1, [x1, 32]	// tmp333, tmp334, *_203
	stp	q0, q1, [x0, 32]	// tmp333, tmp334, D.6116
	ldr	q0, [x1, 64]	// tmp335, *_203
	str	q0, [x0, 64]	// tmp335, D.6116
// varargs-dll.c:624:   char d = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 352]	// tmp336, D.6116.a
	strb	w0, [sp, 57]	// tmp336, d
// varargs-dll.c:625:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.12989, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.669, argv.__stack
	cmp	w1, 0	// D.12989,
	blt	.L1387		//,
	add	x1, x0, 15	// D.12994, iftmp.669,
	and	x1, x1, -8	// D.12995, D.12994,
	str	x1, [x19]	// D.12995, argv.__stack
	b	.L1388		//
.L1387:
	add	w2, w1, 8	// D.12997, D.12989,
	str	w2, [x19, 24]	// D.12997, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.12999, argv.__gr_offs
	cmp	w2, 0	// D.12999,
	ble	.L1389		//,
	add	x1, x0, 15	// D.13002, iftmp.669,
	and	x1, x1, -8	// D.13003, D.13002,
	str	x1, [x19]	// D.13003, argv.__stack
	b	.L1388		//
.L1389:
	ldr	x2, [x19, 8]	// D.13005, argv.__gr_top
	sxtw	x0, w1	// D.13006, D.12989
	add	x0, x2, x0	// iftmp.669, D.13005, D.13006
.L1388:
	ldr	x1, [x0]	// D.13007, *iftmp.668_103
	add	x0, sp, 432	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_222
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6117
	ldp	q0, q1, [x1, 32]	// tmp341, tmp342, *_222
	stp	q0, q1, [x0, 32]	// tmp341, tmp342, D.6117
	ldr	q0, [x1, 64]	// tmp343, *_222
	str	q0, [x0, 64]	// tmp343, D.6117
// varargs-dll.c:625:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 436]	// tmp344, D.6117.b
	str	w0, [sp, 68]	// tmp344, e
// varargs-dll.c:626:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.13008, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.671, argv.__stack
	cmp	w1, 0	// D.13008,
	blt	.L1391		//,
	add	x1, x0, 15	// D.13013, iftmp.671,
	and	x1, x1, -8	// D.13014, D.13013,
	str	x1, [x19]	// D.13014, argv.__stack
	b	.L1392		//
.L1391:
	add	w2, w1, 8	// D.13016, D.13008,
	str	w2, [x19, 24]	// D.13016, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13018, argv.__gr_offs
	cmp	w2, 0	// D.13018,
	ble	.L1393		//,
	add	x1, x0, 15	// D.13021, iftmp.671,
	and	x1, x1, -8	// D.13022, D.13021,
	str	x1, [x19]	// D.13022, argv.__stack
	b	.L1392		//
.L1393:
	ldr	x2, [x19, 8]	// D.13024, argv.__gr_top
	sxtw	x0, w1	// D.13025, D.13008
	add	x0, x2, x0	// iftmp.671, D.13024, D.13025
.L1392:
	ldr	x1, [x0]	// D.13026, *iftmp.670_105
	add	x0, sp, 512	// tmp345,,
	ldp	q0, q1, [x1]	// tmp347, tmp348, *_241
	stp	q0, q1, [x0]	// tmp347, tmp348, D.6118
	ldp	q0, q1, [x1, 32]	// tmp349, tmp350, *_241
	stp	q0, q1, [x0, 32]	// tmp349, tmp350, D.6118
	ldr	q0, [x1, 64]	// tmp351, *_241
	str	q0, [x0, 64]	// tmp351, D.6118
// varargs-dll.c:626:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 520]	// _2, D.6118.c
	bl	atoi		//
	str	w0, [sp, 72]	//, f
// varargs-dll.c:627:   char g = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.13027, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.673, argv.__stack
	cmp	w1, 0	// D.13027,
	blt	.L1395		//,
	add	x1, x0, 15	// D.13032, iftmp.673,
	and	x1, x1, -8	// D.13033, D.13032,
	str	x1, [x19]	// D.13033, argv.__stack
	b	.L1396		//
.L1395:
	add	w2, w1, 8	// D.13035, D.13027,
	str	w2, [x19, 24]	// D.13035, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13037, argv.__gr_offs
	cmp	w2, 0	// D.13037,
	ble	.L1397		//,
	add	x1, x0, 15	// D.13040, iftmp.673,
	and	x1, x1, -8	// D.13041, D.13040,
	str	x1, [x19]	// D.13041, argv.__stack
	b	.L1396		//
.L1397:
	ldr	x2, [x19, 8]	// D.13043, argv.__gr_top
	sxtw	x0, w1	// D.13044, D.13027
	add	x0, x2, x0	// iftmp.673, D.13043, D.13044
.L1396:
	ldr	x1, [x0]	// D.13045, *iftmp.672_107
	add	x0, sp, 592	// tmp352,,
	ldp	q0, q1, [x1]	// tmp354, tmp355, *_260
	stp	q0, q1, [x0]	// tmp354, tmp355, D.6119
	ldp	q0, q1, [x1, 32]	// tmp356, tmp357, *_260
	stp	q0, q1, [x0, 32]	// tmp356, tmp357, D.6119
	ldr	q0, [x1, 64]	// tmp358, *_260
	str	q0, [x0, 64]	// tmp358, D.6119
// varargs-dll.c:627:   char g = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 592]	// tmp359, D.6119.a
	strb	w0, [sp, 58]	// tmp359, g
// varargs-dll.c:628:   int h = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13046, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.675, argv.__stack
	cmp	w1, 0	// D.13046,
	blt	.L1399		//,
	add	x1, x0, 15	// D.13051, iftmp.675,
	and	x1, x1, -8	// D.13052, D.13051,
	str	x1, [x19]	// D.13052, argv.__stack
	b	.L1400		//
.L1399:
	add	w2, w1, 8	// D.13054, D.13046,
	str	w2, [x19, 24]	// D.13054, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13056, argv.__gr_offs
	cmp	w2, 0	// D.13056,
	ble	.L1401		//,
	add	x1, x0, 15	// D.13059, iftmp.675,
	and	x1, x1, -8	// D.13060, D.13059,
	str	x1, [x19]	// D.13060, argv.__stack
	b	.L1400		//
.L1401:
	ldr	x2, [x19, 8]	// D.13062, argv.__gr_top
	sxtw	x0, w1	// D.13063, D.13046
	add	x0, x2, x0	// iftmp.675, D.13062, D.13063
.L1400:
	ldr	x1, [x0]	// D.13064, *iftmp.674_109
	add	x0, sp, 672	// tmp360,,
	ldp	q0, q1, [x1]	// tmp362, tmp363, *_279
	stp	q0, q1, [x0]	// tmp362, tmp363, D.6120
	ldp	q0, q1, [x1, 32]	// tmp364, tmp365, *_279
	stp	q0, q1, [x0, 32]	// tmp364, tmp365, D.6120
	ldr	q0, [x1, 64]	// tmp366, *_279
	str	q0, [x0, 64]	// tmp366, D.6120
// varargs-dll.c:628:   int h = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 676]	// tmp367, D.6120.b
	str	w0, [sp, 76]	// tmp367, h
// varargs-dll.c:629:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.13065, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.677, argv.__stack
	cmp	w1, 0	// D.13065,
	blt	.L1403		//,
	add	x1, x0, 15	// D.13070, iftmp.677,
	and	x1, x1, -8	// D.13071, D.13070,
	str	x1, [x19]	// D.13071, argv.__stack
	b	.L1404		//
.L1403:
	add	w2, w1, 8	// D.13073, D.13065,
	str	w2, [x19, 24]	// D.13073, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13075, argv.__gr_offs
	cmp	w2, 0	// D.13075,
	ble	.L1405		//,
	add	x1, x0, 15	// D.13078, iftmp.677,
	and	x1, x1, -8	// D.13079, D.13078,
	str	x1, [x19]	// D.13079, argv.__stack
	b	.L1404		//
.L1405:
	ldr	x2, [x19, 8]	// D.13081, argv.__gr_top
	sxtw	x0, w1	// D.13082, D.13065
	add	x0, x2, x0	// iftmp.677, D.13081, D.13082
.L1404:
	ldr	x1, [x0]	// D.13083, *iftmp.676_111
	add	x0, sp, 752	// tmp368,,
	ldp	q0, q1, [x1]	// tmp370, tmp371, *_298
	stp	q0, q1, [x0]	// tmp370, tmp371, D.6121
	ldp	q0, q1, [x1, 32]	// tmp372, tmp373, *_298
	stp	q0, q1, [x0, 32]	// tmp372, tmp373, D.6121
	ldr	q0, [x1, 64]	// tmp374, *_298
	str	q0, [x0, 64]	// tmp374, D.6121
// varargs-dll.c:629:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 760]	// _3, D.6121.c
	bl	atoi		//
	str	w0, [sp, 80]	//, i
// varargs-dll.c:630:   char j = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.13084, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.679, argv.__stack
	cmp	w1, 0	// D.13084,
	blt	.L1407		//,
	add	x1, x0, 15	// D.13089, iftmp.679,
	and	x1, x1, -8	// D.13090, D.13089,
	str	x1, [x19]	// D.13090, argv.__stack
	b	.L1408		//
.L1407:
	add	w2, w1, 8	// D.13092, D.13084,
	str	w2, [x19, 24]	// D.13092, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13094, argv.__gr_offs
	cmp	w2, 0	// D.13094,
	ble	.L1409		//,
	add	x1, x0, 15	// D.13097, iftmp.679,
	and	x1, x1, -8	// D.13098, D.13097,
	str	x1, [x19]	// D.13098, argv.__stack
	b	.L1408		//
.L1409:
	ldr	x2, [x19, 8]	// D.13100, argv.__gr_top
	sxtw	x0, w1	// D.13101, D.13084
	add	x0, x2, x0	// iftmp.679, D.13100, D.13101
.L1408:
	ldr	x1, [x0]	// D.13102, *iftmp.678_113
	add	x0, sp, 832	// tmp375,,
	ldp	q0, q1, [x1]	// tmp377, tmp378, *_317
	stp	q0, q1, [x0]	// tmp377, tmp378, D.6122
	ldp	q0, q1, [x1, 32]	// tmp379, tmp380, *_317
	stp	q0, q1, [x0, 32]	// tmp379, tmp380, D.6122
	ldr	q0, [x1, 64]	// tmp381, *_317
	str	q0, [x0, 64]	// tmp381, D.6122
// varargs-dll.c:630:   char j = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 832]	// tmp382, D.6122.a
	strb	w0, [sp, 59]	// tmp382, j
// varargs-dll.c:631:   int k = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13103, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.681, argv.__stack
	cmp	w1, 0	// D.13103,
	blt	.L1411		//,
	add	x1, x0, 15	// D.13108, iftmp.681,
	and	x1, x1, -8	// D.13109, D.13108,
	str	x1, [x19]	// D.13109, argv.__stack
	b	.L1412		//
.L1411:
	add	w2, w1, 8	// D.13111, D.13103,
	str	w2, [x19, 24]	// D.13111, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13113, argv.__gr_offs
	cmp	w2, 0	// D.13113,
	ble	.L1413		//,
	add	x1, x0, 15	// D.13116, iftmp.681,
	and	x1, x1, -8	// D.13117, D.13116,
	str	x1, [x19]	// D.13117, argv.__stack
	b	.L1412		//
.L1413:
	ldr	x2, [x19, 8]	// D.13119, argv.__gr_top
	sxtw	x0, w1	// D.13120, D.13103
	add	x0, x2, x0	// iftmp.681, D.13119, D.13120
.L1412:
	ldr	x1, [x0]	// D.13121, *iftmp.680_115
	add	x0, sp, 912	// tmp383,,
	ldp	q0, q1, [x1]	// tmp385, tmp386, *_336
	stp	q0, q1, [x0]	// tmp385, tmp386, D.6123
	ldp	q0, q1, [x1, 32]	// tmp387, tmp388, *_336
	stp	q0, q1, [x0, 32]	// tmp387, tmp388, D.6123
	ldr	q0, [x1, 64]	// tmp389, *_336
	str	q0, [x0, 64]	// tmp389, D.6123
// varargs-dll.c:631:   int k = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 916]	// tmp390, D.6123.b
	str	w0, [sp, 84]	// tmp390, k
// varargs-dll.c:632:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.13122, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.683, argv.__stack
	cmp	w1, 0	// D.13122,
	blt	.L1415		//,
	add	x1, x0, 15	// D.13127, iftmp.683,
	and	x1, x1, -8	// D.13128, D.13127,
	str	x1, [x19]	// D.13128, argv.__stack
	b	.L1416		//
.L1415:
	add	w2, w1, 8	// D.13130, D.13122,
	str	w2, [x19, 24]	// D.13130, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13132, argv.__gr_offs
	cmp	w2, 0	// D.13132,
	ble	.L1417		//,
	add	x1, x0, 15	// D.13135, iftmp.683,
	and	x1, x1, -8	// D.13136, D.13135,
	str	x1, [x19]	// D.13136, argv.__stack
	b	.L1416		//
.L1417:
	ldr	x2, [x19, 8]	// D.13138, argv.__gr_top
	sxtw	x0, w1	// D.13139, D.13122
	add	x0, x2, x0	// iftmp.683, D.13138, D.13139
.L1416:
	ldr	x1, [x0]	// D.13140, *iftmp.682_117
	add	x0, sp, 992	// tmp391,,
	ldp	q0, q1, [x1]	// tmp393, tmp394, *_355
	stp	q0, q1, [x0]	// tmp393, tmp394, D.6124
	ldp	q0, q1, [x1, 32]	// tmp395, tmp396, *_355
	stp	q0, q1, [x0, 32]	// tmp395, tmp396, D.6124
	ldr	q0, [x1, 64]	// tmp397, *_355
	str	q0, [x0, 64]	// tmp397, D.6124
// varargs-dll.c:632:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 1000]	// _4, D.6124.c
	bl	atoi		//
	str	w0, [sp, 88]	//, l
// varargs-dll.c:633:   int m = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13141, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.685, argv.__stack
	cmp	w1, 0	// D.13141,
	blt	.L1419		//,
	add	x1, x0, 15	// D.13146, iftmp.685,
	and	x1, x1, -8	// D.13147, D.13146,
	str	x1, [x19]	// D.13147, argv.__stack
	b	.L1420		//
.L1419:
	add	w2, w1, 8	// D.13149, D.13141,
	str	w2, [x19, 24]	// D.13149, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13151, argv.__gr_offs
	cmp	w2, 0	// D.13151,
	ble	.L1421		//,
	add	x1, x0, 15	// D.13154, iftmp.685,
	and	x1, x1, -8	// D.13155, D.13154,
	str	x1, [x19]	// D.13155, argv.__stack
	b	.L1420		//
.L1421:
	ldr	x2, [x19, 8]	// D.13157, argv.__gr_top
	sxtw	x0, w1	// D.13158, D.13141
	add	x0, x2, x0	// iftmp.685, D.13157, D.13158
.L1420:
	ldr	x1, [x0]	// D.13159, *iftmp.684_119
	add	x0, sp, 1072	// tmp398,,
	ldp	q0, q1, [x1]	// tmp400, tmp401, *_374
	stp	q0, q1, [x0]	// tmp400, tmp401, D.6125
	ldp	q0, q1, [x1, 32]	// tmp402, tmp403, *_374
	stp	q0, q1, [x0, 32]	// tmp402, tmp403, D.6125
	ldr	q0, [x1, 64]	// tmp404, *_374
	str	q0, [x0, 64]	// tmp404, D.6125
// varargs-dll.c:633:   int m = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1076]	// tmp405, D.6125.b
	str	w0, [sp, 92]	// tmp405, m
// varargs-dll.c:634:   int n = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13160, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.687, argv.__stack
	cmp	w1, 0	// D.13160,
	blt	.L1423		//,
	add	x1, x0, 15	// D.13165, iftmp.687,
	and	x1, x1, -8	// D.13166, D.13165,
	str	x1, [x19]	// D.13166, argv.__stack
	b	.L1424		//
.L1423:
	add	w2, w1, 8	// D.13168, D.13160,
	str	w2, [x19, 24]	// D.13168, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13170, argv.__gr_offs
	cmp	w2, 0	// D.13170,
	ble	.L1425		//,
	add	x1, x0, 15	// D.13173, iftmp.687,
	and	x1, x1, -8	// D.13174, D.13173,
	str	x1, [x19]	// D.13174, argv.__stack
	b	.L1424		//
.L1425:
	ldr	x2, [x19, 8]	// D.13176, argv.__gr_top
	sxtw	x0, w1	// D.13177, D.13160
	add	x0, x2, x0	// iftmp.687, D.13176, D.13177
.L1424:
	ldr	x1, [x0]	// D.13178, *iftmp.686_121
	add	x0, sp, 1152	// tmp406,,
	ldp	q0, q1, [x1]	// tmp408, tmp409, *_393
	stp	q0, q1, [x0]	// tmp408, tmp409, D.6126
	ldp	q0, q1, [x1, 32]	// tmp410, tmp411, *_393
	stp	q0, q1, [x0, 32]	// tmp410, tmp411, D.6126
	ldr	q0, [x1, 64]	// tmp412, *_393
	str	q0, [x0, 64]	// tmp412, D.6126
// varargs-dll.c:634:   int n = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1156]	// tmp413, D.6126.b
	str	w0, [sp, 96]	// tmp413, n
// varargs-dll.c:635:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.13179, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.689, argv.__stack
	cmp	w1, 0	// D.13179,
	blt	.L1427		//,
	add	x1, x0, 15	// D.13184, iftmp.689,
	and	x1, x1, -8	// D.13185, D.13184,
	str	x1, [x19]	// D.13185, argv.__stack
	b	.L1428		//
.L1427:
	add	w2, w1, 8	// D.13187, D.13179,
	str	w2, [x19, 24]	// D.13187, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13189, argv.__gr_offs
	cmp	w2, 0	// D.13189,
	ble	.L1429		//,
	add	x1, x0, 15	// D.13192, iftmp.689,
	and	x1, x1, -8	// D.13193, D.13192,
	str	x1, [x19]	// D.13193, argv.__stack
	b	.L1428		//
.L1429:
	ldr	x2, [x19, 8]	// D.13195, argv.__gr_top
	sxtw	x0, w1	// D.13196, D.13179
	add	x0, x2, x0	// iftmp.689, D.13195, D.13196
.L1428:
	ldr	x1, [x0]	// D.13197, *iftmp.688_123
	add	x0, sp, 1232	// tmp414,,
	ldp	q0, q1, [x1]	// tmp416, tmp417, *_412
	stp	q0, q1, [x0]	// tmp416, tmp417, D.6127
	ldp	q0, q1, [x1, 32]	// tmp418, tmp419, *_412
	stp	q0, q1, [x0, 32]	// tmp418, tmp419, D.6127
	ldr	q0, [x1, 64]	// tmp420, *_412
	str	q0, [x0, 64]	// tmp420, D.6127
// varargs-dll.c:635:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 1240]	// _5, D.6127.c
	bl	atoi		//
	str	w0, [sp, 100]	//, o
// varargs-dll.c:636:   int p = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13198, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.691, argv.__stack
	cmp	w1, 0	// D.13198,
	blt	.L1431		//,
	add	x1, x0, 15	// D.13203, iftmp.691,
	and	x1, x1, -8	// D.13204, D.13203,
	str	x1, [x19]	// D.13204, argv.__stack
	b	.L1432		//
.L1431:
	add	w2, w1, 8	// D.13206, D.13198,
	str	w2, [x19, 24]	// D.13206, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13208, argv.__gr_offs
	cmp	w2, 0	// D.13208,
	ble	.L1433		//,
	add	x1, x0, 15	// D.13211, iftmp.691,
	and	x1, x1, -8	// D.13212, D.13211,
	str	x1, [x19]	// D.13212, argv.__stack
	b	.L1432		//
.L1433:
	ldr	x2, [x19, 8]	// D.13214, argv.__gr_top
	sxtw	x0, w1	// D.13215, D.13198
	add	x0, x2, x0	// iftmp.691, D.13214, D.13215
.L1432:
	ldr	x1, [x0]	// D.13216, *iftmp.690_125
	add	x0, sp, 1312	// tmp421,,
	ldp	q0, q1, [x1]	// tmp423, tmp424, *_431
	stp	q0, q1, [x0]	// tmp423, tmp424, D.6128
	ldp	q0, q1, [x1, 32]	// tmp425, tmp426, *_431
	stp	q0, q1, [x0, 32]	// tmp425, tmp426, D.6128
	ldr	q0, [x1, 64]	// tmp427, *_431
	str	q0, [x0, 64]	// tmp427, D.6128
// varargs-dll.c:636:   int p = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1316]	// tmp428, D.6128.b
	str	w0, [sp, 104]	// tmp428, p
// varargs-dll.c:637:   int q = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.13217, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.693, argv.__stack
	cmp	w1, 0	// D.13217,
	blt	.L1435		//,
	add	x1, x0, 15	// D.13222, iftmp.693,
	and	x1, x1, -8	// D.13223, D.13222,
	str	x1, [x19]	// D.13223, argv.__stack
	b	.L1436		//
.L1435:
	add	w2, w1, 8	// D.13225, D.13217,
	str	w2, [x19, 24]	// D.13225, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13227, argv.__gr_offs
	cmp	w2, 0	// D.13227,
	ble	.L1437		//,
	add	x1, x0, 15	// D.13230, iftmp.693,
	and	x1, x1, -8	// D.13231, D.13230,
	str	x1, [x19]	// D.13231, argv.__stack
	b	.L1436		//
.L1437:
	ldr	x2, [x19, 8]	// D.13233, argv.__gr_top
	sxtw	x0, w1	// D.13234, D.13217
	add	x0, x2, x0	// iftmp.693, D.13233, D.13234
.L1436:
	ldr	x1, [x0]	// D.13235, *iftmp.692_127
	add	x0, sp, 1392	// tmp429,,
	ldp	q0, q1, [x1]	// tmp431, tmp432, *_450
	stp	q0, q1, [x0]	// tmp431, tmp432, D.6129
	ldp	q0, q1, [x1, 32]	// tmp433, tmp434, *_450
	stp	q0, q1, [x0, 32]	// tmp433, tmp434, D.6129
	ldr	q0, [x1, 64]	// tmp435, *_450
	str	q0, [x0, 64]	// tmp435, D.6129
// varargs-dll.c:637:   int q = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 1396]	// tmp436, D.6129.b
	str	w0, [sp, 108]	// tmp436, q
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w1, [sp, 56]	// _6, a
	ldr	w0, [sp, 60]	// tmp437, b
	add	w1, w1, w0	// _7, _6, tmp437
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp438, c
	add	w1, w1, w0	// _8, _7, tmp438
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 57]	// _9, d
	add	w1, w1, w0	// _10, _8, _9
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp439, e
	add	w1, w1, w0	// _11, _10, tmp439
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp440, f
	add	w1, w1, w0	// _12, _11, tmp440
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 58]	// _13, g
	add	w1, w1, w0	// _14, _12, _13
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp441, h
	add	w1, w1, w0	// _15, _14, tmp441
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp442, i
	add	w1, w1, w0	// _16, _15, tmp442
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 59]	// _17, j
	add	w1, w1, w0	// _18, _16, _17
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp443, k
	add	w1, w1, w0	// _19, _18, tmp443
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp444, l
	add	w1, w1, w0	// _20, _19, tmp444
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp445, m
	add	w1, w1, w0	// _21, _20, tmp445
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp446, n
	add	w1, w1, w0	// _22, _21, tmp446
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp447, o
	add	w1, w1, w0	// _23, _22, tmp447
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp448, p
	add	w1, w1, w0	// _24, _23, tmp448
// varargs-dll.c:638:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp449, q
	add	w0, w1, w0	// _60, _24, tmp449
// varargs-dll.c:639: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1472	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE43:
	.size	use_va_list_many_composites, .-use_va_list_many_composites
	.align	2
	.global	use_va_args_few_short_vector_8_bytes
	.type	use_va_args_few_short_vector_8_bytes, %function
use_va_args_few_short_vector_8_bytes:
.LFB44:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:643: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp131,
	str	x1, [sp, 72]	// tmp131, D.13272
	mov	x1, 0	// tmp131
// varargs-dll.c:645:   va_start (argv, format);
	add	x0, sp, 272	// tmp136,,
	str	x0, [sp, 40]	// tmp136, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp137,,
	str	x0, [sp, 48]	// tmp137, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:646:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 64]	// D.13236, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.695, argv.__stack
	cmp	w1, 0	// D.13236,
	blt	.L1441		//,
	add	x1, x0, 15	// D.13241, iftmp.695,
	and	x1, x1, -8	// D.13242, D.13241,
	str	x1, [sp, 40]	// D.13242, argv.__stack
	b	.L1442		//
.L1441:
	add	w2, w1, 8	// D.13244, D.13236,
	str	w2, [sp, 64]	// D.13244, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.13246, argv.__gr_offs
	cmp	w2, 0	// D.13246,
	ble	.L1443		//,
	add	x1, x0, 15	// D.13249, iftmp.695,
	and	x1, x1, -8	// D.13250, D.13249,
	str	x1, [sp, 40]	// D.13250, argv.__stack
	b	.L1442		//
.L1443:
	ldr	x2, [sp, 48]	// D.13252, argv.__gr_top
	sxtw	x0, w1	// D.13253, D.13236
	add	x0, x2, x0	// iftmp.695, D.13252, D.13253
.L1442:
	ldr	x0, [x0]	// D.6132, *iftmp.694_14
// varargs-dll.c:646:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 32]	// tmp122, a
// varargs-dll.c:647:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 64]	// D.13254, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.697, argv.__stack
	cmp	w1, 0	// D.13254,
	blt	.L1445		//,
	add	x1, x0, 15	// D.13259, iftmp.697,
	and	x1, x1, -8	// D.13260, D.13259,
	str	x1, [sp, 40]	// D.13260, argv.__stack
	b	.L1446		//
.L1445:
	add	w2, w1, 8	// D.13262, D.13254,
	str	w2, [sp, 64]	// D.13262, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.13264, argv.__gr_offs
	cmp	w2, 0	// D.13264,
	ble	.L1447		//,
	add	x1, x0, 15	// D.13267, iftmp.697,
	and	x1, x1, -8	// D.13268, D.13267,
	str	x1, [sp, 40]	// D.13268, argv.__stack
	b	.L1446		//
.L1447:
	ldr	x2, [sp, 48]	// D.13270, argv.__gr_top
	sxtw	x0, w1	// D.13271, D.13254
	add	x0, x2, x0	// iftmp.697, D.13270, D.13271
.L1446:
	ldr	x0, [x0]	// D.6133, *iftmp.696_16
// varargs-dll.c:647:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp124, D.6133,
	str	w0, [sp, 36]	// tmp125, b
// varargs-dll.c:649:   return a + b;
	ldr	w1, [sp, 32]	// tmp126, a
	ldr	w0, [sp, 36]	// tmp127, b
	add	w0, w1, w0	// _8, tmp126, tmp127
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:650: }
	adrp	x0, :got:__stack_chk_guard	// tmp130,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp129, tmp130,
	ldr	x3, [sp, 72]	// tmp132, D.13272
	ldr	x2, [x0]	// tmp133,
	subs	x3, x3, x2	// tmp132, tmp133
	mov	x2, 0	// tmp133
	beq	.L1450		//,
	bl	__stack_chk_fail		//
.L1450:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE44:
	.size	use_va_args_few_short_vector_8_bytes, .-use_va_args_few_short_vector_8_bytes
	.align	2
	.global	use_va_list_few_short_vector_8_bytes
	.type	use_va_list_few_short_vector_8_bytes, %function
use_va_list_few_short_vector_8_bytes:
.LFB45:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:655:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13276, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.699, argv.__stack
	cmp	w1, 0	// D.13276,
	blt	.L1452		//,
	add	x1, x0, 15	// D.13281, iftmp.699,
	and	x1, x1, -8	// D.13282, D.13281,
	str	x1, [x19]	// D.13282, argv.__stack
	b	.L1453		//
.L1452:
	add	w2, w1, 8	// D.13284, D.13276,
	str	w2, [x19, 24]	// D.13284, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13286, argv.__gr_offs
	cmp	w2, 0	// D.13286,
	ble	.L1454		//,
	add	x1, x0, 15	// D.13289, iftmp.699,
	and	x1, x1, -8	// D.13290, D.13289,
	str	x1, [x19]	// D.13290, argv.__stack
	b	.L1453		//
.L1454:
	ldr	x2, [x19, 8]	// D.13292, argv.__gr_top
	sxtw	x0, w1	// D.13293, D.13276
	add	x0, x2, x0	// iftmp.699, D.13292, D.13293
.L1453:
	ldr	x0, [x0]	// D.6137, *iftmp.698_11
// varargs-dll.c:655:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 40]	// tmp117, a
// varargs-dll.c:656:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13294, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.701, argv.__stack
	cmp	w1, 0	// D.13294,
	blt	.L1456		//,
	add	x1, x0, 15	// D.13299, iftmp.701,
	and	x1, x1, -8	// D.13300, D.13299,
	str	x1, [x19]	// D.13300, argv.__stack
	b	.L1457		//
.L1456:
	add	w2, w1, 8	// D.13302, D.13294,
	str	w2, [x19, 24]	// D.13302, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13304, argv.__gr_offs
	cmp	w2, 0	// D.13304,
	ble	.L1458		//,
	add	x1, x0, 15	// D.13307, iftmp.701,
	and	x1, x1, -8	// D.13308, D.13307,
	str	x1, [x19]	// D.13308, argv.__stack
	b	.L1457		//
.L1458:
	ldr	x2, [x19, 8]	// D.13310, argv.__gr_top
	sxtw	x0, w1	// D.13311, D.13294
	add	x0, x2, x0	// iftmp.701, D.13310, D.13311
.L1457:
	ldr	x0, [x0]	// D.6138, *iftmp.700_13
// varargs-dll.c:656:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp119, D.6138,
	str	w0, [sp, 44]	// tmp120, b
// varargs-dll.c:657:   return a + b;
	ldr	w1, [sp, 40]	// tmp121, a
	ldr	w0, [sp, 44]	// tmp122, b
	add	w0, w1, w0	// _6, tmp121, tmp122
// varargs-dll.c:658: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE45:
	.size	use_va_list_few_short_vector_8_bytes, .-use_va_list_few_short_vector_8_bytes
	.align	2
	.global	use_va_args_several_short_vector_8_bytes
	.type	use_va_args_several_short_vector_8_bytes, %function
use_va_args_several_short_vector_8_bytes:
.LFB46:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:662: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp235,
	str	x1, [sp, 104]	// tmp235, D.13474
	mov	x1, 0	// tmp235
// varargs-dll.c:664:   va_start (argv, format);
	add	x0, sp, 304	// tmp240,,
	str	x0, [sp, 72]	// tmp240, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp241,,
	str	x0, [sp, 80]	// tmp241, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:665:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 96]	// D.13312, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.703, argv.__stack
	cmp	w1, 0	// D.13312,
	blt	.L1462		//,
	add	x1, x0, 15	// D.13317, iftmp.703,
	and	x1, x1, -8	// D.13318, D.13317,
	str	x1, [sp, 72]	// D.13318, argv.__stack
	b	.L1463		//
.L1462:
	add	w2, w1, 8	// D.13320, D.13312,
	str	w2, [sp, 96]	// D.13320, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13322, argv.__gr_offs
	cmp	w2, 0	// D.13322,
	ble	.L1464		//,
	add	x1, x0, 15	// D.13325, iftmp.703,
	and	x1, x1, -8	// D.13326, D.13325,
	str	x1, [sp, 72]	// D.13326, argv.__stack
	b	.L1463		//
.L1464:
	ldr	x2, [sp, 80]	// D.13328, argv.__gr_top
	sxtw	x0, w1	// D.13329, D.13312
	add	x0, x2, x0	// iftmp.703, D.13328, D.13329
.L1463:
	ldr	x0, [x0]	// D.6141, *iftmp.702_49
// varargs-dll.c:665:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 36]	// tmp206, a
// varargs-dll.c:666:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 96]	// D.13330, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.705, argv.__stack
	cmp	w1, 0	// D.13330,
	blt	.L1466		//,
	add	x1, x0, 15	// D.13335, iftmp.705,
	and	x1, x1, -8	// D.13336, D.13335,
	str	x1, [sp, 72]	// D.13336, argv.__stack
	b	.L1467		//
.L1466:
	add	w2, w1, 8	// D.13338, D.13330,
	str	w2, [sp, 96]	// D.13338, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13340, argv.__gr_offs
	cmp	w2, 0	// D.13340,
	ble	.L1468		//,
	add	x1, x0, 15	// D.13343, iftmp.705,
	and	x1, x1, -8	// D.13344, D.13343,
	str	x1, [sp, 72]	// D.13344, argv.__stack
	b	.L1467		//
.L1468:
	ldr	x2, [sp, 80]	// D.13346, argv.__gr_top
	sxtw	x0, w1	// D.13347, D.13330
	add	x0, x2, x0	// iftmp.705, D.13346, D.13347
.L1467:
	ldr	x0, [x0]	// D.6142, *iftmp.704_51
// varargs-dll.c:666:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp208, D.6142,
	str	w0, [sp, 40]	// tmp209, b
// varargs-dll.c:667:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 96]	// D.13348, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.707, argv.__stack
	cmp	w1, 0	// D.13348,
	blt	.L1470		//,
	add	x1, x0, 15	// D.13353, iftmp.707,
	and	x1, x1, -8	// D.13354, D.13353,
	str	x1, [sp, 72]	// D.13354, argv.__stack
	b	.L1471		//
.L1470:
	add	w2, w1, 8	// D.13356, D.13348,
	str	w2, [sp, 96]	// D.13356, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13358, argv.__gr_offs
	cmp	w2, 0	// D.13358,
	ble	.L1472		//,
	add	x1, x0, 15	// D.13361, iftmp.707,
	and	x1, x1, -8	// D.13362, D.13361,
	str	x1, [sp, 72]	// D.13362, argv.__stack
	b	.L1471		//
.L1472:
	ldr	x2, [sp, 80]	// D.13364, argv.__gr_top
	sxtw	x0, w1	// D.13365, D.13348
	add	x0, x2, x0	// iftmp.707, D.13364, D.13365
.L1471:
	ldr	x0, [x0]	// D.6143, *iftmp.706_53
// varargs-dll.c:667:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 44]	// tmp210, c
// varargs-dll.c:668:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 96]	// D.13366, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.709, argv.__stack
	cmp	w1, 0	// D.13366,
	blt	.L1474		//,
	add	x1, x0, 15	// D.13371, iftmp.709,
	and	x1, x1, -8	// D.13372, D.13371,
	str	x1, [sp, 72]	// D.13372, argv.__stack
	b	.L1475		//
.L1474:
	add	w2, w1, 8	// D.13374, D.13366,
	str	w2, [sp, 96]	// D.13374, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13376, argv.__gr_offs
	cmp	w2, 0	// D.13376,
	ble	.L1476		//,
	add	x1, x0, 15	// D.13379, iftmp.709,
	and	x1, x1, -8	// D.13380, D.13379,
	str	x1, [sp, 72]	// D.13380, argv.__stack
	b	.L1475		//
.L1476:
	ldr	x2, [sp, 80]	// D.13382, argv.__gr_top
	sxtw	x0, w1	// D.13383, D.13366
	add	x0, x2, x0	// iftmp.709, D.13382, D.13383
.L1475:
	ldr	x0, [x0]	// D.6144, *iftmp.708_55
// varargs-dll.c:668:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp212, D.6144,
	str	w0, [sp, 48]	// tmp213, d
// varargs-dll.c:669:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 96]	// D.13384, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.711, argv.__stack
	cmp	w1, 0	// D.13384,
	blt	.L1478		//,
	add	x1, x0, 15	// D.13389, iftmp.711,
	and	x1, x1, -8	// D.13390, D.13389,
	str	x1, [sp, 72]	// D.13390, argv.__stack
	b	.L1479		//
.L1478:
	add	w2, w1, 8	// D.13392, D.13384,
	str	w2, [sp, 96]	// D.13392, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13394, argv.__gr_offs
	cmp	w2, 0	// D.13394,
	ble	.L1480		//,
	add	x1, x0, 15	// D.13397, iftmp.711,
	and	x1, x1, -8	// D.13398, D.13397,
	str	x1, [sp, 72]	// D.13398, argv.__stack
	b	.L1479		//
.L1480:
	ldr	x2, [sp, 80]	// D.13400, argv.__gr_top
	sxtw	x0, w1	// D.13401, D.13384
	add	x0, x2, x0	// iftmp.711, D.13400, D.13401
.L1479:
	ldr	x0, [x0]	// D.6145, *iftmp.710_57
// varargs-dll.c:669:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 52]	// tmp214, e
// varargs-dll.c:670:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 96]	// D.13402, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.713, argv.__stack
	cmp	w1, 0	// D.13402,
	blt	.L1482		//,
	add	x1, x0, 15	// D.13407, iftmp.713,
	and	x1, x1, -8	// D.13408, D.13407,
	str	x1, [sp, 72]	// D.13408, argv.__stack
	b	.L1483		//
.L1482:
	add	w2, w1, 8	// D.13410, D.13402,
	str	w2, [sp, 96]	// D.13410, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13412, argv.__gr_offs
	cmp	w2, 0	// D.13412,
	ble	.L1484		//,
	add	x1, x0, 15	// D.13415, iftmp.713,
	and	x1, x1, -8	// D.13416, D.13415,
	str	x1, [sp, 72]	// D.13416, argv.__stack
	b	.L1483		//
.L1484:
	ldr	x2, [sp, 80]	// D.13418, argv.__gr_top
	sxtw	x0, w1	// D.13419, D.13402
	add	x0, x2, x0	// iftmp.713, D.13418, D.13419
.L1483:
	ldr	x0, [x0]	// D.6146, *iftmp.712_59
// varargs-dll.c:670:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp216, D.6146,
	str	w0, [sp, 56]	// tmp217, f
// varargs-dll.c:671:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 96]	// D.13420, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.715, argv.__stack
	cmp	w1, 0	// D.13420,
	blt	.L1486		//,
	add	x1, x0, 15	// D.13425, iftmp.715,
	and	x1, x1, -8	// D.13426, D.13425,
	str	x1, [sp, 72]	// D.13426, argv.__stack
	b	.L1487		//
.L1486:
	add	w2, w1, 8	// D.13428, D.13420,
	str	w2, [sp, 96]	// D.13428, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13430, argv.__gr_offs
	cmp	w2, 0	// D.13430,
	ble	.L1488		//,
	add	x1, x0, 15	// D.13433, iftmp.715,
	and	x1, x1, -8	// D.13434, D.13433,
	str	x1, [sp, 72]	// D.13434, argv.__stack
	b	.L1487		//
.L1488:
	ldr	x2, [sp, 80]	// D.13436, argv.__gr_top
	sxtw	x0, w1	// D.13437, D.13420
	add	x0, x2, x0	// iftmp.715, D.13436, D.13437
.L1487:
	ldr	x0, [x0]	// D.6147, *iftmp.714_61
// varargs-dll.c:671:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 60]	// tmp218, g
// varargs-dll.c:672:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 96]	// D.13438, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.717, argv.__stack
	cmp	w1, 0	// D.13438,
	blt	.L1490		//,
	add	x1, x0, 15	// D.13443, iftmp.717,
	and	x1, x1, -8	// D.13444, D.13443,
	str	x1, [sp, 72]	// D.13444, argv.__stack
	b	.L1491		//
.L1490:
	add	w2, w1, 8	// D.13446, D.13438,
	str	w2, [sp, 96]	// D.13446, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13448, argv.__gr_offs
	cmp	w2, 0	// D.13448,
	ble	.L1492		//,
	add	x1, x0, 15	// D.13451, iftmp.717,
	and	x1, x1, -8	// D.13452, D.13451,
	str	x1, [sp, 72]	// D.13452, argv.__stack
	b	.L1491		//
.L1492:
	ldr	x2, [sp, 80]	// D.13454, argv.__gr_top
	sxtw	x0, w1	// D.13455, D.13438
	add	x0, x2, x0	// iftmp.717, D.13454, D.13455
.L1491:
	ldr	x0, [x0]	// D.6148, *iftmp.716_63
// varargs-dll.c:672:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp220, D.6148,
	str	w0, [sp, 64]	// tmp221, h
// varargs-dll.c:673:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 96]	// D.13456, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.719, argv.__stack
	cmp	w1, 0	// D.13456,
	blt	.L1494		//,
	add	x1, x0, 15	// D.13461, iftmp.719,
	and	x1, x1, -8	// D.13462, D.13461,
	str	x1, [sp, 72]	// D.13462, argv.__stack
	b	.L1495		//
.L1494:
	add	w2, w1, 8	// D.13464, D.13456,
	str	w2, [sp, 96]	// D.13464, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.13466, argv.__gr_offs
	cmp	w2, 0	// D.13466,
	ble	.L1496		//,
	add	x1, x0, 15	// D.13469, iftmp.719,
	and	x1, x1, -8	// D.13470, D.13469,
	str	x1, [sp, 72]	// D.13470, argv.__stack
	b	.L1495		//
.L1496:
	ldr	x2, [sp, 80]	// D.13472, argv.__gr_top
	sxtw	x0, w1	// D.13473, D.13456
	add	x0, x2, x0	// iftmp.719, D.13472, D.13473
.L1495:
	ldr	x0, [x0]	// D.6149, *iftmp.718_65
// varargs-dll.c:673:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 68]	// tmp222, i
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp223, a
	ldr	w0, [sp, 40]	// tmp224, b
	add	w1, w1, w0	// _1, tmp223, tmp224
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp225, c
	add	w1, w1, w0	// _2, _1, tmp225
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp226, d
	add	w1, w1, w0	// _3, _2, tmp226
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp227, e
	add	w1, w1, w0	// _4, _3, tmp227
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp228, f
	add	w1, w1, w0	// _5, _4, tmp228
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp229, g
	add	w1, w1, w0	// _6, _5, tmp229
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp230, h
	add	w1, w1, w0	// _7, _6, tmp230
// varargs-dll.c:675:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp231, i
	add	w0, w1, w0	// _29, _7, tmp231
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:676: }
	adrp	x0, :got:__stack_chk_guard	// tmp234,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp233, tmp234,
	ldr	x3, [sp, 104]	// tmp236, D.13474
	ldr	x2, [x0]	// tmp237,
	subs	x3, x3, x2	// tmp236, tmp237
	mov	x2, 0	// tmp237
	beq	.L1499		//,
	bl	__stack_chk_fail		//
.L1499:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE46:
	.size	use_va_args_several_short_vector_8_bytes, .-use_va_args_several_short_vector_8_bytes
	.align	2
	.global	use_va_list_several_short_vector_8_bytes
	.type	use_va_list_several_short_vector_8_bytes, %function
use_va_list_several_short_vector_8_bytes:
.LFB47:
	.cfi_startproc
	str	x19, [sp, -80]!	//,
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -80
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:681:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13478, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.721, argv.__stack
	cmp	w1, 0	// D.13478,
	blt	.L1501		//,
	add	x1, x0, 15	// D.13483, iftmp.721,
	and	x1, x1, -8	// D.13484, D.13483,
	str	x1, [x19]	// D.13484, argv.__stack
	b	.L1502		//
.L1501:
	add	w2, w1, 8	// D.13486, D.13478,
	str	w2, [x19, 24]	// D.13486, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13488, argv.__gr_offs
	cmp	w2, 0	// D.13488,
	ble	.L1503		//,
	add	x1, x0, 15	// D.13491, iftmp.721,
	and	x1, x1, -8	// D.13492, D.13491,
	str	x1, [x19]	// D.13492, argv.__stack
	b	.L1502		//
.L1503:
	ldr	x2, [x19, 8]	// D.13494, argv.__gr_top
	sxtw	x0, w1	// D.13495, D.13478
	add	x0, x2, x0	// iftmp.721, D.13494, D.13495
.L1502:
	ldr	x0, [x0]	// D.6153, *iftmp.720_46
// varargs-dll.c:681:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 44]	// tmp201, a
// varargs-dll.c:682:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13496, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.723, argv.__stack
	cmp	w1, 0	// D.13496,
	blt	.L1505		//,
	add	x1, x0, 15	// D.13501, iftmp.723,
	and	x1, x1, -8	// D.13502, D.13501,
	str	x1, [x19]	// D.13502, argv.__stack
	b	.L1506		//
.L1505:
	add	w2, w1, 8	// D.13504, D.13496,
	str	w2, [x19, 24]	// D.13504, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13506, argv.__gr_offs
	cmp	w2, 0	// D.13506,
	ble	.L1507		//,
	add	x1, x0, 15	// D.13509, iftmp.723,
	and	x1, x1, -8	// D.13510, D.13509,
	str	x1, [x19]	// D.13510, argv.__stack
	b	.L1506		//
.L1507:
	ldr	x2, [x19, 8]	// D.13512, argv.__gr_top
	sxtw	x0, w1	// D.13513, D.13496
	add	x0, x2, x0	// iftmp.723, D.13512, D.13513
.L1506:
	ldr	x0, [x0]	// D.6154, *iftmp.722_48
// varargs-dll.c:682:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp203, D.6154,
	str	w0, [sp, 48]	// tmp204, b
// varargs-dll.c:683:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13514, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.725, argv.__stack
	cmp	w1, 0	// D.13514,
	blt	.L1509		//,
	add	x1, x0, 15	// D.13519, iftmp.725,
	and	x1, x1, -8	// D.13520, D.13519,
	str	x1, [x19]	// D.13520, argv.__stack
	b	.L1510		//
.L1509:
	add	w2, w1, 8	// D.13522, D.13514,
	str	w2, [x19, 24]	// D.13522, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13524, argv.__gr_offs
	cmp	w2, 0	// D.13524,
	ble	.L1511		//,
	add	x1, x0, 15	// D.13527, iftmp.725,
	and	x1, x1, -8	// D.13528, D.13527,
	str	x1, [x19]	// D.13528, argv.__stack
	b	.L1510		//
.L1511:
	ldr	x2, [x19, 8]	// D.13530, argv.__gr_top
	sxtw	x0, w1	// D.13531, D.13514
	add	x0, x2, x0	// iftmp.725, D.13530, D.13531
.L1510:
	ldr	x0, [x0]	// D.6155, *iftmp.724_50
// varargs-dll.c:683:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 52]	// tmp205, c
// varargs-dll.c:684:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13532, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.727, argv.__stack
	cmp	w1, 0	// D.13532,
	blt	.L1513		//,
	add	x1, x0, 15	// D.13537, iftmp.727,
	and	x1, x1, -8	// D.13538, D.13537,
	str	x1, [x19]	// D.13538, argv.__stack
	b	.L1514		//
.L1513:
	add	w2, w1, 8	// D.13540, D.13532,
	str	w2, [x19, 24]	// D.13540, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13542, argv.__gr_offs
	cmp	w2, 0	// D.13542,
	ble	.L1515		//,
	add	x1, x0, 15	// D.13545, iftmp.727,
	and	x1, x1, -8	// D.13546, D.13545,
	str	x1, [x19]	// D.13546, argv.__stack
	b	.L1514		//
.L1515:
	ldr	x2, [x19, 8]	// D.13548, argv.__gr_top
	sxtw	x0, w1	// D.13549, D.13532
	add	x0, x2, x0	// iftmp.727, D.13548, D.13549
.L1514:
	ldr	x0, [x0]	// D.6156, *iftmp.726_52
// varargs-dll.c:684:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp207, D.6156,
	str	w0, [sp, 56]	// tmp208, d
// varargs-dll.c:685:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13550, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.729, argv.__stack
	cmp	w1, 0	// D.13550,
	blt	.L1517		//,
	add	x1, x0, 15	// D.13555, iftmp.729,
	and	x1, x1, -8	// D.13556, D.13555,
	str	x1, [x19]	// D.13556, argv.__stack
	b	.L1518		//
.L1517:
	add	w2, w1, 8	// D.13558, D.13550,
	str	w2, [x19, 24]	// D.13558, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13560, argv.__gr_offs
	cmp	w2, 0	// D.13560,
	ble	.L1519		//,
	add	x1, x0, 15	// D.13563, iftmp.729,
	and	x1, x1, -8	// D.13564, D.13563,
	str	x1, [x19]	// D.13564, argv.__stack
	b	.L1518		//
.L1519:
	ldr	x2, [x19, 8]	// D.13566, argv.__gr_top
	sxtw	x0, w1	// D.13567, D.13550
	add	x0, x2, x0	// iftmp.729, D.13566, D.13567
.L1518:
	ldr	x0, [x0]	// D.6157, *iftmp.728_54
// varargs-dll.c:685:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 60]	// tmp209, e
// varargs-dll.c:686:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13568, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.731, argv.__stack
	cmp	w1, 0	// D.13568,
	blt	.L1521		//,
	add	x1, x0, 15	// D.13573, iftmp.731,
	and	x1, x1, -8	// D.13574, D.13573,
	str	x1, [x19]	// D.13574, argv.__stack
	b	.L1522		//
.L1521:
	add	w2, w1, 8	// D.13576, D.13568,
	str	w2, [x19, 24]	// D.13576, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13578, argv.__gr_offs
	cmp	w2, 0	// D.13578,
	ble	.L1523		//,
	add	x1, x0, 15	// D.13581, iftmp.731,
	and	x1, x1, -8	// D.13582, D.13581,
	str	x1, [x19]	// D.13582, argv.__stack
	b	.L1522		//
.L1523:
	ldr	x2, [x19, 8]	// D.13584, argv.__gr_top
	sxtw	x0, w1	// D.13585, D.13568
	add	x0, x2, x0	// iftmp.731, D.13584, D.13585
.L1522:
	ldr	x0, [x0]	// D.6158, *iftmp.730_56
// varargs-dll.c:686:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp211, D.6158,
	str	w0, [sp, 64]	// tmp212, f
// varargs-dll.c:687:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13586, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.733, argv.__stack
	cmp	w1, 0	// D.13586,
	blt	.L1525		//,
	add	x1, x0, 15	// D.13591, iftmp.733,
	and	x1, x1, -8	// D.13592, D.13591,
	str	x1, [x19]	// D.13592, argv.__stack
	b	.L1526		//
.L1525:
	add	w2, w1, 8	// D.13594, D.13586,
	str	w2, [x19, 24]	// D.13594, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13596, argv.__gr_offs
	cmp	w2, 0	// D.13596,
	ble	.L1527		//,
	add	x1, x0, 15	// D.13599, iftmp.733,
	and	x1, x1, -8	// D.13600, D.13599,
	str	x1, [x19]	// D.13600, argv.__stack
	b	.L1526		//
.L1527:
	ldr	x2, [x19, 8]	// D.13602, argv.__gr_top
	sxtw	x0, w1	// D.13603, D.13586
	add	x0, x2, x0	// iftmp.733, D.13602, D.13603
.L1526:
	ldr	x0, [x0]	// D.6159, *iftmp.732_58
// varargs-dll.c:687:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 68]	// tmp213, g
// varargs-dll.c:688:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13604, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.735, argv.__stack
	cmp	w1, 0	// D.13604,
	blt	.L1529		//,
	add	x1, x0, 15	// D.13609, iftmp.735,
	and	x1, x1, -8	// D.13610, D.13609,
	str	x1, [x19]	// D.13610, argv.__stack
	b	.L1530		//
.L1529:
	add	w2, w1, 8	// D.13612, D.13604,
	str	w2, [x19, 24]	// D.13612, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13614, argv.__gr_offs
	cmp	w2, 0	// D.13614,
	ble	.L1531		//,
	add	x1, x0, 15	// D.13617, iftmp.735,
	and	x1, x1, -8	// D.13618, D.13617,
	str	x1, [x19]	// D.13618, argv.__stack
	b	.L1530		//
.L1531:
	ldr	x2, [x19, 8]	// D.13620, argv.__gr_top
	sxtw	x0, w1	// D.13621, D.13604
	add	x0, x2, x0	// iftmp.735, D.13620, D.13621
.L1530:
	ldr	x0, [x0]	// D.6160, *iftmp.734_60
// varargs-dll.c:688:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp215, D.6160,
	str	w0, [sp, 72]	// tmp216, h
// varargs-dll.c:689:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13622, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.737, argv.__stack
	cmp	w1, 0	// D.13622,
	blt	.L1533		//,
	add	x1, x0, 15	// D.13627, iftmp.737,
	and	x1, x1, -8	// D.13628, D.13627,
	str	x1, [x19]	// D.13628, argv.__stack
	b	.L1534		//
.L1533:
	add	w2, w1, 8	// D.13630, D.13622,
	str	w2, [x19, 24]	// D.13630, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13632, argv.__gr_offs
	cmp	w2, 0	// D.13632,
	ble	.L1535		//,
	add	x1, x0, 15	// D.13635, iftmp.737,
	and	x1, x1, -8	// D.13636, D.13635,
	str	x1, [x19]	// D.13636, argv.__stack
	b	.L1534		//
.L1535:
	ldr	x2, [x19, 8]	// D.13638, argv.__gr_top
	sxtw	x0, w1	// D.13639, D.13622
	add	x0, x2, x0	// iftmp.737, D.13638, D.13639
.L1534:
	ldr	x0, [x0]	// D.6161, *iftmp.736_62
// varargs-dll.c:689:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 76]	// tmp217, i
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp218, a
	ldr	w0, [sp, 48]	// tmp219, b
	add	w1, w1, w0	// _1, tmp218, tmp219
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp220, c
	add	w1, w1, w0	// _2, _1, tmp220
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp221, d
	add	w1, w1, w0	// _3, _2, tmp221
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp222, e
	add	w1, w1, w0	// _4, _3, tmp222
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp223, f
	add	w1, w1, w0	// _5, _4, tmp223
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp224, g
	add	w1, w1, w0	// _6, _5, tmp224
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp225, h
	add	w1, w1, w0	// _7, _6, tmp225
// varargs-dll.c:690:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp226, i
	add	w0, w1, w0	// _27, _7, tmp226
// varargs-dll.c:691: }
	ldr	x19, [sp], 80	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE47:
	.size	use_va_list_several_short_vector_8_bytes, .-use_va_list_several_short_vector_8_bytes
	.align	2
	.global	use_va_args_many_short_vector_8_bytes
	.type	use_va_args_many_short_vector_8_bytes, %function
use_va_args_many_short_vector_8_bytes:
.LFB48:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:695: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp355,
	str	x1, [sp, 136]	// tmp355, D.13946
	mov	x1, 0	// tmp355
// varargs-dll.c:697:   va_start (argv, format);
	add	x0, sp, 336	// tmp360,,
	str	x0, [sp, 104]	// tmp360, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp361,,
	str	x0, [sp, 112]	// tmp361, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:698:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13640, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.739, argv.__stack
	cmp	w1, 0	// D.13640,
	blt	.L1539		//,
	add	x1, x0, 15	// D.13645, iftmp.739,
	and	x1, x1, -8	// D.13646, D.13645,
	str	x1, [sp, 104]	// D.13646, argv.__stack
	b	.L1540		//
.L1539:
	add	w2, w1, 8	// D.13648, D.13640,
	str	w2, [sp, 128]	// D.13648, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13650, argv.__gr_offs
	cmp	w2, 0	// D.13650,
	ble	.L1541		//,
	add	x1, x0, 15	// D.13653, iftmp.739,
	and	x1, x1, -8	// D.13654, D.13653,
	str	x1, [sp, 104]	// D.13654, argv.__stack
	b	.L1540		//
.L1541:
	ldr	x2, [sp, 112]	// D.13656, argv.__gr_top
	sxtw	x0, w1	// D.13657, D.13640
	add	x0, x2, x0	// iftmp.739, D.13656, D.13657
.L1540:
	ldr	x0, [x0]	// D.6164, *iftmp.738_89
// varargs-dll.c:698:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 36]	// tmp302, a
// varargs-dll.c:699:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13658, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.741, argv.__stack
	cmp	w1, 0	// D.13658,
	blt	.L1543		//,
	add	x1, x0, 15	// D.13663, iftmp.741,
	and	x1, x1, -8	// D.13664, D.13663,
	str	x1, [sp, 104]	// D.13664, argv.__stack
	b	.L1544		//
.L1543:
	add	w2, w1, 8	// D.13666, D.13658,
	str	w2, [sp, 128]	// D.13666, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13668, argv.__gr_offs
	cmp	w2, 0	// D.13668,
	ble	.L1545		//,
	add	x1, x0, 15	// D.13671, iftmp.741,
	and	x1, x1, -8	// D.13672, D.13671,
	str	x1, [sp, 104]	// D.13672, argv.__stack
	b	.L1544		//
.L1545:
	ldr	x2, [sp, 112]	// D.13674, argv.__gr_top
	sxtw	x0, w1	// D.13675, D.13658
	add	x0, x2, x0	// iftmp.741, D.13674, D.13675
.L1544:
	ldr	x0, [x0]	// D.6165, *iftmp.740_91
// varargs-dll.c:699:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp304, D.6165,
	str	w0, [sp, 40]	// tmp305, b
// varargs-dll.c:700:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13676, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.743, argv.__stack
	cmp	w1, 0	// D.13676,
	blt	.L1547		//,
	add	x1, x0, 15	// D.13681, iftmp.743,
	and	x1, x1, -8	// D.13682, D.13681,
	str	x1, [sp, 104]	// D.13682, argv.__stack
	b	.L1548		//
.L1547:
	add	w2, w1, 8	// D.13684, D.13676,
	str	w2, [sp, 128]	// D.13684, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13686, argv.__gr_offs
	cmp	w2, 0	// D.13686,
	ble	.L1549		//,
	add	x1, x0, 15	// D.13689, iftmp.743,
	and	x1, x1, -8	// D.13690, D.13689,
	str	x1, [sp, 104]	// D.13690, argv.__stack
	b	.L1548		//
.L1549:
	ldr	x2, [sp, 112]	// D.13692, argv.__gr_top
	sxtw	x0, w1	// D.13693, D.13676
	add	x0, x2, x0	// iftmp.743, D.13692, D.13693
.L1548:
	ldr	x0, [x0]	// D.6166, *iftmp.742_93
// varargs-dll.c:700:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 44]	// tmp306, c
// varargs-dll.c:701:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13694, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.745, argv.__stack
	cmp	w1, 0	// D.13694,
	blt	.L1551		//,
	add	x1, x0, 15	// D.13699, iftmp.745,
	and	x1, x1, -8	// D.13700, D.13699,
	str	x1, [sp, 104]	// D.13700, argv.__stack
	b	.L1552		//
.L1551:
	add	w2, w1, 8	// D.13702, D.13694,
	str	w2, [sp, 128]	// D.13702, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13704, argv.__gr_offs
	cmp	w2, 0	// D.13704,
	ble	.L1553		//,
	add	x1, x0, 15	// D.13707, iftmp.745,
	and	x1, x1, -8	// D.13708, D.13707,
	str	x1, [sp, 104]	// D.13708, argv.__stack
	b	.L1552		//
.L1553:
	ldr	x2, [sp, 112]	// D.13710, argv.__gr_top
	sxtw	x0, w1	// D.13711, D.13694
	add	x0, x2, x0	// iftmp.745, D.13710, D.13711
.L1552:
	ldr	x0, [x0]	// D.6167, *iftmp.744_95
// varargs-dll.c:701:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp308, D.6167,
	str	w0, [sp, 48]	// tmp309, d
// varargs-dll.c:702:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13712, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.747, argv.__stack
	cmp	w1, 0	// D.13712,
	blt	.L1555		//,
	add	x1, x0, 15	// D.13717, iftmp.747,
	and	x1, x1, -8	// D.13718, D.13717,
	str	x1, [sp, 104]	// D.13718, argv.__stack
	b	.L1556		//
.L1555:
	add	w2, w1, 8	// D.13720, D.13712,
	str	w2, [sp, 128]	// D.13720, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13722, argv.__gr_offs
	cmp	w2, 0	// D.13722,
	ble	.L1557		//,
	add	x1, x0, 15	// D.13725, iftmp.747,
	and	x1, x1, -8	// D.13726, D.13725,
	str	x1, [sp, 104]	// D.13726, argv.__stack
	b	.L1556		//
.L1557:
	ldr	x2, [sp, 112]	// D.13728, argv.__gr_top
	sxtw	x0, w1	// D.13729, D.13712
	add	x0, x2, x0	// iftmp.747, D.13728, D.13729
.L1556:
	ldr	x0, [x0]	// D.6168, *iftmp.746_97
// varargs-dll.c:702:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 52]	// tmp310, e
// varargs-dll.c:703:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13730, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.749, argv.__stack
	cmp	w1, 0	// D.13730,
	blt	.L1559		//,
	add	x1, x0, 15	// D.13735, iftmp.749,
	and	x1, x1, -8	// D.13736, D.13735,
	str	x1, [sp, 104]	// D.13736, argv.__stack
	b	.L1560		//
.L1559:
	add	w2, w1, 8	// D.13738, D.13730,
	str	w2, [sp, 128]	// D.13738, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13740, argv.__gr_offs
	cmp	w2, 0	// D.13740,
	ble	.L1561		//,
	add	x1, x0, 15	// D.13743, iftmp.749,
	and	x1, x1, -8	// D.13744, D.13743,
	str	x1, [sp, 104]	// D.13744, argv.__stack
	b	.L1560		//
.L1561:
	ldr	x2, [sp, 112]	// D.13746, argv.__gr_top
	sxtw	x0, w1	// D.13747, D.13730
	add	x0, x2, x0	// iftmp.749, D.13746, D.13747
.L1560:
	ldr	x0, [x0]	// D.6169, *iftmp.748_99
// varargs-dll.c:703:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp312, D.6169,
	str	w0, [sp, 56]	// tmp313, f
// varargs-dll.c:704:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13748, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.751, argv.__stack
	cmp	w1, 0	// D.13748,
	blt	.L1563		//,
	add	x1, x0, 15	// D.13753, iftmp.751,
	and	x1, x1, -8	// D.13754, D.13753,
	str	x1, [sp, 104]	// D.13754, argv.__stack
	b	.L1564		//
.L1563:
	add	w2, w1, 8	// D.13756, D.13748,
	str	w2, [sp, 128]	// D.13756, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13758, argv.__gr_offs
	cmp	w2, 0	// D.13758,
	ble	.L1565		//,
	add	x1, x0, 15	// D.13761, iftmp.751,
	and	x1, x1, -8	// D.13762, D.13761,
	str	x1, [sp, 104]	// D.13762, argv.__stack
	b	.L1564		//
.L1565:
	ldr	x2, [sp, 112]	// D.13764, argv.__gr_top
	sxtw	x0, w1	// D.13765, D.13748
	add	x0, x2, x0	// iftmp.751, D.13764, D.13765
.L1564:
	ldr	x0, [x0]	// D.6170, *iftmp.750_101
// varargs-dll.c:704:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 60]	// tmp314, g
// varargs-dll.c:705:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13766, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.753, argv.__stack
	cmp	w1, 0	// D.13766,
	blt	.L1567		//,
	add	x1, x0, 15	// D.13771, iftmp.753,
	and	x1, x1, -8	// D.13772, D.13771,
	str	x1, [sp, 104]	// D.13772, argv.__stack
	b	.L1568		//
.L1567:
	add	w2, w1, 8	// D.13774, D.13766,
	str	w2, [sp, 128]	// D.13774, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13776, argv.__gr_offs
	cmp	w2, 0	// D.13776,
	ble	.L1569		//,
	add	x1, x0, 15	// D.13779, iftmp.753,
	and	x1, x1, -8	// D.13780, D.13779,
	str	x1, [sp, 104]	// D.13780, argv.__stack
	b	.L1568		//
.L1569:
	ldr	x2, [sp, 112]	// D.13782, argv.__gr_top
	sxtw	x0, w1	// D.13783, D.13766
	add	x0, x2, x0	// iftmp.753, D.13782, D.13783
.L1568:
	ldr	x0, [x0]	// D.6171, *iftmp.752_103
// varargs-dll.c:705:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp316, D.6171,
	str	w0, [sp, 64]	// tmp317, h
// varargs-dll.c:706:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13784, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.755, argv.__stack
	cmp	w1, 0	// D.13784,
	blt	.L1571		//,
	add	x1, x0, 15	// D.13789, iftmp.755,
	and	x1, x1, -8	// D.13790, D.13789,
	str	x1, [sp, 104]	// D.13790, argv.__stack
	b	.L1572		//
.L1571:
	add	w2, w1, 8	// D.13792, D.13784,
	str	w2, [sp, 128]	// D.13792, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13794, argv.__gr_offs
	cmp	w2, 0	// D.13794,
	ble	.L1573		//,
	add	x1, x0, 15	// D.13797, iftmp.755,
	and	x1, x1, -8	// D.13798, D.13797,
	str	x1, [sp, 104]	// D.13798, argv.__stack
	b	.L1572		//
.L1573:
	ldr	x2, [sp, 112]	// D.13800, argv.__gr_top
	sxtw	x0, w1	// D.13801, D.13784
	add	x0, x2, x0	// iftmp.755, D.13800, D.13801
.L1572:
	ldr	x0, [x0]	// D.6172, *iftmp.754_105
// varargs-dll.c:706:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 68]	// tmp318, i
// varargs-dll.c:707:   int j = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13802, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.757, argv.__stack
	cmp	w1, 0	// D.13802,
	blt	.L1575		//,
	add	x1, x0, 15	// D.13807, iftmp.757,
	and	x1, x1, -8	// D.13808, D.13807,
	str	x1, [sp, 104]	// D.13808, argv.__stack
	b	.L1576		//
.L1575:
	add	w2, w1, 8	// D.13810, D.13802,
	str	w2, [sp, 128]	// D.13810, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13812, argv.__gr_offs
	cmp	w2, 0	// D.13812,
	ble	.L1577		//,
	add	x1, x0, 15	// D.13815, iftmp.757,
	and	x1, x1, -8	// D.13816, D.13815,
	str	x1, [sp, 104]	// D.13816, argv.__stack
	b	.L1576		//
.L1577:
	ldr	x2, [sp, 112]	// D.13818, argv.__gr_top
	sxtw	x0, w1	// D.13819, D.13802
	add	x0, x2, x0	// iftmp.757, D.13818, D.13819
.L1576:
	ldr	x0, [x0]	// D.6173, *iftmp.756_107
// varargs-dll.c:707:   int j = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp320, D.6173,
	str	w0, [sp, 72]	// tmp321, j
// varargs-dll.c:708:   int k = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13820, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.759, argv.__stack
	cmp	w1, 0	// D.13820,
	blt	.L1579		//,
	add	x1, x0, 15	// D.13825, iftmp.759,
	and	x1, x1, -8	// D.13826, D.13825,
	str	x1, [sp, 104]	// D.13826, argv.__stack
	b	.L1580		//
.L1579:
	add	w2, w1, 8	// D.13828, D.13820,
	str	w2, [sp, 128]	// D.13828, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13830, argv.__gr_offs
	cmp	w2, 0	// D.13830,
	ble	.L1581		//,
	add	x1, x0, 15	// D.13833, iftmp.759,
	and	x1, x1, -8	// D.13834, D.13833,
	str	x1, [sp, 104]	// D.13834, argv.__stack
	b	.L1580		//
.L1581:
	ldr	x2, [sp, 112]	// D.13836, argv.__gr_top
	sxtw	x0, w1	// D.13837, D.13820
	add	x0, x2, x0	// iftmp.759, D.13836, D.13837
.L1580:
	ldr	x0, [x0]	// D.6174, *iftmp.758_109
// varargs-dll.c:708:   int k = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 76]	// tmp322, k
// varargs-dll.c:709:   int l = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13838, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.761, argv.__stack
	cmp	w1, 0	// D.13838,
	blt	.L1583		//,
	add	x1, x0, 15	// D.13843, iftmp.761,
	and	x1, x1, -8	// D.13844, D.13843,
	str	x1, [sp, 104]	// D.13844, argv.__stack
	b	.L1584		//
.L1583:
	add	w2, w1, 8	// D.13846, D.13838,
	str	w2, [sp, 128]	// D.13846, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13848, argv.__gr_offs
	cmp	w2, 0	// D.13848,
	ble	.L1585		//,
	add	x1, x0, 15	// D.13851, iftmp.761,
	and	x1, x1, -8	// D.13852, D.13851,
	str	x1, [sp, 104]	// D.13852, argv.__stack
	b	.L1584		//
.L1585:
	ldr	x2, [sp, 112]	// D.13854, argv.__gr_top
	sxtw	x0, w1	// D.13855, D.13838
	add	x0, x2, x0	// iftmp.761, D.13854, D.13855
.L1584:
	ldr	x0, [x0]	// D.6175, *iftmp.760_111
// varargs-dll.c:709:   int l = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp324, D.6175,
	str	w0, [sp, 80]	// tmp325, l
// varargs-dll.c:710:   int m = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13856, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.763, argv.__stack
	cmp	w1, 0	// D.13856,
	blt	.L1587		//,
	add	x1, x0, 15	// D.13861, iftmp.763,
	and	x1, x1, -8	// D.13862, D.13861,
	str	x1, [sp, 104]	// D.13862, argv.__stack
	b	.L1588		//
.L1587:
	add	w2, w1, 8	// D.13864, D.13856,
	str	w2, [sp, 128]	// D.13864, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13866, argv.__gr_offs
	cmp	w2, 0	// D.13866,
	ble	.L1589		//,
	add	x1, x0, 15	// D.13869, iftmp.763,
	and	x1, x1, -8	// D.13870, D.13869,
	str	x1, [sp, 104]	// D.13870, argv.__stack
	b	.L1588		//
.L1589:
	ldr	x2, [sp, 112]	// D.13872, argv.__gr_top
	sxtw	x0, w1	// D.13873, D.13856
	add	x0, x2, x0	// iftmp.763, D.13872, D.13873
.L1588:
	ldr	x0, [x0]	// D.6176, *iftmp.762_113
// varargs-dll.c:710:   int m = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 84]	// tmp326, m
// varargs-dll.c:711:   int n = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13874, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.765, argv.__stack
	cmp	w1, 0	// D.13874,
	blt	.L1591		//,
	add	x1, x0, 15	// D.13879, iftmp.765,
	and	x1, x1, -8	// D.13880, D.13879,
	str	x1, [sp, 104]	// D.13880, argv.__stack
	b	.L1592		//
.L1591:
	add	w2, w1, 8	// D.13882, D.13874,
	str	w2, [sp, 128]	// D.13882, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13884, argv.__gr_offs
	cmp	w2, 0	// D.13884,
	ble	.L1593		//,
	add	x1, x0, 15	// D.13887, iftmp.765,
	and	x1, x1, -8	// D.13888, D.13887,
	str	x1, [sp, 104]	// D.13888, argv.__stack
	b	.L1592		//
.L1593:
	ldr	x2, [sp, 112]	// D.13890, argv.__gr_top
	sxtw	x0, w1	// D.13891, D.13874
	add	x0, x2, x0	// iftmp.765, D.13890, D.13891
.L1592:
	ldr	x0, [x0]	// D.6177, *iftmp.764_115
// varargs-dll.c:711:   int n = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp328, D.6177,
	str	w0, [sp, 88]	// tmp329, n
// varargs-dll.c:712:   int o = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13892, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.767, argv.__stack
	cmp	w1, 0	// D.13892,
	blt	.L1595		//,
	add	x1, x0, 15	// D.13897, iftmp.767,
	and	x1, x1, -8	// D.13898, D.13897,
	str	x1, [sp, 104]	// D.13898, argv.__stack
	b	.L1596		//
.L1595:
	add	w2, w1, 8	// D.13900, D.13892,
	str	w2, [sp, 128]	// D.13900, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13902, argv.__gr_offs
	cmp	w2, 0	// D.13902,
	ble	.L1597		//,
	add	x1, x0, 15	// D.13905, iftmp.767,
	and	x1, x1, -8	// D.13906, D.13905,
	str	x1, [sp, 104]	// D.13906, argv.__stack
	b	.L1596		//
.L1597:
	ldr	x2, [sp, 112]	// D.13908, argv.__gr_top
	sxtw	x0, w1	// D.13909, D.13892
	add	x0, x2, x0	// iftmp.767, D.13908, D.13909
.L1596:
	ldr	x0, [x0]	// D.6178, *iftmp.766_117
// varargs-dll.c:712:   int o = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 92]	// tmp330, o
// varargs-dll.c:713:   int p = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [sp, 128]	// D.13910, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.769, argv.__stack
	cmp	w1, 0	// D.13910,
	blt	.L1599		//,
	add	x1, x0, 15	// D.13915, iftmp.769,
	and	x1, x1, -8	// D.13916, D.13915,
	str	x1, [sp, 104]	// D.13916, argv.__stack
	b	.L1600		//
.L1599:
	add	w2, w1, 8	// D.13918, D.13910,
	str	w2, [sp, 128]	// D.13918, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13920, argv.__gr_offs
	cmp	w2, 0	// D.13920,
	ble	.L1601		//,
	add	x1, x0, 15	// D.13923, iftmp.769,
	and	x1, x1, -8	// D.13924, D.13923,
	str	x1, [sp, 104]	// D.13924, argv.__stack
	b	.L1600		//
.L1601:
	ldr	x2, [sp, 112]	// D.13926, argv.__gr_top
	sxtw	x0, w1	// D.13927, D.13910
	add	x0, x2, x0	// iftmp.769, D.13926, D.13927
.L1600:
	ldr	x0, [x0]	// D.6179, *iftmp.768_119
// varargs-dll.c:713:   int p = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp332, D.6179,
	str	w0, [sp, 96]	// tmp333, p
// varargs-dll.c:714:   int q = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [sp, 128]	// D.13928, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.771, argv.__stack
	cmp	w1, 0	// D.13928,
	blt	.L1603		//,
	add	x1, x0, 15	// D.13933, iftmp.771,
	and	x1, x1, -8	// D.13934, D.13933,
	str	x1, [sp, 104]	// D.13934, argv.__stack
	b	.L1604		//
.L1603:
	add	w2, w1, 8	// D.13936, D.13928,
	str	w2, [sp, 128]	// D.13936, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.13938, argv.__gr_offs
	cmp	w2, 0	// D.13938,
	ble	.L1605		//,
	add	x1, x0, 15	// D.13941, iftmp.771,
	and	x1, x1, -8	// D.13942, D.13941,
	str	x1, [sp, 104]	// D.13942, argv.__stack
	b	.L1604		//
.L1605:
	ldr	x2, [sp, 112]	// D.13944, argv.__gr_top
	sxtw	x0, w1	// D.13945, D.13928
	add	x0, x2, x0	// iftmp.771, D.13944, D.13945
.L1604:
	ldr	x0, [x0]	// D.6180, *iftmp.770_121
// varargs-dll.c:714:   int q = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 100]	// tmp334, q
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp335, a
	ldr	w0, [sp, 40]	// tmp336, b
	add	w1, w1, w0	// _1, tmp335, tmp336
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp337, c
	add	w1, w1, w0	// _2, _1, tmp337
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp338, d
	add	w1, w1, w0	// _3, _2, tmp338
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp339, e
	add	w1, w1, w0	// _4, _3, tmp339
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp340, f
	add	w1, w1, w0	// _5, _4, tmp340
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp341, g
	add	w1, w1, w0	// _6, _5, tmp341
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp342, h
	add	w1, w1, w0	// _7, _6, tmp342
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp343, i
	add	w1, w1, w0	// _8, _7, tmp343
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp344, j
	add	w1, w1, w0	// _9, _8, tmp344
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp345, k
	add	w1, w1, w0	// _10, _9, tmp345
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp346, l
	add	w1, w1, w0	// _11, _10, tmp346
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp347, m
	add	w1, w1, w0	// _12, _11, tmp347
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp348, n
	add	w1, w1, w0	// _13, _12, tmp348
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp349, o
	add	w1, w1, w0	// _14, _13, tmp349
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp350, p
	add	w1, w1, w0	// _15, _14, tmp350
// varargs-dll.c:716:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp351, q
	add	w0, w1, w0	// _53, _15, tmp351
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:717: }
	adrp	x0, :got:__stack_chk_guard	// tmp354,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp353, tmp354,
	ldr	x3, [sp, 136]	// tmp356, D.13946
	ldr	x2, [x0]	// tmp357,
	subs	x3, x3, x2	// tmp356, tmp357
	mov	x2, 0	// tmp357
	beq	.L1608		//,
	bl	__stack_chk_fail		//
.L1608:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE48:
	.size	use_va_args_many_short_vector_8_bytes, .-use_va_args_many_short_vector_8_bytes
	.align	2
	.global	use_va_list_many_short_vector_8_bytes
	.type	use_va_list_many_short_vector_8_bytes, %function
use_va_list_many_short_vector_8_bytes:
.LFB49:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:722:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13950, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.773, argv.__stack
	cmp	w1, 0	// D.13950,
	blt	.L1610		//,
	add	x1, x0, 15	// D.13955, iftmp.773,
	and	x1, x1, -8	// D.13956, D.13955,
	str	x1, [x19]	// D.13956, argv.__stack
	b	.L1611		//
.L1610:
	add	w2, w1, 8	// D.13958, D.13950,
	str	w2, [x19, 24]	// D.13958, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13960, argv.__gr_offs
	cmp	w2, 0	// D.13960,
	ble	.L1612		//,
	add	x1, x0, 15	// D.13963, iftmp.773,
	and	x1, x1, -8	// D.13964, D.13963,
	str	x1, [x19]	// D.13964, argv.__stack
	b	.L1611		//
.L1612:
	ldr	x2, [x19, 8]	// D.13966, argv.__gr_top
	sxtw	x0, w1	// D.13967, D.13950
	add	x0, x2, x0	// iftmp.773, D.13966, D.13967
.L1611:
	ldr	x0, [x0]	// D.6184, *iftmp.772_86
// varargs-dll.c:722:   int a = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 44]	// tmp297, a
// varargs-dll.c:723:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.13968, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.775, argv.__stack
	cmp	w1, 0	// D.13968,
	blt	.L1614		//,
	add	x1, x0, 15	// D.13973, iftmp.775,
	and	x1, x1, -8	// D.13974, D.13973,
	str	x1, [x19]	// D.13974, argv.__stack
	b	.L1615		//
.L1614:
	add	w2, w1, 8	// D.13976, D.13968,
	str	w2, [x19, 24]	// D.13976, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13978, argv.__gr_offs
	cmp	w2, 0	// D.13978,
	ble	.L1616		//,
	add	x1, x0, 15	// D.13981, iftmp.775,
	and	x1, x1, -8	// D.13982, D.13981,
	str	x1, [x19]	// D.13982, argv.__stack
	b	.L1615		//
.L1616:
	ldr	x2, [x19, 8]	// D.13984, argv.__gr_top
	sxtw	x0, w1	// D.13985, D.13968
	add	x0, x2, x0	// iftmp.775, D.13984, D.13985
.L1615:
	ldr	x0, [x0]	// D.6185, *iftmp.774_88
// varargs-dll.c:723:   int b = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp299, D.6185,
	str	w0, [sp, 48]	// tmp300, b
// varargs-dll.c:724:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.13986, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.777, argv.__stack
	cmp	w1, 0	// D.13986,
	blt	.L1618		//,
	add	x1, x0, 15	// D.13991, iftmp.777,
	and	x1, x1, -8	// D.13992, D.13991,
	str	x1, [x19]	// D.13992, argv.__stack
	b	.L1619		//
.L1618:
	add	w2, w1, 8	// D.13994, D.13986,
	str	w2, [x19, 24]	// D.13994, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.13996, argv.__gr_offs
	cmp	w2, 0	// D.13996,
	ble	.L1620		//,
	add	x1, x0, 15	// D.13999, iftmp.777,
	and	x1, x1, -8	// D.14000, D.13999,
	str	x1, [x19]	// D.14000, argv.__stack
	b	.L1619		//
.L1620:
	ldr	x2, [x19, 8]	// D.14002, argv.__gr_top
	sxtw	x0, w1	// D.14003, D.13986
	add	x0, x2, x0	// iftmp.777, D.14002, D.14003
.L1619:
	ldr	x0, [x0]	// D.6186, *iftmp.776_90
// varargs-dll.c:724:   int c = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 52]	// tmp301, c
// varargs-dll.c:725:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14004, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.779, argv.__stack
	cmp	w1, 0	// D.14004,
	blt	.L1622		//,
	add	x1, x0, 15	// D.14009, iftmp.779,
	and	x1, x1, -8	// D.14010, D.14009,
	str	x1, [x19]	// D.14010, argv.__stack
	b	.L1623		//
.L1622:
	add	w2, w1, 8	// D.14012, D.14004,
	str	w2, [x19, 24]	// D.14012, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14014, argv.__gr_offs
	cmp	w2, 0	// D.14014,
	ble	.L1624		//,
	add	x1, x0, 15	// D.14017, iftmp.779,
	and	x1, x1, -8	// D.14018, D.14017,
	str	x1, [x19]	// D.14018, argv.__stack
	b	.L1623		//
.L1624:
	ldr	x2, [x19, 8]	// D.14020, argv.__gr_top
	sxtw	x0, w1	// D.14021, D.14004
	add	x0, x2, x0	// iftmp.779, D.14020, D.14021
.L1623:
	ldr	x0, [x0]	// D.6187, *iftmp.778_92
// varargs-dll.c:725:   int d = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp303, D.6187,
	str	w0, [sp, 56]	// tmp304, d
// varargs-dll.c:726:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14022, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.781, argv.__stack
	cmp	w1, 0	// D.14022,
	blt	.L1626		//,
	add	x1, x0, 15	// D.14027, iftmp.781,
	and	x1, x1, -8	// D.14028, D.14027,
	str	x1, [x19]	// D.14028, argv.__stack
	b	.L1627		//
.L1626:
	add	w2, w1, 8	// D.14030, D.14022,
	str	w2, [x19, 24]	// D.14030, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14032, argv.__gr_offs
	cmp	w2, 0	// D.14032,
	ble	.L1628		//,
	add	x1, x0, 15	// D.14035, iftmp.781,
	and	x1, x1, -8	// D.14036, D.14035,
	str	x1, [x19]	// D.14036, argv.__stack
	b	.L1627		//
.L1628:
	ldr	x2, [x19, 8]	// D.14038, argv.__gr_top
	sxtw	x0, w1	// D.14039, D.14022
	add	x0, x2, x0	// iftmp.781, D.14038, D.14039
.L1627:
	ldr	x0, [x0]	// D.6188, *iftmp.780_94
// varargs-dll.c:726:   int e = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 60]	// tmp305, e
// varargs-dll.c:727:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14040, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.783, argv.__stack
	cmp	w1, 0	// D.14040,
	blt	.L1630		//,
	add	x1, x0, 15	// D.14045, iftmp.783,
	and	x1, x1, -8	// D.14046, D.14045,
	str	x1, [x19]	// D.14046, argv.__stack
	b	.L1631		//
.L1630:
	add	w2, w1, 8	// D.14048, D.14040,
	str	w2, [x19, 24]	// D.14048, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14050, argv.__gr_offs
	cmp	w2, 0	// D.14050,
	ble	.L1632		//,
	add	x1, x0, 15	// D.14053, iftmp.783,
	and	x1, x1, -8	// D.14054, D.14053,
	str	x1, [x19]	// D.14054, argv.__stack
	b	.L1631		//
.L1632:
	ldr	x2, [x19, 8]	// D.14056, argv.__gr_top
	sxtw	x0, w1	// D.14057, D.14040
	add	x0, x2, x0	// iftmp.783, D.14056, D.14057
.L1631:
	ldr	x0, [x0]	// D.6189, *iftmp.782_96
// varargs-dll.c:727:   int f = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp307, D.6189,
	str	w0, [sp, 64]	// tmp308, f
// varargs-dll.c:728:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14058, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.785, argv.__stack
	cmp	w1, 0	// D.14058,
	blt	.L1634		//,
	add	x1, x0, 15	// D.14063, iftmp.785,
	and	x1, x1, -8	// D.14064, D.14063,
	str	x1, [x19]	// D.14064, argv.__stack
	b	.L1635		//
.L1634:
	add	w2, w1, 8	// D.14066, D.14058,
	str	w2, [x19, 24]	// D.14066, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14068, argv.__gr_offs
	cmp	w2, 0	// D.14068,
	ble	.L1636		//,
	add	x1, x0, 15	// D.14071, iftmp.785,
	and	x1, x1, -8	// D.14072, D.14071,
	str	x1, [x19]	// D.14072, argv.__stack
	b	.L1635		//
.L1636:
	ldr	x2, [x19, 8]	// D.14074, argv.__gr_top
	sxtw	x0, w1	// D.14075, D.14058
	add	x0, x2, x0	// iftmp.785, D.14074, D.14075
.L1635:
	ldr	x0, [x0]	// D.6190, *iftmp.784_98
// varargs-dll.c:728:   int g = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 68]	// tmp309, g
// varargs-dll.c:729:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14076, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.787, argv.__stack
	cmp	w1, 0	// D.14076,
	blt	.L1638		//,
	add	x1, x0, 15	// D.14081, iftmp.787,
	and	x1, x1, -8	// D.14082, D.14081,
	str	x1, [x19]	// D.14082, argv.__stack
	b	.L1639		//
.L1638:
	add	w2, w1, 8	// D.14084, D.14076,
	str	w2, [x19, 24]	// D.14084, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14086, argv.__gr_offs
	cmp	w2, 0	// D.14086,
	ble	.L1640		//,
	add	x1, x0, 15	// D.14089, iftmp.787,
	and	x1, x1, -8	// D.14090, D.14089,
	str	x1, [x19]	// D.14090, argv.__stack
	b	.L1639		//
.L1640:
	ldr	x2, [x19, 8]	// D.14092, argv.__gr_top
	sxtw	x0, w1	// D.14093, D.14076
	add	x0, x2, x0	// iftmp.787, D.14092, D.14093
.L1639:
	ldr	x0, [x0]	// D.6191, *iftmp.786_100
// varargs-dll.c:729:   int h = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp311, D.6191,
	str	w0, [sp, 72]	// tmp312, h
// varargs-dll.c:730:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14094, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.789, argv.__stack
	cmp	w1, 0	// D.14094,
	blt	.L1642		//,
	add	x1, x0, 15	// D.14099, iftmp.789,
	and	x1, x1, -8	// D.14100, D.14099,
	str	x1, [x19]	// D.14100, argv.__stack
	b	.L1643		//
.L1642:
	add	w2, w1, 8	// D.14102, D.14094,
	str	w2, [x19, 24]	// D.14102, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14104, argv.__gr_offs
	cmp	w2, 0	// D.14104,
	ble	.L1644		//,
	add	x1, x0, 15	// D.14107, iftmp.789,
	and	x1, x1, -8	// D.14108, D.14107,
	str	x1, [x19]	// D.14108, argv.__stack
	b	.L1643		//
.L1644:
	ldr	x2, [x19, 8]	// D.14110, argv.__gr_top
	sxtw	x0, w1	// D.14111, D.14094
	add	x0, x2, x0	// iftmp.789, D.14110, D.14111
.L1643:
	ldr	x0, [x0]	// D.6192, *iftmp.788_102
// varargs-dll.c:730:   int i = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 76]	// tmp313, i
// varargs-dll.c:731:   int j = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14112, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.791, argv.__stack
	cmp	w1, 0	// D.14112,
	blt	.L1646		//,
	add	x1, x0, 15	// D.14117, iftmp.791,
	and	x1, x1, -8	// D.14118, D.14117,
	str	x1, [x19]	// D.14118, argv.__stack
	b	.L1647		//
.L1646:
	add	w2, w1, 8	// D.14120, D.14112,
	str	w2, [x19, 24]	// D.14120, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14122, argv.__gr_offs
	cmp	w2, 0	// D.14122,
	ble	.L1648		//,
	add	x1, x0, 15	// D.14125, iftmp.791,
	and	x1, x1, -8	// D.14126, D.14125,
	str	x1, [x19]	// D.14126, argv.__stack
	b	.L1647		//
.L1648:
	ldr	x2, [x19, 8]	// D.14128, argv.__gr_top
	sxtw	x0, w1	// D.14129, D.14112
	add	x0, x2, x0	// iftmp.791, D.14128, D.14129
.L1647:
	ldr	x0, [x0]	// D.6193, *iftmp.790_104
// varargs-dll.c:731:   int j = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp315, D.6193,
	str	w0, [sp, 80]	// tmp316, j
// varargs-dll.c:732:   int k = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14130, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.793, argv.__stack
	cmp	w1, 0	// D.14130,
	blt	.L1650		//,
	add	x1, x0, 15	// D.14135, iftmp.793,
	and	x1, x1, -8	// D.14136, D.14135,
	str	x1, [x19]	// D.14136, argv.__stack
	b	.L1651		//
.L1650:
	add	w2, w1, 8	// D.14138, D.14130,
	str	w2, [x19, 24]	// D.14138, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14140, argv.__gr_offs
	cmp	w2, 0	// D.14140,
	ble	.L1652		//,
	add	x1, x0, 15	// D.14143, iftmp.793,
	and	x1, x1, -8	// D.14144, D.14143,
	str	x1, [x19]	// D.14144, argv.__stack
	b	.L1651		//
.L1652:
	ldr	x2, [x19, 8]	// D.14146, argv.__gr_top
	sxtw	x0, w1	// D.14147, D.14130
	add	x0, x2, x0	// iftmp.793, D.14146, D.14147
.L1651:
	ldr	x0, [x0]	// D.6194, *iftmp.792_106
// varargs-dll.c:732:   int k = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 84]	// tmp317, k
// varargs-dll.c:733:   int l = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14148, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.795, argv.__stack
	cmp	w1, 0	// D.14148,
	blt	.L1654		//,
	add	x1, x0, 15	// D.14153, iftmp.795,
	and	x1, x1, -8	// D.14154, D.14153,
	str	x1, [x19]	// D.14154, argv.__stack
	b	.L1655		//
.L1654:
	add	w2, w1, 8	// D.14156, D.14148,
	str	w2, [x19, 24]	// D.14156, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14158, argv.__gr_offs
	cmp	w2, 0	// D.14158,
	ble	.L1656		//,
	add	x1, x0, 15	// D.14161, iftmp.795,
	and	x1, x1, -8	// D.14162, D.14161,
	str	x1, [x19]	// D.14162, argv.__stack
	b	.L1655		//
.L1656:
	ldr	x2, [x19, 8]	// D.14164, argv.__gr_top
	sxtw	x0, w1	// D.14165, D.14148
	add	x0, x2, x0	// iftmp.795, D.14164, D.14165
.L1655:
	ldr	x0, [x0]	// D.6195, *iftmp.794_108
// varargs-dll.c:733:   int l = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp319, D.6195,
	str	w0, [sp, 88]	// tmp320, l
// varargs-dll.c:734:   int m = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14166, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.797, argv.__stack
	cmp	w1, 0	// D.14166,
	blt	.L1658		//,
	add	x1, x0, 15	// D.14171, iftmp.797,
	and	x1, x1, -8	// D.14172, D.14171,
	str	x1, [x19]	// D.14172, argv.__stack
	b	.L1659		//
.L1658:
	add	w2, w1, 8	// D.14174, D.14166,
	str	w2, [x19, 24]	// D.14174, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14176, argv.__gr_offs
	cmp	w2, 0	// D.14176,
	ble	.L1660		//,
	add	x1, x0, 15	// D.14179, iftmp.797,
	and	x1, x1, -8	// D.14180, D.14179,
	str	x1, [x19]	// D.14180, argv.__stack
	b	.L1659		//
.L1660:
	ldr	x2, [x19, 8]	// D.14182, argv.__gr_top
	sxtw	x0, w1	// D.14183, D.14166
	add	x0, x2, x0	// iftmp.797, D.14182, D.14183
.L1659:
	ldr	x0, [x0]	// D.6196, *iftmp.796_110
// varargs-dll.c:734:   int m = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 92]	// tmp321, m
// varargs-dll.c:735:   int n = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14184, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.799, argv.__stack
	cmp	w1, 0	// D.14184,
	blt	.L1662		//,
	add	x1, x0, 15	// D.14189, iftmp.799,
	and	x1, x1, -8	// D.14190, D.14189,
	str	x1, [x19]	// D.14190, argv.__stack
	b	.L1663		//
.L1662:
	add	w2, w1, 8	// D.14192, D.14184,
	str	w2, [x19, 24]	// D.14192, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14194, argv.__gr_offs
	cmp	w2, 0	// D.14194,
	ble	.L1664		//,
	add	x1, x0, 15	// D.14197, iftmp.799,
	and	x1, x1, -8	// D.14198, D.14197,
	str	x1, [x19]	// D.14198, argv.__stack
	b	.L1663		//
.L1664:
	ldr	x2, [x19, 8]	// D.14200, argv.__gr_top
	sxtw	x0, w1	// D.14201, D.14184
	add	x0, x2, x0	// iftmp.799, D.14200, D.14201
.L1663:
	ldr	x0, [x0]	// D.6197, *iftmp.798_112
// varargs-dll.c:735:   int n = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp323, D.6197,
	str	w0, [sp, 96]	// tmp324, n
// varargs-dll.c:736:   int o = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14202, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.801, argv.__stack
	cmp	w1, 0	// D.14202,
	blt	.L1666		//,
	add	x1, x0, 15	// D.14207, iftmp.801,
	and	x1, x1, -8	// D.14208, D.14207,
	str	x1, [x19]	// D.14208, argv.__stack
	b	.L1667		//
.L1666:
	add	w2, w1, 8	// D.14210, D.14202,
	str	w2, [x19, 24]	// D.14210, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14212, argv.__gr_offs
	cmp	w2, 0	// D.14212,
	ble	.L1668		//,
	add	x1, x0, 15	// D.14215, iftmp.801,
	and	x1, x1, -8	// D.14216, D.14215,
	str	x1, [x19]	// D.14216, argv.__stack
	b	.L1667		//
.L1668:
	ldr	x2, [x19, 8]	// D.14218, argv.__gr_top
	sxtw	x0, w1	// D.14219, D.14202
	add	x0, x2, x0	// iftmp.801, D.14218, D.14219
.L1667:
	ldr	x0, [x0]	// D.6198, *iftmp.800_114
// varargs-dll.c:736:   int o = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 100]	// tmp325, o
// varargs-dll.c:737:   int p = va_arg (argv, struct short_vector_8_bytes).b;
	ldr	w1, [x19, 24]	// D.14220, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.803, argv.__stack
	cmp	w1, 0	// D.14220,
	blt	.L1670		//,
	add	x1, x0, 15	// D.14225, iftmp.803,
	and	x1, x1, -8	// D.14226, D.14225,
	str	x1, [x19]	// D.14226, argv.__stack
	b	.L1671		//
.L1670:
	add	w2, w1, 8	// D.14228, D.14220,
	str	w2, [x19, 24]	// D.14228, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14230, argv.__gr_offs
	cmp	w2, 0	// D.14230,
	ble	.L1672		//,
	add	x1, x0, 15	// D.14233, iftmp.803,
	and	x1, x1, -8	// D.14234, D.14233,
	str	x1, [x19]	// D.14234, argv.__stack
	b	.L1671		//
.L1672:
	ldr	x2, [x19, 8]	// D.14236, argv.__gr_top
	sxtw	x0, w1	// D.14237, D.14220
	add	x0, x2, x0	// iftmp.803, D.14236, D.14237
.L1671:
	ldr	x0, [x0]	// D.6199, *iftmp.802_116
// varargs-dll.c:737:   int p = va_arg (argv, struct short_vector_8_bytes).b;
	asr	x0, x0, 32	// tmp327, D.6199,
	str	w0, [sp, 104]	// tmp328, p
// varargs-dll.c:738:   int q = va_arg (argv, struct short_vector_8_bytes).a;
	ldr	w1, [x19, 24]	// D.14238, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.805, argv.__stack
	cmp	w1, 0	// D.14238,
	blt	.L1674		//,
	add	x1, x0, 15	// D.14243, iftmp.805,
	and	x1, x1, -8	// D.14244, D.14243,
	str	x1, [x19]	// D.14244, argv.__stack
	b	.L1675		//
.L1674:
	add	w2, w1, 8	// D.14246, D.14238,
	str	w2, [x19, 24]	// D.14246, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14248, argv.__gr_offs
	cmp	w2, 0	// D.14248,
	ble	.L1676		//,
	add	x1, x0, 15	// D.14251, iftmp.805,
	and	x1, x1, -8	// D.14252, D.14251,
	str	x1, [x19]	// D.14252, argv.__stack
	b	.L1675		//
.L1676:
	ldr	x2, [x19, 8]	// D.14254, argv.__gr_top
	sxtw	x0, w1	// D.14255, D.14238
	add	x0, x2, x0	// iftmp.805, D.14254, D.14255
.L1675:
	ldr	x0, [x0]	// D.6200, *iftmp.804_118
// varargs-dll.c:738:   int q = va_arg (argv, struct short_vector_8_bytes).a;
	str	w0, [sp, 108]	// tmp329, q
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp330, a
	ldr	w0, [sp, 48]	// tmp331, b
	add	w1, w1, w0	// _1, tmp330, tmp331
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp332, c
	add	w1, w1, w0	// _2, _1, tmp332
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp333, d
	add	w1, w1, w0	// _3, _2, tmp333
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp334, e
	add	w1, w1, w0	// _4, _3, tmp334
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp335, f
	add	w1, w1, w0	// _5, _4, tmp335
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp336, g
	add	w1, w1, w0	// _6, _5, tmp336
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp337, h
	add	w1, w1, w0	// _7, _6, tmp337
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp338, i
	add	w1, w1, w0	// _8, _7, tmp338
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp339, j
	add	w1, w1, w0	// _9, _8, tmp339
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp340, k
	add	w1, w1, w0	// _10, _9, tmp340
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp341, l
	add	w1, w1, w0	// _11, _10, tmp341
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp342, m
	add	w1, w1, w0	// _12, _11, tmp342
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp343, n
	add	w1, w1, w0	// _13, _12, tmp343
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp344, o
	add	w1, w1, w0	// _14, _13, tmp344
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp345, p
	add	w1, w1, w0	// _15, _14, tmp345
// varargs-dll.c:739:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp346, q
	add	w0, w1, w0	// _51, _15, tmp346
// varargs-dll.c:740: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE49:
	.size	use_va_list_many_short_vector_8_bytes, .-use_va_list_many_short_vector_8_bytes
	.align	2
	.global	use_va_args_few_not_short_vector_12_bytes
	.type	use_va_args_few_not_short_vector_12_bytes, %function
use_va_args_few_not_short_vector_12_bytes:
.LFB50:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:744: {
	adrp	x0, :got:__stack_chk_guard	// tmp115,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp114, tmp115,
	ldr	x1, [x0]	// tmp135,
	str	x1, [sp, 104]	// tmp135, D.14292
	mov	x1, 0	// tmp135
// varargs-dll.c:746:   va_start (argv, format);
	add	x0, sp, 304	// tmp140,,
	str	x0, [sp, 72]	// tmp140, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp141,,
	str	x0, [sp, 80]	// tmp141, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp117,,
	str	x0, [sp, 88]	// tmp117, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp118,
	str	w0, [sp, 96]	// tmp118, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp119,
	str	w0, [sp, 100]	// tmp119, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:747:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 96]	// D.14256, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.807, argv.__stack
	cmp	w1, 0	// D.14256,
	blt	.L1680		//,
	add	x1, x0, 19	// D.14261, iftmp.807,
	and	x1, x1, -8	// D.14262, D.14261,
	str	x1, [sp, 72]	// D.14262, argv.__stack
	b	.L1681		//
.L1680:
	add	w2, w1, 16	// D.14264, D.14256,
	str	w2, [sp, 96]	// D.14264, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.14266, argv.__gr_offs
	cmp	w2, 0	// D.14266,
	ble	.L1682		//,
	add	x1, x0, 19	// D.14269, iftmp.807,
	and	x1, x1, -8	// D.14270, D.14269,
	str	x1, [sp, 72]	// D.14270, argv.__stack
	b	.L1681		//
.L1682:
	ldr	x2, [sp, 80]	// D.14272, argv.__gr_top
	sxtw	x0, w1	// D.14273, D.14256
	add	x0, x2, x0	// iftmp.807, D.14272, D.14273
.L1681:
	add	x1, sp, 40	// tmp120,,
	ldr	x2, [x0]	// tmp122, *iftmp.806_14
	str	x2, [x1]	// tmp122, D.6203
	ldr	w0, [x0, 8]	// tmp123, *iftmp.806_14
	str	w0, [x1, 8]	// tmp123, D.6203
// varargs-dll.c:747:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 40]	// tmp124, D.6203.a
	str	w0, [sp, 32]	// tmp124, a
// varargs-dll.c:748:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 96]	// D.14274, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.809, argv.__stack
	cmp	w1, 0	// D.14274,
	blt	.L1684		//,
	add	x1, x0, 19	// D.14279, iftmp.809,
	and	x1, x1, -8	// D.14280, D.14279,
	str	x1, [sp, 72]	// D.14280, argv.__stack
	b	.L1685		//
.L1684:
	add	w2, w1, 16	// D.14282, D.14274,
	str	w2, [sp, 96]	// D.14282, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.14284, argv.__gr_offs
	cmp	w2, 0	// D.14284,
	ble	.L1686		//,
	add	x1, x0, 19	// D.14287, iftmp.809,
	and	x1, x1, -8	// D.14288, D.14287,
	str	x1, [sp, 72]	// D.14288, argv.__stack
	b	.L1685		//
.L1686:
	ldr	x2, [sp, 80]	// D.14290, argv.__gr_top
	sxtw	x0, w1	// D.14291, D.14274
	add	x0, x2, x0	// iftmp.809, D.14290, D.14291
.L1685:
	add	x1, sp, 56	// tmp125,,
	ldr	x2, [x0]	// tmp127, *iftmp.808_16
	str	x2, [x1]	// tmp127, D.6204
	ldr	w0, [x0, 8]	// tmp128, *iftmp.808_16
	str	w0, [x1, 8]	// tmp128, D.6204
// varargs-dll.c:748:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 60]	// tmp129, D.6204.b
	str	w0, [sp, 36]	// tmp129, b
// varargs-dll.c:750:   return a + b;
	ldr	w1, [sp, 32]	// tmp130, a
	ldr	w0, [sp, 36]	// tmp131, b
	add	w0, w1, w0	// _8, tmp130, tmp131
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:751: }
	adrp	x0, :got:__stack_chk_guard	// tmp134,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp133, tmp134,
	ldr	x3, [sp, 104]	// tmp136, D.14292
	ldr	x2, [x0]	// tmp137,
	subs	x3, x3, x2	// tmp136, tmp137
	mov	x2, 0	// tmp137
	beq	.L1689		//,
	bl	__stack_chk_fail		//
.L1689:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE50:
	.size	use_va_args_few_not_short_vector_12_bytes, .-use_va_args_few_not_short_vector_12_bytes
	.align	2
	.global	use_va_list_few_not_short_vector_12_bytes
	.type	use_va_list_few_not_short_vector_12_bytes, %function
use_va_list_few_not_short_vector_12_bytes:
.LFB51:
	.cfi_startproc
	str	x19, [sp, -80]!	//,
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -80
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp114,
// varargs-dll.c:756:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.14296, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.811, argv.__stack
	cmp	w1, 0	// D.14296,
	blt	.L1691		//,
	add	x1, x0, 19	// D.14301, iftmp.811,
	and	x1, x1, -8	// D.14302, D.14301,
	str	x1, [x19]	// D.14302, argv.__stack
	b	.L1692		//
.L1691:
	add	w2, w1, 16	// D.14304, D.14296,
	str	w2, [x19, 24]	// D.14304, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14306, argv.__gr_offs
	cmp	w2, 0	// D.14306,
	ble	.L1693		//,
	add	x1, x0, 19	// D.14309, iftmp.811,
	and	x1, x1, -8	// D.14310, D.14309,
	str	x1, [x19]	// D.14310, argv.__stack
	b	.L1692		//
.L1693:
	ldr	x2, [x19, 8]	// D.14312, argv.__gr_top
	sxtw	x0, w1	// D.14313, D.14296
	add	x0, x2, x0	// iftmp.811, D.14312, D.14313
.L1692:
	add	x1, sp, 48	// tmp115,,
	ldr	x2, [x0]	// tmp117, *iftmp.810_11
	str	x2, [x1]	// tmp117, D.6208
	ldr	w0, [x0, 8]	// tmp118, *iftmp.810_11
	str	w0, [x1, 8]	// tmp118, D.6208
// varargs-dll.c:756:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 48]	// tmp119, D.6208.a
	str	w0, [sp, 40]	// tmp119, a
// varargs-dll.c:757:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.14314, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.813, argv.__stack
	cmp	w1, 0	// D.14314,
	blt	.L1695		//,
	add	x1, x0, 19	// D.14319, iftmp.813,
	and	x1, x1, -8	// D.14320, D.14319,
	str	x1, [x19]	// D.14320, argv.__stack
	b	.L1696		//
.L1695:
	add	w2, w1, 16	// D.14322, D.14314,
	str	w2, [x19, 24]	// D.14322, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14324, argv.__gr_offs
	cmp	w2, 0	// D.14324,
	ble	.L1697		//,
	add	x1, x0, 19	// D.14327, iftmp.813,
	and	x1, x1, -8	// D.14328, D.14327,
	str	x1, [x19]	// D.14328, argv.__stack
	b	.L1696		//
.L1697:
	ldr	x2, [x19, 8]	// D.14330, argv.__gr_top
	sxtw	x0, w1	// D.14331, D.14314
	add	x0, x2, x0	// iftmp.813, D.14330, D.14331
.L1696:
	add	x1, sp, 64	// tmp120,,
	ldr	x2, [x0]	// tmp122, *iftmp.812_13
	str	x2, [x1]	// tmp122, D.6209
	ldr	w0, [x0, 8]	// tmp123, *iftmp.812_13
	str	w0, [x1, 8]	// tmp123, D.6209
// varargs-dll.c:757:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 68]	// tmp124, D.6209.b
	str	w0, [sp, 44]	// tmp124, b
// varargs-dll.c:758:   return a + b;
	ldr	w1, [sp, 40]	// tmp125, a
	ldr	w0, [sp, 44]	// tmp126, b
	add	w0, w1, w0	// _6, tmp125, tmp126
// varargs-dll.c:759: }
	ldr	x19, [sp], 80	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE51:
	.size	use_va_list_few_not_short_vector_12_bytes, .-use_va_list_few_not_short_vector_12_bytes
	.align	2
	.global	use_va_args_several_not_short_vector_12_bytes
	.type	use_va_args_several_not_short_vector_12_bytes, %function
use_va_args_several_not_short_vector_12_bytes:
.LFB52:
	.cfi_startproc
	stp	x29, x30, [sp, -448]!	//,,,
	.cfi_def_cfa_offset 448
	.cfi_offset 29, -448
	.cfi_offset 30, -440
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 392]	//,
	str	x2, [sp, 400]	//,
	str	x3, [sp, 408]	//,
	str	x4, [sp, 416]	//,
	str	x5, [sp, 424]	//,
	str	x6, [sp, 432]	//,
	str	x7, [sp, 440]	//,
	str	q0, [sp, 256]	//,
	str	q1, [sp, 272]	//,
	str	q2, [sp, 288]	//,
	str	q3, [sp, 304]	//,
	str	q4, [sp, 320]	//,
	str	q5, [sp, 336]	//,
	str	q6, [sp, 352]	//,
	str	q7, [sp, 368]	//,
// varargs-dll.c:763: {
	adrp	x0, :got:__stack_chk_guard	// tmp192,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp191, tmp192,
	ldr	x1, [x0]	// tmp254,
	str	x1, [sp, 248]	// tmp254, D.14494
	mov	x1, 0	// tmp254
// varargs-dll.c:765:   va_start (argv, format);
	add	x0, sp, 448	// tmp259,,
	str	x0, [sp, 216]	// tmp259, MEM[(struct  *)&argv].__stack
	add	x0, sp, 448	// tmp260,,
	str	x0, [sp, 224]	// tmp260, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 384	// tmp194,,
	str	x0, [sp, 232]	// tmp194, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp195,
	str	w0, [sp, 240]	// tmp195, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp196,
	str	w0, [sp, 244]	// tmp196, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:766:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 240]	// D.14332, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.815, argv.__stack
	cmp	w1, 0	// D.14332,
	blt	.L1701		//,
	add	x1, x0, 19	// D.14337, iftmp.815,
	and	x1, x1, -8	// D.14338, D.14337,
	str	x1, [sp, 216]	// D.14338, argv.__stack
	b	.L1702		//
.L1701:
	add	w2, w1, 16	// D.14340, D.14332,
	str	w2, [sp, 240]	// D.14340, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14342, argv.__gr_offs
	cmp	w2, 0	// D.14342,
	ble	.L1703		//,
	add	x1, x0, 19	// D.14345, iftmp.815,
	and	x1, x1, -8	// D.14346, D.14345,
	str	x1, [sp, 216]	// D.14346, argv.__stack
	b	.L1702		//
.L1703:
	ldr	x2, [sp, 224]	// D.14348, argv.__gr_top
	sxtw	x0, w1	// D.14349, D.14332
	add	x0, x2, x0	// iftmp.815, D.14348, D.14349
.L1702:
	add	x1, sp, 72	// tmp197,,
	ldr	x2, [x0]	// tmp199, *iftmp.814_49
	str	x2, [x1]	// tmp199, D.6212
	ldr	w0, [x0, 8]	// tmp200, *iftmp.814_49
	str	w0, [x1, 8]	// tmp200, D.6212
// varargs-dll.c:766:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 72]	// tmp201, D.6212.a
	str	w0, [sp, 36]	// tmp201, a
// varargs-dll.c:767:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 240]	// D.14350, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.817, argv.__stack
	cmp	w1, 0	// D.14350,
	blt	.L1705		//,
	add	x1, x0, 19	// D.14355, iftmp.817,
	and	x1, x1, -8	// D.14356, D.14355,
	str	x1, [sp, 216]	// D.14356, argv.__stack
	b	.L1706		//
.L1705:
	add	w2, w1, 16	// D.14358, D.14350,
	str	w2, [sp, 240]	// D.14358, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14360, argv.__gr_offs
	cmp	w2, 0	// D.14360,
	ble	.L1707		//,
	add	x1, x0, 19	// D.14363, iftmp.817,
	and	x1, x1, -8	// D.14364, D.14363,
	str	x1, [sp, 216]	// D.14364, argv.__stack
	b	.L1706		//
.L1707:
	ldr	x2, [sp, 224]	// D.14366, argv.__gr_top
	sxtw	x0, w1	// D.14367, D.14350
	add	x0, x2, x0	// iftmp.817, D.14366, D.14367
.L1706:
	add	x1, sp, 88	// tmp202,,
	ldr	x2, [x0]	// tmp204, *iftmp.816_51
	str	x2, [x1]	// tmp204, D.6213
	ldr	w0, [x0, 8]	// tmp205, *iftmp.816_51
	str	w0, [x1, 8]	// tmp205, D.6213
// varargs-dll.c:767:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 92]	// tmp206, D.6213.b
	str	w0, [sp, 40]	// tmp206, b
// varargs-dll.c:768:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 240]	// D.14368, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.819, argv.__stack
	cmp	w1, 0	// D.14368,
	blt	.L1709		//,
	add	x1, x0, 19	// D.14373, iftmp.819,
	and	x1, x1, -8	// D.14374, D.14373,
	str	x1, [sp, 216]	// D.14374, argv.__stack
	b	.L1710		//
.L1709:
	add	w2, w1, 16	// D.14376, D.14368,
	str	w2, [sp, 240]	// D.14376, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14378, argv.__gr_offs
	cmp	w2, 0	// D.14378,
	ble	.L1711		//,
	add	x1, x0, 19	// D.14381, iftmp.819,
	and	x1, x1, -8	// D.14382, D.14381,
	str	x1, [sp, 216]	// D.14382, argv.__stack
	b	.L1710		//
.L1711:
	ldr	x2, [sp, 224]	// D.14384, argv.__gr_top
	sxtw	x0, w1	// D.14385, D.14368
	add	x0, x2, x0	// iftmp.819, D.14384, D.14385
.L1710:
	add	x1, sp, 104	// tmp207,,
	ldr	x2, [x0]	// tmp209, *iftmp.818_53
	str	x2, [x1]	// tmp209, D.6214
	ldr	w0, [x0, 8]	// tmp210, *iftmp.818_53
	str	w0, [x1, 8]	// tmp210, D.6214
// varargs-dll.c:768:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 112]	// tmp211, D.6214.c
	str	w0, [sp, 44]	// tmp211, c
// varargs-dll.c:769:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 240]	// D.14386, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.821, argv.__stack
	cmp	w1, 0	// D.14386,
	blt	.L1713		//,
	add	x1, x0, 19	// D.14391, iftmp.821,
	and	x1, x1, -8	// D.14392, D.14391,
	str	x1, [sp, 216]	// D.14392, argv.__stack
	b	.L1714		//
.L1713:
	add	w2, w1, 16	// D.14394, D.14386,
	str	w2, [sp, 240]	// D.14394, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14396, argv.__gr_offs
	cmp	w2, 0	// D.14396,
	ble	.L1715		//,
	add	x1, x0, 19	// D.14399, iftmp.821,
	and	x1, x1, -8	// D.14400, D.14399,
	str	x1, [sp, 216]	// D.14400, argv.__stack
	b	.L1714		//
.L1715:
	ldr	x2, [sp, 224]	// D.14402, argv.__gr_top
	sxtw	x0, w1	// D.14403, D.14386
	add	x0, x2, x0	// iftmp.821, D.14402, D.14403
.L1714:
	add	x1, sp, 120	// tmp212,,
	ldr	x2, [x0]	// tmp214, *iftmp.820_55
	str	x2, [x1]	// tmp214, D.6215
	ldr	w0, [x0, 8]	// tmp215, *iftmp.820_55
	str	w0, [x1, 8]	// tmp215, D.6215
// varargs-dll.c:769:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 120]	// tmp216, D.6215.a
	str	w0, [sp, 48]	// tmp216, d
// varargs-dll.c:770:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 240]	// D.14404, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.823, argv.__stack
	cmp	w1, 0	// D.14404,
	blt	.L1717		//,
	add	x1, x0, 19	// D.14409, iftmp.823,
	and	x1, x1, -8	// D.14410, D.14409,
	str	x1, [sp, 216]	// D.14410, argv.__stack
	b	.L1718		//
.L1717:
	add	w2, w1, 16	// D.14412, D.14404,
	str	w2, [sp, 240]	// D.14412, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14414, argv.__gr_offs
	cmp	w2, 0	// D.14414,
	ble	.L1719		//,
	add	x1, x0, 19	// D.14417, iftmp.823,
	and	x1, x1, -8	// D.14418, D.14417,
	str	x1, [sp, 216]	// D.14418, argv.__stack
	b	.L1718		//
.L1719:
	ldr	x2, [sp, 224]	// D.14420, argv.__gr_top
	sxtw	x0, w1	// D.14421, D.14404
	add	x0, x2, x0	// iftmp.823, D.14420, D.14421
.L1718:
	add	x1, sp, 136	// tmp217,,
	ldr	x2, [x0]	// tmp219, *iftmp.822_57
	str	x2, [x1]	// tmp219, D.6216
	ldr	w0, [x0, 8]	// tmp220, *iftmp.822_57
	str	w0, [x1, 8]	// tmp220, D.6216
// varargs-dll.c:770:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 140]	// tmp221, D.6216.b
	str	w0, [sp, 52]	// tmp221, e
// varargs-dll.c:771:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 240]	// D.14422, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.825, argv.__stack
	cmp	w1, 0	// D.14422,
	blt	.L1721		//,
	add	x1, x0, 19	// D.14427, iftmp.825,
	and	x1, x1, -8	// D.14428, D.14427,
	str	x1, [sp, 216]	// D.14428, argv.__stack
	b	.L1722		//
.L1721:
	add	w2, w1, 16	// D.14430, D.14422,
	str	w2, [sp, 240]	// D.14430, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14432, argv.__gr_offs
	cmp	w2, 0	// D.14432,
	ble	.L1723		//,
	add	x1, x0, 19	// D.14435, iftmp.825,
	and	x1, x1, -8	// D.14436, D.14435,
	str	x1, [sp, 216]	// D.14436, argv.__stack
	b	.L1722		//
.L1723:
	ldr	x2, [sp, 224]	// D.14438, argv.__gr_top
	sxtw	x0, w1	// D.14439, D.14422
	add	x0, x2, x0	// iftmp.825, D.14438, D.14439
.L1722:
	add	x1, sp, 152	// tmp222,,
	ldr	x2, [x0]	// tmp224, *iftmp.824_59
	str	x2, [x1]	// tmp224, D.6217
	ldr	w0, [x0, 8]	// tmp225, *iftmp.824_59
	str	w0, [x1, 8]	// tmp225, D.6217
// varargs-dll.c:771:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 160]	// tmp226, D.6217.c
	str	w0, [sp, 56]	// tmp226, f
// varargs-dll.c:772:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 240]	// D.14440, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.827, argv.__stack
	cmp	w1, 0	// D.14440,
	blt	.L1725		//,
	add	x1, x0, 19	// D.14445, iftmp.827,
	and	x1, x1, -8	// D.14446, D.14445,
	str	x1, [sp, 216]	// D.14446, argv.__stack
	b	.L1726		//
.L1725:
	add	w2, w1, 16	// D.14448, D.14440,
	str	w2, [sp, 240]	// D.14448, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14450, argv.__gr_offs
	cmp	w2, 0	// D.14450,
	ble	.L1727		//,
	add	x1, x0, 19	// D.14453, iftmp.827,
	and	x1, x1, -8	// D.14454, D.14453,
	str	x1, [sp, 216]	// D.14454, argv.__stack
	b	.L1726		//
.L1727:
	ldr	x2, [sp, 224]	// D.14456, argv.__gr_top
	sxtw	x0, w1	// D.14457, D.14440
	add	x0, x2, x0	// iftmp.827, D.14456, D.14457
.L1726:
	add	x1, sp, 168	// tmp227,,
	ldr	x2, [x0]	// tmp229, *iftmp.826_61
	str	x2, [x1]	// tmp229, D.6218
	ldr	w0, [x0, 8]	// tmp230, *iftmp.826_61
	str	w0, [x1, 8]	// tmp230, D.6218
// varargs-dll.c:772:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 168]	// tmp231, D.6218.a
	str	w0, [sp, 60]	// tmp231, g
// varargs-dll.c:773:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 240]	// D.14458, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.829, argv.__stack
	cmp	w1, 0	// D.14458,
	blt	.L1729		//,
	add	x1, x0, 19	// D.14463, iftmp.829,
	and	x1, x1, -8	// D.14464, D.14463,
	str	x1, [sp, 216]	// D.14464, argv.__stack
	b	.L1730		//
.L1729:
	add	w2, w1, 16	// D.14466, D.14458,
	str	w2, [sp, 240]	// D.14466, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14468, argv.__gr_offs
	cmp	w2, 0	// D.14468,
	ble	.L1731		//,
	add	x1, x0, 19	// D.14471, iftmp.829,
	and	x1, x1, -8	// D.14472, D.14471,
	str	x1, [sp, 216]	// D.14472, argv.__stack
	b	.L1730		//
.L1731:
	ldr	x2, [sp, 224]	// D.14474, argv.__gr_top
	sxtw	x0, w1	// D.14475, D.14458
	add	x0, x2, x0	// iftmp.829, D.14474, D.14475
.L1730:
	add	x1, sp, 184	// tmp232,,
	ldr	x2, [x0]	// tmp234, *iftmp.828_63
	str	x2, [x1]	// tmp234, D.6219
	ldr	w0, [x0, 8]	// tmp235, *iftmp.828_63
	str	w0, [x1, 8]	// tmp235, D.6219
// varargs-dll.c:773:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 188]	// tmp236, D.6219.b
	str	w0, [sp, 64]	// tmp236, h
// varargs-dll.c:774:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 240]	// D.14476, argv.__gr_offs
	ldr	x0, [sp, 216]	// iftmp.831, argv.__stack
	cmp	w1, 0	// D.14476,
	blt	.L1733		//,
	add	x1, x0, 19	// D.14481, iftmp.831,
	and	x1, x1, -8	// D.14482, D.14481,
	str	x1, [sp, 216]	// D.14482, argv.__stack
	b	.L1734		//
.L1733:
	add	w2, w1, 16	// D.14484, D.14476,
	str	w2, [sp, 240]	// D.14484, argv.__gr_offs
	ldr	w2, [sp, 240]	// D.14486, argv.__gr_offs
	cmp	w2, 0	// D.14486,
	ble	.L1735		//,
	add	x1, x0, 19	// D.14489, iftmp.831,
	and	x1, x1, -8	// D.14490, D.14489,
	str	x1, [sp, 216]	// D.14490, argv.__stack
	b	.L1734		//
.L1735:
	ldr	x2, [sp, 224]	// D.14492, argv.__gr_top
	sxtw	x0, w1	// D.14493, D.14476
	add	x0, x2, x0	// iftmp.831, D.14492, D.14493
.L1734:
	add	x1, sp, 200	// tmp237,,
	ldr	x2, [x0]	// tmp239, *iftmp.830_65
	str	x2, [x1]	// tmp239, D.6220
	ldr	w0, [x0, 8]	// tmp240, *iftmp.830_65
	str	w0, [x1, 8]	// tmp240, D.6220
// varargs-dll.c:774:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 208]	// tmp241, D.6220.c
	str	w0, [sp, 68]	// tmp241, i
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp242, a
	ldr	w0, [sp, 40]	// tmp243, b
	add	w1, w1, w0	// _1, tmp242, tmp243
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp244, c
	add	w1, w1, w0	// _2, _1, tmp244
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp245, d
	add	w1, w1, w0	// _3, _2, tmp245
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp246, e
	add	w1, w1, w0	// _4, _3, tmp246
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp247, f
	add	w1, w1, w0	// _5, _4, tmp247
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp248, g
	add	w1, w1, w0	// _6, _5, tmp248
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp249, h
	add	w1, w1, w0	// _7, _6, tmp249
// varargs-dll.c:776:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp250, i
	add	w0, w1, w0	// _29, _7, tmp250
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:777: }
	adrp	x0, :got:__stack_chk_guard	// tmp253,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp252, tmp253,
	ldr	x3, [sp, 248]	// tmp255, D.14494
	ldr	x2, [x0]	// tmp256,
	subs	x3, x3, x2	// tmp255, tmp256
	mov	x2, 0	// tmp256
	beq	.L1738		//,
	bl	__stack_chk_fail		//
.L1738:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 448	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE52:
	.size	use_va_args_several_not_short_vector_12_bytes, .-use_va_args_several_not_short_vector_12_bytes
	.align	2
	.global	use_va_list_several_not_short_vector_12_bytes
	.type	use_va_list_several_not_short_vector_12_bytes, %function
use_va_list_several_not_short_vector_12_bytes:
.LFB53:
	.cfi_startproc
	str	x19, [sp, -224]!	//,
	.cfi_def_cfa_offset 224
	.cfi_offset 19, -224
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp191,
// varargs-dll.c:783:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.14498, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.833, argv.__stack
	cmp	w1, 0	// D.14498,
	blt	.L1740		//,
	add	x1, x0, 19	// D.14503, iftmp.833,
	and	x1, x1, -8	// D.14504, D.14503,
	str	x1, [x19]	// D.14504, argv.__stack
	b	.L1741		//
.L1740:
	add	w2, w1, 16	// D.14506, D.14498,
	str	w2, [x19, 24]	// D.14506, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14508, argv.__gr_offs
	cmp	w2, 0	// D.14508,
	ble	.L1742		//,
	add	x1, x0, 19	// D.14511, iftmp.833,
	and	x1, x1, -8	// D.14512, D.14511,
	str	x1, [x19]	// D.14512, argv.__stack
	b	.L1741		//
.L1742:
	ldr	x2, [x19, 8]	// D.14514, argv.__gr_top
	sxtw	x0, w1	// D.14515, D.14498
	add	x0, x2, x0	// iftmp.833, D.14514, D.14515
.L1741:
	add	x1, sp, 80	// tmp192,,
	ldr	x2, [x0]	// tmp194, *iftmp.832_46
	str	x2, [x1]	// tmp194, D.6224
	ldr	w0, [x0, 8]	// tmp195, *iftmp.832_46
	str	w0, [x1, 8]	// tmp195, D.6224
// varargs-dll.c:783:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 80]	// tmp196, D.6224.a
	str	w0, [sp, 44]	// tmp196, a
// varargs-dll.c:784:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.14516, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.835, argv.__stack
	cmp	w1, 0	// D.14516,
	blt	.L1744		//,
	add	x1, x0, 19	// D.14521, iftmp.835,
	and	x1, x1, -8	// D.14522, D.14521,
	str	x1, [x19]	// D.14522, argv.__stack
	b	.L1745		//
.L1744:
	add	w2, w1, 16	// D.14524, D.14516,
	str	w2, [x19, 24]	// D.14524, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14526, argv.__gr_offs
	cmp	w2, 0	// D.14526,
	ble	.L1746		//,
	add	x1, x0, 19	// D.14529, iftmp.835,
	and	x1, x1, -8	// D.14530, D.14529,
	str	x1, [x19]	// D.14530, argv.__stack
	b	.L1745		//
.L1746:
	ldr	x2, [x19, 8]	// D.14532, argv.__gr_top
	sxtw	x0, w1	// D.14533, D.14516
	add	x0, x2, x0	// iftmp.835, D.14532, D.14533
.L1745:
	add	x1, sp, 96	// tmp197,,
	ldr	x2, [x0]	// tmp199, *iftmp.834_48
	str	x2, [x1]	// tmp199, D.6225
	ldr	w0, [x0, 8]	// tmp200, *iftmp.834_48
	str	w0, [x1, 8]	// tmp200, D.6225
// varargs-dll.c:784:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 100]	// tmp201, D.6225.b
	str	w0, [sp, 48]	// tmp201, b
// varargs-dll.c:785:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.14534, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.837, argv.__stack
	cmp	w1, 0	// D.14534,
	blt	.L1748		//,
	add	x1, x0, 19	// D.14539, iftmp.837,
	and	x1, x1, -8	// D.14540, D.14539,
	str	x1, [x19]	// D.14540, argv.__stack
	b	.L1749		//
.L1748:
	add	w2, w1, 16	// D.14542, D.14534,
	str	w2, [x19, 24]	// D.14542, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14544, argv.__gr_offs
	cmp	w2, 0	// D.14544,
	ble	.L1750		//,
	add	x1, x0, 19	// D.14547, iftmp.837,
	and	x1, x1, -8	// D.14548, D.14547,
	str	x1, [x19]	// D.14548, argv.__stack
	b	.L1749		//
.L1750:
	ldr	x2, [x19, 8]	// D.14550, argv.__gr_top
	sxtw	x0, w1	// D.14551, D.14534
	add	x0, x2, x0	// iftmp.837, D.14550, D.14551
.L1749:
	add	x1, sp, 112	// tmp202,,
	ldr	x2, [x0]	// tmp204, *iftmp.836_50
	str	x2, [x1]	// tmp204, D.6226
	ldr	w0, [x0, 8]	// tmp205, *iftmp.836_50
	str	w0, [x1, 8]	// tmp205, D.6226
// varargs-dll.c:785:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 120]	// tmp206, D.6226.c
	str	w0, [sp, 52]	// tmp206, c
// varargs-dll.c:786:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.14552, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.839, argv.__stack
	cmp	w1, 0	// D.14552,
	blt	.L1752		//,
	add	x1, x0, 19	// D.14557, iftmp.839,
	and	x1, x1, -8	// D.14558, D.14557,
	str	x1, [x19]	// D.14558, argv.__stack
	b	.L1753		//
.L1752:
	add	w2, w1, 16	// D.14560, D.14552,
	str	w2, [x19, 24]	// D.14560, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14562, argv.__gr_offs
	cmp	w2, 0	// D.14562,
	ble	.L1754		//,
	add	x1, x0, 19	// D.14565, iftmp.839,
	and	x1, x1, -8	// D.14566, D.14565,
	str	x1, [x19]	// D.14566, argv.__stack
	b	.L1753		//
.L1754:
	ldr	x2, [x19, 8]	// D.14568, argv.__gr_top
	sxtw	x0, w1	// D.14569, D.14552
	add	x0, x2, x0	// iftmp.839, D.14568, D.14569
.L1753:
	add	x1, sp, 128	// tmp207,,
	ldr	x2, [x0]	// tmp209, *iftmp.838_52
	str	x2, [x1]	// tmp209, D.6227
	ldr	w0, [x0, 8]	// tmp210, *iftmp.838_52
	str	w0, [x1, 8]	// tmp210, D.6227
// varargs-dll.c:786:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 128]	// tmp211, D.6227.a
	str	w0, [sp, 56]	// tmp211, d
// varargs-dll.c:787:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.14570, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.841, argv.__stack
	cmp	w1, 0	// D.14570,
	blt	.L1756		//,
	add	x1, x0, 19	// D.14575, iftmp.841,
	and	x1, x1, -8	// D.14576, D.14575,
	str	x1, [x19]	// D.14576, argv.__stack
	b	.L1757		//
.L1756:
	add	w2, w1, 16	// D.14578, D.14570,
	str	w2, [x19, 24]	// D.14578, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14580, argv.__gr_offs
	cmp	w2, 0	// D.14580,
	ble	.L1758		//,
	add	x1, x0, 19	// D.14583, iftmp.841,
	and	x1, x1, -8	// D.14584, D.14583,
	str	x1, [x19]	// D.14584, argv.__stack
	b	.L1757		//
.L1758:
	ldr	x2, [x19, 8]	// D.14586, argv.__gr_top
	sxtw	x0, w1	// D.14587, D.14570
	add	x0, x2, x0	// iftmp.841, D.14586, D.14587
.L1757:
	add	x1, sp, 144	// tmp212,,
	ldr	x2, [x0]	// tmp214, *iftmp.840_54
	str	x2, [x1]	// tmp214, D.6228
	ldr	w0, [x0, 8]	// tmp215, *iftmp.840_54
	str	w0, [x1, 8]	// tmp215, D.6228
// varargs-dll.c:787:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 148]	// tmp216, D.6228.b
	str	w0, [sp, 60]	// tmp216, e
// varargs-dll.c:788:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.14588, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.843, argv.__stack
	cmp	w1, 0	// D.14588,
	blt	.L1760		//,
	add	x1, x0, 19	// D.14593, iftmp.843,
	and	x1, x1, -8	// D.14594, D.14593,
	str	x1, [x19]	// D.14594, argv.__stack
	b	.L1761		//
.L1760:
	add	w2, w1, 16	// D.14596, D.14588,
	str	w2, [x19, 24]	// D.14596, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14598, argv.__gr_offs
	cmp	w2, 0	// D.14598,
	ble	.L1762		//,
	add	x1, x0, 19	// D.14601, iftmp.843,
	and	x1, x1, -8	// D.14602, D.14601,
	str	x1, [x19]	// D.14602, argv.__stack
	b	.L1761		//
.L1762:
	ldr	x2, [x19, 8]	// D.14604, argv.__gr_top
	sxtw	x0, w1	// D.14605, D.14588
	add	x0, x2, x0	// iftmp.843, D.14604, D.14605
.L1761:
	add	x1, sp, 160	// tmp217,,
	ldr	x2, [x0]	// tmp219, *iftmp.842_56
	str	x2, [x1]	// tmp219, D.6229
	ldr	w0, [x0, 8]	// tmp220, *iftmp.842_56
	str	w0, [x1, 8]	// tmp220, D.6229
// varargs-dll.c:788:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 168]	// tmp221, D.6229.c
	str	w0, [sp, 64]	// tmp221, f
// varargs-dll.c:789:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.14606, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.845, argv.__stack
	cmp	w1, 0	// D.14606,
	blt	.L1764		//,
	add	x1, x0, 19	// D.14611, iftmp.845,
	and	x1, x1, -8	// D.14612, D.14611,
	str	x1, [x19]	// D.14612, argv.__stack
	b	.L1765		//
.L1764:
	add	w2, w1, 16	// D.14614, D.14606,
	str	w2, [x19, 24]	// D.14614, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14616, argv.__gr_offs
	cmp	w2, 0	// D.14616,
	ble	.L1766		//,
	add	x1, x0, 19	// D.14619, iftmp.845,
	and	x1, x1, -8	// D.14620, D.14619,
	str	x1, [x19]	// D.14620, argv.__stack
	b	.L1765		//
.L1766:
	ldr	x2, [x19, 8]	// D.14622, argv.__gr_top
	sxtw	x0, w1	// D.14623, D.14606
	add	x0, x2, x0	// iftmp.845, D.14622, D.14623
.L1765:
	add	x1, sp, 176	// tmp222,,
	ldr	x2, [x0]	// tmp224, *iftmp.844_58
	str	x2, [x1]	// tmp224, D.6230
	ldr	w0, [x0, 8]	// tmp225, *iftmp.844_58
	str	w0, [x1, 8]	// tmp225, D.6230
// varargs-dll.c:789:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 176]	// tmp226, D.6230.a
	str	w0, [sp, 68]	// tmp226, g
// varargs-dll.c:790:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.14624, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.847, argv.__stack
	cmp	w1, 0	// D.14624,
	blt	.L1768		//,
	add	x1, x0, 19	// D.14629, iftmp.847,
	and	x1, x1, -8	// D.14630, D.14629,
	str	x1, [x19]	// D.14630, argv.__stack
	b	.L1769		//
.L1768:
	add	w2, w1, 16	// D.14632, D.14624,
	str	w2, [x19, 24]	// D.14632, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14634, argv.__gr_offs
	cmp	w2, 0	// D.14634,
	ble	.L1770		//,
	add	x1, x0, 19	// D.14637, iftmp.847,
	and	x1, x1, -8	// D.14638, D.14637,
	str	x1, [x19]	// D.14638, argv.__stack
	b	.L1769		//
.L1770:
	ldr	x2, [x19, 8]	// D.14640, argv.__gr_top
	sxtw	x0, w1	// D.14641, D.14624
	add	x0, x2, x0	// iftmp.847, D.14640, D.14641
.L1769:
	add	x1, sp, 192	// tmp227,,
	ldr	x2, [x0]	// tmp229, *iftmp.846_60
	str	x2, [x1]	// tmp229, D.6231
	ldr	w0, [x0, 8]	// tmp230, *iftmp.846_60
	str	w0, [x1, 8]	// tmp230, D.6231
// varargs-dll.c:790:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 196]	// tmp231, D.6231.b
	str	w0, [sp, 72]	// tmp231, h
// varargs-dll.c:791:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.14642, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.849, argv.__stack
	cmp	w1, 0	// D.14642,
	blt	.L1772		//,
	add	x1, x0, 19	// D.14647, iftmp.849,
	and	x1, x1, -8	// D.14648, D.14647,
	str	x1, [x19]	// D.14648, argv.__stack
	b	.L1773		//
.L1772:
	add	w2, w1, 16	// D.14650, D.14642,
	str	w2, [x19, 24]	// D.14650, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14652, argv.__gr_offs
	cmp	w2, 0	// D.14652,
	ble	.L1774		//,
	add	x1, x0, 19	// D.14655, iftmp.849,
	and	x1, x1, -8	// D.14656, D.14655,
	str	x1, [x19]	// D.14656, argv.__stack
	b	.L1773		//
.L1774:
	ldr	x2, [x19, 8]	// D.14658, argv.__gr_top
	sxtw	x0, w1	// D.14659, D.14642
	add	x0, x2, x0	// iftmp.849, D.14658, D.14659
.L1773:
	add	x1, sp, 208	// tmp232,,
	ldr	x2, [x0]	// tmp234, *iftmp.848_62
	str	x2, [x1]	// tmp234, D.6232
	ldr	w0, [x0, 8]	// tmp235, *iftmp.848_62
	str	w0, [x1, 8]	// tmp235, D.6232
// varargs-dll.c:791:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 216]	// tmp236, D.6232.c
	str	w0, [sp, 76]	// tmp236, i
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp237, a
	ldr	w0, [sp, 48]	// tmp238, b
	add	w1, w1, w0	// _1, tmp237, tmp238
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp239, c
	add	w1, w1, w0	// _2, _1, tmp239
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp240, d
	add	w1, w1, w0	// _3, _2, tmp240
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp241, e
	add	w1, w1, w0	// _4, _3, tmp241
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp242, f
	add	w1, w1, w0	// _5, _4, tmp242
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp243, g
	add	w1, w1, w0	// _6, _5, tmp243
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp244, h
	add	w1, w1, w0	// _7, _6, tmp244
// varargs-dll.c:792:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp245, i
	add	w0, w1, w0	// _27, _7, tmp245
// varargs-dll.c:793: }
	ldr	x19, [sp], 224	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE53:
	.size	use_va_list_several_not_short_vector_12_bytes, .-use_va_list_several_not_short_vector_12_bytes
	.align	2
	.global	use_va_args_many_not_short_vector_12_bytes
	.type	use_va_args_many_not_short_vector_12_bytes, %function
use_va_args_many_not_short_vector_12_bytes:
.LFB54:
	.cfi_startproc
	sub	sp, sp, #608	//,,
	.cfi_def_cfa_offset 608
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -608
	.cfi_offset 30, -600
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 552]	//,
	str	x2, [sp, 560]	//,
	str	x3, [sp, 568]	//,
	str	x4, [sp, 576]	//,
	str	x5, [sp, 584]	//,
	str	x6, [sp, 592]	//,
	str	x7, [sp, 600]	//,
	str	q0, [sp, 416]	//,
	str	q1, [sp, 432]	//,
	str	q2, [sp, 448]	//,
	str	q3, [sp, 464]	//,
	str	q4, [sp, 480]	//,
	str	q5, [sp, 496]	//,
	add	x0, sp, 512	// tmp395,,
	str	q6, [x0]	//,
	add	x0, sp, 512	// tmp397,,
	str	q7, [x0, 16]	//,
// varargs-dll.c:797: {
	adrp	x0, :got:__stack_chk_guard	// tmp280,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp279, tmp280,
	ldr	x1, [x0]	// tmp390,
	str	x1, [sp, 408]	// tmp390, D.14966
	mov	x1, 0	// tmp390
// varargs-dll.c:799:   va_start (argv, format);
	add	x0, sp, 608	// tmp399,,
	str	x0, [sp, 376]	// tmp399, MEM[(struct  *)&argv].__stack
	add	x0, sp, 608	// tmp400,,
	str	x0, [sp, 384]	// tmp400, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 544	// tmp282,,
	str	x0, [sp, 392]	// tmp282, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp283,
	str	w0, [sp, 400]	// tmp283, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp284,
	str	w0, [sp, 404]	// tmp284, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:800:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14660, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.851, argv.__stack
	cmp	w1, 0	// D.14660,
	blt	.L1778		//,
	add	x1, x0, 19	// D.14665, iftmp.851,
	and	x1, x1, -8	// D.14666, D.14665,
	str	x1, [sp, 376]	// D.14666, argv.__stack
	b	.L1779		//
.L1778:
	add	w2, w1, 16	// D.14668, D.14660,
	str	w2, [sp, 400]	// D.14668, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14670, argv.__gr_offs
	cmp	w2, 0	// D.14670,
	ble	.L1780		//,
	add	x1, x0, 19	// D.14673, iftmp.851,
	and	x1, x1, -8	// D.14674, D.14673,
	str	x1, [sp, 376]	// D.14674, argv.__stack
	b	.L1779		//
.L1780:
	ldr	x2, [sp, 384]	// D.14676, argv.__gr_top
	sxtw	x0, w1	// D.14677, D.14660
	add	x0, x2, x0	// iftmp.851, D.14676, D.14677
.L1779:
	add	x1, sp, 104	// tmp285,,
	ldr	x2, [x0]	// tmp287, *iftmp.850_89
	str	x2, [x1]	// tmp287, D.6235
	ldr	w0, [x0, 8]	// tmp288, *iftmp.850_89
	str	w0, [x1, 8]	// tmp288, D.6235
// varargs-dll.c:800:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 104]	// tmp289, D.6235.a
	str	w0, [sp, 36]	// tmp289, a
// varargs-dll.c:801:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14678, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.853, argv.__stack
	cmp	w1, 0	// D.14678,
	blt	.L1782		//,
	add	x1, x0, 19	// D.14683, iftmp.853,
	and	x1, x1, -8	// D.14684, D.14683,
	str	x1, [sp, 376]	// D.14684, argv.__stack
	b	.L1783		//
.L1782:
	add	w2, w1, 16	// D.14686, D.14678,
	str	w2, [sp, 400]	// D.14686, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14688, argv.__gr_offs
	cmp	w2, 0	// D.14688,
	ble	.L1784		//,
	add	x1, x0, 19	// D.14691, iftmp.853,
	and	x1, x1, -8	// D.14692, D.14691,
	str	x1, [sp, 376]	// D.14692, argv.__stack
	b	.L1783		//
.L1784:
	ldr	x2, [sp, 384]	// D.14694, argv.__gr_top
	sxtw	x0, w1	// D.14695, D.14678
	add	x0, x2, x0	// iftmp.853, D.14694, D.14695
.L1783:
	add	x1, sp, 120	// tmp290,,
	ldr	x2, [x0]	// tmp292, *iftmp.852_91
	str	x2, [x1]	// tmp292, D.6236
	ldr	w0, [x0, 8]	// tmp293, *iftmp.852_91
	str	w0, [x1, 8]	// tmp293, D.6236
// varargs-dll.c:801:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 124]	// tmp294, D.6236.b
	str	w0, [sp, 40]	// tmp294, b
// varargs-dll.c:802:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 400]	// D.14696, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.855, argv.__stack
	cmp	w1, 0	// D.14696,
	blt	.L1786		//,
	add	x1, x0, 19	// D.14701, iftmp.855,
	and	x1, x1, -8	// D.14702, D.14701,
	str	x1, [sp, 376]	// D.14702, argv.__stack
	b	.L1787		//
.L1786:
	add	w2, w1, 16	// D.14704, D.14696,
	str	w2, [sp, 400]	// D.14704, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14706, argv.__gr_offs
	cmp	w2, 0	// D.14706,
	ble	.L1788		//,
	add	x1, x0, 19	// D.14709, iftmp.855,
	and	x1, x1, -8	// D.14710, D.14709,
	str	x1, [sp, 376]	// D.14710, argv.__stack
	b	.L1787		//
.L1788:
	ldr	x2, [sp, 384]	// D.14712, argv.__gr_top
	sxtw	x0, w1	// D.14713, D.14696
	add	x0, x2, x0	// iftmp.855, D.14712, D.14713
.L1787:
	add	x1, sp, 136	// tmp295,,
	ldr	x2, [x0]	// tmp297, *iftmp.854_93
	str	x2, [x1]	// tmp297, D.6237
	ldr	w0, [x0, 8]	// tmp298, *iftmp.854_93
	str	w0, [x1, 8]	// tmp298, D.6237
// varargs-dll.c:802:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 144]	// tmp299, D.6237.c
	str	w0, [sp, 44]	// tmp299, c
// varargs-dll.c:803:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14714, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.857, argv.__stack
	cmp	w1, 0	// D.14714,
	blt	.L1790		//,
	add	x1, x0, 19	// D.14719, iftmp.857,
	and	x1, x1, -8	// D.14720, D.14719,
	str	x1, [sp, 376]	// D.14720, argv.__stack
	b	.L1791		//
.L1790:
	add	w2, w1, 16	// D.14722, D.14714,
	str	w2, [sp, 400]	// D.14722, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14724, argv.__gr_offs
	cmp	w2, 0	// D.14724,
	ble	.L1792		//,
	add	x1, x0, 19	// D.14727, iftmp.857,
	and	x1, x1, -8	// D.14728, D.14727,
	str	x1, [sp, 376]	// D.14728, argv.__stack
	b	.L1791		//
.L1792:
	ldr	x2, [sp, 384]	// D.14730, argv.__gr_top
	sxtw	x0, w1	// D.14731, D.14714
	add	x0, x2, x0	// iftmp.857, D.14730, D.14731
.L1791:
	add	x1, sp, 152	// tmp300,,
	ldr	x2, [x0]	// tmp302, *iftmp.856_95
	str	x2, [x1]	// tmp302, D.6238
	ldr	w0, [x0, 8]	// tmp303, *iftmp.856_95
	str	w0, [x1, 8]	// tmp303, D.6238
// varargs-dll.c:803:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 152]	// tmp304, D.6238.a
	str	w0, [sp, 48]	// tmp304, d
// varargs-dll.c:804:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14732, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.859, argv.__stack
	cmp	w1, 0	// D.14732,
	blt	.L1794		//,
	add	x1, x0, 19	// D.14737, iftmp.859,
	and	x1, x1, -8	// D.14738, D.14737,
	str	x1, [sp, 376]	// D.14738, argv.__stack
	b	.L1795		//
.L1794:
	add	w2, w1, 16	// D.14740, D.14732,
	str	w2, [sp, 400]	// D.14740, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14742, argv.__gr_offs
	cmp	w2, 0	// D.14742,
	ble	.L1796		//,
	add	x1, x0, 19	// D.14745, iftmp.859,
	and	x1, x1, -8	// D.14746, D.14745,
	str	x1, [sp, 376]	// D.14746, argv.__stack
	b	.L1795		//
.L1796:
	ldr	x2, [sp, 384]	// D.14748, argv.__gr_top
	sxtw	x0, w1	// D.14749, D.14732
	add	x0, x2, x0	// iftmp.859, D.14748, D.14749
.L1795:
	add	x1, sp, 168	// tmp305,,
	ldr	x2, [x0]	// tmp307, *iftmp.858_97
	str	x2, [x1]	// tmp307, D.6239
	ldr	w0, [x0, 8]	// tmp308, *iftmp.858_97
	str	w0, [x1, 8]	// tmp308, D.6239
// varargs-dll.c:804:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 172]	// tmp309, D.6239.b
	str	w0, [sp, 52]	// tmp309, e
// varargs-dll.c:805:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 400]	// D.14750, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.861, argv.__stack
	cmp	w1, 0	// D.14750,
	blt	.L1798		//,
	add	x1, x0, 19	// D.14755, iftmp.861,
	and	x1, x1, -8	// D.14756, D.14755,
	str	x1, [sp, 376]	// D.14756, argv.__stack
	b	.L1799		//
.L1798:
	add	w2, w1, 16	// D.14758, D.14750,
	str	w2, [sp, 400]	// D.14758, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14760, argv.__gr_offs
	cmp	w2, 0	// D.14760,
	ble	.L1800		//,
	add	x1, x0, 19	// D.14763, iftmp.861,
	and	x1, x1, -8	// D.14764, D.14763,
	str	x1, [sp, 376]	// D.14764, argv.__stack
	b	.L1799		//
.L1800:
	ldr	x2, [sp, 384]	// D.14766, argv.__gr_top
	sxtw	x0, w1	// D.14767, D.14750
	add	x0, x2, x0	// iftmp.861, D.14766, D.14767
.L1799:
	add	x1, sp, 184	// tmp310,,
	ldr	x2, [x0]	// tmp312, *iftmp.860_99
	str	x2, [x1]	// tmp312, D.6240
	ldr	w0, [x0, 8]	// tmp313, *iftmp.860_99
	str	w0, [x1, 8]	// tmp313, D.6240
// varargs-dll.c:805:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 192]	// tmp314, D.6240.c
	str	w0, [sp, 56]	// tmp314, f
// varargs-dll.c:806:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14768, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.863, argv.__stack
	cmp	w1, 0	// D.14768,
	blt	.L1802		//,
	add	x1, x0, 19	// D.14773, iftmp.863,
	and	x1, x1, -8	// D.14774, D.14773,
	str	x1, [sp, 376]	// D.14774, argv.__stack
	b	.L1803		//
.L1802:
	add	w2, w1, 16	// D.14776, D.14768,
	str	w2, [sp, 400]	// D.14776, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14778, argv.__gr_offs
	cmp	w2, 0	// D.14778,
	ble	.L1804		//,
	add	x1, x0, 19	// D.14781, iftmp.863,
	and	x1, x1, -8	// D.14782, D.14781,
	str	x1, [sp, 376]	// D.14782, argv.__stack
	b	.L1803		//
.L1804:
	ldr	x2, [sp, 384]	// D.14784, argv.__gr_top
	sxtw	x0, w1	// D.14785, D.14768
	add	x0, x2, x0	// iftmp.863, D.14784, D.14785
.L1803:
	add	x1, sp, 200	// tmp315,,
	ldr	x2, [x0]	// tmp317, *iftmp.862_101
	str	x2, [x1]	// tmp317, D.6241
	ldr	w0, [x0, 8]	// tmp318, *iftmp.862_101
	str	w0, [x1, 8]	// tmp318, D.6241
// varargs-dll.c:806:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 200]	// tmp319, D.6241.a
	str	w0, [sp, 60]	// tmp319, g
// varargs-dll.c:807:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14786, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.865, argv.__stack
	cmp	w1, 0	// D.14786,
	blt	.L1806		//,
	add	x1, x0, 19	// D.14791, iftmp.865,
	and	x1, x1, -8	// D.14792, D.14791,
	str	x1, [sp, 376]	// D.14792, argv.__stack
	b	.L1807		//
.L1806:
	add	w2, w1, 16	// D.14794, D.14786,
	str	w2, [sp, 400]	// D.14794, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14796, argv.__gr_offs
	cmp	w2, 0	// D.14796,
	ble	.L1808		//,
	add	x1, x0, 19	// D.14799, iftmp.865,
	and	x1, x1, -8	// D.14800, D.14799,
	str	x1, [sp, 376]	// D.14800, argv.__stack
	b	.L1807		//
.L1808:
	ldr	x2, [sp, 384]	// D.14802, argv.__gr_top
	sxtw	x0, w1	// D.14803, D.14786
	add	x0, x2, x0	// iftmp.865, D.14802, D.14803
.L1807:
	add	x1, sp, 216	// tmp320,,
	ldr	x2, [x0]	// tmp322, *iftmp.864_103
	str	x2, [x1]	// tmp322, D.6242
	ldr	w0, [x0, 8]	// tmp323, *iftmp.864_103
	str	w0, [x1, 8]	// tmp323, D.6242
// varargs-dll.c:807:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 220]	// tmp324, D.6242.b
	str	w0, [sp, 64]	// tmp324, h
// varargs-dll.c:808:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 400]	// D.14804, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.867, argv.__stack
	cmp	w1, 0	// D.14804,
	blt	.L1810		//,
	add	x1, x0, 19	// D.14809, iftmp.867,
	and	x1, x1, -8	// D.14810, D.14809,
	str	x1, [sp, 376]	// D.14810, argv.__stack
	b	.L1811		//
.L1810:
	add	w2, w1, 16	// D.14812, D.14804,
	str	w2, [sp, 400]	// D.14812, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14814, argv.__gr_offs
	cmp	w2, 0	// D.14814,
	ble	.L1812		//,
	add	x1, x0, 19	// D.14817, iftmp.867,
	and	x1, x1, -8	// D.14818, D.14817,
	str	x1, [sp, 376]	// D.14818, argv.__stack
	b	.L1811		//
.L1812:
	ldr	x2, [sp, 384]	// D.14820, argv.__gr_top
	sxtw	x0, w1	// D.14821, D.14804
	add	x0, x2, x0	// iftmp.867, D.14820, D.14821
.L1811:
	add	x1, sp, 232	// tmp325,,
	ldr	x2, [x0]	// tmp327, *iftmp.866_105
	str	x2, [x1]	// tmp327, D.6243
	ldr	w0, [x0, 8]	// tmp328, *iftmp.866_105
	str	w0, [x1, 8]	// tmp328, D.6243
// varargs-dll.c:808:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 240]	// tmp329, D.6243.c
	str	w0, [sp, 68]	// tmp329, i
// varargs-dll.c:809:   int j = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14822, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.869, argv.__stack
	cmp	w1, 0	// D.14822,
	blt	.L1814		//,
	add	x1, x0, 19	// D.14827, iftmp.869,
	and	x1, x1, -8	// D.14828, D.14827,
	str	x1, [sp, 376]	// D.14828, argv.__stack
	b	.L1815		//
.L1814:
	add	w2, w1, 16	// D.14830, D.14822,
	str	w2, [sp, 400]	// D.14830, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14832, argv.__gr_offs
	cmp	w2, 0	// D.14832,
	ble	.L1816		//,
	add	x1, x0, 19	// D.14835, iftmp.869,
	and	x1, x1, -8	// D.14836, D.14835,
	str	x1, [sp, 376]	// D.14836, argv.__stack
	b	.L1815		//
.L1816:
	ldr	x2, [sp, 384]	// D.14838, argv.__gr_top
	sxtw	x0, w1	// D.14839, D.14822
	add	x0, x2, x0	// iftmp.869, D.14838, D.14839
.L1815:
	add	x1, sp, 248	// tmp330,,
	ldr	x2, [x0]	// tmp332, *iftmp.868_107
	str	x2, [x1]	// tmp332, D.6244
	ldr	w0, [x0, 8]	// tmp333, *iftmp.868_107
	str	w0, [x1, 8]	// tmp333, D.6244
// varargs-dll.c:809:   int j = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 248]	// tmp334, D.6244.a
	str	w0, [sp, 72]	// tmp334, j
// varargs-dll.c:810:   int k = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14840, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.871, argv.__stack
	cmp	w1, 0	// D.14840,
	blt	.L1818		//,
	add	x1, x0, 19	// D.14845, iftmp.871,
	and	x1, x1, -8	// D.14846, D.14845,
	str	x1, [sp, 376]	// D.14846, argv.__stack
	b	.L1819		//
.L1818:
	add	w2, w1, 16	// D.14848, D.14840,
	str	w2, [sp, 400]	// D.14848, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14850, argv.__gr_offs
	cmp	w2, 0	// D.14850,
	ble	.L1820		//,
	add	x1, x0, 19	// D.14853, iftmp.871,
	and	x1, x1, -8	// D.14854, D.14853,
	str	x1, [sp, 376]	// D.14854, argv.__stack
	b	.L1819		//
.L1820:
	ldr	x2, [sp, 384]	// D.14856, argv.__gr_top
	sxtw	x0, w1	// D.14857, D.14840
	add	x0, x2, x0	// iftmp.871, D.14856, D.14857
.L1819:
	add	x1, sp, 264	// tmp335,,
	ldr	x2, [x0]	// tmp337, *iftmp.870_109
	str	x2, [x1]	// tmp337, D.6245
	ldr	w0, [x0, 8]	// tmp338, *iftmp.870_109
	str	w0, [x1, 8]	// tmp338, D.6245
// varargs-dll.c:810:   int k = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 268]	// tmp339, D.6245.b
	str	w0, [sp, 76]	// tmp339, k
// varargs-dll.c:811:   int l = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 400]	// D.14858, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.873, argv.__stack
	cmp	w1, 0	// D.14858,
	blt	.L1822		//,
	add	x1, x0, 19	// D.14863, iftmp.873,
	and	x1, x1, -8	// D.14864, D.14863,
	str	x1, [sp, 376]	// D.14864, argv.__stack
	b	.L1823		//
.L1822:
	add	w2, w1, 16	// D.14866, D.14858,
	str	w2, [sp, 400]	// D.14866, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14868, argv.__gr_offs
	cmp	w2, 0	// D.14868,
	ble	.L1824		//,
	add	x1, x0, 19	// D.14871, iftmp.873,
	and	x1, x1, -8	// D.14872, D.14871,
	str	x1, [sp, 376]	// D.14872, argv.__stack
	b	.L1823		//
.L1824:
	ldr	x2, [sp, 384]	// D.14874, argv.__gr_top
	sxtw	x0, w1	// D.14875, D.14858
	add	x0, x2, x0	// iftmp.873, D.14874, D.14875
.L1823:
	add	x1, sp, 280	// tmp340,,
	ldr	x2, [x0]	// tmp342, *iftmp.872_111
	str	x2, [x1]	// tmp342, D.6246
	ldr	w0, [x0, 8]	// tmp343, *iftmp.872_111
	str	w0, [x1, 8]	// tmp343, D.6246
// varargs-dll.c:811:   int l = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 288]	// tmp344, D.6246.c
	str	w0, [sp, 80]	// tmp344, l
// varargs-dll.c:812:   int m = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14876, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.875, argv.__stack
	cmp	w1, 0	// D.14876,
	blt	.L1826		//,
	add	x1, x0, 19	// D.14881, iftmp.875,
	and	x1, x1, -8	// D.14882, D.14881,
	str	x1, [sp, 376]	// D.14882, argv.__stack
	b	.L1827		//
.L1826:
	add	w2, w1, 16	// D.14884, D.14876,
	str	w2, [sp, 400]	// D.14884, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14886, argv.__gr_offs
	cmp	w2, 0	// D.14886,
	ble	.L1828		//,
	add	x1, x0, 19	// D.14889, iftmp.875,
	and	x1, x1, -8	// D.14890, D.14889,
	str	x1, [sp, 376]	// D.14890, argv.__stack
	b	.L1827		//
.L1828:
	ldr	x2, [sp, 384]	// D.14892, argv.__gr_top
	sxtw	x0, w1	// D.14893, D.14876
	add	x0, x2, x0	// iftmp.875, D.14892, D.14893
.L1827:
	add	x1, sp, 296	// tmp345,,
	ldr	x2, [x0]	// tmp347, *iftmp.874_113
	str	x2, [x1]	// tmp347, D.6247
	ldr	w0, [x0, 8]	// tmp348, *iftmp.874_113
	str	w0, [x1, 8]	// tmp348, D.6247
// varargs-dll.c:812:   int m = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 296]	// tmp349, D.6247.a
	str	w0, [sp, 84]	// tmp349, m
// varargs-dll.c:813:   int n = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14894, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.877, argv.__stack
	cmp	w1, 0	// D.14894,
	blt	.L1830		//,
	add	x1, x0, 19	// D.14899, iftmp.877,
	and	x1, x1, -8	// D.14900, D.14899,
	str	x1, [sp, 376]	// D.14900, argv.__stack
	b	.L1831		//
.L1830:
	add	w2, w1, 16	// D.14902, D.14894,
	str	w2, [sp, 400]	// D.14902, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14904, argv.__gr_offs
	cmp	w2, 0	// D.14904,
	ble	.L1832		//,
	add	x1, x0, 19	// D.14907, iftmp.877,
	and	x1, x1, -8	// D.14908, D.14907,
	str	x1, [sp, 376]	// D.14908, argv.__stack
	b	.L1831		//
.L1832:
	ldr	x2, [sp, 384]	// D.14910, argv.__gr_top
	sxtw	x0, w1	// D.14911, D.14894
	add	x0, x2, x0	// iftmp.877, D.14910, D.14911
.L1831:
	add	x1, sp, 312	// tmp350,,
	ldr	x2, [x0]	// tmp352, *iftmp.876_115
	str	x2, [x1]	// tmp352, D.6248
	ldr	w0, [x0, 8]	// tmp353, *iftmp.876_115
	str	w0, [x1, 8]	// tmp353, D.6248
// varargs-dll.c:813:   int n = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 316]	// tmp354, D.6248.b
	str	w0, [sp, 88]	// tmp354, n
// varargs-dll.c:814:   int o = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [sp, 400]	// D.14912, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.879, argv.__stack
	cmp	w1, 0	// D.14912,
	blt	.L1834		//,
	add	x1, x0, 19	// D.14917, iftmp.879,
	and	x1, x1, -8	// D.14918, D.14917,
	str	x1, [sp, 376]	// D.14918, argv.__stack
	b	.L1835		//
.L1834:
	add	w2, w1, 16	// D.14920, D.14912,
	str	w2, [sp, 400]	// D.14920, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14922, argv.__gr_offs
	cmp	w2, 0	// D.14922,
	ble	.L1836		//,
	add	x1, x0, 19	// D.14925, iftmp.879,
	and	x1, x1, -8	// D.14926, D.14925,
	str	x1, [sp, 376]	// D.14926, argv.__stack
	b	.L1835		//
.L1836:
	ldr	x2, [sp, 384]	// D.14928, argv.__gr_top
	sxtw	x0, w1	// D.14929, D.14912
	add	x0, x2, x0	// iftmp.879, D.14928, D.14929
.L1835:
	add	x1, sp, 328	// tmp355,,
	ldr	x2, [x0]	// tmp357, *iftmp.878_117
	str	x2, [x1]	// tmp357, D.6249
	ldr	w0, [x0, 8]	// tmp358, *iftmp.878_117
	str	w0, [x1, 8]	// tmp358, D.6249
// varargs-dll.c:814:   int o = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 336]	// tmp359, D.6249.c
	str	w0, [sp, 92]	// tmp359, o
// varargs-dll.c:815:   int p = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [sp, 400]	// D.14930, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.881, argv.__stack
	cmp	w1, 0	// D.14930,
	blt	.L1838		//,
	add	x1, x0, 19	// D.14935, iftmp.881,
	and	x1, x1, -8	// D.14936, D.14935,
	str	x1, [sp, 376]	// D.14936, argv.__stack
	b	.L1839		//
.L1838:
	add	w2, w1, 16	// D.14938, D.14930,
	str	w2, [sp, 400]	// D.14938, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14940, argv.__gr_offs
	cmp	w2, 0	// D.14940,
	ble	.L1840		//,
	add	x1, x0, 19	// D.14943, iftmp.881,
	and	x1, x1, -8	// D.14944, D.14943,
	str	x1, [sp, 376]	// D.14944, argv.__stack
	b	.L1839		//
.L1840:
	ldr	x2, [sp, 384]	// D.14946, argv.__gr_top
	sxtw	x0, w1	// D.14947, D.14930
	add	x0, x2, x0	// iftmp.881, D.14946, D.14947
.L1839:
	add	x1, sp, 344	// tmp360,,
	ldr	x2, [x0]	// tmp362, *iftmp.880_119
	str	x2, [x1]	// tmp362, D.6250
	ldr	w0, [x0, 8]	// tmp363, *iftmp.880_119
	str	w0, [x1, 8]	// tmp363, D.6250
// varargs-dll.c:815:   int p = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 344]	// tmp364, D.6250.a
	str	w0, [sp, 96]	// tmp364, p
// varargs-dll.c:816:   int q = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [sp, 400]	// D.14948, argv.__gr_offs
	ldr	x0, [sp, 376]	// iftmp.883, argv.__stack
	cmp	w1, 0	// D.14948,
	blt	.L1842		//,
	add	x1, x0, 19	// D.14953, iftmp.883,
	and	x1, x1, -8	// D.14954, D.14953,
	str	x1, [sp, 376]	// D.14954, argv.__stack
	b	.L1843		//
.L1842:
	add	w2, w1, 16	// D.14956, D.14948,
	str	w2, [sp, 400]	// D.14956, argv.__gr_offs
	ldr	w2, [sp, 400]	// D.14958, argv.__gr_offs
	cmp	w2, 0	// D.14958,
	ble	.L1844		//,
	add	x1, x0, 19	// D.14961, iftmp.883,
	and	x1, x1, -8	// D.14962, D.14961,
	str	x1, [sp, 376]	// D.14962, argv.__stack
	b	.L1843		//
.L1844:
	ldr	x2, [sp, 384]	// D.14964, argv.__gr_top
	sxtw	x0, w1	// D.14965, D.14948
	add	x0, x2, x0	// iftmp.883, D.14964, D.14965
.L1843:
	add	x1, sp, 360	// tmp365,,
	ldr	x2, [x0]	// tmp367, *iftmp.882_121
	str	x2, [x1]	// tmp367, D.6251
	ldr	w0, [x0, 8]	// tmp368, *iftmp.882_121
	str	w0, [x1, 8]	// tmp368, D.6251
// varargs-dll.c:816:   int q = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 364]	// tmp369, D.6251.b
	str	w0, [sp, 100]	// tmp369, q
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp370, a
	ldr	w0, [sp, 40]	// tmp371, b
	add	w1, w1, w0	// _1, tmp370, tmp371
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp372, c
	add	w1, w1, w0	// _2, _1, tmp372
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp373, d
	add	w1, w1, w0	// _3, _2, tmp373
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp374, e
	add	w1, w1, w0	// _4, _3, tmp374
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp375, f
	add	w1, w1, w0	// _5, _4, tmp375
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp376, g
	add	w1, w1, w0	// _6, _5, tmp376
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp377, h
	add	w1, w1, w0	// _7, _6, tmp377
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp378, i
	add	w1, w1, w0	// _8, _7, tmp378
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp379, j
	add	w1, w1, w0	// _9, _8, tmp379
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp380, k
	add	w1, w1, w0	// _10, _9, tmp380
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp381, l
	add	w1, w1, w0	// _11, _10, tmp381
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp382, m
	add	w1, w1, w0	// _12, _11, tmp382
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp383, n
	add	w1, w1, w0	// _13, _12, tmp383
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp384, o
	add	w1, w1, w0	// _14, _13, tmp384
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp385, p
	add	w1, w1, w0	// _15, _14, tmp385
// varargs-dll.c:818:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp386, q
	add	w0, w1, w0	// _53, _15, tmp386
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:819: }
	adrp	x0, :got:__stack_chk_guard	// tmp389,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp388, tmp389,
	ldr	x3, [sp, 408]	// tmp391, D.14966
	ldr	x2, [x0]	// tmp392,
	subs	x3, x3, x2	// tmp391, tmp392
	mov	x2, 0	// tmp392
	beq	.L1847		//,
	bl	__stack_chk_fail		//
.L1847:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 608	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE54:
	.size	use_va_args_many_not_short_vector_12_bytes, .-use_va_args_many_not_short_vector_12_bytes
	.align	2
	.global	use_va_list_many_not_short_vector_12_bytes
	.type	use_va_list_many_not_short_vector_12_bytes, %function
use_va_list_many_not_short_vector_12_bytes:
.LFB55:
	.cfi_startproc
	sub	sp, sp, #384	//,,
	.cfi_def_cfa_offset 384
	str	x19, [sp]	//,
	.cfi_offset 19, -384
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp279,
// varargs-dll.c:824:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.14970, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.885, argv.__stack
	cmp	w1, 0	// D.14970,
	blt	.L1849		//,
	add	x1, x0, 19	// D.14975, iftmp.885,
	and	x1, x1, -8	// D.14976, D.14975,
	str	x1, [x19]	// D.14976, argv.__stack
	b	.L1850		//
.L1849:
	add	w2, w1, 16	// D.14978, D.14970,
	str	w2, [x19, 24]	// D.14978, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14980, argv.__gr_offs
	cmp	w2, 0	// D.14980,
	ble	.L1851		//,
	add	x1, x0, 19	// D.14983, iftmp.885,
	and	x1, x1, -8	// D.14984, D.14983,
	str	x1, [x19]	// D.14984, argv.__stack
	b	.L1850		//
.L1851:
	ldr	x2, [x19, 8]	// D.14986, argv.__gr_top
	sxtw	x0, w1	// D.14987, D.14970
	add	x0, x2, x0	// iftmp.885, D.14986, D.14987
.L1850:
	add	x1, sp, 112	// tmp280,,
	ldr	x2, [x0]	// tmp282, *iftmp.884_86
	str	x2, [x1]	// tmp282, D.6255
	ldr	w0, [x0, 8]	// tmp283, *iftmp.884_86
	str	w0, [x1, 8]	// tmp283, D.6255
// varargs-dll.c:824:   int a = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 112]	// tmp284, D.6255.a
	str	w0, [sp, 44]	// tmp284, a
// varargs-dll.c:825:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.14988, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.887, argv.__stack
	cmp	w1, 0	// D.14988,
	blt	.L1853		//,
	add	x1, x0, 19	// D.14993, iftmp.887,
	and	x1, x1, -8	// D.14994, D.14993,
	str	x1, [x19]	// D.14994, argv.__stack
	b	.L1854		//
.L1853:
	add	w2, w1, 16	// D.14996, D.14988,
	str	w2, [x19, 24]	// D.14996, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.14998, argv.__gr_offs
	cmp	w2, 0	// D.14998,
	ble	.L1855		//,
	add	x1, x0, 19	// D.15001, iftmp.887,
	and	x1, x1, -8	// D.15002, D.15001,
	str	x1, [x19]	// D.15002, argv.__stack
	b	.L1854		//
.L1855:
	ldr	x2, [x19, 8]	// D.15004, argv.__gr_top
	sxtw	x0, w1	// D.15005, D.14988
	add	x0, x2, x0	// iftmp.887, D.15004, D.15005
.L1854:
	add	x1, sp, 128	// tmp285,,
	ldr	x2, [x0]	// tmp287, *iftmp.886_88
	str	x2, [x1]	// tmp287, D.6256
	ldr	w0, [x0, 8]	// tmp288, *iftmp.886_88
	str	w0, [x1, 8]	// tmp288, D.6256
// varargs-dll.c:825:   int b = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 132]	// tmp289, D.6256.b
	str	w0, [sp, 48]	// tmp289, b
// varargs-dll.c:826:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.15006, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.889, argv.__stack
	cmp	w1, 0	// D.15006,
	blt	.L1857		//,
	add	x1, x0, 19	// D.15011, iftmp.889,
	and	x1, x1, -8	// D.15012, D.15011,
	str	x1, [x19]	// D.15012, argv.__stack
	b	.L1858		//
.L1857:
	add	w2, w1, 16	// D.15014, D.15006,
	str	w2, [x19, 24]	// D.15014, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15016, argv.__gr_offs
	cmp	w2, 0	// D.15016,
	ble	.L1859		//,
	add	x1, x0, 19	// D.15019, iftmp.889,
	and	x1, x1, -8	// D.15020, D.15019,
	str	x1, [x19]	// D.15020, argv.__stack
	b	.L1858		//
.L1859:
	ldr	x2, [x19, 8]	// D.15022, argv.__gr_top
	sxtw	x0, w1	// D.15023, D.15006
	add	x0, x2, x0	// iftmp.889, D.15022, D.15023
.L1858:
	add	x1, sp, 144	// tmp290,,
	ldr	x2, [x0]	// tmp292, *iftmp.888_90
	str	x2, [x1]	// tmp292, D.6257
	ldr	w0, [x0, 8]	// tmp293, *iftmp.888_90
	str	w0, [x1, 8]	// tmp293, D.6257
// varargs-dll.c:826:   int c = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 152]	// tmp294, D.6257.c
	str	w0, [sp, 52]	// tmp294, c
// varargs-dll.c:827:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.15024, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.891, argv.__stack
	cmp	w1, 0	// D.15024,
	blt	.L1861		//,
	add	x1, x0, 19	// D.15029, iftmp.891,
	and	x1, x1, -8	// D.15030, D.15029,
	str	x1, [x19]	// D.15030, argv.__stack
	b	.L1862		//
.L1861:
	add	w2, w1, 16	// D.15032, D.15024,
	str	w2, [x19, 24]	// D.15032, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15034, argv.__gr_offs
	cmp	w2, 0	// D.15034,
	ble	.L1863		//,
	add	x1, x0, 19	// D.15037, iftmp.891,
	and	x1, x1, -8	// D.15038, D.15037,
	str	x1, [x19]	// D.15038, argv.__stack
	b	.L1862		//
.L1863:
	ldr	x2, [x19, 8]	// D.15040, argv.__gr_top
	sxtw	x0, w1	// D.15041, D.15024
	add	x0, x2, x0	// iftmp.891, D.15040, D.15041
.L1862:
	add	x1, sp, 160	// tmp295,,
	ldr	x2, [x0]	// tmp297, *iftmp.890_92
	str	x2, [x1]	// tmp297, D.6258
	ldr	w0, [x0, 8]	// tmp298, *iftmp.890_92
	str	w0, [x1, 8]	// tmp298, D.6258
// varargs-dll.c:827:   int d = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 160]	// tmp299, D.6258.a
	str	w0, [sp, 56]	// tmp299, d
// varargs-dll.c:828:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.15042, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.893, argv.__stack
	cmp	w1, 0	// D.15042,
	blt	.L1865		//,
	add	x1, x0, 19	// D.15047, iftmp.893,
	and	x1, x1, -8	// D.15048, D.15047,
	str	x1, [x19]	// D.15048, argv.__stack
	b	.L1866		//
.L1865:
	add	w2, w1, 16	// D.15050, D.15042,
	str	w2, [x19, 24]	// D.15050, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15052, argv.__gr_offs
	cmp	w2, 0	// D.15052,
	ble	.L1867		//,
	add	x1, x0, 19	// D.15055, iftmp.893,
	and	x1, x1, -8	// D.15056, D.15055,
	str	x1, [x19]	// D.15056, argv.__stack
	b	.L1866		//
.L1867:
	ldr	x2, [x19, 8]	// D.15058, argv.__gr_top
	sxtw	x0, w1	// D.15059, D.15042
	add	x0, x2, x0	// iftmp.893, D.15058, D.15059
.L1866:
	add	x1, sp, 176	// tmp300,,
	ldr	x2, [x0]	// tmp302, *iftmp.892_94
	str	x2, [x1]	// tmp302, D.6259
	ldr	w0, [x0, 8]	// tmp303, *iftmp.892_94
	str	w0, [x1, 8]	// tmp303, D.6259
// varargs-dll.c:828:   int e = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 180]	// tmp304, D.6259.b
	str	w0, [sp, 60]	// tmp304, e
// varargs-dll.c:829:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.15060, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.895, argv.__stack
	cmp	w1, 0	// D.15060,
	blt	.L1869		//,
	add	x1, x0, 19	// D.15065, iftmp.895,
	and	x1, x1, -8	// D.15066, D.15065,
	str	x1, [x19]	// D.15066, argv.__stack
	b	.L1870		//
.L1869:
	add	w2, w1, 16	// D.15068, D.15060,
	str	w2, [x19, 24]	// D.15068, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15070, argv.__gr_offs
	cmp	w2, 0	// D.15070,
	ble	.L1871		//,
	add	x1, x0, 19	// D.15073, iftmp.895,
	and	x1, x1, -8	// D.15074, D.15073,
	str	x1, [x19]	// D.15074, argv.__stack
	b	.L1870		//
.L1871:
	ldr	x2, [x19, 8]	// D.15076, argv.__gr_top
	sxtw	x0, w1	// D.15077, D.15060
	add	x0, x2, x0	// iftmp.895, D.15076, D.15077
.L1870:
	add	x1, sp, 192	// tmp305,,
	ldr	x2, [x0]	// tmp307, *iftmp.894_96
	str	x2, [x1]	// tmp307, D.6260
	ldr	w0, [x0, 8]	// tmp308, *iftmp.894_96
	str	w0, [x1, 8]	// tmp308, D.6260
// varargs-dll.c:829:   int f = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 200]	// tmp309, D.6260.c
	str	w0, [sp, 64]	// tmp309, f
// varargs-dll.c:830:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.15078, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.897, argv.__stack
	cmp	w1, 0	// D.15078,
	blt	.L1873		//,
	add	x1, x0, 19	// D.15083, iftmp.897,
	and	x1, x1, -8	// D.15084, D.15083,
	str	x1, [x19]	// D.15084, argv.__stack
	b	.L1874		//
.L1873:
	add	w2, w1, 16	// D.15086, D.15078,
	str	w2, [x19, 24]	// D.15086, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15088, argv.__gr_offs
	cmp	w2, 0	// D.15088,
	ble	.L1875		//,
	add	x1, x0, 19	// D.15091, iftmp.897,
	and	x1, x1, -8	// D.15092, D.15091,
	str	x1, [x19]	// D.15092, argv.__stack
	b	.L1874		//
.L1875:
	ldr	x2, [x19, 8]	// D.15094, argv.__gr_top
	sxtw	x0, w1	// D.15095, D.15078
	add	x0, x2, x0	// iftmp.897, D.15094, D.15095
.L1874:
	add	x1, sp, 208	// tmp310,,
	ldr	x2, [x0]	// tmp312, *iftmp.896_98
	str	x2, [x1]	// tmp312, D.6261
	ldr	w0, [x0, 8]	// tmp313, *iftmp.896_98
	str	w0, [x1, 8]	// tmp313, D.6261
// varargs-dll.c:830:   int g = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 208]	// tmp314, D.6261.a
	str	w0, [sp, 68]	// tmp314, g
// varargs-dll.c:831:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.15096, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.899, argv.__stack
	cmp	w1, 0	// D.15096,
	blt	.L1877		//,
	add	x1, x0, 19	// D.15101, iftmp.899,
	and	x1, x1, -8	// D.15102, D.15101,
	str	x1, [x19]	// D.15102, argv.__stack
	b	.L1878		//
.L1877:
	add	w2, w1, 16	// D.15104, D.15096,
	str	w2, [x19, 24]	// D.15104, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15106, argv.__gr_offs
	cmp	w2, 0	// D.15106,
	ble	.L1879		//,
	add	x1, x0, 19	// D.15109, iftmp.899,
	and	x1, x1, -8	// D.15110, D.15109,
	str	x1, [x19]	// D.15110, argv.__stack
	b	.L1878		//
.L1879:
	ldr	x2, [x19, 8]	// D.15112, argv.__gr_top
	sxtw	x0, w1	// D.15113, D.15096
	add	x0, x2, x0	// iftmp.899, D.15112, D.15113
.L1878:
	add	x1, sp, 224	// tmp315,,
	ldr	x2, [x0]	// tmp317, *iftmp.898_100
	str	x2, [x1]	// tmp317, D.6262
	ldr	w0, [x0, 8]	// tmp318, *iftmp.898_100
	str	w0, [x1, 8]	// tmp318, D.6262
// varargs-dll.c:831:   int h = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 228]	// tmp319, D.6262.b
	str	w0, [sp, 72]	// tmp319, h
// varargs-dll.c:832:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.15114, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.901, argv.__stack
	cmp	w1, 0	// D.15114,
	blt	.L1881		//,
	add	x1, x0, 19	// D.15119, iftmp.901,
	and	x1, x1, -8	// D.15120, D.15119,
	str	x1, [x19]	// D.15120, argv.__stack
	b	.L1882		//
.L1881:
	add	w2, w1, 16	// D.15122, D.15114,
	str	w2, [x19, 24]	// D.15122, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15124, argv.__gr_offs
	cmp	w2, 0	// D.15124,
	ble	.L1883		//,
	add	x1, x0, 19	// D.15127, iftmp.901,
	and	x1, x1, -8	// D.15128, D.15127,
	str	x1, [x19]	// D.15128, argv.__stack
	b	.L1882		//
.L1883:
	ldr	x2, [x19, 8]	// D.15130, argv.__gr_top
	sxtw	x0, w1	// D.15131, D.15114
	add	x0, x2, x0	// iftmp.901, D.15130, D.15131
.L1882:
	add	x1, sp, 240	// tmp320,,
	ldr	x2, [x0]	// tmp322, *iftmp.900_102
	str	x2, [x1]	// tmp322, D.6263
	ldr	w0, [x0, 8]	// tmp323, *iftmp.900_102
	str	w0, [x1, 8]	// tmp323, D.6263
// varargs-dll.c:832:   int i = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 248]	// tmp324, D.6263.c
	str	w0, [sp, 76]	// tmp324, i
// varargs-dll.c:833:   int j = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.15132, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.903, argv.__stack
	cmp	w1, 0	// D.15132,
	blt	.L1885		//,
	add	x1, x0, 19	// D.15137, iftmp.903,
	and	x1, x1, -8	// D.15138, D.15137,
	str	x1, [x19]	// D.15138, argv.__stack
	b	.L1886		//
.L1885:
	add	w2, w1, 16	// D.15140, D.15132,
	str	w2, [x19, 24]	// D.15140, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15142, argv.__gr_offs
	cmp	w2, 0	// D.15142,
	ble	.L1887		//,
	add	x1, x0, 19	// D.15145, iftmp.903,
	and	x1, x1, -8	// D.15146, D.15145,
	str	x1, [x19]	// D.15146, argv.__stack
	b	.L1886		//
.L1887:
	ldr	x2, [x19, 8]	// D.15148, argv.__gr_top
	sxtw	x0, w1	// D.15149, D.15132
	add	x0, x2, x0	// iftmp.903, D.15148, D.15149
.L1886:
	add	x1, sp, 256	// tmp325,,
	ldr	x2, [x0]	// tmp327, *iftmp.902_104
	str	x2, [x1]	// tmp327, D.6264
	ldr	w0, [x0, 8]	// tmp328, *iftmp.902_104
	str	w0, [x1, 8]	// tmp328, D.6264
// varargs-dll.c:833:   int j = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 256]	// tmp329, D.6264.a
	str	w0, [sp, 80]	// tmp329, j
// varargs-dll.c:834:   int k = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.15150, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.905, argv.__stack
	cmp	w1, 0	// D.15150,
	blt	.L1889		//,
	add	x1, x0, 19	// D.15155, iftmp.905,
	and	x1, x1, -8	// D.15156, D.15155,
	str	x1, [x19]	// D.15156, argv.__stack
	b	.L1890		//
.L1889:
	add	w2, w1, 16	// D.15158, D.15150,
	str	w2, [x19, 24]	// D.15158, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15160, argv.__gr_offs
	cmp	w2, 0	// D.15160,
	ble	.L1891		//,
	add	x1, x0, 19	// D.15163, iftmp.905,
	and	x1, x1, -8	// D.15164, D.15163,
	str	x1, [x19]	// D.15164, argv.__stack
	b	.L1890		//
.L1891:
	ldr	x2, [x19, 8]	// D.15166, argv.__gr_top
	sxtw	x0, w1	// D.15167, D.15150
	add	x0, x2, x0	// iftmp.905, D.15166, D.15167
.L1890:
	add	x1, sp, 272	// tmp330,,
	ldr	x2, [x0]	// tmp332, *iftmp.904_106
	str	x2, [x1]	// tmp332, D.6265
	ldr	w0, [x0, 8]	// tmp333, *iftmp.904_106
	str	w0, [x1, 8]	// tmp333, D.6265
// varargs-dll.c:834:   int k = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 276]	// tmp334, D.6265.b
	str	w0, [sp, 84]	// tmp334, k
// varargs-dll.c:835:   int l = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.15168, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.907, argv.__stack
	cmp	w1, 0	// D.15168,
	blt	.L1893		//,
	add	x1, x0, 19	// D.15173, iftmp.907,
	and	x1, x1, -8	// D.15174, D.15173,
	str	x1, [x19]	// D.15174, argv.__stack
	b	.L1894		//
.L1893:
	add	w2, w1, 16	// D.15176, D.15168,
	str	w2, [x19, 24]	// D.15176, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15178, argv.__gr_offs
	cmp	w2, 0	// D.15178,
	ble	.L1895		//,
	add	x1, x0, 19	// D.15181, iftmp.907,
	and	x1, x1, -8	// D.15182, D.15181,
	str	x1, [x19]	// D.15182, argv.__stack
	b	.L1894		//
.L1895:
	ldr	x2, [x19, 8]	// D.15184, argv.__gr_top
	sxtw	x0, w1	// D.15185, D.15168
	add	x0, x2, x0	// iftmp.907, D.15184, D.15185
.L1894:
	add	x1, sp, 288	// tmp335,,
	ldr	x2, [x0]	// tmp337, *iftmp.906_108
	str	x2, [x1]	// tmp337, D.6266
	ldr	w0, [x0, 8]	// tmp338, *iftmp.906_108
	str	w0, [x1, 8]	// tmp338, D.6266
// varargs-dll.c:835:   int l = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 296]	// tmp339, D.6266.c
	str	w0, [sp, 88]	// tmp339, l
// varargs-dll.c:836:   int m = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.15186, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.909, argv.__stack
	cmp	w1, 0	// D.15186,
	blt	.L1897		//,
	add	x1, x0, 19	// D.15191, iftmp.909,
	and	x1, x1, -8	// D.15192, D.15191,
	str	x1, [x19]	// D.15192, argv.__stack
	b	.L1898		//
.L1897:
	add	w2, w1, 16	// D.15194, D.15186,
	str	w2, [x19, 24]	// D.15194, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15196, argv.__gr_offs
	cmp	w2, 0	// D.15196,
	ble	.L1899		//,
	add	x1, x0, 19	// D.15199, iftmp.909,
	and	x1, x1, -8	// D.15200, D.15199,
	str	x1, [x19]	// D.15200, argv.__stack
	b	.L1898		//
.L1899:
	ldr	x2, [x19, 8]	// D.15202, argv.__gr_top
	sxtw	x0, w1	// D.15203, D.15186
	add	x0, x2, x0	// iftmp.909, D.15202, D.15203
.L1898:
	add	x1, sp, 304	// tmp340,,
	ldr	x2, [x0]	// tmp342, *iftmp.908_110
	str	x2, [x1]	// tmp342, D.6267
	ldr	w0, [x0, 8]	// tmp343, *iftmp.908_110
	str	w0, [x1, 8]	// tmp343, D.6267
// varargs-dll.c:836:   int m = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 304]	// tmp344, D.6267.a
	str	w0, [sp, 92]	// tmp344, m
// varargs-dll.c:837:   int n = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.15204, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.911, argv.__stack
	cmp	w1, 0	// D.15204,
	blt	.L1901		//,
	add	x1, x0, 19	// D.15209, iftmp.911,
	and	x1, x1, -8	// D.15210, D.15209,
	str	x1, [x19]	// D.15210, argv.__stack
	b	.L1902		//
.L1901:
	add	w2, w1, 16	// D.15212, D.15204,
	str	w2, [x19, 24]	// D.15212, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15214, argv.__gr_offs
	cmp	w2, 0	// D.15214,
	ble	.L1903		//,
	add	x1, x0, 19	// D.15217, iftmp.911,
	and	x1, x1, -8	// D.15218, D.15217,
	str	x1, [x19]	// D.15218, argv.__stack
	b	.L1902		//
.L1903:
	ldr	x2, [x19, 8]	// D.15220, argv.__gr_top
	sxtw	x0, w1	// D.15221, D.15204
	add	x0, x2, x0	// iftmp.911, D.15220, D.15221
.L1902:
	add	x1, sp, 320	// tmp345,,
	ldr	x2, [x0]	// tmp347, *iftmp.910_112
	str	x2, [x1]	// tmp347, D.6268
	ldr	w0, [x0, 8]	// tmp348, *iftmp.910_112
	str	w0, [x1, 8]	// tmp348, D.6268
// varargs-dll.c:837:   int n = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 324]	// tmp349, D.6268.b
	str	w0, [sp, 96]	// tmp349, n
// varargs-dll.c:838:   int o = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w1, [x19, 24]	// D.15222, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.913, argv.__stack
	cmp	w1, 0	// D.15222,
	blt	.L1905		//,
	add	x1, x0, 19	// D.15227, iftmp.913,
	and	x1, x1, -8	// D.15228, D.15227,
	str	x1, [x19]	// D.15228, argv.__stack
	b	.L1906		//
.L1905:
	add	w2, w1, 16	// D.15230, D.15222,
	str	w2, [x19, 24]	// D.15230, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15232, argv.__gr_offs
	cmp	w2, 0	// D.15232,
	ble	.L1907		//,
	add	x1, x0, 19	// D.15235, iftmp.913,
	and	x1, x1, -8	// D.15236, D.15235,
	str	x1, [x19]	// D.15236, argv.__stack
	b	.L1906		//
.L1907:
	ldr	x2, [x19, 8]	// D.15238, argv.__gr_top
	sxtw	x0, w1	// D.15239, D.15222
	add	x0, x2, x0	// iftmp.913, D.15238, D.15239
.L1906:
	add	x1, sp, 336	// tmp350,,
	ldr	x2, [x0]	// tmp352, *iftmp.912_114
	str	x2, [x1]	// tmp352, D.6269
	ldr	w0, [x0, 8]	// tmp353, *iftmp.912_114
	str	w0, [x1, 8]	// tmp353, D.6269
// varargs-dll.c:838:   int o = va_arg (argv, struct not_short_vector_12_bytes).c;
	ldr	w0, [sp, 344]	// tmp354, D.6269.c
	str	w0, [sp, 100]	// tmp354, o
// varargs-dll.c:839:   int p = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w1, [x19, 24]	// D.15240, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.915, argv.__stack
	cmp	w1, 0	// D.15240,
	blt	.L1909		//,
	add	x1, x0, 19	// D.15245, iftmp.915,
	and	x1, x1, -8	// D.15246, D.15245,
	str	x1, [x19]	// D.15246, argv.__stack
	b	.L1910		//
.L1909:
	add	w2, w1, 16	// D.15248, D.15240,
	str	w2, [x19, 24]	// D.15248, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15250, argv.__gr_offs
	cmp	w2, 0	// D.15250,
	ble	.L1911		//,
	add	x1, x0, 19	// D.15253, iftmp.915,
	and	x1, x1, -8	// D.15254, D.15253,
	str	x1, [x19]	// D.15254, argv.__stack
	b	.L1910		//
.L1911:
	ldr	x2, [x19, 8]	// D.15256, argv.__gr_top
	sxtw	x0, w1	// D.15257, D.15240
	add	x0, x2, x0	// iftmp.915, D.15256, D.15257
.L1910:
	add	x1, sp, 352	// tmp355,,
	ldr	x2, [x0]	// tmp357, *iftmp.914_116
	str	x2, [x1]	// tmp357, D.6270
	ldr	w0, [x0, 8]	// tmp358, *iftmp.914_116
	str	w0, [x1, 8]	// tmp358, D.6270
// varargs-dll.c:839:   int p = va_arg (argv, struct not_short_vector_12_bytes).a;
	ldr	w0, [sp, 352]	// tmp359, D.6270.a
	str	w0, [sp, 104]	// tmp359, p
// varargs-dll.c:840:   int q = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w1, [x19, 24]	// D.15258, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.917, argv.__stack
	cmp	w1, 0	// D.15258,
	blt	.L1913		//,
	add	x1, x0, 19	// D.15263, iftmp.917,
	and	x1, x1, -8	// D.15264, D.15263,
	str	x1, [x19]	// D.15264, argv.__stack
	b	.L1914		//
.L1913:
	add	w2, w1, 16	// D.15266, D.15258,
	str	w2, [x19, 24]	// D.15266, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15268, argv.__gr_offs
	cmp	w2, 0	// D.15268,
	ble	.L1915		//,
	add	x1, x0, 19	// D.15271, iftmp.917,
	and	x1, x1, -8	// D.15272, D.15271,
	str	x1, [x19]	// D.15272, argv.__stack
	b	.L1914		//
.L1915:
	ldr	x2, [x19, 8]	// D.15274, argv.__gr_top
	sxtw	x0, w1	// D.15275, D.15258
	add	x0, x2, x0	// iftmp.917, D.15274, D.15275
.L1914:
	add	x1, sp, 368	// tmp360,,
	ldr	x2, [x0]	// tmp362, *iftmp.916_118
	str	x2, [x1]	// tmp362, D.6271
	ldr	w0, [x0, 8]	// tmp363, *iftmp.916_118
	str	w0, [x1, 8]	// tmp363, D.6271
// varargs-dll.c:840:   int q = va_arg (argv, struct not_short_vector_12_bytes).b;
	ldr	w0, [sp, 372]	// tmp364, D.6271.b
	str	w0, [sp, 108]	// tmp364, q
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp365, a
	ldr	w0, [sp, 48]	// tmp366, b
	add	w1, w1, w0	// _1, tmp365, tmp366
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp367, c
	add	w1, w1, w0	// _2, _1, tmp367
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp368, d
	add	w1, w1, w0	// _3, _2, tmp368
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp369, e
	add	w1, w1, w0	// _4, _3, tmp369
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp370, f
	add	w1, w1, w0	// _5, _4, tmp370
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp371, g
	add	w1, w1, w0	// _6, _5, tmp371
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp372, h
	add	w1, w1, w0	// _7, _6, tmp372
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp373, i
	add	w1, w1, w0	// _8, _7, tmp373
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp374, j
	add	w1, w1, w0	// _9, _8, tmp374
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp375, k
	add	w1, w1, w0	// _10, _9, tmp375
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp376, l
	add	w1, w1, w0	// _11, _10, tmp376
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp377, m
	add	w1, w1, w0	// _12, _11, tmp377
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp378, n
	add	w1, w1, w0	// _13, _12, tmp378
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp379, o
	add	w1, w1, w0	// _14, _13, tmp379
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp380, p
	add	w1, w1, w0	// _15, _14, tmp380
// varargs-dll.c:841:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp381, q
	add	w0, w1, w0	// _51, _15, tmp381
// varargs-dll.c:842: }
	ldr	x19, [sp]	//,
	add	sp, sp, 384	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE55:
	.size	use_va_list_many_not_short_vector_12_bytes, .-use_va_list_many_not_short_vector_12_bytes
	.align	2
	.global	use_va_args_few_short_vector_16_bytes
	.type	use_va_args_few_short_vector_16_bytes, %function
use_va_args_few_short_vector_16_bytes:
.LFB56:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:846: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp132,
	str	x1, [sp, 72]	// tmp132, D.15312
	mov	x1, 0	// tmp132
// varargs-dll.c:848:   va_start (argv, format);
	add	x0, sp, 272	// tmp137,,
	str	x0, [sp, 40]	// tmp137, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp138,,
	str	x0, [sp, 48]	// tmp138, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:849:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 64]	// D.15276, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.919, argv.__stack
	cmp	w1, 0	// D.15276,
	blt	.L1919		//,
	add	x1, x0, 23	// D.15281, iftmp.919,
	and	x1, x1, -8	// D.15282, D.15281,
	str	x1, [sp, 40]	// D.15282, argv.__stack
	b	.L1920		//
.L1919:
	add	w2, w1, 16	// D.15284, D.15276,
	str	w2, [sp, 64]	// D.15284, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.15286, argv.__gr_offs
	cmp	w2, 0	// D.15286,
	ble	.L1921		//,
	add	x1, x0, 23	// D.15289, iftmp.919,
	and	x1, x1, -8	// D.15290, D.15289,
	str	x1, [sp, 40]	// D.15290, argv.__stack
	b	.L1920		//
.L1921:
	ldr	x2, [sp, 48]	// D.15292, argv.__gr_top
	sxtw	x0, w1	// D.15293, D.15276
	add	x0, x2, x0	// iftmp.919, D.15292, D.15293
.L1920:
	ldp	x0, x1, [x0]	// D.6274, *iftmp.918_14
// varargs-dll.c:849:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 32]	// tmp122, a
// varargs-dll.c:850:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 64]	// D.15294, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.921, argv.__stack
	cmp	w1, 0	// D.15294,
	blt	.L1923		//,
	add	x1, x0, 23	// D.15299, iftmp.921,
	and	x1, x1, -8	// D.15300, D.15299,
	str	x1, [sp, 40]	// D.15300, argv.__stack
	b	.L1924		//
.L1923:
	add	w2, w1, 16	// D.15302, D.15294,
	str	w2, [sp, 64]	// D.15302, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.15304, argv.__gr_offs
	cmp	w2, 0	// D.15304,
	ble	.L1925		//,
	add	x1, x0, 23	// D.15307, iftmp.921,
	and	x1, x1, -8	// D.15308, D.15307,
	str	x1, [sp, 40]	// D.15308, argv.__stack
	b	.L1924		//
.L1925:
	ldr	x2, [sp, 48]	// D.15310, argv.__gr_top
	sxtw	x0, w1	// D.15311, D.15294
	add	x0, x2, x0	// iftmp.921, D.15310, D.15311
.L1924:
	ldp	x0, x1, [x0]	// D.6275, *iftmp.920_16
// varargs-dll.c:850:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp125, tmp124,
	str	w0, [sp, 36]	// tmp126, b
// varargs-dll.c:852:   return a + b;
	ldr	w1, [sp, 32]	// tmp127, a
	ldr	w0, [sp, 36]	// tmp128, b
	add	w0, w1, w0	// _8, tmp127, tmp128
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:853: }
	adrp	x0, :got:__stack_chk_guard	// tmp131,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp130, tmp131,
	ldr	x3, [sp, 72]	// tmp133, D.15312
	ldr	x2, [x0]	// tmp134,
	subs	x3, x3, x2	// tmp133, tmp134
	mov	x2, 0	// tmp134
	beq	.L1928		//,
	bl	__stack_chk_fail		//
.L1928:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE56:
	.size	use_va_args_few_short_vector_16_bytes, .-use_va_args_few_short_vector_16_bytes
	.align	2
	.global	use_va_list_few_short_vector_16_bytes
	.type	use_va_list_few_short_vector_16_bytes, %function
use_va_list_few_short_vector_16_bytes:
.LFB57:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:858:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.15316, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.923, argv.__stack
	cmp	w1, 0	// D.15316,
	blt	.L1930		//,
	add	x1, x0, 23	// D.15321, iftmp.923,
	and	x1, x1, -8	// D.15322, D.15321,
	str	x1, [x19]	// D.15322, argv.__stack
	b	.L1931		//
.L1930:
	add	w2, w1, 16	// D.15324, D.15316,
	str	w2, [x19, 24]	// D.15324, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15326, argv.__gr_offs
	cmp	w2, 0	// D.15326,
	ble	.L1932		//,
	add	x1, x0, 23	// D.15329, iftmp.923,
	and	x1, x1, -8	// D.15330, D.15329,
	str	x1, [x19]	// D.15330, argv.__stack
	b	.L1931		//
.L1932:
	ldr	x2, [x19, 8]	// D.15332, argv.__gr_top
	sxtw	x0, w1	// D.15333, D.15316
	add	x0, x2, x0	// iftmp.923, D.15332, D.15333
.L1931:
	ldp	x0, x1, [x0]	// D.6279, *iftmp.922_11
// varargs-dll.c:858:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 40]	// tmp117, a
// varargs-dll.c:859:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.15334, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.925, argv.__stack
	cmp	w1, 0	// D.15334,
	blt	.L1934		//,
	add	x1, x0, 23	// D.15339, iftmp.925,
	and	x1, x1, -8	// D.15340, D.15339,
	str	x1, [x19]	// D.15340, argv.__stack
	b	.L1935		//
.L1934:
	add	w2, w1, 16	// D.15342, D.15334,
	str	w2, [x19, 24]	// D.15342, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15344, argv.__gr_offs
	cmp	w2, 0	// D.15344,
	ble	.L1936		//,
	add	x1, x0, 23	// D.15347, iftmp.925,
	and	x1, x1, -8	// D.15348, D.15347,
	str	x1, [x19]	// D.15348, argv.__stack
	b	.L1935		//
.L1936:
	ldr	x2, [x19, 8]	// D.15350, argv.__gr_top
	sxtw	x0, w1	// D.15351, D.15334
	add	x0, x2, x0	// iftmp.925, D.15350, D.15351
.L1935:
	ldp	x0, x1, [x0]	// D.6280, *iftmp.924_13
// varargs-dll.c:859:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp120, tmp119,
	str	w0, [sp, 44]	// tmp121, b
// varargs-dll.c:860:   return a + b;
	ldr	w1, [sp, 40]	// tmp122, a
	ldr	w0, [sp, 44]	// tmp123, b
	add	w0, w1, w0	// _6, tmp122, tmp123
// varargs-dll.c:861: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE57:
	.size	use_va_list_few_short_vector_16_bytes, .-use_va_list_few_short_vector_16_bytes
	.align	2
	.global	use_va_args_several_short_vector_16_bytes
	.type	use_va_args_several_short_vector_16_bytes, %function
use_va_args_several_short_vector_16_bytes:
.LFB58:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:865: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp239,
	str	x1, [sp, 104]	// tmp239, D.15514
	mov	x1, 0	// tmp239
// varargs-dll.c:867:   va_start (argv, format);
	add	x0, sp, 304	// tmp244,,
	str	x0, [sp, 72]	// tmp244, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp245,,
	str	x0, [sp, 80]	// tmp245, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:868:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 96]	// D.15352, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.927, argv.__stack
	cmp	w1, 0	// D.15352,
	blt	.L1940		//,
	add	x1, x0, 23	// D.15357, iftmp.927,
	and	x1, x1, -8	// D.15358, D.15357,
	str	x1, [sp, 72]	// D.15358, argv.__stack
	b	.L1941		//
.L1940:
	add	w2, w1, 16	// D.15360, D.15352,
	str	w2, [sp, 96]	// D.15360, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15362, argv.__gr_offs
	cmp	w2, 0	// D.15362,
	ble	.L1942		//,
	add	x1, x0, 23	// D.15365, iftmp.927,
	and	x1, x1, -8	// D.15366, D.15365,
	str	x1, [sp, 72]	// D.15366, argv.__stack
	b	.L1941		//
.L1942:
	ldr	x2, [sp, 80]	// D.15368, argv.__gr_top
	sxtw	x0, w1	// D.15369, D.15352
	add	x0, x2, x0	// iftmp.927, D.15368, D.15369
.L1941:
	ldp	x0, x1, [x0]	// D.6283, *iftmp.926_49
// varargs-dll.c:868:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 36]	// tmp206, a
// varargs-dll.c:869:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 96]	// D.15370, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.929, argv.__stack
	cmp	w1, 0	// D.15370,
	blt	.L1944		//,
	add	x1, x0, 23	// D.15375, iftmp.929,
	and	x1, x1, -8	// D.15376, D.15375,
	str	x1, [sp, 72]	// D.15376, argv.__stack
	b	.L1945		//
.L1944:
	add	w2, w1, 16	// D.15378, D.15370,
	str	w2, [sp, 96]	// D.15378, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15380, argv.__gr_offs
	cmp	w2, 0	// D.15380,
	ble	.L1946		//,
	add	x1, x0, 23	// D.15383, iftmp.929,
	and	x1, x1, -8	// D.15384, D.15383,
	str	x1, [sp, 72]	// D.15384, argv.__stack
	b	.L1945		//
.L1946:
	ldr	x2, [sp, 80]	// D.15386, argv.__gr_top
	sxtw	x0, w1	// D.15387, D.15370
	add	x0, x2, x0	// iftmp.929, D.15386, D.15387
.L1945:
	ldp	x0, x1, [x0]	// D.6284, *iftmp.928_51
// varargs-dll.c:869:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp209, tmp208,
	str	w0, [sp, 40]	// tmp210, b
// varargs-dll.c:870:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 96]	// D.15388, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.931, argv.__stack
	cmp	w1, 0	// D.15388,
	blt	.L1948		//,
	add	x1, x0, 23	// D.15393, iftmp.931,
	and	x1, x1, -8	// D.15394, D.15393,
	str	x1, [sp, 72]	// D.15394, argv.__stack
	b	.L1949		//
.L1948:
	add	w2, w1, 16	// D.15396, D.15388,
	str	w2, [sp, 96]	// D.15396, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15398, argv.__gr_offs
	cmp	w2, 0	// D.15398,
	ble	.L1950		//,
	add	x1, x0, 23	// D.15401, iftmp.931,
	and	x1, x1, -8	// D.15402, D.15401,
	str	x1, [sp, 72]	// D.15402, argv.__stack
	b	.L1949		//
.L1950:
	ldr	x2, [sp, 80]	// D.15404, argv.__gr_top
	sxtw	x0, w1	// D.15405, D.15388
	add	x0, x2, x0	// iftmp.931, D.15404, D.15405
.L1949:
	ldp	x0, x1, [x0]	// D.6285, *iftmp.930_53
// varargs-dll.c:870:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp211, D.6285
	str	w0, [sp, 44]	// tmp211, c
// varargs-dll.c:871:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 96]	// D.15406, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.933, argv.__stack
	cmp	w1, 0	// D.15406,
	blt	.L1952		//,
	add	x1, x0, 23	// D.15411, iftmp.933,
	and	x1, x1, -8	// D.15412, D.15411,
	str	x1, [sp, 72]	// D.15412, argv.__stack
	b	.L1953		//
.L1952:
	add	w2, w1, 16	// D.15414, D.15406,
	str	w2, [sp, 96]	// D.15414, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15416, argv.__gr_offs
	cmp	w2, 0	// D.15416,
	ble	.L1954		//,
	add	x1, x0, 23	// D.15419, iftmp.933,
	and	x1, x1, -8	// D.15420, D.15419,
	str	x1, [sp, 72]	// D.15420, argv.__stack
	b	.L1953		//
.L1954:
	ldr	x2, [sp, 80]	// D.15422, argv.__gr_top
	sxtw	x0, w1	// D.15423, D.15406
	add	x0, x2, x0	// iftmp.933, D.15422, D.15423
.L1953:
	ldp	x0, x1, [x0]	// D.6286, *iftmp.932_55
// varargs-dll.c:871:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp213, D.6286
	asr	x0, x0, 32	// tmp214, tmp213,
	str	w0, [sp, 48]	// tmp215, d
// varargs-dll.c:872:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 96]	// D.15424, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.935, argv.__stack
	cmp	w1, 0	// D.15424,
	blt	.L1956		//,
	add	x1, x0, 23	// D.15429, iftmp.935,
	and	x1, x1, -8	// D.15430, D.15429,
	str	x1, [sp, 72]	// D.15430, argv.__stack
	b	.L1957		//
.L1956:
	add	w2, w1, 16	// D.15432, D.15424,
	str	w2, [sp, 96]	// D.15432, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15434, argv.__gr_offs
	cmp	w2, 0	// D.15434,
	ble	.L1958		//,
	add	x1, x0, 23	// D.15437, iftmp.935,
	and	x1, x1, -8	// D.15438, D.15437,
	str	x1, [sp, 72]	// D.15438, argv.__stack
	b	.L1957		//
.L1958:
	ldr	x2, [sp, 80]	// D.15440, argv.__gr_top
	sxtw	x0, w1	// D.15441, D.15424
	add	x0, x2, x0	// iftmp.935, D.15440, D.15441
.L1957:
	ldp	x0, x1, [x0]	// D.6287, *iftmp.934_57
// varargs-dll.c:872:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 52]	// tmp216, e
// varargs-dll.c:873:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 96]	// D.15442, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.937, argv.__stack
	cmp	w1, 0	// D.15442,
	blt	.L1960		//,
	add	x1, x0, 23	// D.15447, iftmp.937,
	and	x1, x1, -8	// D.15448, D.15447,
	str	x1, [sp, 72]	// D.15448, argv.__stack
	b	.L1961		//
.L1960:
	add	w2, w1, 16	// D.15450, D.15442,
	str	w2, [sp, 96]	// D.15450, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15452, argv.__gr_offs
	cmp	w2, 0	// D.15452,
	ble	.L1962		//,
	add	x1, x0, 23	// D.15455, iftmp.937,
	and	x1, x1, -8	// D.15456, D.15455,
	str	x1, [sp, 72]	// D.15456, argv.__stack
	b	.L1961		//
.L1962:
	ldr	x2, [sp, 80]	// D.15458, argv.__gr_top
	sxtw	x0, w1	// D.15459, D.15442
	add	x0, x2, x0	// iftmp.937, D.15458, D.15459
.L1961:
	ldp	x0, x1, [x0]	// D.6288, *iftmp.936_59
// varargs-dll.c:873:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp219, tmp218,
	str	w0, [sp, 56]	// tmp220, f
// varargs-dll.c:874:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 96]	// D.15460, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.939, argv.__stack
	cmp	w1, 0	// D.15460,
	blt	.L1964		//,
	add	x1, x0, 23	// D.15465, iftmp.939,
	and	x1, x1, -8	// D.15466, D.15465,
	str	x1, [sp, 72]	// D.15466, argv.__stack
	b	.L1965		//
.L1964:
	add	w2, w1, 16	// D.15468, D.15460,
	str	w2, [sp, 96]	// D.15468, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15470, argv.__gr_offs
	cmp	w2, 0	// D.15470,
	ble	.L1966		//,
	add	x1, x0, 23	// D.15473, iftmp.939,
	and	x1, x1, -8	// D.15474, D.15473,
	str	x1, [sp, 72]	// D.15474, argv.__stack
	b	.L1965		//
.L1966:
	ldr	x2, [sp, 80]	// D.15476, argv.__gr_top
	sxtw	x0, w1	// D.15477, D.15460
	add	x0, x2, x0	// iftmp.939, D.15476, D.15477
.L1965:
	ldp	x0, x1, [x0]	// D.6289, *iftmp.938_61
// varargs-dll.c:874:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp221, D.6289
	str	w0, [sp, 60]	// tmp221, g
// varargs-dll.c:875:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 96]	// D.15478, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.941, argv.__stack
	cmp	w1, 0	// D.15478,
	blt	.L1968		//,
	add	x1, x0, 23	// D.15483, iftmp.941,
	and	x1, x1, -8	// D.15484, D.15483,
	str	x1, [sp, 72]	// D.15484, argv.__stack
	b	.L1969		//
.L1968:
	add	w2, w1, 16	// D.15486, D.15478,
	str	w2, [sp, 96]	// D.15486, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15488, argv.__gr_offs
	cmp	w2, 0	// D.15488,
	ble	.L1970		//,
	add	x1, x0, 23	// D.15491, iftmp.941,
	and	x1, x1, -8	// D.15492, D.15491,
	str	x1, [sp, 72]	// D.15492, argv.__stack
	b	.L1969		//
.L1970:
	ldr	x2, [sp, 80]	// D.15494, argv.__gr_top
	sxtw	x0, w1	// D.15495, D.15478
	add	x0, x2, x0	// iftmp.941, D.15494, D.15495
.L1969:
	ldp	x0, x1, [x0]	// D.6290, *iftmp.940_63
// varargs-dll.c:875:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp223, D.6290
	asr	x0, x0, 32	// tmp224, tmp223,
	str	w0, [sp, 64]	// tmp225, h
// varargs-dll.c:876:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 96]	// D.15496, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.943, argv.__stack
	cmp	w1, 0	// D.15496,
	blt	.L1972		//,
	add	x1, x0, 23	// D.15501, iftmp.943,
	and	x1, x1, -8	// D.15502, D.15501,
	str	x1, [sp, 72]	// D.15502, argv.__stack
	b	.L1973		//
.L1972:
	add	w2, w1, 16	// D.15504, D.15496,
	str	w2, [sp, 96]	// D.15504, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.15506, argv.__gr_offs
	cmp	w2, 0	// D.15506,
	ble	.L1974		//,
	add	x1, x0, 23	// D.15509, iftmp.943,
	and	x1, x1, -8	// D.15510, D.15509,
	str	x1, [sp, 72]	// D.15510, argv.__stack
	b	.L1973		//
.L1974:
	ldr	x2, [sp, 80]	// D.15512, argv.__gr_top
	sxtw	x0, w1	// D.15513, D.15496
	add	x0, x2, x0	// iftmp.943, D.15512, D.15513
.L1973:
	ldp	x0, x1, [x0]	// D.6291, *iftmp.942_65
// varargs-dll.c:876:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 68]	// tmp226, i
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp227, a
	ldr	w0, [sp, 40]	// tmp228, b
	add	w1, w1, w0	// _1, tmp227, tmp228
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp229, c
	add	w1, w1, w0	// _2, _1, tmp229
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp230, d
	add	w1, w1, w0	// _3, _2, tmp230
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp231, e
	add	w1, w1, w0	// _4, _3, tmp231
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp232, f
	add	w1, w1, w0	// _5, _4, tmp232
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp233, g
	add	w1, w1, w0	// _6, _5, tmp233
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp234, h
	add	w1, w1, w0	// _7, _6, tmp234
// varargs-dll.c:878:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp235, i
	add	w0, w1, w0	// _29, _7, tmp235
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:879: }
	adrp	x0, :got:__stack_chk_guard	// tmp238,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp237, tmp238,
	ldr	x3, [sp, 104]	// tmp240, D.15514
	ldr	x2, [x0]	// tmp241,
	subs	x3, x3, x2	// tmp240, tmp241
	mov	x2, 0	// tmp241
	beq	.L1977		//,
	bl	__stack_chk_fail		//
.L1977:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE58:
	.size	use_va_args_several_short_vector_16_bytes, .-use_va_args_several_short_vector_16_bytes
	.align	2
	.global	use_va_list_several_short_vector_16_bytes
	.type	use_va_list_several_short_vector_16_bytes, %function
use_va_list_several_short_vector_16_bytes:
.LFB59:
	.cfi_startproc
	str	x19, [sp, -80]!	//,
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -80
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:884:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.15518, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.945, argv.__stack
	cmp	w1, 0	// D.15518,
	blt	.L1979		//,
	add	x1, x0, 23	// D.15523, iftmp.945,
	and	x1, x1, -8	// D.15524, D.15523,
	str	x1, [x19]	// D.15524, argv.__stack
	b	.L1980		//
.L1979:
	add	w2, w1, 16	// D.15526, D.15518,
	str	w2, [x19, 24]	// D.15526, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15528, argv.__gr_offs
	cmp	w2, 0	// D.15528,
	ble	.L1981		//,
	add	x1, x0, 23	// D.15531, iftmp.945,
	and	x1, x1, -8	// D.15532, D.15531,
	str	x1, [x19]	// D.15532, argv.__stack
	b	.L1980		//
.L1981:
	ldr	x2, [x19, 8]	// D.15534, argv.__gr_top
	sxtw	x0, w1	// D.15535, D.15518
	add	x0, x2, x0	// iftmp.945, D.15534, D.15535
.L1980:
	ldp	x0, x1, [x0]	// D.6295, *iftmp.944_46
// varargs-dll.c:884:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 44]	// tmp201, a
// varargs-dll.c:885:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.15536, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.947, argv.__stack
	cmp	w1, 0	// D.15536,
	blt	.L1983		//,
	add	x1, x0, 23	// D.15541, iftmp.947,
	and	x1, x1, -8	// D.15542, D.15541,
	str	x1, [x19]	// D.15542, argv.__stack
	b	.L1984		//
.L1983:
	add	w2, w1, 16	// D.15544, D.15536,
	str	w2, [x19, 24]	// D.15544, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15546, argv.__gr_offs
	cmp	w2, 0	// D.15546,
	ble	.L1985		//,
	add	x1, x0, 23	// D.15549, iftmp.947,
	and	x1, x1, -8	// D.15550, D.15549,
	str	x1, [x19]	// D.15550, argv.__stack
	b	.L1984		//
.L1985:
	ldr	x2, [x19, 8]	// D.15552, argv.__gr_top
	sxtw	x0, w1	// D.15553, D.15536
	add	x0, x2, x0	// iftmp.947, D.15552, D.15553
.L1984:
	ldp	x0, x1, [x0]	// D.6296, *iftmp.946_48
// varargs-dll.c:885:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp204, tmp203,
	str	w0, [sp, 48]	// tmp205, b
// varargs-dll.c:886:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.15554, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.949, argv.__stack
	cmp	w1, 0	// D.15554,
	blt	.L1987		//,
	add	x1, x0, 23	// D.15559, iftmp.949,
	and	x1, x1, -8	// D.15560, D.15559,
	str	x1, [x19]	// D.15560, argv.__stack
	b	.L1988		//
.L1987:
	add	w2, w1, 16	// D.15562, D.15554,
	str	w2, [x19, 24]	// D.15562, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15564, argv.__gr_offs
	cmp	w2, 0	// D.15564,
	ble	.L1989		//,
	add	x1, x0, 23	// D.15567, iftmp.949,
	and	x1, x1, -8	// D.15568, D.15567,
	str	x1, [x19]	// D.15568, argv.__stack
	b	.L1988		//
.L1989:
	ldr	x2, [x19, 8]	// D.15570, argv.__gr_top
	sxtw	x0, w1	// D.15571, D.15554
	add	x0, x2, x0	// iftmp.949, D.15570, D.15571
.L1988:
	ldp	x0, x1, [x0]	// D.6297, *iftmp.948_50
// varargs-dll.c:886:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp206, D.6297
	str	w0, [sp, 52]	// tmp206, c
// varargs-dll.c:887:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.15572, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.951, argv.__stack
	cmp	w1, 0	// D.15572,
	blt	.L1991		//,
	add	x1, x0, 23	// D.15577, iftmp.951,
	and	x1, x1, -8	// D.15578, D.15577,
	str	x1, [x19]	// D.15578, argv.__stack
	b	.L1992		//
.L1991:
	add	w2, w1, 16	// D.15580, D.15572,
	str	w2, [x19, 24]	// D.15580, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15582, argv.__gr_offs
	cmp	w2, 0	// D.15582,
	ble	.L1993		//,
	add	x1, x0, 23	// D.15585, iftmp.951,
	and	x1, x1, -8	// D.15586, D.15585,
	str	x1, [x19]	// D.15586, argv.__stack
	b	.L1992		//
.L1993:
	ldr	x2, [x19, 8]	// D.15588, argv.__gr_top
	sxtw	x0, w1	// D.15589, D.15572
	add	x0, x2, x0	// iftmp.951, D.15588, D.15589
.L1992:
	ldp	x0, x1, [x0]	// D.6298, *iftmp.950_52
// varargs-dll.c:887:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp208, D.6298
	asr	x0, x0, 32	// tmp209, tmp208,
	str	w0, [sp, 56]	// tmp210, d
// varargs-dll.c:888:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.15590, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.953, argv.__stack
	cmp	w1, 0	// D.15590,
	blt	.L1995		//,
	add	x1, x0, 23	// D.15595, iftmp.953,
	and	x1, x1, -8	// D.15596, D.15595,
	str	x1, [x19]	// D.15596, argv.__stack
	b	.L1996		//
.L1995:
	add	w2, w1, 16	// D.15598, D.15590,
	str	w2, [x19, 24]	// D.15598, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15600, argv.__gr_offs
	cmp	w2, 0	// D.15600,
	ble	.L1997		//,
	add	x1, x0, 23	// D.15603, iftmp.953,
	and	x1, x1, -8	// D.15604, D.15603,
	str	x1, [x19]	// D.15604, argv.__stack
	b	.L1996		//
.L1997:
	ldr	x2, [x19, 8]	// D.15606, argv.__gr_top
	sxtw	x0, w1	// D.15607, D.15590
	add	x0, x2, x0	// iftmp.953, D.15606, D.15607
.L1996:
	ldp	x0, x1, [x0]	// D.6299, *iftmp.952_54
// varargs-dll.c:888:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 60]	// tmp211, e
// varargs-dll.c:889:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.15608, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.955, argv.__stack
	cmp	w1, 0	// D.15608,
	blt	.L1999		//,
	add	x1, x0, 23	// D.15613, iftmp.955,
	and	x1, x1, -8	// D.15614, D.15613,
	str	x1, [x19]	// D.15614, argv.__stack
	b	.L2000		//
.L1999:
	add	w2, w1, 16	// D.15616, D.15608,
	str	w2, [x19, 24]	// D.15616, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15618, argv.__gr_offs
	cmp	w2, 0	// D.15618,
	ble	.L2001		//,
	add	x1, x0, 23	// D.15621, iftmp.955,
	and	x1, x1, -8	// D.15622, D.15621,
	str	x1, [x19]	// D.15622, argv.__stack
	b	.L2000		//
.L2001:
	ldr	x2, [x19, 8]	// D.15624, argv.__gr_top
	sxtw	x0, w1	// D.15625, D.15608
	add	x0, x2, x0	// iftmp.955, D.15624, D.15625
.L2000:
	ldp	x0, x1, [x0]	// D.6300, *iftmp.954_56
// varargs-dll.c:889:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp214, tmp213,
	str	w0, [sp, 64]	// tmp215, f
// varargs-dll.c:890:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.15626, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.957, argv.__stack
	cmp	w1, 0	// D.15626,
	blt	.L2003		//,
	add	x1, x0, 23	// D.15631, iftmp.957,
	and	x1, x1, -8	// D.15632, D.15631,
	str	x1, [x19]	// D.15632, argv.__stack
	b	.L2004		//
.L2003:
	add	w2, w1, 16	// D.15634, D.15626,
	str	w2, [x19, 24]	// D.15634, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15636, argv.__gr_offs
	cmp	w2, 0	// D.15636,
	ble	.L2005		//,
	add	x1, x0, 23	// D.15639, iftmp.957,
	and	x1, x1, -8	// D.15640, D.15639,
	str	x1, [x19]	// D.15640, argv.__stack
	b	.L2004		//
.L2005:
	ldr	x2, [x19, 8]	// D.15642, argv.__gr_top
	sxtw	x0, w1	// D.15643, D.15626
	add	x0, x2, x0	// iftmp.957, D.15642, D.15643
.L2004:
	ldp	x0, x1, [x0]	// D.6301, *iftmp.956_58
// varargs-dll.c:890:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp216, D.6301
	str	w0, [sp, 68]	// tmp216, g
// varargs-dll.c:891:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.15644, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.959, argv.__stack
	cmp	w1, 0	// D.15644,
	blt	.L2007		//,
	add	x1, x0, 23	// D.15649, iftmp.959,
	and	x1, x1, -8	// D.15650, D.15649,
	str	x1, [x19]	// D.15650, argv.__stack
	b	.L2008		//
.L2007:
	add	w2, w1, 16	// D.15652, D.15644,
	str	w2, [x19, 24]	// D.15652, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15654, argv.__gr_offs
	cmp	w2, 0	// D.15654,
	ble	.L2009		//,
	add	x1, x0, 23	// D.15657, iftmp.959,
	and	x1, x1, -8	// D.15658, D.15657,
	str	x1, [x19]	// D.15658, argv.__stack
	b	.L2008		//
.L2009:
	ldr	x2, [x19, 8]	// D.15660, argv.__gr_top
	sxtw	x0, w1	// D.15661, D.15644
	add	x0, x2, x0	// iftmp.959, D.15660, D.15661
.L2008:
	ldp	x0, x1, [x0]	// D.6302, *iftmp.958_60
// varargs-dll.c:891:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp218, D.6302
	asr	x0, x0, 32	// tmp219, tmp218,
	str	w0, [sp, 72]	// tmp220, h
// varargs-dll.c:892:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.15662, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.961, argv.__stack
	cmp	w1, 0	// D.15662,
	blt	.L2011		//,
	add	x1, x0, 23	// D.15667, iftmp.961,
	and	x1, x1, -8	// D.15668, D.15667,
	str	x1, [x19]	// D.15668, argv.__stack
	b	.L2012		//
.L2011:
	add	w2, w1, 16	// D.15670, D.15662,
	str	w2, [x19, 24]	// D.15670, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.15672, argv.__gr_offs
	cmp	w2, 0	// D.15672,
	ble	.L2013		//,
	add	x1, x0, 23	// D.15675, iftmp.961,
	and	x1, x1, -8	// D.15676, D.15675,
	str	x1, [x19]	// D.15676, argv.__stack
	b	.L2012		//
.L2013:
	ldr	x2, [x19, 8]	// D.15678, argv.__gr_top
	sxtw	x0, w1	// D.15679, D.15662
	add	x0, x2, x0	// iftmp.961, D.15678, D.15679
.L2012:
	ldp	x0, x1, [x0]	// D.6303, *iftmp.960_62
// varargs-dll.c:892:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 76]	// tmp221, i
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp222, a
	ldr	w0, [sp, 48]	// tmp223, b
	add	w1, w1, w0	// _1, tmp222, tmp223
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp224, c
	add	w1, w1, w0	// _2, _1, tmp224
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp225, d
	add	w1, w1, w0	// _3, _2, tmp225
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp226, e
	add	w1, w1, w0	// _4, _3, tmp226
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp227, f
	add	w1, w1, w0	// _5, _4, tmp227
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp228, g
	add	w1, w1, w0	// _6, _5, tmp228
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp229, h
	add	w1, w1, w0	// _7, _6, tmp229
// varargs-dll.c:893:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp230, i
	add	w0, w1, w0	// _27, _7, tmp230
// varargs-dll.c:894: }
	ldr	x19, [sp], 80	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE59:
	.size	use_va_list_several_short_vector_16_bytes, .-use_va_list_several_short_vector_16_bytes
	.align	2
	.global	use_va_args_many_short_vector_16_bytes
	.type	use_va_args_many_short_vector_16_bytes, %function
use_va_args_many_short_vector_16_bytes:
.LFB60:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:898: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp363,
	str	x1, [sp, 136]	// tmp363, D.15986
	mov	x1, 0	// tmp363
// varargs-dll.c:900:   va_start (argv, format);
	add	x0, sp, 336	// tmp368,,
	str	x0, [sp, 104]	// tmp368, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp369,,
	str	x0, [sp, 112]	// tmp369, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:901:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 128]	// D.15680, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.963, argv.__stack
	cmp	w1, 0	// D.15680,
	blt	.L2017		//,
	add	x1, x0, 23	// D.15685, iftmp.963,
	and	x1, x1, -8	// D.15686, D.15685,
	str	x1, [sp, 104]	// D.15686, argv.__stack
	b	.L2018		//
.L2017:
	add	w2, w1, 16	// D.15688, D.15680,
	str	w2, [sp, 128]	// D.15688, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15690, argv.__gr_offs
	cmp	w2, 0	// D.15690,
	ble	.L2019		//,
	add	x1, x0, 23	// D.15693, iftmp.963,
	and	x1, x1, -8	// D.15694, D.15693,
	str	x1, [sp, 104]	// D.15694, argv.__stack
	b	.L2018		//
.L2019:
	ldr	x2, [sp, 112]	// D.15696, argv.__gr_top
	sxtw	x0, w1	// D.15697, D.15680
	add	x0, x2, x0	// iftmp.963, D.15696, D.15697
.L2018:
	ldp	x0, x1, [x0]	// D.6306, *iftmp.962_89
// varargs-dll.c:901:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 36]	// tmp302, a
// varargs-dll.c:902:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 128]	// D.15698, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.965, argv.__stack
	cmp	w1, 0	// D.15698,
	blt	.L2021		//,
	add	x1, x0, 23	// D.15703, iftmp.965,
	and	x1, x1, -8	// D.15704, D.15703,
	str	x1, [sp, 104]	// D.15704, argv.__stack
	b	.L2022		//
.L2021:
	add	w2, w1, 16	// D.15706, D.15698,
	str	w2, [sp, 128]	// D.15706, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15708, argv.__gr_offs
	cmp	w2, 0	// D.15708,
	ble	.L2023		//,
	add	x1, x0, 23	// D.15711, iftmp.965,
	and	x1, x1, -8	// D.15712, D.15711,
	str	x1, [sp, 104]	// D.15712, argv.__stack
	b	.L2022		//
.L2023:
	ldr	x2, [sp, 112]	// D.15714, argv.__gr_top
	sxtw	x0, w1	// D.15715, D.15698
	add	x0, x2, x0	// iftmp.965, D.15714, D.15715
.L2022:
	ldp	x0, x1, [x0]	// D.6307, *iftmp.964_91
// varargs-dll.c:902:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp305, tmp304,
	str	w0, [sp, 40]	// tmp306, b
// varargs-dll.c:903:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 128]	// D.15716, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.967, argv.__stack
	cmp	w1, 0	// D.15716,
	blt	.L2025		//,
	add	x1, x0, 23	// D.15721, iftmp.967,
	and	x1, x1, -8	// D.15722, D.15721,
	str	x1, [sp, 104]	// D.15722, argv.__stack
	b	.L2026		//
.L2025:
	add	w2, w1, 16	// D.15724, D.15716,
	str	w2, [sp, 128]	// D.15724, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15726, argv.__gr_offs
	cmp	w2, 0	// D.15726,
	ble	.L2027		//,
	add	x1, x0, 23	// D.15729, iftmp.967,
	and	x1, x1, -8	// D.15730, D.15729,
	str	x1, [sp, 104]	// D.15730, argv.__stack
	b	.L2026		//
.L2027:
	ldr	x2, [sp, 112]	// D.15732, argv.__gr_top
	sxtw	x0, w1	// D.15733, D.15716
	add	x0, x2, x0	// iftmp.967, D.15732, D.15733
.L2026:
	ldp	x0, x1, [x0]	// D.6308, *iftmp.966_93
// varargs-dll.c:903:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp307, D.6308
	str	w0, [sp, 44]	// tmp307, c
// varargs-dll.c:904:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 128]	// D.15734, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.969, argv.__stack
	cmp	w1, 0	// D.15734,
	blt	.L2029		//,
	add	x1, x0, 23	// D.15739, iftmp.969,
	and	x1, x1, -8	// D.15740, D.15739,
	str	x1, [sp, 104]	// D.15740, argv.__stack
	b	.L2030		//
.L2029:
	add	w2, w1, 16	// D.15742, D.15734,
	str	w2, [sp, 128]	// D.15742, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15744, argv.__gr_offs
	cmp	w2, 0	// D.15744,
	ble	.L2031		//,
	add	x1, x0, 23	// D.15747, iftmp.969,
	and	x1, x1, -8	// D.15748, D.15747,
	str	x1, [sp, 104]	// D.15748, argv.__stack
	b	.L2030		//
.L2031:
	ldr	x2, [sp, 112]	// D.15750, argv.__gr_top
	sxtw	x0, w1	// D.15751, D.15734
	add	x0, x2, x0	// iftmp.969, D.15750, D.15751
.L2030:
	ldp	x0, x1, [x0]	// D.6309, *iftmp.968_95
// varargs-dll.c:904:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp309, D.6309
	asr	x0, x0, 32	// tmp310, tmp309,
	str	w0, [sp, 48]	// tmp311, d
// varargs-dll.c:905:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 128]	// D.15752, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.971, argv.__stack
	cmp	w1, 0	// D.15752,
	blt	.L2033		//,
	add	x1, x0, 23	// D.15757, iftmp.971,
	and	x1, x1, -8	// D.15758, D.15757,
	str	x1, [sp, 104]	// D.15758, argv.__stack
	b	.L2034		//
.L2033:
	add	w2, w1, 16	// D.15760, D.15752,
	str	w2, [sp, 128]	// D.15760, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15762, argv.__gr_offs
	cmp	w2, 0	// D.15762,
	ble	.L2035		//,
	add	x1, x0, 23	// D.15765, iftmp.971,
	and	x1, x1, -8	// D.15766, D.15765,
	str	x1, [sp, 104]	// D.15766, argv.__stack
	b	.L2034		//
.L2035:
	ldr	x2, [sp, 112]	// D.15768, argv.__gr_top
	sxtw	x0, w1	// D.15769, D.15752
	add	x0, x2, x0	// iftmp.971, D.15768, D.15769
.L2034:
	ldp	x0, x1, [x0]	// D.6310, *iftmp.970_97
// varargs-dll.c:905:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 52]	// tmp312, e
// varargs-dll.c:906:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 128]	// D.15770, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.973, argv.__stack
	cmp	w1, 0	// D.15770,
	blt	.L2037		//,
	add	x1, x0, 23	// D.15775, iftmp.973,
	and	x1, x1, -8	// D.15776, D.15775,
	str	x1, [sp, 104]	// D.15776, argv.__stack
	b	.L2038		//
.L2037:
	add	w2, w1, 16	// D.15778, D.15770,
	str	w2, [sp, 128]	// D.15778, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15780, argv.__gr_offs
	cmp	w2, 0	// D.15780,
	ble	.L2039		//,
	add	x1, x0, 23	// D.15783, iftmp.973,
	and	x1, x1, -8	// D.15784, D.15783,
	str	x1, [sp, 104]	// D.15784, argv.__stack
	b	.L2038		//
.L2039:
	ldr	x2, [sp, 112]	// D.15786, argv.__gr_top
	sxtw	x0, w1	// D.15787, D.15770
	add	x0, x2, x0	// iftmp.973, D.15786, D.15787
.L2038:
	ldp	x0, x1, [x0]	// D.6311, *iftmp.972_99
// varargs-dll.c:906:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp315, tmp314,
	str	w0, [sp, 56]	// tmp316, f
// varargs-dll.c:907:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 128]	// D.15788, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.975, argv.__stack
	cmp	w1, 0	// D.15788,
	blt	.L2041		//,
	add	x1, x0, 23	// D.15793, iftmp.975,
	and	x1, x1, -8	// D.15794, D.15793,
	str	x1, [sp, 104]	// D.15794, argv.__stack
	b	.L2042		//
.L2041:
	add	w2, w1, 16	// D.15796, D.15788,
	str	w2, [sp, 128]	// D.15796, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15798, argv.__gr_offs
	cmp	w2, 0	// D.15798,
	ble	.L2043		//,
	add	x1, x0, 23	// D.15801, iftmp.975,
	and	x1, x1, -8	// D.15802, D.15801,
	str	x1, [sp, 104]	// D.15802, argv.__stack
	b	.L2042		//
.L2043:
	ldr	x2, [sp, 112]	// D.15804, argv.__gr_top
	sxtw	x0, w1	// D.15805, D.15788
	add	x0, x2, x0	// iftmp.975, D.15804, D.15805
.L2042:
	ldp	x0, x1, [x0]	// D.6312, *iftmp.974_101
// varargs-dll.c:907:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp317, D.6312
	str	w0, [sp, 60]	// tmp317, g
// varargs-dll.c:908:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 128]	// D.15806, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.977, argv.__stack
	cmp	w1, 0	// D.15806,
	blt	.L2045		//,
	add	x1, x0, 23	// D.15811, iftmp.977,
	and	x1, x1, -8	// D.15812, D.15811,
	str	x1, [sp, 104]	// D.15812, argv.__stack
	b	.L2046		//
.L2045:
	add	w2, w1, 16	// D.15814, D.15806,
	str	w2, [sp, 128]	// D.15814, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15816, argv.__gr_offs
	cmp	w2, 0	// D.15816,
	ble	.L2047		//,
	add	x1, x0, 23	// D.15819, iftmp.977,
	and	x1, x1, -8	// D.15820, D.15819,
	str	x1, [sp, 104]	// D.15820, argv.__stack
	b	.L2046		//
.L2047:
	ldr	x2, [sp, 112]	// D.15822, argv.__gr_top
	sxtw	x0, w1	// D.15823, D.15806
	add	x0, x2, x0	// iftmp.977, D.15822, D.15823
.L2046:
	ldp	x0, x1, [x0]	// D.6313, *iftmp.976_103
// varargs-dll.c:908:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp319, D.6313
	asr	x0, x0, 32	// tmp320, tmp319,
	str	w0, [sp, 64]	// tmp321, h
// varargs-dll.c:909:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 128]	// D.15824, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.979, argv.__stack
	cmp	w1, 0	// D.15824,
	blt	.L2049		//,
	add	x1, x0, 23	// D.15829, iftmp.979,
	and	x1, x1, -8	// D.15830, D.15829,
	str	x1, [sp, 104]	// D.15830, argv.__stack
	b	.L2050		//
.L2049:
	add	w2, w1, 16	// D.15832, D.15824,
	str	w2, [sp, 128]	// D.15832, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15834, argv.__gr_offs
	cmp	w2, 0	// D.15834,
	ble	.L2051		//,
	add	x1, x0, 23	// D.15837, iftmp.979,
	and	x1, x1, -8	// D.15838, D.15837,
	str	x1, [sp, 104]	// D.15838, argv.__stack
	b	.L2050		//
.L2051:
	ldr	x2, [sp, 112]	// D.15840, argv.__gr_top
	sxtw	x0, w1	// D.15841, D.15824
	add	x0, x2, x0	// iftmp.979, D.15840, D.15841
.L2050:
	ldp	x0, x1, [x0]	// D.6314, *iftmp.978_105
// varargs-dll.c:909:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 68]	// tmp322, i
// varargs-dll.c:910:   int j = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 128]	// D.15842, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.981, argv.__stack
	cmp	w1, 0	// D.15842,
	blt	.L2053		//,
	add	x1, x0, 23	// D.15847, iftmp.981,
	and	x1, x1, -8	// D.15848, D.15847,
	str	x1, [sp, 104]	// D.15848, argv.__stack
	b	.L2054		//
.L2053:
	add	w2, w1, 16	// D.15850, D.15842,
	str	w2, [sp, 128]	// D.15850, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15852, argv.__gr_offs
	cmp	w2, 0	// D.15852,
	ble	.L2055		//,
	add	x1, x0, 23	// D.15855, iftmp.981,
	and	x1, x1, -8	// D.15856, D.15855,
	str	x1, [sp, 104]	// D.15856, argv.__stack
	b	.L2054		//
.L2055:
	ldr	x2, [sp, 112]	// D.15858, argv.__gr_top
	sxtw	x0, w1	// D.15859, D.15842
	add	x0, x2, x0	// iftmp.981, D.15858, D.15859
.L2054:
	ldp	x0, x1, [x0]	// D.6315, *iftmp.980_107
// varargs-dll.c:910:   int j = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp325, tmp324,
	str	w0, [sp, 72]	// tmp326, j
// varargs-dll.c:911:   int k = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 128]	// D.15860, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.983, argv.__stack
	cmp	w1, 0	// D.15860,
	blt	.L2057		//,
	add	x1, x0, 23	// D.15865, iftmp.983,
	and	x1, x1, -8	// D.15866, D.15865,
	str	x1, [sp, 104]	// D.15866, argv.__stack
	b	.L2058		//
.L2057:
	add	w2, w1, 16	// D.15868, D.15860,
	str	w2, [sp, 128]	// D.15868, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15870, argv.__gr_offs
	cmp	w2, 0	// D.15870,
	ble	.L2059		//,
	add	x1, x0, 23	// D.15873, iftmp.983,
	and	x1, x1, -8	// D.15874, D.15873,
	str	x1, [sp, 104]	// D.15874, argv.__stack
	b	.L2058		//
.L2059:
	ldr	x2, [sp, 112]	// D.15876, argv.__gr_top
	sxtw	x0, w1	// D.15877, D.15860
	add	x0, x2, x0	// iftmp.983, D.15876, D.15877
.L2058:
	ldp	x0, x1, [x0]	// D.6316, *iftmp.982_109
// varargs-dll.c:911:   int k = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp327, D.6316
	str	w0, [sp, 76]	// tmp327, k
// varargs-dll.c:912:   int l = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 128]	// D.15878, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.985, argv.__stack
	cmp	w1, 0	// D.15878,
	blt	.L2061		//,
	add	x1, x0, 23	// D.15883, iftmp.985,
	and	x1, x1, -8	// D.15884, D.15883,
	str	x1, [sp, 104]	// D.15884, argv.__stack
	b	.L2062		//
.L2061:
	add	w2, w1, 16	// D.15886, D.15878,
	str	w2, [sp, 128]	// D.15886, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15888, argv.__gr_offs
	cmp	w2, 0	// D.15888,
	ble	.L2063		//,
	add	x1, x0, 23	// D.15891, iftmp.985,
	and	x1, x1, -8	// D.15892, D.15891,
	str	x1, [sp, 104]	// D.15892, argv.__stack
	b	.L2062		//
.L2063:
	ldr	x2, [sp, 112]	// D.15894, argv.__gr_top
	sxtw	x0, w1	// D.15895, D.15878
	add	x0, x2, x0	// iftmp.985, D.15894, D.15895
.L2062:
	ldp	x0, x1, [x0]	// D.6317, *iftmp.984_111
// varargs-dll.c:912:   int l = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp329, D.6317
	asr	x0, x0, 32	// tmp330, tmp329,
	str	w0, [sp, 80]	// tmp331, l
// varargs-dll.c:913:   int m = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 128]	// D.15896, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.987, argv.__stack
	cmp	w1, 0	// D.15896,
	blt	.L2065		//,
	add	x1, x0, 23	// D.15901, iftmp.987,
	and	x1, x1, -8	// D.15902, D.15901,
	str	x1, [sp, 104]	// D.15902, argv.__stack
	b	.L2066		//
.L2065:
	add	w2, w1, 16	// D.15904, D.15896,
	str	w2, [sp, 128]	// D.15904, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15906, argv.__gr_offs
	cmp	w2, 0	// D.15906,
	ble	.L2067		//,
	add	x1, x0, 23	// D.15909, iftmp.987,
	and	x1, x1, -8	// D.15910, D.15909,
	str	x1, [sp, 104]	// D.15910, argv.__stack
	b	.L2066		//
.L2067:
	ldr	x2, [sp, 112]	// D.15912, argv.__gr_top
	sxtw	x0, w1	// D.15913, D.15896
	add	x0, x2, x0	// iftmp.987, D.15912, D.15913
.L2066:
	ldp	x0, x1, [x0]	// D.6318, *iftmp.986_113
// varargs-dll.c:913:   int m = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 84]	// tmp332, m
// varargs-dll.c:914:   int n = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [sp, 128]	// D.15914, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.989, argv.__stack
	cmp	w1, 0	// D.15914,
	blt	.L2069		//,
	add	x1, x0, 23	// D.15919, iftmp.989,
	and	x1, x1, -8	// D.15920, D.15919,
	str	x1, [sp, 104]	// D.15920, argv.__stack
	b	.L2070		//
.L2069:
	add	w2, w1, 16	// D.15922, D.15914,
	str	w2, [sp, 128]	// D.15922, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15924, argv.__gr_offs
	cmp	w2, 0	// D.15924,
	ble	.L2071		//,
	add	x1, x0, 23	// D.15927, iftmp.989,
	and	x1, x1, -8	// D.15928, D.15927,
	str	x1, [sp, 104]	// D.15928, argv.__stack
	b	.L2070		//
.L2071:
	ldr	x2, [sp, 112]	// D.15930, argv.__gr_top
	sxtw	x0, w1	// D.15931, D.15914
	add	x0, x2, x0	// iftmp.989, D.15930, D.15931
.L2070:
	ldp	x0, x1, [x0]	// D.6319, *iftmp.988_115
// varargs-dll.c:914:   int n = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp335, tmp334,
	str	w0, [sp, 88]	// tmp336, n
// varargs-dll.c:915:   int o = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [sp, 128]	// D.15932, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.991, argv.__stack
	cmp	w1, 0	// D.15932,
	blt	.L2073		//,
	add	x1, x0, 23	// D.15937, iftmp.991,
	and	x1, x1, -8	// D.15938, D.15937,
	str	x1, [sp, 104]	// D.15938, argv.__stack
	b	.L2074		//
.L2073:
	add	w2, w1, 16	// D.15940, D.15932,
	str	w2, [sp, 128]	// D.15940, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15942, argv.__gr_offs
	cmp	w2, 0	// D.15942,
	ble	.L2075		//,
	add	x1, x0, 23	// D.15945, iftmp.991,
	and	x1, x1, -8	// D.15946, D.15945,
	str	x1, [sp, 104]	// D.15946, argv.__stack
	b	.L2074		//
.L2075:
	ldr	x2, [sp, 112]	// D.15948, argv.__gr_top
	sxtw	x0, w1	// D.15949, D.15932
	add	x0, x2, x0	// iftmp.991, D.15948, D.15949
.L2074:
	ldp	x0, x1, [x0]	// D.6320, *iftmp.990_117
// varargs-dll.c:915:   int o = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp337, D.6320
	str	w0, [sp, 92]	// tmp337, o
// varargs-dll.c:916:   int p = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [sp, 128]	// D.15950, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.993, argv.__stack
	cmp	w1, 0	// D.15950,
	blt	.L2077		//,
	add	x1, x0, 23	// D.15955, iftmp.993,
	and	x1, x1, -8	// D.15956, D.15955,
	str	x1, [sp, 104]	// D.15956, argv.__stack
	b	.L2078		//
.L2077:
	add	w2, w1, 16	// D.15958, D.15950,
	str	w2, [sp, 128]	// D.15958, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15960, argv.__gr_offs
	cmp	w2, 0	// D.15960,
	ble	.L2079		//,
	add	x1, x0, 23	// D.15963, iftmp.993,
	and	x1, x1, -8	// D.15964, D.15963,
	str	x1, [sp, 104]	// D.15964, argv.__stack
	b	.L2078		//
.L2079:
	ldr	x2, [sp, 112]	// D.15966, argv.__gr_top
	sxtw	x0, w1	// D.15967, D.15950
	add	x0, x2, x0	// iftmp.993, D.15966, D.15967
.L2078:
	ldp	x0, x1, [x0]	// D.6321, *iftmp.992_119
// varargs-dll.c:916:   int p = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp339, D.6321
	asr	x0, x0, 32	// tmp340, tmp339,
	str	w0, [sp, 96]	// tmp341, p
// varargs-dll.c:917:   int q = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [sp, 128]	// D.15968, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.995, argv.__stack
	cmp	w1, 0	// D.15968,
	blt	.L2081		//,
	add	x1, x0, 23	// D.15973, iftmp.995,
	and	x1, x1, -8	// D.15974, D.15973,
	str	x1, [sp, 104]	// D.15974, argv.__stack
	b	.L2082		//
.L2081:
	add	w2, w1, 16	// D.15976, D.15968,
	str	w2, [sp, 128]	// D.15976, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.15978, argv.__gr_offs
	cmp	w2, 0	// D.15978,
	ble	.L2083		//,
	add	x1, x0, 23	// D.15981, iftmp.995,
	and	x1, x1, -8	// D.15982, D.15981,
	str	x1, [sp, 104]	// D.15982, argv.__stack
	b	.L2082		//
.L2083:
	ldr	x2, [sp, 112]	// D.15984, argv.__gr_top
	sxtw	x0, w1	// D.15985, D.15968
	add	x0, x2, x0	// iftmp.995, D.15984, D.15985
.L2082:
	ldp	x0, x1, [x0]	// D.6322, *iftmp.994_121
// varargs-dll.c:917:   int q = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 100]	// tmp342, q
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp343, a
	ldr	w0, [sp, 40]	// tmp344, b
	add	w1, w1, w0	// _1, tmp343, tmp344
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp345, c
	add	w1, w1, w0	// _2, _1, tmp345
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp346, d
	add	w1, w1, w0	// _3, _2, tmp346
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp347, e
	add	w1, w1, w0	// _4, _3, tmp347
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp348, f
	add	w1, w1, w0	// _5, _4, tmp348
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp349, g
	add	w1, w1, w0	// _6, _5, tmp349
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp350, h
	add	w1, w1, w0	// _7, _6, tmp350
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp351, i
	add	w1, w1, w0	// _8, _7, tmp351
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp352, j
	add	w1, w1, w0	// _9, _8, tmp352
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp353, k
	add	w1, w1, w0	// _10, _9, tmp353
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp354, l
	add	w1, w1, w0	// _11, _10, tmp354
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp355, m
	add	w1, w1, w0	// _12, _11, tmp355
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp356, n
	add	w1, w1, w0	// _13, _12, tmp356
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp357, o
	add	w1, w1, w0	// _14, _13, tmp357
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp358, p
	add	w1, w1, w0	// _15, _14, tmp358
// varargs-dll.c:919:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp359, q
	add	w0, w1, w0	// _53, _15, tmp359
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:920: }
	adrp	x0, :got:__stack_chk_guard	// tmp362,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp361, tmp362,
	ldr	x3, [sp, 136]	// tmp364, D.15986
	ldr	x2, [x0]	// tmp365,
	subs	x3, x3, x2	// tmp364, tmp365
	mov	x2, 0	// tmp365
	beq	.L2086		//,
	bl	__stack_chk_fail		//
.L2086:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE60:
	.size	use_va_args_many_short_vector_16_bytes, .-use_va_args_many_short_vector_16_bytes
	.align	2
	.global	use_va_list_many_short_vector_16_bytes
	.type	use_va_list_many_short_vector_16_bytes, %function
use_va_list_many_short_vector_16_bytes:
.LFB61:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:925:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.15990, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.997, argv.__stack
	cmp	w1, 0	// D.15990,
	blt	.L2088		//,
	add	x1, x0, 23	// D.15995, iftmp.997,
	and	x1, x1, -8	// D.15996, D.15995,
	str	x1, [x19]	// D.15996, argv.__stack
	b	.L2089		//
.L2088:
	add	w2, w1, 16	// D.15998, D.15990,
	str	w2, [x19, 24]	// D.15998, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16000, argv.__gr_offs
	cmp	w2, 0	// D.16000,
	ble	.L2090		//,
	add	x1, x0, 23	// D.16003, iftmp.997,
	and	x1, x1, -8	// D.16004, D.16003,
	str	x1, [x19]	// D.16004, argv.__stack
	b	.L2089		//
.L2090:
	ldr	x2, [x19, 8]	// D.16006, argv.__gr_top
	sxtw	x0, w1	// D.16007, D.15990
	add	x0, x2, x0	// iftmp.997, D.16006, D.16007
.L2089:
	ldp	x0, x1, [x0]	// D.6326, *iftmp.996_86
// varargs-dll.c:925:   int a = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 44]	// tmp297, a
// varargs-dll.c:926:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.16008, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.999, argv.__stack
	cmp	w1, 0	// D.16008,
	blt	.L2092		//,
	add	x1, x0, 23	// D.16013, iftmp.999,
	and	x1, x1, -8	// D.16014, D.16013,
	str	x1, [x19]	// D.16014, argv.__stack
	b	.L2093		//
.L2092:
	add	w2, w1, 16	// D.16016, D.16008,
	str	w2, [x19, 24]	// D.16016, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16018, argv.__gr_offs
	cmp	w2, 0	// D.16018,
	ble	.L2094		//,
	add	x1, x0, 23	// D.16021, iftmp.999,
	and	x1, x1, -8	// D.16022, D.16021,
	str	x1, [x19]	// D.16022, argv.__stack
	b	.L2093		//
.L2094:
	ldr	x2, [x19, 8]	// D.16024, argv.__gr_top
	sxtw	x0, w1	// D.16025, D.16008
	add	x0, x2, x0	// iftmp.999, D.16024, D.16025
.L2093:
	ldp	x0, x1, [x0]	// D.6327, *iftmp.998_88
// varargs-dll.c:926:   int b = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp300, tmp299,
	str	w0, [sp, 48]	// tmp301, b
// varargs-dll.c:927:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.16026, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1001, argv.__stack
	cmp	w1, 0	// D.16026,
	blt	.L2096		//,
	add	x1, x0, 23	// D.16031, iftmp.1001,
	and	x1, x1, -8	// D.16032, D.16031,
	str	x1, [x19]	// D.16032, argv.__stack
	b	.L2097		//
.L2096:
	add	w2, w1, 16	// D.16034, D.16026,
	str	w2, [x19, 24]	// D.16034, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16036, argv.__gr_offs
	cmp	w2, 0	// D.16036,
	ble	.L2098		//,
	add	x1, x0, 23	// D.16039, iftmp.1001,
	and	x1, x1, -8	// D.16040, D.16039,
	str	x1, [x19]	// D.16040, argv.__stack
	b	.L2097		//
.L2098:
	ldr	x2, [x19, 8]	// D.16042, argv.__gr_top
	sxtw	x0, w1	// D.16043, D.16026
	add	x0, x2, x0	// iftmp.1001, D.16042, D.16043
.L2097:
	ldp	x0, x1, [x0]	// D.6328, *iftmp.1000_90
// varargs-dll.c:927:   int c = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp302, D.6328
	str	w0, [sp, 52]	// tmp302, c
// varargs-dll.c:928:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.16044, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1003, argv.__stack
	cmp	w1, 0	// D.16044,
	blt	.L2100		//,
	add	x1, x0, 23	// D.16049, iftmp.1003,
	and	x1, x1, -8	// D.16050, D.16049,
	str	x1, [x19]	// D.16050, argv.__stack
	b	.L2101		//
.L2100:
	add	w2, w1, 16	// D.16052, D.16044,
	str	w2, [x19, 24]	// D.16052, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16054, argv.__gr_offs
	cmp	w2, 0	// D.16054,
	ble	.L2102		//,
	add	x1, x0, 23	// D.16057, iftmp.1003,
	and	x1, x1, -8	// D.16058, D.16057,
	str	x1, [x19]	// D.16058, argv.__stack
	b	.L2101		//
.L2102:
	ldr	x2, [x19, 8]	// D.16060, argv.__gr_top
	sxtw	x0, w1	// D.16061, D.16044
	add	x0, x2, x0	// iftmp.1003, D.16060, D.16061
.L2101:
	ldp	x0, x1, [x0]	// D.6329, *iftmp.1002_92
// varargs-dll.c:928:   int d = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp304, D.6329
	asr	x0, x0, 32	// tmp305, tmp304,
	str	w0, [sp, 56]	// tmp306, d
// varargs-dll.c:929:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.16062, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1005, argv.__stack
	cmp	w1, 0	// D.16062,
	blt	.L2104		//,
	add	x1, x0, 23	// D.16067, iftmp.1005,
	and	x1, x1, -8	// D.16068, D.16067,
	str	x1, [x19]	// D.16068, argv.__stack
	b	.L2105		//
.L2104:
	add	w2, w1, 16	// D.16070, D.16062,
	str	w2, [x19, 24]	// D.16070, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16072, argv.__gr_offs
	cmp	w2, 0	// D.16072,
	ble	.L2106		//,
	add	x1, x0, 23	// D.16075, iftmp.1005,
	and	x1, x1, -8	// D.16076, D.16075,
	str	x1, [x19]	// D.16076, argv.__stack
	b	.L2105		//
.L2106:
	ldr	x2, [x19, 8]	// D.16078, argv.__gr_top
	sxtw	x0, w1	// D.16079, D.16062
	add	x0, x2, x0	// iftmp.1005, D.16078, D.16079
.L2105:
	ldp	x0, x1, [x0]	// D.6330, *iftmp.1004_94
// varargs-dll.c:929:   int e = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 60]	// tmp307, e
// varargs-dll.c:930:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.16080, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1007, argv.__stack
	cmp	w1, 0	// D.16080,
	blt	.L2108		//,
	add	x1, x0, 23	// D.16085, iftmp.1007,
	and	x1, x1, -8	// D.16086, D.16085,
	str	x1, [x19]	// D.16086, argv.__stack
	b	.L2109		//
.L2108:
	add	w2, w1, 16	// D.16088, D.16080,
	str	w2, [x19, 24]	// D.16088, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16090, argv.__gr_offs
	cmp	w2, 0	// D.16090,
	ble	.L2110		//,
	add	x1, x0, 23	// D.16093, iftmp.1007,
	and	x1, x1, -8	// D.16094, D.16093,
	str	x1, [x19]	// D.16094, argv.__stack
	b	.L2109		//
.L2110:
	ldr	x2, [x19, 8]	// D.16096, argv.__gr_top
	sxtw	x0, w1	// D.16097, D.16080
	add	x0, x2, x0	// iftmp.1007, D.16096, D.16097
.L2109:
	ldp	x0, x1, [x0]	// D.6331, *iftmp.1006_96
// varargs-dll.c:930:   int f = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp310, tmp309,
	str	w0, [sp, 64]	// tmp311, f
// varargs-dll.c:931:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.16098, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1009, argv.__stack
	cmp	w1, 0	// D.16098,
	blt	.L2112		//,
	add	x1, x0, 23	// D.16103, iftmp.1009,
	and	x1, x1, -8	// D.16104, D.16103,
	str	x1, [x19]	// D.16104, argv.__stack
	b	.L2113		//
.L2112:
	add	w2, w1, 16	// D.16106, D.16098,
	str	w2, [x19, 24]	// D.16106, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16108, argv.__gr_offs
	cmp	w2, 0	// D.16108,
	ble	.L2114		//,
	add	x1, x0, 23	// D.16111, iftmp.1009,
	and	x1, x1, -8	// D.16112, D.16111,
	str	x1, [x19]	// D.16112, argv.__stack
	b	.L2113		//
.L2114:
	ldr	x2, [x19, 8]	// D.16114, argv.__gr_top
	sxtw	x0, w1	// D.16115, D.16098
	add	x0, x2, x0	// iftmp.1009, D.16114, D.16115
.L2113:
	ldp	x0, x1, [x0]	// D.6332, *iftmp.1008_98
// varargs-dll.c:931:   int g = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp312, D.6332
	str	w0, [sp, 68]	// tmp312, g
// varargs-dll.c:932:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.16116, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1011, argv.__stack
	cmp	w1, 0	// D.16116,
	blt	.L2116		//,
	add	x1, x0, 23	// D.16121, iftmp.1011,
	and	x1, x1, -8	// D.16122, D.16121,
	str	x1, [x19]	// D.16122, argv.__stack
	b	.L2117		//
.L2116:
	add	w2, w1, 16	// D.16124, D.16116,
	str	w2, [x19, 24]	// D.16124, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16126, argv.__gr_offs
	cmp	w2, 0	// D.16126,
	ble	.L2118		//,
	add	x1, x0, 23	// D.16129, iftmp.1011,
	and	x1, x1, -8	// D.16130, D.16129,
	str	x1, [x19]	// D.16130, argv.__stack
	b	.L2117		//
.L2118:
	ldr	x2, [x19, 8]	// D.16132, argv.__gr_top
	sxtw	x0, w1	// D.16133, D.16116
	add	x0, x2, x0	// iftmp.1011, D.16132, D.16133
.L2117:
	ldp	x0, x1, [x0]	// D.6333, *iftmp.1010_100
// varargs-dll.c:932:   int h = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp314, D.6333
	asr	x0, x0, 32	// tmp315, tmp314,
	str	w0, [sp, 72]	// tmp316, h
// varargs-dll.c:933:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.16134, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1013, argv.__stack
	cmp	w1, 0	// D.16134,
	blt	.L2120		//,
	add	x1, x0, 23	// D.16139, iftmp.1013,
	and	x1, x1, -8	// D.16140, D.16139,
	str	x1, [x19]	// D.16140, argv.__stack
	b	.L2121		//
.L2120:
	add	w2, w1, 16	// D.16142, D.16134,
	str	w2, [x19, 24]	// D.16142, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16144, argv.__gr_offs
	cmp	w2, 0	// D.16144,
	ble	.L2122		//,
	add	x1, x0, 23	// D.16147, iftmp.1013,
	and	x1, x1, -8	// D.16148, D.16147,
	str	x1, [x19]	// D.16148, argv.__stack
	b	.L2121		//
.L2122:
	ldr	x2, [x19, 8]	// D.16150, argv.__gr_top
	sxtw	x0, w1	// D.16151, D.16134
	add	x0, x2, x0	// iftmp.1013, D.16150, D.16151
.L2121:
	ldp	x0, x1, [x0]	// D.6334, *iftmp.1012_102
// varargs-dll.c:933:   int i = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 76]	// tmp317, i
// varargs-dll.c:934:   int j = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.16152, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1015, argv.__stack
	cmp	w1, 0	// D.16152,
	blt	.L2124		//,
	add	x1, x0, 23	// D.16157, iftmp.1015,
	and	x1, x1, -8	// D.16158, D.16157,
	str	x1, [x19]	// D.16158, argv.__stack
	b	.L2125		//
.L2124:
	add	w2, w1, 16	// D.16160, D.16152,
	str	w2, [x19, 24]	// D.16160, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16162, argv.__gr_offs
	cmp	w2, 0	// D.16162,
	ble	.L2126		//,
	add	x1, x0, 23	// D.16165, iftmp.1015,
	and	x1, x1, -8	// D.16166, D.16165,
	str	x1, [x19]	// D.16166, argv.__stack
	b	.L2125		//
.L2126:
	ldr	x2, [x19, 8]	// D.16168, argv.__gr_top
	sxtw	x0, w1	// D.16169, D.16152
	add	x0, x2, x0	// iftmp.1015, D.16168, D.16169
.L2125:
	ldp	x0, x1, [x0]	// D.6335, *iftmp.1014_104
// varargs-dll.c:934:   int j = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp320, tmp319,
	str	w0, [sp, 80]	// tmp321, j
// varargs-dll.c:935:   int k = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.16170, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1017, argv.__stack
	cmp	w1, 0	// D.16170,
	blt	.L2128		//,
	add	x1, x0, 23	// D.16175, iftmp.1017,
	and	x1, x1, -8	// D.16176, D.16175,
	str	x1, [x19]	// D.16176, argv.__stack
	b	.L2129		//
.L2128:
	add	w2, w1, 16	// D.16178, D.16170,
	str	w2, [x19, 24]	// D.16178, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16180, argv.__gr_offs
	cmp	w2, 0	// D.16180,
	ble	.L2130		//,
	add	x1, x0, 23	// D.16183, iftmp.1017,
	and	x1, x1, -8	// D.16184, D.16183,
	str	x1, [x19]	// D.16184, argv.__stack
	b	.L2129		//
.L2130:
	ldr	x2, [x19, 8]	// D.16186, argv.__gr_top
	sxtw	x0, w1	// D.16187, D.16170
	add	x0, x2, x0	// iftmp.1017, D.16186, D.16187
.L2129:
	ldp	x0, x1, [x0]	// D.6336, *iftmp.1016_106
// varargs-dll.c:935:   int k = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp322, D.6336
	str	w0, [sp, 84]	// tmp322, k
// varargs-dll.c:936:   int l = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.16188, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1019, argv.__stack
	cmp	w1, 0	// D.16188,
	blt	.L2132		//,
	add	x1, x0, 23	// D.16193, iftmp.1019,
	and	x1, x1, -8	// D.16194, D.16193,
	str	x1, [x19]	// D.16194, argv.__stack
	b	.L2133		//
.L2132:
	add	w2, w1, 16	// D.16196, D.16188,
	str	w2, [x19, 24]	// D.16196, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16198, argv.__gr_offs
	cmp	w2, 0	// D.16198,
	ble	.L2134		//,
	add	x1, x0, 23	// D.16201, iftmp.1019,
	and	x1, x1, -8	// D.16202, D.16201,
	str	x1, [x19]	// D.16202, argv.__stack
	b	.L2133		//
.L2134:
	ldr	x2, [x19, 8]	// D.16204, argv.__gr_top
	sxtw	x0, w1	// D.16205, D.16188
	add	x0, x2, x0	// iftmp.1019, D.16204, D.16205
.L2133:
	ldp	x0, x1, [x0]	// D.6337, *iftmp.1018_108
// varargs-dll.c:936:   int l = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp324, D.6337
	asr	x0, x0, 32	// tmp325, tmp324,
	str	w0, [sp, 88]	// tmp326, l
// varargs-dll.c:937:   int m = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.16206, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1021, argv.__stack
	cmp	w1, 0	// D.16206,
	blt	.L2136		//,
	add	x1, x0, 23	// D.16211, iftmp.1021,
	and	x1, x1, -8	// D.16212, D.16211,
	str	x1, [x19]	// D.16212, argv.__stack
	b	.L2137		//
.L2136:
	add	w2, w1, 16	// D.16214, D.16206,
	str	w2, [x19, 24]	// D.16214, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16216, argv.__gr_offs
	cmp	w2, 0	// D.16216,
	ble	.L2138		//,
	add	x1, x0, 23	// D.16219, iftmp.1021,
	and	x1, x1, -8	// D.16220, D.16219,
	str	x1, [x19]	// D.16220, argv.__stack
	b	.L2137		//
.L2138:
	ldr	x2, [x19, 8]	// D.16222, argv.__gr_top
	sxtw	x0, w1	// D.16223, D.16206
	add	x0, x2, x0	// iftmp.1021, D.16222, D.16223
.L2137:
	ldp	x0, x1, [x0]	// D.6338, *iftmp.1020_110
// varargs-dll.c:937:   int m = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 92]	// tmp327, m
// varargs-dll.c:938:   int n = va_arg (argv, struct short_vector_16_bytes).b;
	ldr	w1, [x19, 24]	// D.16224, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1023, argv.__stack
	cmp	w1, 0	// D.16224,
	blt	.L2140		//,
	add	x1, x0, 23	// D.16229, iftmp.1023,
	and	x1, x1, -8	// D.16230, D.16229,
	str	x1, [x19]	// D.16230, argv.__stack
	b	.L2141		//
.L2140:
	add	w2, w1, 16	// D.16232, D.16224,
	str	w2, [x19, 24]	// D.16232, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16234, argv.__gr_offs
	cmp	w2, 0	// D.16234,
	ble	.L2142		//,
	add	x1, x0, 23	// D.16237, iftmp.1023,
	and	x1, x1, -8	// D.16238, D.16237,
	str	x1, [x19]	// D.16238, argv.__stack
	b	.L2141		//
.L2142:
	ldr	x2, [x19, 8]	// D.16240, argv.__gr_top
	sxtw	x0, w1	// D.16241, D.16224
	add	x0, x2, x0	// iftmp.1023, D.16240, D.16241
.L2141:
	ldp	x0, x1, [x0]	// D.6339, *iftmp.1022_112
// varargs-dll.c:938:   int n = va_arg (argv, struct short_vector_16_bytes).b;
	asr	x0, x0, 32	// tmp330, tmp329,
	str	w0, [sp, 96]	// tmp331, n
// varargs-dll.c:939:   int o = va_arg (argv, struct short_vector_16_bytes).c;
	ldr	w1, [x19, 24]	// D.16242, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1025, argv.__stack
	cmp	w1, 0	// D.16242,
	blt	.L2144		//,
	add	x1, x0, 23	// D.16247, iftmp.1025,
	and	x1, x1, -8	// D.16248, D.16247,
	str	x1, [x19]	// D.16248, argv.__stack
	b	.L2145		//
.L2144:
	add	w2, w1, 16	// D.16250, D.16242,
	str	w2, [x19, 24]	// D.16250, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16252, argv.__gr_offs
	cmp	w2, 0	// D.16252,
	ble	.L2146		//,
	add	x1, x0, 23	// D.16255, iftmp.1025,
	and	x1, x1, -8	// D.16256, D.16255,
	str	x1, [x19]	// D.16256, argv.__stack
	b	.L2145		//
.L2146:
	ldr	x2, [x19, 8]	// D.16258, argv.__gr_top
	sxtw	x0, w1	// D.16259, D.16242
	add	x0, x2, x0	// iftmp.1025, D.16258, D.16259
.L2145:
	ldp	x0, x1, [x0]	// D.6340, *iftmp.1024_114
// varargs-dll.c:939:   int o = va_arg (argv, struct short_vector_16_bytes).c;
	mov	w0, w1	// tmp332, D.6340
	str	w0, [sp, 100]	// tmp332, o
// varargs-dll.c:940:   int p = va_arg (argv, struct short_vector_16_bytes).d;
	ldr	w1, [x19, 24]	// D.16260, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1027, argv.__stack
	cmp	w1, 0	// D.16260,
	blt	.L2148		//,
	add	x1, x0, 23	// D.16265, iftmp.1027,
	and	x1, x1, -8	// D.16266, D.16265,
	str	x1, [x19]	// D.16266, argv.__stack
	b	.L2149		//
.L2148:
	add	w2, w1, 16	// D.16268, D.16260,
	str	w2, [x19, 24]	// D.16268, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16270, argv.__gr_offs
	cmp	w2, 0	// D.16270,
	ble	.L2150		//,
	add	x1, x0, 23	// D.16273, iftmp.1027,
	and	x1, x1, -8	// D.16274, D.16273,
	str	x1, [x19]	// D.16274, argv.__stack
	b	.L2149		//
.L2150:
	ldr	x2, [x19, 8]	// D.16276, argv.__gr_top
	sxtw	x0, w1	// D.16277, D.16260
	add	x0, x2, x0	// iftmp.1027, D.16276, D.16277
.L2149:
	ldp	x0, x1, [x0]	// D.6341, *iftmp.1026_116
// varargs-dll.c:940:   int p = va_arg (argv, struct short_vector_16_bytes).d;
	mov	x0, x1	// tmp334, D.6341
	asr	x0, x0, 32	// tmp335, tmp334,
	str	w0, [sp, 104]	// tmp336, p
// varargs-dll.c:941:   int q = va_arg (argv, struct short_vector_16_bytes).a;
	ldr	w1, [x19, 24]	// D.16278, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1029, argv.__stack
	cmp	w1, 0	// D.16278,
	blt	.L2152		//,
	add	x1, x0, 23	// D.16283, iftmp.1029,
	and	x1, x1, -8	// D.16284, D.16283,
	str	x1, [x19]	// D.16284, argv.__stack
	b	.L2153		//
.L2152:
	add	w2, w1, 16	// D.16286, D.16278,
	str	w2, [x19, 24]	// D.16286, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.16288, argv.__gr_offs
	cmp	w2, 0	// D.16288,
	ble	.L2154		//,
	add	x1, x0, 23	// D.16291, iftmp.1029,
	and	x1, x1, -8	// D.16292, D.16291,
	str	x1, [x19]	// D.16292, argv.__stack
	b	.L2153		//
.L2154:
	ldr	x2, [x19, 8]	// D.16294, argv.__gr_top
	sxtw	x0, w1	// D.16295, D.16278
	add	x0, x2, x0	// iftmp.1029, D.16294, D.16295
.L2153:
	ldp	x0, x1, [x0]	// D.6342, *iftmp.1028_118
// varargs-dll.c:941:   int q = va_arg (argv, struct short_vector_16_bytes).a;
	str	w0, [sp, 108]	// tmp337, q
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp338, a
	ldr	w0, [sp, 48]	// tmp339, b
	add	w1, w1, w0	// _1, tmp338, tmp339
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp340, c
	add	w1, w1, w0	// _2, _1, tmp340
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp341, d
	add	w1, w1, w0	// _3, _2, tmp341
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp342, e
	add	w1, w1, w0	// _4, _3, tmp342
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp343, f
	add	w1, w1, w0	// _5, _4, tmp343
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp344, g
	add	w1, w1, w0	// _6, _5, tmp344
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp345, h
	add	w1, w1, w0	// _7, _6, tmp345
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp346, i
	add	w1, w1, w0	// _8, _7, tmp346
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp347, j
	add	w1, w1, w0	// _9, _8, tmp347
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp348, k
	add	w1, w1, w0	// _10, _9, tmp348
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp349, l
	add	w1, w1, w0	// _11, _10, tmp349
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp350, m
	add	w1, w1, w0	// _12, _11, tmp350
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp351, n
	add	w1, w1, w0	// _13, _12, tmp351
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp352, o
	add	w1, w1, w0	// _14, _13, tmp352
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp353, p
	add	w1, w1, w0	// _15, _14, tmp353
// varargs-dll.c:942:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp354, q
	add	w0, w1, w0	// _51, _15, tmp354
// varargs-dll.c:943: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE61:
	.size	use_va_list_many_short_vector_16_bytes, .-use_va_list_many_short_vector_16_bytes
	.align	2
	.global	use_va_args_few_hfa_2_floats
	.type	use_va_args_few_hfa_2_floats, %function
use_va_args_few_hfa_2_floats:
.LFB62:
	.cfi_startproc
	stp	x29, x30, [sp, -288]!	//,,,
	.cfi_def_cfa_offset 288
	.cfi_offset 29, -288
	.cfi_offset 30, -280
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 232]	//,
	str	x2, [sp, 240]	//,
	str	x3, [sp, 248]	//,
	str	x4, [sp, 256]	//,
	str	x5, [sp, 264]	//,
	str	x6, [sp, 272]	//,
	str	x7, [sp, 280]	//,
	str	q0, [sp, 96]	//,
	str	q1, [sp, 112]	//,
	str	q2, [sp, 128]	//,
	str	q3, [sp, 144]	//,
	str	q4, [sp, 160]	//,
	str	q5, [sp, 176]	//,
	str	q6, [sp, 192]	//,
	str	q7, [sp, 208]	//,
// varargs-dll.c:947: {
	adrp	x0, :got:__stack_chk_guard	// tmp134,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp133, tmp134,
	ldr	x1, [x0]	// tmp151,
	str	x1, [sp, 88]	// tmp151, D.16350
	mov	x1, 0	// tmp151
// varargs-dll.c:949:   va_start (argv, format);
	add	x0, sp, 288	// tmp156,,
	str	x0, [sp, 56]	// tmp156, MEM[(struct  *)&argv].__stack
	add	x0, sp, 288	// tmp157,,
	str	x0, [sp, 64]	// tmp157, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 224	// tmp136,,
	str	x0, [sp, 72]	// tmp136, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp137,
	str	w0, [sp, 80]	// tmp137, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp138,
	str	w0, [sp, 84]	// tmp138, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:950:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 84]	// D.16296, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.1032, argv.__stack
	cmp	w1, 0	// D.16296,
	blt	.L2158		//,
	add	x1, x0, 15	// D.16302, iftmp.1032,
	and	x1, x1, -8	// D.16303, D.16302,
	str	x1, [sp, 56]	// D.16303, argv.__stack
	b	.L2159		//
.L2158:
	add	w2, w1, 32	// D.16305, D.16296,
	str	w2, [sp, 84]	// D.16305, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.16307, argv.__vr_offs
	cmp	w2, 0	// D.16307,
	ble	.L2160		//,
	add	x1, x0, 15	// D.16310, iftmp.1032,
	and	x1, x1, -8	// D.16311, D.16310,
	str	x1, [sp, 56]	// D.16311, argv.__stack
	b	.L2159		//
.L2160:
	ldr	x2, [sp, 72]	// D.16313, argv.__vr_top
	sxtw	x0, w1	// D.16314, D.16296
	add	x2, x2, x0	// D.16315, D.16313, D.16314
	add	x0, sp, 40	// ha.1033,,
	ldr	s0, [x2]	// D.16317, MEM[(float *)_26]
	str	s0, [x0]	// D.16317, MEM[(float *)ha.1033_27]
	ldr	x2, [sp, 72]	// D.16318, argv.__vr_top
	sxtw	x0, w1	// D.16319, D.16296
	add	x0, x0, 16	// D.16320, D.16319,
	add	x0, x2, x0	// D.16321, D.16318, D.16320
	ldr	s0, [x0]	// D.16322, MEM[(float *)_33]
	str	s0, [sp, 44]	// D.16322, MEM[(float *)&ha.1030 + 4B]
	add	x0, sp, 40	// iftmp.1032,,
.L2159:
	ldr	x0, [x0]	// D.6345, *iftmp.1031_15
// varargs-dll.c:950:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp139, D.6345,,
	fmov	s0, w0	// tmp141, tmp140
	str	s0, [sp, 32]	// tmp141, a
// varargs-dll.c:951:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 84]	// D.16323, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.1036, argv.__stack
	cmp	w1, 0	// D.16323,
	blt	.L2162		//,
	add	x1, x0, 15	// D.16329, iftmp.1036,
	and	x1, x1, -8	// D.16330, D.16329,
	str	x1, [sp, 56]	// D.16330, argv.__stack
	b	.L2163		//
.L2162:
	add	w2, w1, 32	// D.16332, D.16323,
	str	w2, [sp, 84]	// D.16332, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.16334, argv.__vr_offs
	cmp	w2, 0	// D.16334,
	ble	.L2164		//,
	add	x1, x0, 15	// D.16337, iftmp.1036,
	and	x1, x1, -8	// D.16338, D.16337,
	str	x1, [sp, 56]	// D.16338, argv.__stack
	b	.L2163		//
.L2164:
	ldr	x2, [sp, 72]	// D.16340, argv.__vr_top
	sxtw	x0, w1	// D.16341, D.16323
	add	x2, x2, x0	// D.16342, D.16340, D.16341
	add	x0, sp, 48	// ha.1037,,
	ldr	s0, [x2]	// D.16344, MEM[(float *)_54]
	str	s0, [x0]	// D.16344, MEM[(float *)ha.1037_55]
	ldr	x2, [sp, 72]	// D.16345, argv.__vr_top
	sxtw	x0, w1	// D.16346, D.16323
	add	x0, x0, 16	// D.16347, D.16346,
	add	x0, x2, x0	// D.16348, D.16345, D.16347
	ldr	s0, [x0]	// D.16349, MEM[(float *)_61]
	str	s0, [sp, 52]	// D.16349, MEM[(float *)&ha.1034 + 4B]
	add	x0, sp, 48	// iftmp.1036,,
.L2163:
	ldr	x0, [x0]	// D.6346, *iftmp.1035_17
// varargs-dll.c:951:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp143, D.6346,
	fmov	s0, w0	// tmp145, tmp144
	str	s0, [sp, 36]	// tmp145, b
// varargs-dll.c:953:   return a + b;
	ldr	s1, [sp, 32]	// tmp146, a
	ldr	s0, [sp, 36]	// tmp147, b
	fadd	s0, s1, s0	// _1, tmp146, tmp147
	fcvtzs	s0, s0	// _9, _1
	fmov	w1, s0	// <retval>, _9
// varargs-dll.c:954: }
	adrp	x0, :got:__stack_chk_guard	// tmp150,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp149, tmp150,
	ldr	x3, [sp, 88]	// tmp152, D.16350
	ldr	x2, [x0]	// tmp153,
	subs	x3, x3, x2	// tmp152, tmp153
	mov	x2, 0	// tmp153
	beq	.L2167		//,
	bl	__stack_chk_fail		//
.L2167:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 288	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE62:
	.size	use_va_args_few_hfa_2_floats, .-use_va_args_few_hfa_2_floats
	.align	2
	.global	use_va_list_few_hfa_2_floats
	.type	use_va_list_few_hfa_2_floats, %function
use_va_list_few_hfa_2_floats:
.LFB63:
	.cfi_startproc
	stp	x29, x30, [sp, -80]!	//,,,
	.cfi_def_cfa_offset 80
	.cfi_offset 29, -80
	.cfi_offset 30, -72
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -64
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp133,
// varargs-dll.c:958: {
	adrp	x0, :got:__stack_chk_guard	// tmp135,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp134, tmp135,
	ldr	x1, [x0]	// tmp148,
	str	x1, [sp, 72]	// tmp148, D.16408
	mov	x1, 0	// tmp148
// varargs-dll.c:959:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16354, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1040, argv.__stack
	cmp	w1, 0	// D.16354,
	blt	.L2169		//,
	add	x1, x0, 15	// D.16360, iftmp.1040,
	and	x1, x1, -8	// D.16361, D.16360,
	str	x1, [x19]	// D.16361, argv.__stack
	b	.L2170		//
.L2169:
	add	w2, w1, 32	// D.16363, D.16354,
	str	w2, [x19, 28]	// D.16363, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16365, argv.__vr_offs
	cmp	w2, 0	// D.16365,
	ble	.L2171		//,
	add	x1, x0, 15	// D.16368, iftmp.1040,
	and	x1, x1, -8	// D.16369, D.16368,
	str	x1, [x19]	// D.16369, argv.__stack
	b	.L2170		//
.L2171:
	ldr	x2, [x19, 16]	// D.16371, argv.__vr_top
	sxtw	x0, w1	// D.16372, D.16354
	add	x2, x2, x0	// D.16373, D.16371, D.16372
	add	x0, sp, 56	// ha.1041,,
	ldr	s0, [x2]	// D.16375, MEM[(float *)_23]
	str	s0, [x0]	// D.16375, MEM[(float *)ha.1041_24]
	ldr	x2, [x19, 16]	// D.16376, argv.__vr_top
	sxtw	x0, w1	// D.16377, D.16354
	add	x0, x0, 16	// D.16378, D.16377,
	add	x0, x2, x0	// D.16379, D.16376, D.16378
	ldr	s0, [x0]	// D.16380, MEM[(float *)_30]
	str	s0, [sp, 60]	// D.16380, MEM[(float *)&ha.1038 + 4B]
	add	x0, sp, 56	// iftmp.1040,,
.L2170:
	ldr	x0, [x0]	// D.6350, *iftmp.1039_12
// varargs-dll.c:959:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp136, D.6350,,
	fmov	s0, w0	// tmp138, tmp137
	str	s0, [sp, 48]	// tmp138, a
// varargs-dll.c:960:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.16381, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1044, argv.__stack
	cmp	w1, 0	// D.16381,
	blt	.L2173		//,
	add	x1, x0, 15	// D.16387, iftmp.1044,
	and	x1, x1, -8	// D.16388, D.16387,
	str	x1, [x19]	// D.16388, argv.__stack
	b	.L2174		//
.L2173:
	add	w2, w1, 32	// D.16390, D.16381,
	str	w2, [x19, 28]	// D.16390, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16392, argv.__vr_offs
	cmp	w2, 0	// D.16392,
	ble	.L2175		//,
	add	x1, x0, 15	// D.16395, iftmp.1044,
	and	x1, x1, -8	// D.16396, D.16395,
	str	x1, [x19]	// D.16396, argv.__stack
	b	.L2174		//
.L2175:
	ldr	x2, [x19, 16]	// D.16398, argv.__vr_top
	sxtw	x0, w1	// D.16399, D.16381
	add	x2, x2, x0	// D.16400, D.16398, D.16399
	add	x0, sp, 64	// ha.1045,,
	ldr	s0, [x2]	// D.16402, MEM[(float *)_51]
	str	s0, [x0]	// D.16402, MEM[(float *)ha.1045_52]
	ldr	x2, [x19, 16]	// D.16403, argv.__vr_top
	sxtw	x0, w1	// D.16404, D.16381
	add	x0, x0, 16	// D.16405, D.16404,
	add	x0, x2, x0	// D.16406, D.16403, D.16405
	ldr	s0, [x0]	// D.16407, MEM[(float *)_58]
	str	s0, [sp, 68]	// D.16407, MEM[(float *)&ha.1042 + 4B]
	add	x0, sp, 64	// iftmp.1044,,
.L2174:
	ldr	x0, [x0]	// D.6351, *iftmp.1043_14
// varargs-dll.c:960:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp140, D.6351,
	fmov	s0, w0	// tmp142, tmp141
	str	s0, [sp, 52]	// tmp142, b
// varargs-dll.c:961:   return a + b;
	ldr	s1, [sp, 48]	// tmp143, a
	ldr	s0, [sp, 52]	// tmp144, b
	fadd	s0, s1, s0	// _1, tmp143, tmp144
	fcvtzs	s0, s0	// _7, _1
	fmov	w1, s0	// <retval>, _7
// varargs-dll.c:962: }
	adrp	x0, :got:__stack_chk_guard	// tmp147,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp146, tmp147,
	ldr	x3, [sp, 72]	// tmp149, D.16408
	ldr	x2, [x0]	// tmp150,
	subs	x3, x3, x2	// tmp149, tmp150
	mov	x2, 0	// tmp150
	beq	.L2178		//,
	bl	__stack_chk_fail		//
.L2178:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 80	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE63:
	.size	use_va_list_few_hfa_2_floats, .-use_va_list_few_hfa_2_floats
	.align	2
	.global	use_va_args_several_hfa_2_floats
	.type	use_va_args_several_hfa_2_floats, %function
use_va_args_several_hfa_2_floats:
.LFB64:
	.cfi_startproc
	stp	x29, x30, [sp, -384]!	//,,,
	.cfi_def_cfa_offset 384
	.cfi_offset 29, -384
	.cfi_offset 30, -376
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 328]	//,
	str	x2, [sp, 336]	//,
	str	x3, [sp, 344]	//,
	str	x4, [sp, 352]	//,
	str	x5, [sp, 360]	//,
	str	x6, [sp, 368]	//,
	str	x7, [sp, 376]	//,
	str	q0, [sp, 192]	//,
	str	q1, [sp, 208]	//,
	str	q2, [sp, 224]	//,
	str	q3, [sp, 240]	//,
	str	q4, [sp, 256]	//,
	str	q5, [sp, 272]	//,
	str	q6, [sp, 288]	//,
	str	q7, [sp, 304]	//,
// varargs-dll.c:966: {
	adrp	x0, :got:__stack_chk_guard	// tmp274,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp273, tmp274,
	ldr	x1, [x0]	// tmp322,
	str	x1, [sp, 184]	// tmp322, D.16652
	mov	x1, 0	// tmp322
// varargs-dll.c:968:   va_start (argv, format);
	add	x0, sp, 384	// tmp327,,
	str	x0, [sp, 152]	// tmp327, MEM[(struct  *)&argv].__stack
	add	x0, sp, 384	// tmp328,,
	str	x0, [sp, 160]	// tmp328, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 320	// tmp276,,
	str	x0, [sp, 168]	// tmp276, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp277,
	str	w0, [sp, 176]	// tmp277, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp278,
	str	w0, [sp, 180]	// tmp278, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:969:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 180]	// D.16409, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1048, argv.__stack
	cmp	w1, 0	// D.16409,
	blt	.L2180		//,
	add	x1, x0, 15	// D.16415, iftmp.1048,
	and	x1, x1, -8	// D.16416, D.16415,
	str	x1, [sp, 152]	// D.16416, argv.__stack
	b	.L2181		//
.L2180:
	add	w2, w1, 32	// D.16418, D.16409,
	str	w2, [sp, 180]	// D.16418, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16420, argv.__vr_offs
	cmp	w2, 0	// D.16420,
	ble	.L2182		//,
	add	x1, x0, 15	// D.16423, iftmp.1048,
	and	x1, x1, -8	// D.16424, D.16423,
	str	x1, [sp, 152]	// D.16424, argv.__stack
	b	.L2181		//
.L2182:
	ldr	x2, [sp, 168]	// D.16426, argv.__vr_top
	sxtw	x0, w1	// D.16427, D.16409
	add	x2, x2, x0	// D.16428, D.16426, D.16427
	add	x0, sp, 80	// ha.1049,,
	ldr	s0, [x2]	// D.16430, MEM[(float *)_75]
	str	s0, [x0]	// D.16430, MEM[(float *)ha.1049_76]
	ldr	x2, [sp, 168]	// D.16431, argv.__vr_top
	sxtw	x0, w1	// D.16432, D.16409
	add	x0, x0, 16	// D.16433, D.16432,
	add	x0, x2, x0	// D.16434, D.16431, D.16433
	ldr	s0, [x0]	// D.16435, MEM[(float *)_82]
	str	s0, [sp, 84]	// D.16435, MEM[(float *)&ha.1046 + 4B]
	add	x0, sp, 80	// iftmp.1048,,
.L2181:
	ldr	x0, [x0]	// D.6354, *iftmp.1047_50
// varargs-dll.c:969:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp279, D.6354,,
	fmov	s0, w0	// tmp281, tmp280
	str	s0, [sp, 44]	// tmp281, a
// varargs-dll.c:970:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 180]	// D.16436, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1052, argv.__stack
	cmp	w1, 0	// D.16436,
	blt	.L2184		//,
	add	x1, x0, 15	// D.16442, iftmp.1052,
	and	x1, x1, -8	// D.16443, D.16442,
	str	x1, [sp, 152]	// D.16443, argv.__stack
	b	.L2185		//
.L2184:
	add	w2, w1, 32	// D.16445, D.16436,
	str	w2, [sp, 180]	// D.16445, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16447, argv.__vr_offs
	cmp	w2, 0	// D.16447,
	ble	.L2186		//,
	add	x1, x0, 15	// D.16450, iftmp.1052,
	and	x1, x1, -8	// D.16451, D.16450,
	str	x1, [sp, 152]	// D.16451, argv.__stack
	b	.L2185		//
.L2186:
	ldr	x2, [sp, 168]	// D.16453, argv.__vr_top
	sxtw	x0, w1	// D.16454, D.16436
	add	x2, x2, x0	// D.16455, D.16453, D.16454
	add	x0, sp, 88	// ha.1053,,
	ldr	s0, [x2]	// D.16457, MEM[(float *)_103]
	str	s0, [x0]	// D.16457, MEM[(float *)ha.1053_104]
	ldr	x2, [sp, 168]	// D.16458, argv.__vr_top
	sxtw	x0, w1	// D.16459, D.16436
	add	x0, x0, 16	// D.16460, D.16459,
	add	x0, x2, x0	// D.16461, D.16458, D.16460
	ldr	s0, [x0]	// D.16462, MEM[(float *)_110]
	str	s0, [sp, 92]	// D.16462, MEM[(float *)&ha.1050 + 4B]
	add	x0, sp, 88	// iftmp.1052,,
.L2185:
	ldr	x0, [x0]	// D.6355, *iftmp.1051_52
// varargs-dll.c:970:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp283, D.6355,
	fmov	s0, w0	// tmp285, tmp284
	str	s0, [sp, 48]	// tmp285, b
// varargs-dll.c:971:   float c = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 180]	// D.16463, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1056, argv.__stack
	cmp	w1, 0	// D.16463,
	blt	.L2188		//,
	add	x1, x0, 15	// D.16469, iftmp.1056,
	and	x1, x1, -8	// D.16470, D.16469,
	str	x1, [sp, 152]	// D.16470, argv.__stack
	b	.L2189		//
.L2188:
	add	w2, w1, 32	// D.16472, D.16463,
	str	w2, [sp, 180]	// D.16472, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16474, argv.__vr_offs
	cmp	w2, 0	// D.16474,
	ble	.L2190		//,
	add	x1, x0, 15	// D.16477, iftmp.1056,
	and	x1, x1, -8	// D.16478, D.16477,
	str	x1, [sp, 152]	// D.16478, argv.__stack
	b	.L2189		//
.L2190:
	ldr	x2, [sp, 168]	// D.16480, argv.__vr_top
	sxtw	x0, w1	// D.16481, D.16463
	add	x2, x2, x0	// D.16482, D.16480, D.16481
	add	x0, sp, 96	// ha.1057,,
	ldr	s0, [x2]	// D.16484, MEM[(float *)_131]
	str	s0, [x0]	// D.16484, MEM[(float *)ha.1057_132]
	ldr	x2, [sp, 168]	// D.16485, argv.__vr_top
	sxtw	x0, w1	// D.16486, D.16463
	add	x0, x0, 16	// D.16487, D.16486,
	add	x0, x2, x0	// D.16488, D.16485, D.16487
	ldr	s0, [x0]	// D.16489, MEM[(float *)_138]
	str	s0, [sp, 100]	// D.16489, MEM[(float *)&ha.1054 + 4B]
	add	x0, sp, 96	// iftmp.1056,,
.L2189:
	ldr	x0, [x0]	// D.6356, *iftmp.1055_54
// varargs-dll.c:971:   float c = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp286, D.6356,,
	fmov	s0, w0	// tmp288, tmp287
	str	s0, [sp, 52]	// tmp288, c
// varargs-dll.c:972:   float d = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 180]	// D.16490, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1060, argv.__stack
	cmp	w1, 0	// D.16490,
	blt	.L2192		//,
	add	x1, x0, 15	// D.16496, iftmp.1060,
	and	x1, x1, -8	// D.16497, D.16496,
	str	x1, [sp, 152]	// D.16497, argv.__stack
	b	.L2193		//
.L2192:
	add	w2, w1, 32	// D.16499, D.16490,
	str	w2, [sp, 180]	// D.16499, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16501, argv.__vr_offs
	cmp	w2, 0	// D.16501,
	ble	.L2194		//,
	add	x1, x0, 15	// D.16504, iftmp.1060,
	and	x1, x1, -8	// D.16505, D.16504,
	str	x1, [sp, 152]	// D.16505, argv.__stack
	b	.L2193		//
.L2194:
	ldr	x2, [sp, 168]	// D.16507, argv.__vr_top
	sxtw	x0, w1	// D.16508, D.16490
	add	x2, x2, x0	// D.16509, D.16507, D.16508
	add	x0, sp, 104	// ha.1061,,
	ldr	s0, [x2]	// D.16511, MEM[(float *)_159]
	str	s0, [x0]	// D.16511, MEM[(float *)ha.1061_160]
	ldr	x2, [sp, 168]	// D.16512, argv.__vr_top
	sxtw	x0, w1	// D.16513, D.16490
	add	x0, x0, 16	// D.16514, D.16513,
	add	x0, x2, x0	// D.16515, D.16512, D.16514
	ldr	s0, [x0]	// D.16516, MEM[(float *)_166]
	str	s0, [sp, 108]	// D.16516, MEM[(float *)&ha.1058 + 4B]
	add	x0, sp, 104	// iftmp.1060,,
.L2193:
	ldr	x0, [x0]	// D.6357, *iftmp.1059_56
// varargs-dll.c:972:   float d = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp290, D.6357,
	fmov	s0, w0	// tmp292, tmp291
	str	s0, [sp, 56]	// tmp292, d
// varargs-dll.c:973:   float e = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 180]	// D.16517, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1064, argv.__stack
	cmp	w1, 0	// D.16517,
	blt	.L2196		//,
	add	x1, x0, 15	// D.16523, iftmp.1064,
	and	x1, x1, -8	// D.16524, D.16523,
	str	x1, [sp, 152]	// D.16524, argv.__stack
	b	.L2197		//
.L2196:
	add	w2, w1, 32	// D.16526, D.16517,
	str	w2, [sp, 180]	// D.16526, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16528, argv.__vr_offs
	cmp	w2, 0	// D.16528,
	ble	.L2198		//,
	add	x1, x0, 15	// D.16531, iftmp.1064,
	and	x1, x1, -8	// D.16532, D.16531,
	str	x1, [sp, 152]	// D.16532, argv.__stack
	b	.L2197		//
.L2198:
	ldr	x2, [sp, 168]	// D.16534, argv.__vr_top
	sxtw	x0, w1	// D.16535, D.16517
	add	x2, x2, x0	// D.16536, D.16534, D.16535
	add	x0, sp, 112	// ha.1065,,
	ldr	s0, [x2]	// D.16538, MEM[(float *)_187]
	str	s0, [x0]	// D.16538, MEM[(float *)ha.1065_188]
	ldr	x2, [sp, 168]	// D.16539, argv.__vr_top
	sxtw	x0, w1	// D.16540, D.16517
	add	x0, x0, 16	// D.16541, D.16540,
	add	x0, x2, x0	// D.16542, D.16539, D.16541
	ldr	s0, [x0]	// D.16543, MEM[(float *)_194]
	str	s0, [sp, 116]	// D.16543, MEM[(float *)&ha.1062 + 4B]
	add	x0, sp, 112	// iftmp.1064,,
.L2197:
	ldr	x0, [x0]	// D.6358, *iftmp.1063_58
// varargs-dll.c:973:   float e = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp293, D.6358,,
	fmov	s0, w0	// tmp295, tmp294
	str	s0, [sp, 60]	// tmp295, e
// varargs-dll.c:974:   float f = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 180]	// D.16544, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1068, argv.__stack
	cmp	w1, 0	// D.16544,
	blt	.L2200		//,
	add	x1, x0, 15	// D.16550, iftmp.1068,
	and	x1, x1, -8	// D.16551, D.16550,
	str	x1, [sp, 152]	// D.16551, argv.__stack
	b	.L2201		//
.L2200:
	add	w2, w1, 32	// D.16553, D.16544,
	str	w2, [sp, 180]	// D.16553, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16555, argv.__vr_offs
	cmp	w2, 0	// D.16555,
	ble	.L2202		//,
	add	x1, x0, 15	// D.16558, iftmp.1068,
	and	x1, x1, -8	// D.16559, D.16558,
	str	x1, [sp, 152]	// D.16559, argv.__stack
	b	.L2201		//
.L2202:
	ldr	x2, [sp, 168]	// D.16561, argv.__vr_top
	sxtw	x0, w1	// D.16562, D.16544
	add	x2, x2, x0	// D.16563, D.16561, D.16562
	add	x0, sp, 120	// ha.1069,,
	ldr	s0, [x2]	// D.16565, MEM[(float *)_215]
	str	s0, [x0]	// D.16565, MEM[(float *)ha.1069_216]
	ldr	x2, [sp, 168]	// D.16566, argv.__vr_top
	sxtw	x0, w1	// D.16567, D.16544
	add	x0, x0, 16	// D.16568, D.16567,
	add	x0, x2, x0	// D.16569, D.16566, D.16568
	ldr	s0, [x0]	// D.16570, MEM[(float *)_222]
	str	s0, [sp, 124]	// D.16570, MEM[(float *)&ha.1066 + 4B]
	add	x0, sp, 120	// iftmp.1068,,
.L2201:
	ldr	x0, [x0]	// D.6359, *iftmp.1067_60
// varargs-dll.c:974:   float f = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp297, D.6359,
	fmov	s0, w0	// tmp299, tmp298
	str	s0, [sp, 64]	// tmp299, f
// varargs-dll.c:975:   float g = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 180]	// D.16571, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1072, argv.__stack
	cmp	w1, 0	// D.16571,
	blt	.L2204		//,
	add	x1, x0, 15	// D.16577, iftmp.1072,
	and	x1, x1, -8	// D.16578, D.16577,
	str	x1, [sp, 152]	// D.16578, argv.__stack
	b	.L2205		//
.L2204:
	add	w2, w1, 32	// D.16580, D.16571,
	str	w2, [sp, 180]	// D.16580, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16582, argv.__vr_offs
	cmp	w2, 0	// D.16582,
	ble	.L2206		//,
	add	x1, x0, 15	// D.16585, iftmp.1072,
	and	x1, x1, -8	// D.16586, D.16585,
	str	x1, [sp, 152]	// D.16586, argv.__stack
	b	.L2205		//
.L2206:
	ldr	x2, [sp, 168]	// D.16588, argv.__vr_top
	sxtw	x0, w1	// D.16589, D.16571
	add	x2, x2, x0	// D.16590, D.16588, D.16589
	add	x0, sp, 128	// ha.1073,,
	ldr	s0, [x2]	// D.16592, MEM[(float *)_243]
	str	s0, [x0]	// D.16592, MEM[(float *)ha.1073_244]
	ldr	x2, [sp, 168]	// D.16593, argv.__vr_top
	sxtw	x0, w1	// D.16594, D.16571
	add	x0, x0, 16	// D.16595, D.16594,
	add	x0, x2, x0	// D.16596, D.16593, D.16595
	ldr	s0, [x0]	// D.16597, MEM[(float *)_250]
	str	s0, [sp, 132]	// D.16597, MEM[(float *)&ha.1070 + 4B]
	add	x0, sp, 128	// iftmp.1072,,
.L2205:
	ldr	x0, [x0]	// D.6360, *iftmp.1071_62
// varargs-dll.c:975:   float g = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp300, D.6360,,
	fmov	s0, w0	// tmp302, tmp301
	str	s0, [sp, 68]	// tmp302, g
// varargs-dll.c:976:   float h = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 180]	// D.16598, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1076, argv.__stack
	cmp	w1, 0	// D.16598,
	blt	.L2208		//,
	add	x1, x0, 15	// D.16604, iftmp.1076,
	and	x1, x1, -8	// D.16605, D.16604,
	str	x1, [sp, 152]	// D.16605, argv.__stack
	b	.L2209		//
.L2208:
	add	w2, w1, 32	// D.16607, D.16598,
	str	w2, [sp, 180]	// D.16607, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16609, argv.__vr_offs
	cmp	w2, 0	// D.16609,
	ble	.L2210		//,
	add	x1, x0, 15	// D.16612, iftmp.1076,
	and	x1, x1, -8	// D.16613, D.16612,
	str	x1, [sp, 152]	// D.16613, argv.__stack
	b	.L2209		//
.L2210:
	ldr	x2, [sp, 168]	// D.16615, argv.__vr_top
	sxtw	x0, w1	// D.16616, D.16598
	add	x2, x2, x0	// D.16617, D.16615, D.16616
	add	x0, sp, 136	// ha.1077,,
	ldr	s0, [x2]	// D.16619, MEM[(float *)_271]
	str	s0, [x0]	// D.16619, MEM[(float *)ha.1077_272]
	ldr	x2, [sp, 168]	// D.16620, argv.__vr_top
	sxtw	x0, w1	// D.16621, D.16598
	add	x0, x0, 16	// D.16622, D.16621,
	add	x0, x2, x0	// D.16623, D.16620, D.16622
	ldr	s0, [x0]	// D.16624, MEM[(float *)_278]
	str	s0, [sp, 140]	// D.16624, MEM[(float *)&ha.1074 + 4B]
	add	x0, sp, 136	// iftmp.1076,,
.L2209:
	ldr	x0, [x0]	// D.6361, *iftmp.1075_64
// varargs-dll.c:976:   float h = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp304, D.6361,
	fmov	s0, w0	// tmp306, tmp305
	str	s0, [sp, 72]	// tmp306, h
// varargs-dll.c:977:   float i = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 180]	// D.16625, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.1080, argv.__stack
	cmp	w1, 0	// D.16625,
	blt	.L2212		//,
	add	x1, x0, 15	// D.16631, iftmp.1080,
	and	x1, x1, -8	// D.16632, D.16631,
	str	x1, [sp, 152]	// D.16632, argv.__stack
	b	.L2213		//
.L2212:
	add	w2, w1, 32	// D.16634, D.16625,
	str	w2, [sp, 180]	// D.16634, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.16636, argv.__vr_offs
	cmp	w2, 0	// D.16636,
	ble	.L2214		//,
	add	x1, x0, 15	// D.16639, iftmp.1080,
	and	x1, x1, -8	// D.16640, D.16639,
	str	x1, [sp, 152]	// D.16640, argv.__stack
	b	.L2213		//
.L2214:
	ldr	x2, [sp, 168]	// D.16642, argv.__vr_top
	sxtw	x0, w1	// D.16643, D.16625
	add	x2, x2, x0	// D.16644, D.16642, D.16643
	add	x0, sp, 144	// ha.1081,,
	ldr	s0, [x2]	// D.16646, MEM[(float *)_299]
	str	s0, [x0]	// D.16646, MEM[(float *)ha.1081_300]
	ldr	x2, [sp, 168]	// D.16647, argv.__vr_top
	sxtw	x0, w1	// D.16648, D.16625
	add	x0, x0, 16	// D.16649, D.16648,
	add	x0, x2, x0	// D.16650, D.16647, D.16649
	ldr	s0, [x0]	// D.16651, MEM[(float *)_306]
	str	s0, [sp, 148]	// D.16651, MEM[(float *)&ha.1078 + 4B]
	add	x0, sp, 144	// iftmp.1080,,
.L2213:
	ldr	x0, [x0]	// D.6362, *iftmp.1079_66
// varargs-dll.c:977:   float i = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp307, D.6362,,
	fmov	s0, w0	// tmp309, tmp308
	str	s0, [sp, 76]	// tmp309, i
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s1, [sp, 44]	// tmp310, a
	ldr	s0, [sp, 48]	// tmp311, b
	fadd	s1, s1, s0	// _1, tmp310, tmp311
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 52]	// tmp312, c
	fadd	s1, s1, s0	// _2, _1, tmp312
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 56]	// tmp313, d
	fadd	s1, s1, s0	// _3, _2, tmp313
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 60]	// tmp314, e
	fadd	s1, s1, s0	// _4, _3, tmp314
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 64]	// tmp315, f
	fadd	s1, s1, s0	// _5, _4, tmp315
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 68]	// tmp316, g
	fadd	s1, s1, s0	// _6, _5, tmp316
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 72]	// tmp317, h
	fadd	s1, s1, s0	// _7, _6, tmp317
// varargs-dll.c:979:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 76]	// tmp318, i
	fadd	s0, s1, s0	// _8, _7, tmp318
	fcvtzs	s0, s0	// _30, _8
	fmov	w1, s0	// <retval>, _30
// varargs-dll.c:980: }
	adrp	x0, :got:__stack_chk_guard	// tmp321,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp320, tmp321,
	ldr	x3, [sp, 184]	// tmp323, D.16652
	ldr	x2, [x0]	// tmp324,
	subs	x3, x3, x2	// tmp323, tmp324
	mov	x2, 0	// tmp324
	beq	.L2217		//,
	bl	__stack_chk_fail		//
.L2217:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 384	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE64:
	.size	use_va_args_several_hfa_2_floats, .-use_va_args_several_hfa_2_floats
	.align	2
	.global	use_va_list_several_hfa_2_floats
	.type	use_va_list_several_hfa_2_floats, %function
use_va_list_several_hfa_2_floats:
.LFB65:
	.cfi_startproc
	stp	x29, x30, [sp, -176]!	//,,,
	.cfi_def_cfa_offset 176
	.cfi_offset 29, -176
	.cfi_offset 30, -168
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -160
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp273,
// varargs-dll.c:984: {
	adrp	x0, :got:__stack_chk_guard	// tmp275,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp274, tmp275,
	ldr	x1, [x0]	// tmp319,
	str	x1, [sp, 168]	// tmp319, D.16899
	mov	x1, 0	// tmp319
// varargs-dll.c:985:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16656, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1084, argv.__stack
	cmp	w1, 0	// D.16656,
	blt	.L2219		//,
	add	x1, x0, 15	// D.16662, iftmp.1084,
	and	x1, x1, -8	// D.16663, D.16662,
	str	x1, [x19]	// D.16663, argv.__stack
	b	.L2220		//
.L2219:
	add	w2, w1, 32	// D.16665, D.16656,
	str	w2, [x19, 28]	// D.16665, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16667, argv.__vr_offs
	cmp	w2, 0	// D.16667,
	ble	.L2221		//,
	add	x1, x0, 15	// D.16670, iftmp.1084,
	and	x1, x1, -8	// D.16671, D.16670,
	str	x1, [x19]	// D.16671, argv.__stack
	b	.L2220		//
.L2221:
	ldr	x2, [x19, 16]	// D.16673, argv.__vr_top
	sxtw	x0, w1	// D.16674, D.16656
	add	x2, x2, x0	// D.16675, D.16673, D.16674
	add	x0, sp, 96	// ha.1085,,
	ldr	s0, [x2]	// D.16677, MEM[(float *)_72]
	str	s0, [x0]	// D.16677, MEM[(float *)ha.1085_73]
	ldr	x2, [x19, 16]	// D.16678, argv.__vr_top
	sxtw	x0, w1	// D.16679, D.16656
	add	x0, x0, 16	// D.16680, D.16679,
	add	x0, x2, x0	// D.16681, D.16678, D.16680
	ldr	s0, [x0]	// D.16682, MEM[(float *)_79]
	str	s0, [sp, 100]	// D.16682, MEM[(float *)&ha.1082 + 4B]
	add	x0, sp, 96	// iftmp.1084,,
.L2220:
	ldr	x0, [x0]	// D.6366, *iftmp.1083_47
// varargs-dll.c:985:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp276, D.6366,,
	fmov	s0, w0	// tmp278, tmp277
	str	s0, [sp, 60]	// tmp278, a
// varargs-dll.c:986:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.16683, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1088, argv.__stack
	cmp	w1, 0	// D.16683,
	blt	.L2223		//,
	add	x1, x0, 15	// D.16689, iftmp.1088,
	and	x1, x1, -8	// D.16690, D.16689,
	str	x1, [x19]	// D.16690, argv.__stack
	b	.L2224		//
.L2223:
	add	w2, w1, 32	// D.16692, D.16683,
	str	w2, [x19, 28]	// D.16692, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16694, argv.__vr_offs
	cmp	w2, 0	// D.16694,
	ble	.L2225		//,
	add	x1, x0, 15	// D.16697, iftmp.1088,
	and	x1, x1, -8	// D.16698, D.16697,
	str	x1, [x19]	// D.16698, argv.__stack
	b	.L2224		//
.L2225:
	ldr	x2, [x19, 16]	// D.16700, argv.__vr_top
	sxtw	x0, w1	// D.16701, D.16683
	add	x2, x2, x0	// D.16702, D.16700, D.16701
	add	x0, sp, 104	// ha.1089,,
	ldr	s0, [x2]	// D.16704, MEM[(float *)_100]
	str	s0, [x0]	// D.16704, MEM[(float *)ha.1089_101]
	ldr	x2, [x19, 16]	// D.16705, argv.__vr_top
	sxtw	x0, w1	// D.16706, D.16683
	add	x0, x0, 16	// D.16707, D.16706,
	add	x0, x2, x0	// D.16708, D.16705, D.16707
	ldr	s0, [x0]	// D.16709, MEM[(float *)_107]
	str	s0, [sp, 108]	// D.16709, MEM[(float *)&ha.1086 + 4B]
	add	x0, sp, 104	// iftmp.1088,,
.L2224:
	ldr	x0, [x0]	// D.6367, *iftmp.1087_49
// varargs-dll.c:986:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp280, D.6367,
	fmov	s0, w0	// tmp282, tmp281
	str	s0, [sp, 64]	// tmp282, b
// varargs-dll.c:987:   float c = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16710, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1092, argv.__stack
	cmp	w1, 0	// D.16710,
	blt	.L2227		//,
	add	x1, x0, 15	// D.16716, iftmp.1092,
	and	x1, x1, -8	// D.16717, D.16716,
	str	x1, [x19]	// D.16717, argv.__stack
	b	.L2228		//
.L2227:
	add	w2, w1, 32	// D.16719, D.16710,
	str	w2, [x19, 28]	// D.16719, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16721, argv.__vr_offs
	cmp	w2, 0	// D.16721,
	ble	.L2229		//,
	add	x1, x0, 15	// D.16724, iftmp.1092,
	and	x1, x1, -8	// D.16725, D.16724,
	str	x1, [x19]	// D.16725, argv.__stack
	b	.L2228		//
.L2229:
	ldr	x2, [x19, 16]	// D.16727, argv.__vr_top
	sxtw	x0, w1	// D.16728, D.16710
	add	x2, x2, x0	// D.16729, D.16727, D.16728
	add	x0, sp, 112	// ha.1093,,
	ldr	s0, [x2]	// D.16731, MEM[(float *)_128]
	str	s0, [x0]	// D.16731, MEM[(float *)ha.1093_129]
	ldr	x2, [x19, 16]	// D.16732, argv.__vr_top
	sxtw	x0, w1	// D.16733, D.16710
	add	x0, x0, 16	// D.16734, D.16733,
	add	x0, x2, x0	// D.16735, D.16732, D.16734
	ldr	s0, [x0]	// D.16736, MEM[(float *)_135]
	str	s0, [sp, 116]	// D.16736, MEM[(float *)&ha.1090 + 4B]
	add	x0, sp, 112	// iftmp.1092,,
.L2228:
	ldr	x0, [x0]	// D.6368, *iftmp.1091_51
// varargs-dll.c:987:   float c = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp283, D.6368,,
	fmov	s0, w0	// tmp285, tmp284
	str	s0, [sp, 68]	// tmp285, c
// varargs-dll.c:988:   float d = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.16737, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1096, argv.__stack
	cmp	w1, 0	// D.16737,
	blt	.L2231		//,
	add	x1, x0, 15	// D.16743, iftmp.1096,
	and	x1, x1, -8	// D.16744, D.16743,
	str	x1, [x19]	// D.16744, argv.__stack
	b	.L2232		//
.L2231:
	add	w2, w1, 32	// D.16746, D.16737,
	str	w2, [x19, 28]	// D.16746, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16748, argv.__vr_offs
	cmp	w2, 0	// D.16748,
	ble	.L2233		//,
	add	x1, x0, 15	// D.16751, iftmp.1096,
	and	x1, x1, -8	// D.16752, D.16751,
	str	x1, [x19]	// D.16752, argv.__stack
	b	.L2232		//
.L2233:
	ldr	x2, [x19, 16]	// D.16754, argv.__vr_top
	sxtw	x0, w1	// D.16755, D.16737
	add	x2, x2, x0	// D.16756, D.16754, D.16755
	add	x0, sp, 120	// ha.1097,,
	ldr	s0, [x2]	// D.16758, MEM[(float *)_156]
	str	s0, [x0]	// D.16758, MEM[(float *)ha.1097_157]
	ldr	x2, [x19, 16]	// D.16759, argv.__vr_top
	sxtw	x0, w1	// D.16760, D.16737
	add	x0, x0, 16	// D.16761, D.16760,
	add	x0, x2, x0	// D.16762, D.16759, D.16761
	ldr	s0, [x0]	// D.16763, MEM[(float *)_163]
	str	s0, [sp, 124]	// D.16763, MEM[(float *)&ha.1094 + 4B]
	add	x0, sp, 120	// iftmp.1096,,
.L2232:
	ldr	x0, [x0]	// D.6369, *iftmp.1095_53
// varargs-dll.c:988:   float d = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp287, D.6369,
	fmov	s0, w0	// tmp289, tmp288
	str	s0, [sp, 72]	// tmp289, d
// varargs-dll.c:989:   float e = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16764, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1100, argv.__stack
	cmp	w1, 0	// D.16764,
	blt	.L2235		//,
	add	x1, x0, 15	// D.16770, iftmp.1100,
	and	x1, x1, -8	// D.16771, D.16770,
	str	x1, [x19]	// D.16771, argv.__stack
	b	.L2236		//
.L2235:
	add	w2, w1, 32	// D.16773, D.16764,
	str	w2, [x19, 28]	// D.16773, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16775, argv.__vr_offs
	cmp	w2, 0	// D.16775,
	ble	.L2237		//,
	add	x1, x0, 15	// D.16778, iftmp.1100,
	and	x1, x1, -8	// D.16779, D.16778,
	str	x1, [x19]	// D.16779, argv.__stack
	b	.L2236		//
.L2237:
	ldr	x2, [x19, 16]	// D.16781, argv.__vr_top
	sxtw	x0, w1	// D.16782, D.16764
	add	x2, x2, x0	// D.16783, D.16781, D.16782
	add	x0, sp, 128	// ha.1101,,
	ldr	s0, [x2]	// D.16785, MEM[(float *)_184]
	str	s0, [x0]	// D.16785, MEM[(float *)ha.1101_185]
	ldr	x2, [x19, 16]	// D.16786, argv.__vr_top
	sxtw	x0, w1	// D.16787, D.16764
	add	x0, x0, 16	// D.16788, D.16787,
	add	x0, x2, x0	// D.16789, D.16786, D.16788
	ldr	s0, [x0]	// D.16790, MEM[(float *)_191]
	str	s0, [sp, 132]	// D.16790, MEM[(float *)&ha.1098 + 4B]
	add	x0, sp, 128	// iftmp.1100,,
.L2236:
	ldr	x0, [x0]	// D.6370, *iftmp.1099_55
// varargs-dll.c:989:   float e = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp290, D.6370,,
	fmov	s0, w0	// tmp292, tmp291
	str	s0, [sp, 76]	// tmp292, e
// varargs-dll.c:990:   float f = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.16791, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1104, argv.__stack
	cmp	w1, 0	// D.16791,
	blt	.L2239		//,
	add	x1, x0, 15	// D.16797, iftmp.1104,
	and	x1, x1, -8	// D.16798, D.16797,
	str	x1, [x19]	// D.16798, argv.__stack
	b	.L2240		//
.L2239:
	add	w2, w1, 32	// D.16800, D.16791,
	str	w2, [x19, 28]	// D.16800, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16802, argv.__vr_offs
	cmp	w2, 0	// D.16802,
	ble	.L2241		//,
	add	x1, x0, 15	// D.16805, iftmp.1104,
	and	x1, x1, -8	// D.16806, D.16805,
	str	x1, [x19]	// D.16806, argv.__stack
	b	.L2240		//
.L2241:
	ldr	x2, [x19, 16]	// D.16808, argv.__vr_top
	sxtw	x0, w1	// D.16809, D.16791
	add	x2, x2, x0	// D.16810, D.16808, D.16809
	add	x0, sp, 136	// ha.1105,,
	ldr	s0, [x2]	// D.16812, MEM[(float *)_212]
	str	s0, [x0]	// D.16812, MEM[(float *)ha.1105_213]
	ldr	x2, [x19, 16]	// D.16813, argv.__vr_top
	sxtw	x0, w1	// D.16814, D.16791
	add	x0, x0, 16	// D.16815, D.16814,
	add	x0, x2, x0	// D.16816, D.16813, D.16815
	ldr	s0, [x0]	// D.16817, MEM[(float *)_219]
	str	s0, [sp, 140]	// D.16817, MEM[(float *)&ha.1102 + 4B]
	add	x0, sp, 136	// iftmp.1104,,
.L2240:
	ldr	x0, [x0]	// D.6371, *iftmp.1103_57
// varargs-dll.c:990:   float f = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp294, D.6371,
	fmov	s0, w0	// tmp296, tmp295
	str	s0, [sp, 80]	// tmp296, f
// varargs-dll.c:991:   float g = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16818, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1108, argv.__stack
	cmp	w1, 0	// D.16818,
	blt	.L2243		//,
	add	x1, x0, 15	// D.16824, iftmp.1108,
	and	x1, x1, -8	// D.16825, D.16824,
	str	x1, [x19]	// D.16825, argv.__stack
	b	.L2244		//
.L2243:
	add	w2, w1, 32	// D.16827, D.16818,
	str	w2, [x19, 28]	// D.16827, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16829, argv.__vr_offs
	cmp	w2, 0	// D.16829,
	ble	.L2245		//,
	add	x1, x0, 15	// D.16832, iftmp.1108,
	and	x1, x1, -8	// D.16833, D.16832,
	str	x1, [x19]	// D.16833, argv.__stack
	b	.L2244		//
.L2245:
	ldr	x2, [x19, 16]	// D.16835, argv.__vr_top
	sxtw	x0, w1	// D.16836, D.16818
	add	x2, x2, x0	// D.16837, D.16835, D.16836
	add	x0, sp, 144	// ha.1109,,
	ldr	s0, [x2]	// D.16839, MEM[(float *)_240]
	str	s0, [x0]	// D.16839, MEM[(float *)ha.1109_241]
	ldr	x2, [x19, 16]	// D.16840, argv.__vr_top
	sxtw	x0, w1	// D.16841, D.16818
	add	x0, x0, 16	// D.16842, D.16841,
	add	x0, x2, x0	// D.16843, D.16840, D.16842
	ldr	s0, [x0]	// D.16844, MEM[(float *)_247]
	str	s0, [sp, 148]	// D.16844, MEM[(float *)&ha.1106 + 4B]
	add	x0, sp, 144	// iftmp.1108,,
.L2244:
	ldr	x0, [x0]	// D.6372, *iftmp.1107_59
// varargs-dll.c:991:   float g = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp297, D.6372,,
	fmov	s0, w0	// tmp299, tmp298
	str	s0, [sp, 84]	// tmp299, g
// varargs-dll.c:992:   float h = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.16845, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1112, argv.__stack
	cmp	w1, 0	// D.16845,
	blt	.L2247		//,
	add	x1, x0, 15	// D.16851, iftmp.1112,
	and	x1, x1, -8	// D.16852, D.16851,
	str	x1, [x19]	// D.16852, argv.__stack
	b	.L2248		//
.L2247:
	add	w2, w1, 32	// D.16854, D.16845,
	str	w2, [x19, 28]	// D.16854, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16856, argv.__vr_offs
	cmp	w2, 0	// D.16856,
	ble	.L2249		//,
	add	x1, x0, 15	// D.16859, iftmp.1112,
	and	x1, x1, -8	// D.16860, D.16859,
	str	x1, [x19]	// D.16860, argv.__stack
	b	.L2248		//
.L2249:
	ldr	x2, [x19, 16]	// D.16862, argv.__vr_top
	sxtw	x0, w1	// D.16863, D.16845
	add	x2, x2, x0	// D.16864, D.16862, D.16863
	add	x0, sp, 152	// ha.1113,,
	ldr	s0, [x2]	// D.16866, MEM[(float *)_268]
	str	s0, [x0]	// D.16866, MEM[(float *)ha.1113_269]
	ldr	x2, [x19, 16]	// D.16867, argv.__vr_top
	sxtw	x0, w1	// D.16868, D.16845
	add	x0, x0, 16	// D.16869, D.16868,
	add	x0, x2, x0	// D.16870, D.16867, D.16869
	ldr	s0, [x0]	// D.16871, MEM[(float *)_275]
	str	s0, [sp, 156]	// D.16871, MEM[(float *)&ha.1110 + 4B]
	add	x0, sp, 152	// iftmp.1112,,
.L2248:
	ldr	x0, [x0]	// D.6373, *iftmp.1111_61
// varargs-dll.c:992:   float h = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp301, D.6373,
	fmov	s0, w0	// tmp303, tmp302
	str	s0, [sp, 88]	// tmp303, h
// varargs-dll.c:993:   float i = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.16872, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1116, argv.__stack
	cmp	w1, 0	// D.16872,
	blt	.L2251		//,
	add	x1, x0, 15	// D.16878, iftmp.1116,
	and	x1, x1, -8	// D.16879, D.16878,
	str	x1, [x19]	// D.16879, argv.__stack
	b	.L2252		//
.L2251:
	add	w2, w1, 32	// D.16881, D.16872,
	str	w2, [x19, 28]	// D.16881, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.16883, argv.__vr_offs
	cmp	w2, 0	// D.16883,
	ble	.L2253		//,
	add	x1, x0, 15	// D.16886, iftmp.1116,
	and	x1, x1, -8	// D.16887, D.16886,
	str	x1, [x19]	// D.16887, argv.__stack
	b	.L2252		//
.L2253:
	ldr	x2, [x19, 16]	// D.16889, argv.__vr_top
	sxtw	x0, w1	// D.16890, D.16872
	add	x2, x2, x0	// D.16891, D.16889, D.16890
	add	x0, sp, 160	// ha.1117,,
	ldr	s0, [x2]	// D.16893, MEM[(float *)_296]
	str	s0, [x0]	// D.16893, MEM[(float *)ha.1117_297]
	ldr	x2, [x19, 16]	// D.16894, argv.__vr_top
	sxtw	x0, w1	// D.16895, D.16872
	add	x0, x0, 16	// D.16896, D.16895,
	add	x0, x2, x0	// D.16897, D.16894, D.16896
	ldr	s0, [x0]	// D.16898, MEM[(float *)_303]
	str	s0, [sp, 164]	// D.16898, MEM[(float *)&ha.1114 + 4B]
	add	x0, sp, 160	// iftmp.1116,,
.L2252:
	ldr	x0, [x0]	// D.6374, *iftmp.1115_63
// varargs-dll.c:993:   float i = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp304, D.6374,,
	fmov	s0, w0	// tmp306, tmp305
	str	s0, [sp, 92]	// tmp306, i
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s1, [sp, 60]	// tmp307, a
	ldr	s0, [sp, 64]	// tmp308, b
	fadd	s1, s1, s0	// _1, tmp307, tmp308
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 68]	// tmp309, c
	fadd	s1, s1, s0	// _2, _1, tmp309
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 72]	// tmp310, d
	fadd	s1, s1, s0	// _3, _2, tmp310
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 76]	// tmp311, e
	fadd	s1, s1, s0	// _4, _3, tmp311
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 80]	// tmp312, f
	fadd	s1, s1, s0	// _5, _4, tmp312
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 84]	// tmp313, g
	fadd	s1, s1, s0	// _6, _5, tmp313
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 88]	// tmp314, h
	fadd	s1, s1, s0	// _7, _6, tmp314
// varargs-dll.c:994:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 92]	// tmp315, i
	fadd	s0, s1, s0	// _8, _7, tmp315
	fcvtzs	s0, s0	// _28, _8
	fmov	w1, s0	// <retval>, _28
// varargs-dll.c:995: }
	adrp	x0, :got:__stack_chk_guard	// tmp318,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp317, tmp318,
	ldr	x3, [sp, 168]	// tmp320, D.16899
	ldr	x2, [x0]	// tmp321,
	subs	x3, x3, x2	// tmp320, tmp321
	mov	x2, 0	// tmp321
	beq	.L2256		//,
	bl	__stack_chk_fail		//
.L2256:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 176	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE65:
	.size	use_va_list_several_hfa_2_floats, .-use_va_list_several_hfa_2_floats
	.align	2
	.global	use_va_args_many_hfa_2_floats
	.type	use_va_args_many_hfa_2_floats, %function
use_va_args_many_hfa_2_floats:
.LFB66:
	.cfi_startproc
	stp	x29, x30, [sp, -480]!	//,,,
	.cfi_def_cfa_offset 480
	.cfi_offset 29, -480
	.cfi_offset 30, -472
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 424]	//,
	str	x2, [sp, 432]	//,
	str	x3, [sp, 440]	//,
	str	x4, [sp, 448]	//,
	str	x5, [sp, 456]	//,
	str	x6, [sp, 464]	//,
	str	x7, [sp, 472]	//,
	str	q0, [sp, 288]	//,
	str	q1, [sp, 304]	//,
	str	q2, [sp, 320]	//,
	str	q3, [sp, 336]	//,
	str	q4, [sp, 352]	//,
	str	q5, [sp, 368]	//,
	str	q6, [sp, 384]	//,
	str	q7, [sp, 400]	//,
// varargs-dll.c:999: {
	adrp	x0, :got:__stack_chk_guard	// tmp434,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp433, tmp434,
	ldr	x1, [x0]	// tmp518,
	str	x1, [sp, 280]	// tmp518, D.17359
	mov	x1, 0	// tmp518
// varargs-dll.c:1001:   va_start (argv, format);
	add	x0, sp, 480	// tmp523,,
	str	x0, [sp, 248]	// tmp523, MEM[(struct  *)&argv].__stack
	add	x0, sp, 480	// tmp524,,
	str	x0, [sp, 256]	// tmp524, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 416	// tmp436,,
	str	x0, [sp, 264]	// tmp436, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp437,
	str	w0, [sp, 272]	// tmp437, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp438,
	str	w0, [sp, 276]	// tmp438, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1002:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.16900, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1120, argv.__stack
	cmp	w1, 0	// D.16900,
	blt	.L2258		//,
	add	x1, x0, 15	// D.16906, iftmp.1120,
	and	x1, x1, -8	// D.16907, D.16906,
	str	x1, [sp, 248]	// D.16907, argv.__stack
	b	.L2259		//
.L2258:
	add	w2, w1, 32	// D.16909, D.16900,
	str	w2, [sp, 276]	// D.16909, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.16911, argv.__vr_offs
	cmp	w2, 0	// D.16911,
	ble	.L2260		//,
	add	x1, x0, 15	// D.16914, iftmp.1120,
	and	x1, x1, -8	// D.16915, D.16914,
	str	x1, [sp, 248]	// D.16915, argv.__stack
	b	.L2259		//
.L2260:
	ldr	x2, [sp, 264]	// D.16917, argv.__vr_top
	sxtw	x0, w1	// D.16918, D.16900
	add	x2, x2, x0	// D.16919, D.16917, D.16918
	add	x0, sp, 112	// ha.1121,,
	ldr	s0, [x2]	// D.16921, MEM[(float *)_131]
	str	s0, [x0]	// D.16921, MEM[(float *)ha.1121_132]
	ldr	x2, [sp, 264]	// D.16922, argv.__vr_top
	sxtw	x0, w1	// D.16923, D.16900
	add	x0, x0, 16	// D.16924, D.16923,
	add	x0, x2, x0	// D.16925, D.16922, D.16924
	ldr	s0, [x0]	// D.16926, MEM[(float *)_138]
	str	s0, [sp, 116]	// D.16926, MEM[(float *)&ha.1118 + 4B]
	add	x0, sp, 112	// iftmp.1120,,
.L2259:
	ldr	x0, [x0]	// D.6377, *iftmp.1119_90
// varargs-dll.c:1002:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp439, D.6377,,
	fmov	s0, w0	// tmp441, tmp440
	str	s0, [sp, 44]	// tmp441, a
// varargs-dll.c:1003:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.16927, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1124, argv.__stack
	cmp	w1, 0	// D.16927,
	blt	.L2262		//,
	add	x1, x0, 15	// D.16933, iftmp.1124,
	and	x1, x1, -8	// D.16934, D.16933,
	str	x1, [sp, 248]	// D.16934, argv.__stack
	b	.L2263		//
.L2262:
	add	w2, w1, 32	// D.16936, D.16927,
	str	w2, [sp, 276]	// D.16936, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.16938, argv.__vr_offs
	cmp	w2, 0	// D.16938,
	ble	.L2264		//,
	add	x1, x0, 15	// D.16941, iftmp.1124,
	and	x1, x1, -8	// D.16942, D.16941,
	str	x1, [sp, 248]	// D.16942, argv.__stack
	b	.L2263		//
.L2264:
	ldr	x2, [sp, 264]	// D.16944, argv.__vr_top
	sxtw	x0, w1	// D.16945, D.16927
	add	x2, x2, x0	// D.16946, D.16944, D.16945
	add	x0, sp, 120	// ha.1125,,
	ldr	s0, [x2]	// D.16948, MEM[(float *)_159]
	str	s0, [x0]	// D.16948, MEM[(float *)ha.1125_160]
	ldr	x2, [sp, 264]	// D.16949, argv.__vr_top
	sxtw	x0, w1	// D.16950, D.16927
	add	x0, x0, 16	// D.16951, D.16950,
	add	x0, x2, x0	// D.16952, D.16949, D.16951
	ldr	s0, [x0]	// D.16953, MEM[(float *)_166]
	str	s0, [sp, 124]	// D.16953, MEM[(float *)&ha.1122 + 4B]
	add	x0, sp, 120	// iftmp.1124,,
.L2263:
	ldr	x0, [x0]	// D.6378, *iftmp.1123_92
// varargs-dll.c:1003:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp443, D.6378,
	fmov	s0, w0	// tmp445, tmp444
	str	s0, [sp, 48]	// tmp445, b
// varargs-dll.c:1004:   float c = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.16954, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1128, argv.__stack
	cmp	w1, 0	// D.16954,
	blt	.L2266		//,
	add	x1, x0, 15	// D.16960, iftmp.1128,
	and	x1, x1, -8	// D.16961, D.16960,
	str	x1, [sp, 248]	// D.16961, argv.__stack
	b	.L2267		//
.L2266:
	add	w2, w1, 32	// D.16963, D.16954,
	str	w2, [sp, 276]	// D.16963, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.16965, argv.__vr_offs
	cmp	w2, 0	// D.16965,
	ble	.L2268		//,
	add	x1, x0, 15	// D.16968, iftmp.1128,
	and	x1, x1, -8	// D.16969, D.16968,
	str	x1, [sp, 248]	// D.16969, argv.__stack
	b	.L2267		//
.L2268:
	ldr	x2, [sp, 264]	// D.16971, argv.__vr_top
	sxtw	x0, w1	// D.16972, D.16954
	add	x2, x2, x0	// D.16973, D.16971, D.16972
	add	x0, sp, 128	// ha.1129,,
	ldr	s0, [x2]	// D.16975, MEM[(float *)_187]
	str	s0, [x0]	// D.16975, MEM[(float *)ha.1129_188]
	ldr	x2, [sp, 264]	// D.16976, argv.__vr_top
	sxtw	x0, w1	// D.16977, D.16954
	add	x0, x0, 16	// D.16978, D.16977,
	add	x0, x2, x0	// D.16979, D.16976, D.16978
	ldr	s0, [x0]	// D.16980, MEM[(float *)_194]
	str	s0, [sp, 132]	// D.16980, MEM[(float *)&ha.1126 + 4B]
	add	x0, sp, 128	// iftmp.1128,,
.L2267:
	ldr	x0, [x0]	// D.6379, *iftmp.1127_94
// varargs-dll.c:1004:   float c = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp446, D.6379,,
	fmov	s0, w0	// tmp448, tmp447
	str	s0, [sp, 52]	// tmp448, c
// varargs-dll.c:1005:   float d = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.16981, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1132, argv.__stack
	cmp	w1, 0	// D.16981,
	blt	.L2270		//,
	add	x1, x0, 15	// D.16987, iftmp.1132,
	and	x1, x1, -8	// D.16988, D.16987,
	str	x1, [sp, 248]	// D.16988, argv.__stack
	b	.L2271		//
.L2270:
	add	w2, w1, 32	// D.16990, D.16981,
	str	w2, [sp, 276]	// D.16990, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.16992, argv.__vr_offs
	cmp	w2, 0	// D.16992,
	ble	.L2272		//,
	add	x1, x0, 15	// D.16995, iftmp.1132,
	and	x1, x1, -8	// D.16996, D.16995,
	str	x1, [sp, 248]	// D.16996, argv.__stack
	b	.L2271		//
.L2272:
	ldr	x2, [sp, 264]	// D.16998, argv.__vr_top
	sxtw	x0, w1	// D.16999, D.16981
	add	x2, x2, x0	// D.17000, D.16998, D.16999
	add	x0, sp, 136	// ha.1133,,
	ldr	s0, [x2]	// D.17002, MEM[(float *)_215]
	str	s0, [x0]	// D.17002, MEM[(float *)ha.1133_216]
	ldr	x2, [sp, 264]	// D.17003, argv.__vr_top
	sxtw	x0, w1	// D.17004, D.16981
	add	x0, x0, 16	// D.17005, D.17004,
	add	x0, x2, x0	// D.17006, D.17003, D.17005
	ldr	s0, [x0]	// D.17007, MEM[(float *)_222]
	str	s0, [sp, 140]	// D.17007, MEM[(float *)&ha.1130 + 4B]
	add	x0, sp, 136	// iftmp.1132,,
.L2271:
	ldr	x0, [x0]	// D.6380, *iftmp.1131_96
// varargs-dll.c:1005:   float d = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp450, D.6380,
	fmov	s0, w0	// tmp452, tmp451
	str	s0, [sp, 56]	// tmp452, d
// varargs-dll.c:1006:   float e = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17008, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1136, argv.__stack
	cmp	w1, 0	// D.17008,
	blt	.L2274		//,
	add	x1, x0, 15	// D.17014, iftmp.1136,
	and	x1, x1, -8	// D.17015, D.17014,
	str	x1, [sp, 248]	// D.17015, argv.__stack
	b	.L2275		//
.L2274:
	add	w2, w1, 32	// D.17017, D.17008,
	str	w2, [sp, 276]	// D.17017, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17019, argv.__vr_offs
	cmp	w2, 0	// D.17019,
	ble	.L2276		//,
	add	x1, x0, 15	// D.17022, iftmp.1136,
	and	x1, x1, -8	// D.17023, D.17022,
	str	x1, [sp, 248]	// D.17023, argv.__stack
	b	.L2275		//
.L2276:
	ldr	x2, [sp, 264]	// D.17025, argv.__vr_top
	sxtw	x0, w1	// D.17026, D.17008
	add	x2, x2, x0	// D.17027, D.17025, D.17026
	add	x0, sp, 144	// ha.1137,,
	ldr	s0, [x2]	// D.17029, MEM[(float *)_243]
	str	s0, [x0]	// D.17029, MEM[(float *)ha.1137_244]
	ldr	x2, [sp, 264]	// D.17030, argv.__vr_top
	sxtw	x0, w1	// D.17031, D.17008
	add	x0, x0, 16	// D.17032, D.17031,
	add	x0, x2, x0	// D.17033, D.17030, D.17032
	ldr	s0, [x0]	// D.17034, MEM[(float *)_250]
	str	s0, [sp, 148]	// D.17034, MEM[(float *)&ha.1134 + 4B]
	add	x0, sp, 144	// iftmp.1136,,
.L2275:
	ldr	x0, [x0]	// D.6381, *iftmp.1135_98
// varargs-dll.c:1006:   float e = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp453, D.6381,,
	fmov	s0, w0	// tmp455, tmp454
	str	s0, [sp, 60]	// tmp455, e
// varargs-dll.c:1007:   float f = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17035, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1140, argv.__stack
	cmp	w1, 0	// D.17035,
	blt	.L2278		//,
	add	x1, x0, 15	// D.17041, iftmp.1140,
	and	x1, x1, -8	// D.17042, D.17041,
	str	x1, [sp, 248]	// D.17042, argv.__stack
	b	.L2279		//
.L2278:
	add	w2, w1, 32	// D.17044, D.17035,
	str	w2, [sp, 276]	// D.17044, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17046, argv.__vr_offs
	cmp	w2, 0	// D.17046,
	ble	.L2280		//,
	add	x1, x0, 15	// D.17049, iftmp.1140,
	and	x1, x1, -8	// D.17050, D.17049,
	str	x1, [sp, 248]	// D.17050, argv.__stack
	b	.L2279		//
.L2280:
	ldr	x2, [sp, 264]	// D.17052, argv.__vr_top
	sxtw	x0, w1	// D.17053, D.17035
	add	x2, x2, x0	// D.17054, D.17052, D.17053
	add	x0, sp, 152	// ha.1141,,
	ldr	s0, [x2]	// D.17056, MEM[(float *)_271]
	str	s0, [x0]	// D.17056, MEM[(float *)ha.1141_272]
	ldr	x2, [sp, 264]	// D.17057, argv.__vr_top
	sxtw	x0, w1	// D.17058, D.17035
	add	x0, x0, 16	// D.17059, D.17058,
	add	x0, x2, x0	// D.17060, D.17057, D.17059
	ldr	s0, [x0]	// D.17061, MEM[(float *)_278]
	str	s0, [sp, 156]	// D.17061, MEM[(float *)&ha.1138 + 4B]
	add	x0, sp, 152	// iftmp.1140,,
.L2279:
	ldr	x0, [x0]	// D.6382, *iftmp.1139_100
// varargs-dll.c:1007:   float f = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp457, D.6382,
	fmov	s0, w0	// tmp459, tmp458
	str	s0, [sp, 64]	// tmp459, f
// varargs-dll.c:1008:   float g = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17062, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1144, argv.__stack
	cmp	w1, 0	// D.17062,
	blt	.L2282		//,
	add	x1, x0, 15	// D.17068, iftmp.1144,
	and	x1, x1, -8	// D.17069, D.17068,
	str	x1, [sp, 248]	// D.17069, argv.__stack
	b	.L2283		//
.L2282:
	add	w2, w1, 32	// D.17071, D.17062,
	str	w2, [sp, 276]	// D.17071, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17073, argv.__vr_offs
	cmp	w2, 0	// D.17073,
	ble	.L2284		//,
	add	x1, x0, 15	// D.17076, iftmp.1144,
	and	x1, x1, -8	// D.17077, D.17076,
	str	x1, [sp, 248]	// D.17077, argv.__stack
	b	.L2283		//
.L2284:
	ldr	x2, [sp, 264]	// D.17079, argv.__vr_top
	sxtw	x0, w1	// D.17080, D.17062
	add	x2, x2, x0	// D.17081, D.17079, D.17080
	add	x0, sp, 160	// ha.1145,,
	ldr	s0, [x2]	// D.17083, MEM[(float *)_299]
	str	s0, [x0]	// D.17083, MEM[(float *)ha.1145_300]
	ldr	x2, [sp, 264]	// D.17084, argv.__vr_top
	sxtw	x0, w1	// D.17085, D.17062
	add	x0, x0, 16	// D.17086, D.17085,
	add	x0, x2, x0	// D.17087, D.17084, D.17086
	ldr	s0, [x0]	// D.17088, MEM[(float *)_306]
	str	s0, [sp, 164]	// D.17088, MEM[(float *)&ha.1142 + 4B]
	add	x0, sp, 160	// iftmp.1144,,
.L2283:
	ldr	x0, [x0]	// D.6383, *iftmp.1143_102
// varargs-dll.c:1008:   float g = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp460, D.6383,,
	fmov	s0, w0	// tmp462, tmp461
	str	s0, [sp, 68]	// tmp462, g
// varargs-dll.c:1009:   float h = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17089, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1148, argv.__stack
	cmp	w1, 0	// D.17089,
	blt	.L2286		//,
	add	x1, x0, 15	// D.17095, iftmp.1148,
	and	x1, x1, -8	// D.17096, D.17095,
	str	x1, [sp, 248]	// D.17096, argv.__stack
	b	.L2287		//
.L2286:
	add	w2, w1, 32	// D.17098, D.17089,
	str	w2, [sp, 276]	// D.17098, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17100, argv.__vr_offs
	cmp	w2, 0	// D.17100,
	ble	.L2288		//,
	add	x1, x0, 15	// D.17103, iftmp.1148,
	and	x1, x1, -8	// D.17104, D.17103,
	str	x1, [sp, 248]	// D.17104, argv.__stack
	b	.L2287		//
.L2288:
	ldr	x2, [sp, 264]	// D.17106, argv.__vr_top
	sxtw	x0, w1	// D.17107, D.17089
	add	x2, x2, x0	// D.17108, D.17106, D.17107
	add	x0, sp, 168	// ha.1149,,
	ldr	s0, [x2]	// D.17110, MEM[(float *)_327]
	str	s0, [x0]	// D.17110, MEM[(float *)ha.1149_328]
	ldr	x2, [sp, 264]	// D.17111, argv.__vr_top
	sxtw	x0, w1	// D.17112, D.17089
	add	x0, x0, 16	// D.17113, D.17112,
	add	x0, x2, x0	// D.17114, D.17111, D.17113
	ldr	s0, [x0]	// D.17115, MEM[(float *)_334]
	str	s0, [sp, 172]	// D.17115, MEM[(float *)&ha.1146 + 4B]
	add	x0, sp, 168	// iftmp.1148,,
.L2287:
	ldr	x0, [x0]	// D.6384, *iftmp.1147_104
// varargs-dll.c:1009:   float h = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp464, D.6384,
	fmov	s0, w0	// tmp466, tmp465
	str	s0, [sp, 72]	// tmp466, h
// varargs-dll.c:1010:   float i = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17116, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1152, argv.__stack
	cmp	w1, 0	// D.17116,
	blt	.L2290		//,
	add	x1, x0, 15	// D.17122, iftmp.1152,
	and	x1, x1, -8	// D.17123, D.17122,
	str	x1, [sp, 248]	// D.17123, argv.__stack
	b	.L2291		//
.L2290:
	add	w2, w1, 32	// D.17125, D.17116,
	str	w2, [sp, 276]	// D.17125, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17127, argv.__vr_offs
	cmp	w2, 0	// D.17127,
	ble	.L2292		//,
	add	x1, x0, 15	// D.17130, iftmp.1152,
	and	x1, x1, -8	// D.17131, D.17130,
	str	x1, [sp, 248]	// D.17131, argv.__stack
	b	.L2291		//
.L2292:
	ldr	x2, [sp, 264]	// D.17133, argv.__vr_top
	sxtw	x0, w1	// D.17134, D.17116
	add	x2, x2, x0	// D.17135, D.17133, D.17134
	add	x0, sp, 176	// ha.1153,,
	ldr	s0, [x2]	// D.17137, MEM[(float *)_355]
	str	s0, [x0]	// D.17137, MEM[(float *)ha.1153_356]
	ldr	x2, [sp, 264]	// D.17138, argv.__vr_top
	sxtw	x0, w1	// D.17139, D.17116
	add	x0, x0, 16	// D.17140, D.17139,
	add	x0, x2, x0	// D.17141, D.17138, D.17140
	ldr	s0, [x0]	// D.17142, MEM[(float *)_362]
	str	s0, [sp, 180]	// D.17142, MEM[(float *)&ha.1150 + 4B]
	add	x0, sp, 176	// iftmp.1152,,
.L2291:
	ldr	x0, [x0]	// D.6385, *iftmp.1151_106
// varargs-dll.c:1010:   float i = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp467, D.6385,,
	fmov	s0, w0	// tmp469, tmp468
	str	s0, [sp, 76]	// tmp469, i
// varargs-dll.c:1011:   float j = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17143, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1156, argv.__stack
	cmp	w1, 0	// D.17143,
	blt	.L2294		//,
	add	x1, x0, 15	// D.17149, iftmp.1156,
	and	x1, x1, -8	// D.17150, D.17149,
	str	x1, [sp, 248]	// D.17150, argv.__stack
	b	.L2295		//
.L2294:
	add	w2, w1, 32	// D.17152, D.17143,
	str	w2, [sp, 276]	// D.17152, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17154, argv.__vr_offs
	cmp	w2, 0	// D.17154,
	ble	.L2296		//,
	add	x1, x0, 15	// D.17157, iftmp.1156,
	and	x1, x1, -8	// D.17158, D.17157,
	str	x1, [sp, 248]	// D.17158, argv.__stack
	b	.L2295		//
.L2296:
	ldr	x2, [sp, 264]	// D.17160, argv.__vr_top
	sxtw	x0, w1	// D.17161, D.17143
	add	x2, x2, x0	// D.17162, D.17160, D.17161
	add	x0, sp, 184	// ha.1157,,
	ldr	s0, [x2]	// D.17164, MEM[(float *)_383]
	str	s0, [x0]	// D.17164, MEM[(float *)ha.1157_384]
	ldr	x2, [sp, 264]	// D.17165, argv.__vr_top
	sxtw	x0, w1	// D.17166, D.17143
	add	x0, x0, 16	// D.17167, D.17166,
	add	x0, x2, x0	// D.17168, D.17165, D.17167
	ldr	s0, [x0]	// D.17169, MEM[(float *)_390]
	str	s0, [sp, 188]	// D.17169, MEM[(float *)&ha.1154 + 4B]
	add	x0, sp, 184	// iftmp.1156,,
.L2295:
	ldr	x0, [x0]	// D.6386, *iftmp.1155_108
// varargs-dll.c:1011:   float j = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp471, D.6386,
	fmov	s0, w0	// tmp473, tmp472
	str	s0, [sp, 80]	// tmp473, j
// varargs-dll.c:1012:   float k = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17170, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1160, argv.__stack
	cmp	w1, 0	// D.17170,
	blt	.L2298		//,
	add	x1, x0, 15	// D.17176, iftmp.1160,
	and	x1, x1, -8	// D.17177, D.17176,
	str	x1, [sp, 248]	// D.17177, argv.__stack
	b	.L2299		//
.L2298:
	add	w2, w1, 32	// D.17179, D.17170,
	str	w2, [sp, 276]	// D.17179, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17181, argv.__vr_offs
	cmp	w2, 0	// D.17181,
	ble	.L2300		//,
	add	x1, x0, 15	// D.17184, iftmp.1160,
	and	x1, x1, -8	// D.17185, D.17184,
	str	x1, [sp, 248]	// D.17185, argv.__stack
	b	.L2299		//
.L2300:
	ldr	x2, [sp, 264]	// D.17187, argv.__vr_top
	sxtw	x0, w1	// D.17188, D.17170
	add	x2, x2, x0	// D.17189, D.17187, D.17188
	add	x0, sp, 192	// ha.1161,,
	ldr	s0, [x2]	// D.17191, MEM[(float *)_411]
	str	s0, [x0]	// D.17191, MEM[(float *)ha.1161_412]
	ldr	x2, [sp, 264]	// D.17192, argv.__vr_top
	sxtw	x0, w1	// D.17193, D.17170
	add	x0, x0, 16	// D.17194, D.17193,
	add	x0, x2, x0	// D.17195, D.17192, D.17194
	ldr	s0, [x0]	// D.17196, MEM[(float *)_418]
	str	s0, [sp, 196]	// D.17196, MEM[(float *)&ha.1158 + 4B]
	add	x0, sp, 192	// iftmp.1160,,
.L2299:
	ldr	x0, [x0]	// D.6387, *iftmp.1159_110
// varargs-dll.c:1012:   float k = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp474, D.6387,,
	fmov	s0, w0	// tmp476, tmp475
	str	s0, [sp, 84]	// tmp476, k
// varargs-dll.c:1013:   float l = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17197, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1164, argv.__stack
	cmp	w1, 0	// D.17197,
	blt	.L2302		//,
	add	x1, x0, 15	// D.17203, iftmp.1164,
	and	x1, x1, -8	// D.17204, D.17203,
	str	x1, [sp, 248]	// D.17204, argv.__stack
	b	.L2303		//
.L2302:
	add	w2, w1, 32	// D.17206, D.17197,
	str	w2, [sp, 276]	// D.17206, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17208, argv.__vr_offs
	cmp	w2, 0	// D.17208,
	ble	.L2304		//,
	add	x1, x0, 15	// D.17211, iftmp.1164,
	and	x1, x1, -8	// D.17212, D.17211,
	str	x1, [sp, 248]	// D.17212, argv.__stack
	b	.L2303		//
.L2304:
	ldr	x2, [sp, 264]	// D.17214, argv.__vr_top
	sxtw	x0, w1	// D.17215, D.17197
	add	x2, x2, x0	// D.17216, D.17214, D.17215
	add	x0, sp, 200	// ha.1165,,
	ldr	s0, [x2]	// D.17218, MEM[(float *)_439]
	str	s0, [x0]	// D.17218, MEM[(float *)ha.1165_440]
	ldr	x2, [sp, 264]	// D.17219, argv.__vr_top
	sxtw	x0, w1	// D.17220, D.17197
	add	x0, x0, 16	// D.17221, D.17220,
	add	x0, x2, x0	// D.17222, D.17219, D.17221
	ldr	s0, [x0]	// D.17223, MEM[(float *)_446]
	str	s0, [sp, 204]	// D.17223, MEM[(float *)&ha.1162 + 4B]
	add	x0, sp, 200	// iftmp.1164,,
.L2303:
	ldr	x0, [x0]	// D.6388, *iftmp.1163_112
// varargs-dll.c:1013:   float l = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp478, D.6388,
	fmov	s0, w0	// tmp480, tmp479
	str	s0, [sp, 88]	// tmp480, l
// varargs-dll.c:1014:   float m = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17224, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1168, argv.__stack
	cmp	w1, 0	// D.17224,
	blt	.L2306		//,
	add	x1, x0, 15	// D.17230, iftmp.1168,
	and	x1, x1, -8	// D.17231, D.17230,
	str	x1, [sp, 248]	// D.17231, argv.__stack
	b	.L2307		//
.L2306:
	add	w2, w1, 32	// D.17233, D.17224,
	str	w2, [sp, 276]	// D.17233, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17235, argv.__vr_offs
	cmp	w2, 0	// D.17235,
	ble	.L2308		//,
	add	x1, x0, 15	// D.17238, iftmp.1168,
	and	x1, x1, -8	// D.17239, D.17238,
	str	x1, [sp, 248]	// D.17239, argv.__stack
	b	.L2307		//
.L2308:
	ldr	x2, [sp, 264]	// D.17241, argv.__vr_top
	sxtw	x0, w1	// D.17242, D.17224
	add	x2, x2, x0	// D.17243, D.17241, D.17242
	add	x0, sp, 208	// ha.1169,,
	ldr	s0, [x2]	// D.17245, MEM[(float *)_467]
	str	s0, [x0]	// D.17245, MEM[(float *)ha.1169_468]
	ldr	x2, [sp, 264]	// D.17246, argv.__vr_top
	sxtw	x0, w1	// D.17247, D.17224
	add	x0, x0, 16	// D.17248, D.17247,
	add	x0, x2, x0	// D.17249, D.17246, D.17248
	ldr	s0, [x0]	// D.17250, MEM[(float *)_474]
	str	s0, [sp, 212]	// D.17250, MEM[(float *)&ha.1166 + 4B]
	add	x0, sp, 208	// iftmp.1168,,
.L2307:
	ldr	x0, [x0]	// D.6389, *iftmp.1167_114
// varargs-dll.c:1014:   float m = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp481, D.6389,,
	fmov	s0, w0	// tmp483, tmp482
	str	s0, [sp, 92]	// tmp483, m
// varargs-dll.c:1015:   float n = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17251, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1172, argv.__stack
	cmp	w1, 0	// D.17251,
	blt	.L2310		//,
	add	x1, x0, 15	// D.17257, iftmp.1172,
	and	x1, x1, -8	// D.17258, D.17257,
	str	x1, [sp, 248]	// D.17258, argv.__stack
	b	.L2311		//
.L2310:
	add	w2, w1, 32	// D.17260, D.17251,
	str	w2, [sp, 276]	// D.17260, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17262, argv.__vr_offs
	cmp	w2, 0	// D.17262,
	ble	.L2312		//,
	add	x1, x0, 15	// D.17265, iftmp.1172,
	and	x1, x1, -8	// D.17266, D.17265,
	str	x1, [sp, 248]	// D.17266, argv.__stack
	b	.L2311		//
.L2312:
	ldr	x2, [sp, 264]	// D.17268, argv.__vr_top
	sxtw	x0, w1	// D.17269, D.17251
	add	x2, x2, x0	// D.17270, D.17268, D.17269
	add	x0, sp, 216	// ha.1173,,
	ldr	s0, [x2]	// D.17272, MEM[(float *)_495]
	str	s0, [x0]	// D.17272, MEM[(float *)ha.1173_496]
	ldr	x2, [sp, 264]	// D.17273, argv.__vr_top
	sxtw	x0, w1	// D.17274, D.17251
	add	x0, x0, 16	// D.17275, D.17274,
	add	x0, x2, x0	// D.17276, D.17273, D.17275
	ldr	s0, [x0]	// D.17277, MEM[(float *)_502]
	str	s0, [sp, 220]	// D.17277, MEM[(float *)&ha.1170 + 4B]
	add	x0, sp, 216	// iftmp.1172,,
.L2311:
	ldr	x0, [x0]	// D.6390, *iftmp.1171_116
// varargs-dll.c:1015:   float n = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp485, D.6390,
	fmov	s0, w0	// tmp487, tmp486
	str	s0, [sp, 96]	// tmp487, n
// varargs-dll.c:1016:   float o = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17278, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1176, argv.__stack
	cmp	w1, 0	// D.17278,
	blt	.L2314		//,
	add	x1, x0, 15	// D.17284, iftmp.1176,
	and	x1, x1, -8	// D.17285, D.17284,
	str	x1, [sp, 248]	// D.17285, argv.__stack
	b	.L2315		//
.L2314:
	add	w2, w1, 32	// D.17287, D.17278,
	str	w2, [sp, 276]	// D.17287, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17289, argv.__vr_offs
	cmp	w2, 0	// D.17289,
	ble	.L2316		//,
	add	x1, x0, 15	// D.17292, iftmp.1176,
	and	x1, x1, -8	// D.17293, D.17292,
	str	x1, [sp, 248]	// D.17293, argv.__stack
	b	.L2315		//
.L2316:
	ldr	x2, [sp, 264]	// D.17295, argv.__vr_top
	sxtw	x0, w1	// D.17296, D.17278
	add	x2, x2, x0	// D.17297, D.17295, D.17296
	add	x0, sp, 224	// ha.1177,,
	ldr	s0, [x2]	// D.17299, MEM[(float *)_523]
	str	s0, [x0]	// D.17299, MEM[(float *)ha.1177_524]
	ldr	x2, [sp, 264]	// D.17300, argv.__vr_top
	sxtw	x0, w1	// D.17301, D.17278
	add	x0, x0, 16	// D.17302, D.17301,
	add	x0, x2, x0	// D.17303, D.17300, D.17302
	ldr	s0, [x0]	// D.17304, MEM[(float *)_530]
	str	s0, [sp, 228]	// D.17304, MEM[(float *)&ha.1174 + 4B]
	add	x0, sp, 224	// iftmp.1176,,
.L2315:
	ldr	x0, [x0]	// D.6391, *iftmp.1175_118
// varargs-dll.c:1016:   float o = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp488, D.6391,,
	fmov	s0, w0	// tmp490, tmp489
	str	s0, [sp, 100]	// tmp490, o
// varargs-dll.c:1017:   float p = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [sp, 276]	// D.17305, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1180, argv.__stack
	cmp	w1, 0	// D.17305,
	blt	.L2318		//,
	add	x1, x0, 15	// D.17311, iftmp.1180,
	and	x1, x1, -8	// D.17312, D.17311,
	str	x1, [sp, 248]	// D.17312, argv.__stack
	b	.L2319		//
.L2318:
	add	w2, w1, 32	// D.17314, D.17305,
	str	w2, [sp, 276]	// D.17314, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17316, argv.__vr_offs
	cmp	w2, 0	// D.17316,
	ble	.L2320		//,
	add	x1, x0, 15	// D.17319, iftmp.1180,
	and	x1, x1, -8	// D.17320, D.17319,
	str	x1, [sp, 248]	// D.17320, argv.__stack
	b	.L2319		//
.L2320:
	ldr	x2, [sp, 264]	// D.17322, argv.__vr_top
	sxtw	x0, w1	// D.17323, D.17305
	add	x2, x2, x0	// D.17324, D.17322, D.17323
	add	x0, sp, 232	// ha.1181,,
	ldr	s0, [x2]	// D.17326, MEM[(float *)_551]
	str	s0, [x0]	// D.17326, MEM[(float *)ha.1181_552]
	ldr	x2, [sp, 264]	// D.17327, argv.__vr_top
	sxtw	x0, w1	// D.17328, D.17305
	add	x0, x0, 16	// D.17329, D.17328,
	add	x0, x2, x0	// D.17330, D.17327, D.17329
	ldr	s0, [x0]	// D.17331, MEM[(float *)_558]
	str	s0, [sp, 236]	// D.17331, MEM[(float *)&ha.1178 + 4B]
	add	x0, sp, 232	// iftmp.1180,,
.L2319:
	ldr	x0, [x0]	// D.6392, *iftmp.1179_120
// varargs-dll.c:1017:   float p = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp492, D.6392,
	fmov	s0, w0	// tmp494, tmp493
	str	s0, [sp, 104]	// tmp494, p
// varargs-dll.c:1018:   float q = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [sp, 276]	// D.17332, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1184, argv.__stack
	cmp	w1, 0	// D.17332,
	blt	.L2322		//,
	add	x1, x0, 15	// D.17338, iftmp.1184,
	and	x1, x1, -8	// D.17339, D.17338,
	str	x1, [sp, 248]	// D.17339, argv.__stack
	b	.L2323		//
.L2322:
	add	w2, w1, 32	// D.17341, D.17332,
	str	w2, [sp, 276]	// D.17341, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.17343, argv.__vr_offs
	cmp	w2, 0	// D.17343,
	ble	.L2324		//,
	add	x1, x0, 15	// D.17346, iftmp.1184,
	and	x1, x1, -8	// D.17347, D.17346,
	str	x1, [sp, 248]	// D.17347, argv.__stack
	b	.L2323		//
.L2324:
	ldr	x2, [sp, 264]	// D.17349, argv.__vr_top
	sxtw	x0, w1	// D.17350, D.17332
	add	x2, x2, x0	// D.17351, D.17349, D.17350
	add	x0, sp, 240	// ha.1185,,
	ldr	s0, [x2]	// D.17353, MEM[(float *)_579]
	str	s0, [x0]	// D.17353, MEM[(float *)ha.1185_580]
	ldr	x2, [sp, 264]	// D.17354, argv.__vr_top
	sxtw	x0, w1	// D.17355, D.17332
	add	x0, x0, 16	// D.17356, D.17355,
	add	x0, x2, x0	// D.17357, D.17354, D.17356
	ldr	s0, [x0]	// D.17358, MEM[(float *)_586]
	str	s0, [sp, 244]	// D.17358, MEM[(float *)&ha.1182 + 4B]
	add	x0, sp, 240	// iftmp.1184,,
.L2323:
	ldr	x0, [x0]	// D.6393, *iftmp.1183_122
// varargs-dll.c:1018:   float q = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp495, D.6393,,
	fmov	s0, w0	// tmp497, tmp496
	str	s0, [sp, 108]	// tmp497, q
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s1, [sp, 44]	// tmp498, a
	ldr	s0, [sp, 48]	// tmp499, b
	fadd	s1, s1, s0	// _1, tmp498, tmp499
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 52]	// tmp500, c
	fadd	s1, s1, s0	// _2, _1, tmp500
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 56]	// tmp501, d
	fadd	s1, s1, s0	// _3, _2, tmp501
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 60]	// tmp502, e
	fadd	s1, s1, s0	// _4, _3, tmp502
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 64]	// tmp503, f
	fadd	s1, s1, s0	// _5, _4, tmp503
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 68]	// tmp504, g
	fadd	s1, s1, s0	// _6, _5, tmp504
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 72]	// tmp505, h
	fadd	s1, s1, s0	// _7, _6, tmp505
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 76]	// tmp506, i
	fadd	s1, s1, s0	// _8, _7, tmp506
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 80]	// tmp507, j
	fadd	s1, s1, s0	// _9, _8, tmp507
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 84]	// tmp508, k
	fadd	s1, s1, s0	// _10, _9, tmp508
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 88]	// tmp509, l
	fadd	s1, s1, s0	// _11, _10, tmp509
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 92]	// tmp510, m
	fadd	s1, s1, s0	// _12, _11, tmp510
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 96]	// tmp511, n
	fadd	s1, s1, s0	// _13, _12, tmp511
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 100]	// tmp512, o
	fadd	s1, s1, s0	// _14, _13, tmp512
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 104]	// tmp513, p
	fadd	s1, s1, s0	// _15, _14, tmp513
// varargs-dll.c:1020:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 108]	// tmp514, q
	fadd	s0, s1, s0	// _16, _15, tmp514
	fcvtzs	s0, s0	// _54, _16
	fmov	w1, s0	// <retval>, _54
// varargs-dll.c:1021: }
	adrp	x0, :got:__stack_chk_guard	// tmp517,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp516, tmp517,
	ldr	x3, [sp, 280]	// tmp519, D.17359
	ldr	x2, [x0]	// tmp520,
	subs	x3, x3, x2	// tmp519, tmp520
	mov	x2, 0	// tmp520
	beq	.L2327		//,
	bl	__stack_chk_fail		//
.L2327:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 480	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE66:
	.size	use_va_args_many_hfa_2_floats, .-use_va_args_many_hfa_2_floats
	.align	2
	.global	use_va_list_many_hfa_2_floats
	.type	use_va_list_many_hfa_2_floats, %function
use_va_list_many_hfa_2_floats:
.LFB67:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -256
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp433,
// varargs-dll.c:1025: {
	adrp	x0, :got:__stack_chk_guard	// tmp435,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp434, tmp435,
	ldr	x1, [x0]	// tmp515,
	str	x1, [sp, 264]	// tmp515, D.17822
	mov	x1, 0	// tmp515
// varargs-dll.c:1026:   float a = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17363, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1188, argv.__stack
	cmp	w1, 0	// D.17363,
	blt	.L2329		//,
	add	x1, x0, 15	// D.17369, iftmp.1188,
	and	x1, x1, -8	// D.17370, D.17369,
	str	x1, [x19]	// D.17370, argv.__stack
	b	.L2330		//
.L2329:
	add	w2, w1, 32	// D.17372, D.17363,
	str	w2, [x19, 28]	// D.17372, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17374, argv.__vr_offs
	cmp	w2, 0	// D.17374,
	ble	.L2331		//,
	add	x1, x0, 15	// D.17377, iftmp.1188,
	and	x1, x1, -8	// D.17378, D.17377,
	str	x1, [x19]	// D.17378, argv.__stack
	b	.L2330		//
.L2331:
	ldr	x2, [x19, 16]	// D.17380, argv.__vr_top
	sxtw	x0, w1	// D.17381, D.17363
	add	x2, x2, x0	// D.17382, D.17380, D.17381
	add	x0, sp, 128	// ha.1189,,
	ldr	s0, [x2]	// D.17384, MEM[(float *)_128]
	str	s0, [x0]	// D.17384, MEM[(float *)ha.1189_129]
	ldr	x2, [x19, 16]	// D.17385, argv.__vr_top
	sxtw	x0, w1	// D.17386, D.17363
	add	x0, x0, 16	// D.17387, D.17386,
	add	x0, x2, x0	// D.17388, D.17385, D.17387
	ldr	s0, [x0]	// D.17389, MEM[(float *)_135]
	str	s0, [sp, 132]	// D.17389, MEM[(float *)&ha.1186 + 4B]
	add	x0, sp, 128	// iftmp.1188,,
.L2330:
	ldr	x0, [x0]	// D.6397, *iftmp.1187_87
// varargs-dll.c:1026:   float a = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp436, D.6397,,
	fmov	s0, w0	// tmp438, tmp437
	str	s0, [sp, 60]	// tmp438, a
// varargs-dll.c:1027:   float b = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17390, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1192, argv.__stack
	cmp	w1, 0	// D.17390,
	blt	.L2333		//,
	add	x1, x0, 15	// D.17396, iftmp.1192,
	and	x1, x1, -8	// D.17397, D.17396,
	str	x1, [x19]	// D.17397, argv.__stack
	b	.L2334		//
.L2333:
	add	w2, w1, 32	// D.17399, D.17390,
	str	w2, [x19, 28]	// D.17399, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17401, argv.__vr_offs
	cmp	w2, 0	// D.17401,
	ble	.L2335		//,
	add	x1, x0, 15	// D.17404, iftmp.1192,
	and	x1, x1, -8	// D.17405, D.17404,
	str	x1, [x19]	// D.17405, argv.__stack
	b	.L2334		//
.L2335:
	ldr	x2, [x19, 16]	// D.17407, argv.__vr_top
	sxtw	x0, w1	// D.17408, D.17390
	add	x2, x2, x0	// D.17409, D.17407, D.17408
	add	x0, sp, 136	// ha.1193,,
	ldr	s0, [x2]	// D.17411, MEM[(float *)_156]
	str	s0, [x0]	// D.17411, MEM[(float *)ha.1193_157]
	ldr	x2, [x19, 16]	// D.17412, argv.__vr_top
	sxtw	x0, w1	// D.17413, D.17390
	add	x0, x0, 16	// D.17414, D.17413,
	add	x0, x2, x0	// D.17415, D.17412, D.17414
	ldr	s0, [x0]	// D.17416, MEM[(float *)_163]
	str	s0, [sp, 140]	// D.17416, MEM[(float *)&ha.1190 + 4B]
	add	x0, sp, 136	// iftmp.1192,,
.L2334:
	ldr	x0, [x0]	// D.6398, *iftmp.1191_89
// varargs-dll.c:1027:   float b = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp440, D.6398,
	fmov	s0, w0	// tmp442, tmp441
	str	s0, [sp, 64]	// tmp442, b
// varargs-dll.c:1028:   float c = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17417, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1196, argv.__stack
	cmp	w1, 0	// D.17417,
	blt	.L2337		//,
	add	x1, x0, 15	// D.17423, iftmp.1196,
	and	x1, x1, -8	// D.17424, D.17423,
	str	x1, [x19]	// D.17424, argv.__stack
	b	.L2338		//
.L2337:
	add	w2, w1, 32	// D.17426, D.17417,
	str	w2, [x19, 28]	// D.17426, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17428, argv.__vr_offs
	cmp	w2, 0	// D.17428,
	ble	.L2339		//,
	add	x1, x0, 15	// D.17431, iftmp.1196,
	and	x1, x1, -8	// D.17432, D.17431,
	str	x1, [x19]	// D.17432, argv.__stack
	b	.L2338		//
.L2339:
	ldr	x2, [x19, 16]	// D.17434, argv.__vr_top
	sxtw	x0, w1	// D.17435, D.17417
	add	x2, x2, x0	// D.17436, D.17434, D.17435
	add	x0, sp, 144	// ha.1197,,
	ldr	s0, [x2]	// D.17438, MEM[(float *)_184]
	str	s0, [x0]	// D.17438, MEM[(float *)ha.1197_185]
	ldr	x2, [x19, 16]	// D.17439, argv.__vr_top
	sxtw	x0, w1	// D.17440, D.17417
	add	x0, x0, 16	// D.17441, D.17440,
	add	x0, x2, x0	// D.17442, D.17439, D.17441
	ldr	s0, [x0]	// D.17443, MEM[(float *)_191]
	str	s0, [sp, 148]	// D.17443, MEM[(float *)&ha.1194 + 4B]
	add	x0, sp, 144	// iftmp.1196,,
.L2338:
	ldr	x0, [x0]	// D.6399, *iftmp.1195_91
// varargs-dll.c:1028:   float c = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp443, D.6399,,
	fmov	s0, w0	// tmp445, tmp444
	str	s0, [sp, 68]	// tmp445, c
// varargs-dll.c:1029:   float d = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17444, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1200, argv.__stack
	cmp	w1, 0	// D.17444,
	blt	.L2341		//,
	add	x1, x0, 15	// D.17450, iftmp.1200,
	and	x1, x1, -8	// D.17451, D.17450,
	str	x1, [x19]	// D.17451, argv.__stack
	b	.L2342		//
.L2341:
	add	w2, w1, 32	// D.17453, D.17444,
	str	w2, [x19, 28]	// D.17453, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17455, argv.__vr_offs
	cmp	w2, 0	// D.17455,
	ble	.L2343		//,
	add	x1, x0, 15	// D.17458, iftmp.1200,
	and	x1, x1, -8	// D.17459, D.17458,
	str	x1, [x19]	// D.17459, argv.__stack
	b	.L2342		//
.L2343:
	ldr	x2, [x19, 16]	// D.17461, argv.__vr_top
	sxtw	x0, w1	// D.17462, D.17444
	add	x2, x2, x0	// D.17463, D.17461, D.17462
	add	x0, sp, 152	// ha.1201,,
	ldr	s0, [x2]	// D.17465, MEM[(float *)_212]
	str	s0, [x0]	// D.17465, MEM[(float *)ha.1201_213]
	ldr	x2, [x19, 16]	// D.17466, argv.__vr_top
	sxtw	x0, w1	// D.17467, D.17444
	add	x0, x0, 16	// D.17468, D.17467,
	add	x0, x2, x0	// D.17469, D.17466, D.17468
	ldr	s0, [x0]	// D.17470, MEM[(float *)_219]
	str	s0, [sp, 156]	// D.17470, MEM[(float *)&ha.1198 + 4B]
	add	x0, sp, 152	// iftmp.1200,,
.L2342:
	ldr	x0, [x0]	// D.6400, *iftmp.1199_93
// varargs-dll.c:1029:   float d = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp447, D.6400,
	fmov	s0, w0	// tmp449, tmp448
	str	s0, [sp, 72]	// tmp449, d
// varargs-dll.c:1030:   float e = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17471, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1204, argv.__stack
	cmp	w1, 0	// D.17471,
	blt	.L2345		//,
	add	x1, x0, 15	// D.17477, iftmp.1204,
	and	x1, x1, -8	// D.17478, D.17477,
	str	x1, [x19]	// D.17478, argv.__stack
	b	.L2346		//
.L2345:
	add	w2, w1, 32	// D.17480, D.17471,
	str	w2, [x19, 28]	// D.17480, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17482, argv.__vr_offs
	cmp	w2, 0	// D.17482,
	ble	.L2347		//,
	add	x1, x0, 15	// D.17485, iftmp.1204,
	and	x1, x1, -8	// D.17486, D.17485,
	str	x1, [x19]	// D.17486, argv.__stack
	b	.L2346		//
.L2347:
	ldr	x2, [x19, 16]	// D.17488, argv.__vr_top
	sxtw	x0, w1	// D.17489, D.17471
	add	x2, x2, x0	// D.17490, D.17488, D.17489
	add	x0, sp, 160	// ha.1205,,
	ldr	s0, [x2]	// D.17492, MEM[(float *)_240]
	str	s0, [x0]	// D.17492, MEM[(float *)ha.1205_241]
	ldr	x2, [x19, 16]	// D.17493, argv.__vr_top
	sxtw	x0, w1	// D.17494, D.17471
	add	x0, x0, 16	// D.17495, D.17494,
	add	x0, x2, x0	// D.17496, D.17493, D.17495
	ldr	s0, [x0]	// D.17497, MEM[(float *)_247]
	str	s0, [sp, 164]	// D.17497, MEM[(float *)&ha.1202 + 4B]
	add	x0, sp, 160	// iftmp.1204,,
.L2346:
	ldr	x0, [x0]	// D.6401, *iftmp.1203_95
// varargs-dll.c:1030:   float e = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp450, D.6401,,
	fmov	s0, w0	// tmp452, tmp451
	str	s0, [sp, 76]	// tmp452, e
// varargs-dll.c:1031:   float f = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17498, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1208, argv.__stack
	cmp	w1, 0	// D.17498,
	blt	.L2349		//,
	add	x1, x0, 15	// D.17504, iftmp.1208,
	and	x1, x1, -8	// D.17505, D.17504,
	str	x1, [x19]	// D.17505, argv.__stack
	b	.L2350		//
.L2349:
	add	w2, w1, 32	// D.17507, D.17498,
	str	w2, [x19, 28]	// D.17507, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17509, argv.__vr_offs
	cmp	w2, 0	// D.17509,
	ble	.L2351		//,
	add	x1, x0, 15	// D.17512, iftmp.1208,
	and	x1, x1, -8	// D.17513, D.17512,
	str	x1, [x19]	// D.17513, argv.__stack
	b	.L2350		//
.L2351:
	ldr	x2, [x19, 16]	// D.17515, argv.__vr_top
	sxtw	x0, w1	// D.17516, D.17498
	add	x2, x2, x0	// D.17517, D.17515, D.17516
	add	x0, sp, 168	// ha.1209,,
	ldr	s0, [x2]	// D.17519, MEM[(float *)_268]
	str	s0, [x0]	// D.17519, MEM[(float *)ha.1209_269]
	ldr	x2, [x19, 16]	// D.17520, argv.__vr_top
	sxtw	x0, w1	// D.17521, D.17498
	add	x0, x0, 16	// D.17522, D.17521,
	add	x0, x2, x0	// D.17523, D.17520, D.17522
	ldr	s0, [x0]	// D.17524, MEM[(float *)_275]
	str	s0, [sp, 172]	// D.17524, MEM[(float *)&ha.1206 + 4B]
	add	x0, sp, 168	// iftmp.1208,,
.L2350:
	ldr	x0, [x0]	// D.6402, *iftmp.1207_97
// varargs-dll.c:1031:   float f = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp454, D.6402,
	fmov	s0, w0	// tmp456, tmp455
	str	s0, [sp, 80]	// tmp456, f
// varargs-dll.c:1032:   float g = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17525, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1212, argv.__stack
	cmp	w1, 0	// D.17525,
	blt	.L2353		//,
	add	x1, x0, 15	// D.17531, iftmp.1212,
	and	x1, x1, -8	// D.17532, D.17531,
	str	x1, [x19]	// D.17532, argv.__stack
	b	.L2354		//
.L2353:
	add	w2, w1, 32	// D.17534, D.17525,
	str	w2, [x19, 28]	// D.17534, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17536, argv.__vr_offs
	cmp	w2, 0	// D.17536,
	ble	.L2355		//,
	add	x1, x0, 15	// D.17539, iftmp.1212,
	and	x1, x1, -8	// D.17540, D.17539,
	str	x1, [x19]	// D.17540, argv.__stack
	b	.L2354		//
.L2355:
	ldr	x2, [x19, 16]	// D.17542, argv.__vr_top
	sxtw	x0, w1	// D.17543, D.17525
	add	x2, x2, x0	// D.17544, D.17542, D.17543
	add	x0, sp, 176	// ha.1213,,
	ldr	s0, [x2]	// D.17546, MEM[(float *)_296]
	str	s0, [x0]	// D.17546, MEM[(float *)ha.1213_297]
	ldr	x2, [x19, 16]	// D.17547, argv.__vr_top
	sxtw	x0, w1	// D.17548, D.17525
	add	x0, x0, 16	// D.17549, D.17548,
	add	x0, x2, x0	// D.17550, D.17547, D.17549
	ldr	s0, [x0]	// D.17551, MEM[(float *)_303]
	str	s0, [sp, 180]	// D.17551, MEM[(float *)&ha.1210 + 4B]
	add	x0, sp, 176	// iftmp.1212,,
.L2354:
	ldr	x0, [x0]	// D.6403, *iftmp.1211_99
// varargs-dll.c:1032:   float g = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp457, D.6403,,
	fmov	s0, w0	// tmp459, tmp458
	str	s0, [sp, 84]	// tmp459, g
// varargs-dll.c:1033:   float h = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17552, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1216, argv.__stack
	cmp	w1, 0	// D.17552,
	blt	.L2357		//,
	add	x1, x0, 15	// D.17558, iftmp.1216,
	and	x1, x1, -8	// D.17559, D.17558,
	str	x1, [x19]	// D.17559, argv.__stack
	b	.L2358		//
.L2357:
	add	w2, w1, 32	// D.17561, D.17552,
	str	w2, [x19, 28]	// D.17561, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17563, argv.__vr_offs
	cmp	w2, 0	// D.17563,
	ble	.L2359		//,
	add	x1, x0, 15	// D.17566, iftmp.1216,
	and	x1, x1, -8	// D.17567, D.17566,
	str	x1, [x19]	// D.17567, argv.__stack
	b	.L2358		//
.L2359:
	ldr	x2, [x19, 16]	// D.17569, argv.__vr_top
	sxtw	x0, w1	// D.17570, D.17552
	add	x2, x2, x0	// D.17571, D.17569, D.17570
	add	x0, sp, 184	// ha.1217,,
	ldr	s0, [x2]	// D.17573, MEM[(float *)_324]
	str	s0, [x0]	// D.17573, MEM[(float *)ha.1217_325]
	ldr	x2, [x19, 16]	// D.17574, argv.__vr_top
	sxtw	x0, w1	// D.17575, D.17552
	add	x0, x0, 16	// D.17576, D.17575,
	add	x0, x2, x0	// D.17577, D.17574, D.17576
	ldr	s0, [x0]	// D.17578, MEM[(float *)_331]
	str	s0, [sp, 188]	// D.17578, MEM[(float *)&ha.1214 + 4B]
	add	x0, sp, 184	// iftmp.1216,,
.L2358:
	ldr	x0, [x0]	// D.6404, *iftmp.1215_101
// varargs-dll.c:1033:   float h = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp461, D.6404,
	fmov	s0, w0	// tmp463, tmp462
	str	s0, [sp, 88]	// tmp463, h
// varargs-dll.c:1034:   float i = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17579, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1220, argv.__stack
	cmp	w1, 0	// D.17579,
	blt	.L2361		//,
	add	x1, x0, 15	// D.17585, iftmp.1220,
	and	x1, x1, -8	// D.17586, D.17585,
	str	x1, [x19]	// D.17586, argv.__stack
	b	.L2362		//
.L2361:
	add	w2, w1, 32	// D.17588, D.17579,
	str	w2, [x19, 28]	// D.17588, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17590, argv.__vr_offs
	cmp	w2, 0	// D.17590,
	ble	.L2363		//,
	add	x1, x0, 15	// D.17593, iftmp.1220,
	and	x1, x1, -8	// D.17594, D.17593,
	str	x1, [x19]	// D.17594, argv.__stack
	b	.L2362		//
.L2363:
	ldr	x2, [x19, 16]	// D.17596, argv.__vr_top
	sxtw	x0, w1	// D.17597, D.17579
	add	x2, x2, x0	// D.17598, D.17596, D.17597
	add	x0, sp, 192	// ha.1221,,
	ldr	s0, [x2]	// D.17600, MEM[(float *)_352]
	str	s0, [x0]	// D.17600, MEM[(float *)ha.1221_353]
	ldr	x2, [x19, 16]	// D.17601, argv.__vr_top
	sxtw	x0, w1	// D.17602, D.17579
	add	x0, x0, 16	// D.17603, D.17602,
	add	x0, x2, x0	// D.17604, D.17601, D.17603
	ldr	s0, [x0]	// D.17605, MEM[(float *)_359]
	str	s0, [sp, 196]	// D.17605, MEM[(float *)&ha.1218 + 4B]
	add	x0, sp, 192	// iftmp.1220,,
.L2362:
	ldr	x0, [x0]	// D.6405, *iftmp.1219_103
// varargs-dll.c:1034:   float i = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp464, D.6405,,
	fmov	s0, w0	// tmp466, tmp465
	str	s0, [sp, 92]	// tmp466, i
// varargs-dll.c:1035:   float j = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17606, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1224, argv.__stack
	cmp	w1, 0	// D.17606,
	blt	.L2365		//,
	add	x1, x0, 15	// D.17612, iftmp.1224,
	and	x1, x1, -8	// D.17613, D.17612,
	str	x1, [x19]	// D.17613, argv.__stack
	b	.L2366		//
.L2365:
	add	w2, w1, 32	// D.17615, D.17606,
	str	w2, [x19, 28]	// D.17615, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17617, argv.__vr_offs
	cmp	w2, 0	// D.17617,
	ble	.L2367		//,
	add	x1, x0, 15	// D.17620, iftmp.1224,
	and	x1, x1, -8	// D.17621, D.17620,
	str	x1, [x19]	// D.17621, argv.__stack
	b	.L2366		//
.L2367:
	ldr	x2, [x19, 16]	// D.17623, argv.__vr_top
	sxtw	x0, w1	// D.17624, D.17606
	add	x2, x2, x0	// D.17625, D.17623, D.17624
	add	x0, sp, 200	// ha.1225,,
	ldr	s0, [x2]	// D.17627, MEM[(float *)_380]
	str	s0, [x0]	// D.17627, MEM[(float *)ha.1225_381]
	ldr	x2, [x19, 16]	// D.17628, argv.__vr_top
	sxtw	x0, w1	// D.17629, D.17606
	add	x0, x0, 16	// D.17630, D.17629,
	add	x0, x2, x0	// D.17631, D.17628, D.17630
	ldr	s0, [x0]	// D.17632, MEM[(float *)_387]
	str	s0, [sp, 204]	// D.17632, MEM[(float *)&ha.1222 + 4B]
	add	x0, sp, 200	// iftmp.1224,,
.L2366:
	ldr	x0, [x0]	// D.6406, *iftmp.1223_105
// varargs-dll.c:1035:   float j = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp468, D.6406,
	fmov	s0, w0	// tmp470, tmp469
	str	s0, [sp, 96]	// tmp470, j
// varargs-dll.c:1036:   float k = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17633, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1228, argv.__stack
	cmp	w1, 0	// D.17633,
	blt	.L2369		//,
	add	x1, x0, 15	// D.17639, iftmp.1228,
	and	x1, x1, -8	// D.17640, D.17639,
	str	x1, [x19]	// D.17640, argv.__stack
	b	.L2370		//
.L2369:
	add	w2, w1, 32	// D.17642, D.17633,
	str	w2, [x19, 28]	// D.17642, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17644, argv.__vr_offs
	cmp	w2, 0	// D.17644,
	ble	.L2371		//,
	add	x1, x0, 15	// D.17647, iftmp.1228,
	and	x1, x1, -8	// D.17648, D.17647,
	str	x1, [x19]	// D.17648, argv.__stack
	b	.L2370		//
.L2371:
	ldr	x2, [x19, 16]	// D.17650, argv.__vr_top
	sxtw	x0, w1	// D.17651, D.17633
	add	x2, x2, x0	// D.17652, D.17650, D.17651
	add	x0, sp, 208	// ha.1229,,
	ldr	s0, [x2]	// D.17654, MEM[(float *)_408]
	str	s0, [x0]	// D.17654, MEM[(float *)ha.1229_409]
	ldr	x2, [x19, 16]	// D.17655, argv.__vr_top
	sxtw	x0, w1	// D.17656, D.17633
	add	x0, x0, 16	// D.17657, D.17656,
	add	x0, x2, x0	// D.17658, D.17655, D.17657
	ldr	s0, [x0]	// D.17659, MEM[(float *)_415]
	str	s0, [sp, 212]	// D.17659, MEM[(float *)&ha.1226 + 4B]
	add	x0, sp, 208	// iftmp.1228,,
.L2370:
	ldr	x0, [x0]	// D.6407, *iftmp.1227_107
// varargs-dll.c:1036:   float k = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp471, D.6407,,
	fmov	s0, w0	// tmp473, tmp472
	str	s0, [sp, 100]	// tmp473, k
// varargs-dll.c:1037:   float l = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17660, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1232, argv.__stack
	cmp	w1, 0	// D.17660,
	blt	.L2373		//,
	add	x1, x0, 15	// D.17666, iftmp.1232,
	and	x1, x1, -8	// D.17667, D.17666,
	str	x1, [x19]	// D.17667, argv.__stack
	b	.L2374		//
.L2373:
	add	w2, w1, 32	// D.17669, D.17660,
	str	w2, [x19, 28]	// D.17669, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17671, argv.__vr_offs
	cmp	w2, 0	// D.17671,
	ble	.L2375		//,
	add	x1, x0, 15	// D.17674, iftmp.1232,
	and	x1, x1, -8	// D.17675, D.17674,
	str	x1, [x19]	// D.17675, argv.__stack
	b	.L2374		//
.L2375:
	ldr	x2, [x19, 16]	// D.17677, argv.__vr_top
	sxtw	x0, w1	// D.17678, D.17660
	add	x2, x2, x0	// D.17679, D.17677, D.17678
	add	x0, sp, 216	// ha.1233,,
	ldr	s0, [x2]	// D.17681, MEM[(float *)_436]
	str	s0, [x0]	// D.17681, MEM[(float *)ha.1233_437]
	ldr	x2, [x19, 16]	// D.17682, argv.__vr_top
	sxtw	x0, w1	// D.17683, D.17660
	add	x0, x0, 16	// D.17684, D.17683,
	add	x0, x2, x0	// D.17685, D.17682, D.17684
	ldr	s0, [x0]	// D.17686, MEM[(float *)_443]
	str	s0, [sp, 220]	// D.17686, MEM[(float *)&ha.1230 + 4B]
	add	x0, sp, 216	// iftmp.1232,,
.L2374:
	ldr	x0, [x0]	// D.6408, *iftmp.1231_109
// varargs-dll.c:1037:   float l = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp475, D.6408,
	fmov	s0, w0	// tmp477, tmp476
	str	s0, [sp, 104]	// tmp477, l
// varargs-dll.c:1038:   float m = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17687, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1236, argv.__stack
	cmp	w1, 0	// D.17687,
	blt	.L2377		//,
	add	x1, x0, 15	// D.17693, iftmp.1236,
	and	x1, x1, -8	// D.17694, D.17693,
	str	x1, [x19]	// D.17694, argv.__stack
	b	.L2378		//
.L2377:
	add	w2, w1, 32	// D.17696, D.17687,
	str	w2, [x19, 28]	// D.17696, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17698, argv.__vr_offs
	cmp	w2, 0	// D.17698,
	ble	.L2379		//,
	add	x1, x0, 15	// D.17701, iftmp.1236,
	and	x1, x1, -8	// D.17702, D.17701,
	str	x1, [x19]	// D.17702, argv.__stack
	b	.L2378		//
.L2379:
	ldr	x2, [x19, 16]	// D.17704, argv.__vr_top
	sxtw	x0, w1	// D.17705, D.17687
	add	x2, x2, x0	// D.17706, D.17704, D.17705
	add	x0, sp, 224	// ha.1237,,
	ldr	s0, [x2]	// D.17708, MEM[(float *)_464]
	str	s0, [x0]	// D.17708, MEM[(float *)ha.1237_465]
	ldr	x2, [x19, 16]	// D.17709, argv.__vr_top
	sxtw	x0, w1	// D.17710, D.17687
	add	x0, x0, 16	// D.17711, D.17710,
	add	x0, x2, x0	// D.17712, D.17709, D.17711
	ldr	s0, [x0]	// D.17713, MEM[(float *)_471]
	str	s0, [sp, 228]	// D.17713, MEM[(float *)&ha.1234 + 4B]
	add	x0, sp, 224	// iftmp.1236,,
.L2378:
	ldr	x0, [x0]	// D.6409, *iftmp.1235_111
// varargs-dll.c:1038:   float m = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp478, D.6409,,
	fmov	s0, w0	// tmp480, tmp479
	str	s0, [sp, 108]	// tmp480, m
// varargs-dll.c:1039:   float n = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17714, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1240, argv.__stack
	cmp	w1, 0	// D.17714,
	blt	.L2381		//,
	add	x1, x0, 15	// D.17720, iftmp.1240,
	and	x1, x1, -8	// D.17721, D.17720,
	str	x1, [x19]	// D.17721, argv.__stack
	b	.L2382		//
.L2381:
	add	w2, w1, 32	// D.17723, D.17714,
	str	w2, [x19, 28]	// D.17723, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17725, argv.__vr_offs
	cmp	w2, 0	// D.17725,
	ble	.L2383		//,
	add	x1, x0, 15	// D.17728, iftmp.1240,
	and	x1, x1, -8	// D.17729, D.17728,
	str	x1, [x19]	// D.17729, argv.__stack
	b	.L2382		//
.L2383:
	ldr	x2, [x19, 16]	// D.17731, argv.__vr_top
	sxtw	x0, w1	// D.17732, D.17714
	add	x2, x2, x0	// D.17733, D.17731, D.17732
	add	x0, sp, 232	// ha.1241,,
	ldr	s0, [x2]	// D.17735, MEM[(float *)_492]
	str	s0, [x0]	// D.17735, MEM[(float *)ha.1241_493]
	ldr	x2, [x19, 16]	// D.17736, argv.__vr_top
	sxtw	x0, w1	// D.17737, D.17714
	add	x0, x0, 16	// D.17738, D.17737,
	add	x0, x2, x0	// D.17739, D.17736, D.17738
	ldr	s0, [x0]	// D.17740, MEM[(float *)_499]
	str	s0, [sp, 236]	// D.17740, MEM[(float *)&ha.1238 + 4B]
	add	x0, sp, 232	// iftmp.1240,,
.L2382:
	ldr	x0, [x0]	// D.6410, *iftmp.1239_113
// varargs-dll.c:1039:   float n = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp482, D.6410,
	fmov	s0, w0	// tmp484, tmp483
	str	s0, [sp, 112]	// tmp484, n
// varargs-dll.c:1040:   float o = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17741, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1244, argv.__stack
	cmp	w1, 0	// D.17741,
	blt	.L2385		//,
	add	x1, x0, 15	// D.17747, iftmp.1244,
	and	x1, x1, -8	// D.17748, D.17747,
	str	x1, [x19]	// D.17748, argv.__stack
	b	.L2386		//
.L2385:
	add	w2, w1, 32	// D.17750, D.17741,
	str	w2, [x19, 28]	// D.17750, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17752, argv.__vr_offs
	cmp	w2, 0	// D.17752,
	ble	.L2387		//,
	add	x1, x0, 15	// D.17755, iftmp.1244,
	and	x1, x1, -8	// D.17756, D.17755,
	str	x1, [x19]	// D.17756, argv.__stack
	b	.L2386		//
.L2387:
	ldr	x2, [x19, 16]	// D.17758, argv.__vr_top
	sxtw	x0, w1	// D.17759, D.17741
	add	x2, x2, x0	// D.17760, D.17758, D.17759
	add	x0, sp, 240	// ha.1245,,
	ldr	s0, [x2]	// D.17762, MEM[(float *)_520]
	str	s0, [x0]	// D.17762, MEM[(float *)ha.1245_521]
	ldr	x2, [x19, 16]	// D.17763, argv.__vr_top
	sxtw	x0, w1	// D.17764, D.17741
	add	x0, x0, 16	// D.17765, D.17764,
	add	x0, x2, x0	// D.17766, D.17763, D.17765
	ldr	s0, [x0]	// D.17767, MEM[(float *)_527]
	str	s0, [sp, 244]	// D.17767, MEM[(float *)&ha.1242 + 4B]
	add	x0, sp, 240	// iftmp.1244,,
.L2386:
	ldr	x0, [x0]	// D.6411, *iftmp.1243_115
// varargs-dll.c:1040:   float o = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp485, D.6411,,
	fmov	s0, w0	// tmp487, tmp486
	str	s0, [sp, 116]	// tmp487, o
// varargs-dll.c:1041:   float p = va_arg (argv, struct hfa_2_floats).b;
	ldr	w1, [x19, 28]	// D.17768, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1248, argv.__stack
	cmp	w1, 0	// D.17768,
	blt	.L2389		//,
	add	x1, x0, 15	// D.17774, iftmp.1248,
	and	x1, x1, -8	// D.17775, D.17774,
	str	x1, [x19]	// D.17775, argv.__stack
	b	.L2390		//
.L2389:
	add	w2, w1, 32	// D.17777, D.17768,
	str	w2, [x19, 28]	// D.17777, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17779, argv.__vr_offs
	cmp	w2, 0	// D.17779,
	ble	.L2391		//,
	add	x1, x0, 15	// D.17782, iftmp.1248,
	and	x1, x1, -8	// D.17783, D.17782,
	str	x1, [x19]	// D.17783, argv.__stack
	b	.L2390		//
.L2391:
	ldr	x2, [x19, 16]	// D.17785, argv.__vr_top
	sxtw	x0, w1	// D.17786, D.17768
	add	x2, x2, x0	// D.17787, D.17785, D.17786
	add	x0, sp, 248	// ha.1249,,
	ldr	s0, [x2]	// D.17789, MEM[(float *)_548]
	str	s0, [x0]	// D.17789, MEM[(float *)ha.1249_549]
	ldr	x2, [x19, 16]	// D.17790, argv.__vr_top
	sxtw	x0, w1	// D.17791, D.17768
	add	x0, x0, 16	// D.17792, D.17791,
	add	x0, x2, x0	// D.17793, D.17790, D.17792
	ldr	s0, [x0]	// D.17794, MEM[(float *)_555]
	str	s0, [sp, 252]	// D.17794, MEM[(float *)&ha.1246 + 4B]
	add	x0, sp, 248	// iftmp.1248,,
.L2390:
	ldr	x0, [x0]	// D.6412, *iftmp.1247_117
// varargs-dll.c:1041:   float p = va_arg (argv, struct hfa_2_floats).b;
	asr	x0, x0, 32	// tmp489, D.6412,
	fmov	s0, w0	// tmp491, tmp490
	str	s0, [sp, 120]	// tmp491, p
// varargs-dll.c:1042:   float q = va_arg (argv, struct hfa_2_floats).a;
	ldr	w1, [x19, 28]	// D.17795, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1252, argv.__stack
	cmp	w1, 0	// D.17795,
	blt	.L2393		//,
	add	x1, x0, 15	// D.17801, iftmp.1252,
	and	x1, x1, -8	// D.17802, D.17801,
	str	x1, [x19]	// D.17802, argv.__stack
	b	.L2394		//
.L2393:
	add	w2, w1, 32	// D.17804, D.17795,
	str	w2, [x19, 28]	// D.17804, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17806, argv.__vr_offs
	cmp	w2, 0	// D.17806,
	ble	.L2395		//,
	add	x1, x0, 15	// D.17809, iftmp.1252,
	and	x1, x1, -8	// D.17810, D.17809,
	str	x1, [x19]	// D.17810, argv.__stack
	b	.L2394		//
.L2395:
	ldr	x2, [x19, 16]	// D.17812, argv.__vr_top
	sxtw	x0, w1	// D.17813, D.17795
	add	x2, x2, x0	// D.17814, D.17812, D.17813
	add	x0, sp, 256	// ha.1253,,
	ldr	s0, [x2]	// D.17816, MEM[(float *)_576]
	str	s0, [x0]	// D.17816, MEM[(float *)ha.1253_577]
	ldr	x2, [x19, 16]	// D.17817, argv.__vr_top
	sxtw	x0, w1	// D.17818, D.17795
	add	x0, x0, 16	// D.17819, D.17818,
	add	x0, x2, x0	// D.17820, D.17817, D.17819
	ldr	s0, [x0]	// D.17821, MEM[(float *)_583]
	str	s0, [sp, 260]	// D.17821, MEM[(float *)&ha.1250 + 4B]
	add	x0, sp, 256	// iftmp.1252,,
.L2394:
	ldr	x0, [x0]	// D.6413, *iftmp.1251_119
// varargs-dll.c:1042:   float q = va_arg (argv, struct hfa_2_floats).a;
	sbfx	x0, x0, 0, 32	// tmp492, D.6413,,
	fmov	s0, w0	// tmp494, tmp493
	str	s0, [sp, 124]	// tmp494, q
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s1, [sp, 60]	// tmp495, a
	ldr	s0, [sp, 64]	// tmp496, b
	fadd	s1, s1, s0	// _1, tmp495, tmp496
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 68]	// tmp497, c
	fadd	s1, s1, s0	// _2, _1, tmp497
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 72]	// tmp498, d
	fadd	s1, s1, s0	// _3, _2, tmp498
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 76]	// tmp499, e
	fadd	s1, s1, s0	// _4, _3, tmp499
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 80]	// tmp500, f
	fadd	s1, s1, s0	// _5, _4, tmp500
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 84]	// tmp501, g
	fadd	s1, s1, s0	// _6, _5, tmp501
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 88]	// tmp502, h
	fadd	s1, s1, s0	// _7, _6, tmp502
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 92]	// tmp503, i
	fadd	s1, s1, s0	// _8, _7, tmp503
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 96]	// tmp504, j
	fadd	s1, s1, s0	// _9, _8, tmp504
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 100]	// tmp505, k
	fadd	s1, s1, s0	// _10, _9, tmp505
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 104]	// tmp506, l
	fadd	s1, s1, s0	// _11, _10, tmp506
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 108]	// tmp507, m
	fadd	s1, s1, s0	// _12, _11, tmp507
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 112]	// tmp508, n
	fadd	s1, s1, s0	// _13, _12, tmp508
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 116]	// tmp509, o
	fadd	s1, s1, s0	// _14, _13, tmp509
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 120]	// tmp510, p
	fadd	s1, s1, s0	// _15, _14, tmp510
// varargs-dll.c:1043:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 124]	// tmp511, q
	fadd	s0, s1, s0	// _16, _15, tmp511
	fcvtzs	s0, s0	// _52, _16
	fmov	w1, s0	// <retval>, _52
// varargs-dll.c:1044: }
	adrp	x0, :got:__stack_chk_guard	// tmp514,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp513, tmp514,
	ldr	x3, [sp, 264]	// tmp516, D.17822
	ldr	x2, [x0]	// tmp517,
	subs	x3, x3, x2	// tmp516, tmp517
	mov	x2, 0	// tmp517
	beq	.L2398		//,
	bl	__stack_chk_fail		//
.L2398:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE67:
	.size	use_va_list_many_hfa_2_floats, .-use_va_list_many_hfa_2_floats
	.align	2
	.global	use_va_args_few_hfa_4_floats
	.type	use_va_args_few_hfa_4_floats, %function
use_va_args_few_hfa_4_floats:
.LFB68:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:1048: {
	adrp	x0, :got:__stack_chk_guard	// tmp154,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp153, tmp154,
	ldr	x1, [x0]	// tmp172,
	str	x1, [sp, 104]	// tmp172, D.17897
	mov	x1, 0	// tmp172
// varargs-dll.c:1050:   va_start (argv, format);
	add	x0, sp, 304	// tmp177,,
	str	x0, [sp, 72]	// tmp177, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp178,,
	str	x0, [sp, 80]	// tmp178, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp156,,
	str	x0, [sp, 88]	// tmp156, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp157,
	str	w0, [sp, 96]	// tmp157, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp158,
	str	w0, [sp, 100]	// tmp158, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1051:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 100]	// D.17823, argv.__vr_offs
	ldr	x0, [sp, 72]	// iftmp.1256, argv.__stack
	cmp	w1, 0	// D.17823,
	blt	.L2400		//,
	add	x1, x0, 23	// D.17829, iftmp.1256,
	and	x1, x1, -8	// D.17830, D.17829,
	str	x1, [sp, 72]	// D.17830, argv.__stack
	b	.L2401		//
.L2400:
	add	w2, w1, 64	// D.17832, D.17823,
	str	w2, [sp, 100]	// D.17832, argv.__vr_offs
	ldr	w2, [sp, 100]	// D.17834, argv.__vr_offs
	cmp	w2, 0	// D.17834,
	ble	.L2402		//,
	add	x1, x0, 23	// D.17837, iftmp.1256,
	and	x1, x1, -8	// D.17838, D.17837,
	str	x1, [sp, 72]	// D.17838, argv.__stack
	b	.L2401		//
.L2402:
	ldr	x2, [sp, 88]	// D.17840, argv.__vr_top
	sxtw	x0, w1	// D.17841, D.17823
	add	x2, x2, x0	// D.17842, D.17840, D.17841
	add	x0, sp, 40	// ha.1257,,
	ldr	s0, [x2]	// D.17844, MEM[(float *)_26]
	str	s0, [x0]	// D.17844, MEM[(float *)ha.1257_27]
	ldr	x2, [sp, 88]	// D.17845, argv.__vr_top
	sxtw	x0, w1	// D.17846, D.17823
	add	x0, x0, 16	// D.17847, D.17846,
	add	x0, x2, x0	// D.17848, D.17845, D.17847
	ldr	s0, [x0]	// D.17849, MEM[(float *)_33]
	str	s0, [sp, 44]	// D.17849, MEM[(float *)&ha.1254 + 4B]
	ldr	x2, [sp, 88]	// D.17850, argv.__vr_top
	sxtw	x0, w1	// D.17851, D.17823
	add	x0, x0, 32	// D.17852, D.17851,
	add	x0, x2, x0	// D.17853, D.17850, D.17852
	ldr	s0, [x0]	// D.17854, MEM[(float *)_39]
	str	s0, [sp, 48]	// D.17854, MEM[(float *)&ha.1254 + 8B]
	ldr	x2, [sp, 88]	// D.17855, argv.__vr_top
	sxtw	x0, w1	// D.17856, D.17823
	add	x0, x0, 48	// D.17857, D.17856,
	add	x0, x2, x0	// D.17858, D.17855, D.17857
	ldr	s0, [x0]	// D.17859, MEM[(float *)_45]
	str	s0, [sp, 52]	// D.17859, MEM[(float *)&ha.1254 + 12B]
	add	x0, sp, 40	// iftmp.1256,,
.L2401:
	ldp	x0, x1, [x0]	// D.6416, *iftmp.1255_15
// varargs-dll.c:1051:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp159, D.6416,,
	fmov	s0, w0	// tmp161, tmp160
	str	s0, [sp, 32]	// tmp161, a
// varargs-dll.c:1052:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 100]	// D.17860, argv.__vr_offs
	ldr	x0, [sp, 72]	// iftmp.1260, argv.__stack
	cmp	w1, 0	// D.17860,
	blt	.L2404		//,
	add	x1, x0, 23	// D.17866, iftmp.1260,
	and	x1, x1, -8	// D.17867, D.17866,
	str	x1, [sp, 72]	// D.17867, argv.__stack
	b	.L2405		//
.L2404:
	add	w2, w1, 64	// D.17869, D.17860,
	str	w2, [sp, 100]	// D.17869, argv.__vr_offs
	ldr	w2, [sp, 100]	// D.17871, argv.__vr_offs
	cmp	w2, 0	// D.17871,
	ble	.L2406		//,
	add	x1, x0, 23	// D.17874, iftmp.1260,
	and	x1, x1, -8	// D.17875, D.17874,
	str	x1, [sp, 72]	// D.17875, argv.__stack
	b	.L2405		//
.L2406:
	ldr	x2, [sp, 88]	// D.17877, argv.__vr_top
	sxtw	x0, w1	// D.17878, D.17860
	add	x2, x2, x0	// D.17879, D.17877, D.17878
	add	x0, sp, 56	// ha.1261,,
	ldr	s0, [x2]	// D.17881, MEM[(float *)_66]
	str	s0, [x0]	// D.17881, MEM[(float *)ha.1261_67]
	ldr	x2, [sp, 88]	// D.17882, argv.__vr_top
	sxtw	x0, w1	// D.17883, D.17860
	add	x0, x0, 16	// D.17884, D.17883,
	add	x0, x2, x0	// D.17885, D.17882, D.17884
	ldr	s0, [x0]	// D.17886, MEM[(float *)_73]
	str	s0, [sp, 60]	// D.17886, MEM[(float *)&ha.1258 + 4B]
	ldr	x2, [sp, 88]	// D.17887, argv.__vr_top
	sxtw	x0, w1	// D.17888, D.17860
	add	x0, x0, 32	// D.17889, D.17888,
	add	x0, x2, x0	// D.17890, D.17887, D.17889
	ldr	s0, [x0]	// D.17891, MEM[(float *)_79]
	str	s0, [sp, 64]	// D.17891, MEM[(float *)&ha.1258 + 8B]
	ldr	x2, [sp, 88]	// D.17892, argv.__vr_top
	sxtw	x0, w1	// D.17893, D.17860
	add	x0, x0, 48	// D.17894, D.17893,
	add	x0, x2, x0	// D.17895, D.17892, D.17894
	ldr	s0, [x0]	// D.17896, MEM[(float *)_85]
	str	s0, [sp, 68]	// D.17896, MEM[(float *)&ha.1258 + 12B]
	add	x0, sp, 56	// iftmp.1260,,
.L2405:
	ldp	x0, x1, [x0]	// D.6417, *iftmp.1259_17
// varargs-dll.c:1052:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp164, tmp163,
	fmov	s0, w0	// tmp166, tmp165
	str	s0, [sp, 36]	// tmp166, b
// varargs-dll.c:1054:   return a + b;
	ldr	s1, [sp, 32]	// tmp167, a
	ldr	s0, [sp, 36]	// tmp168, b
	fadd	s0, s1, s0	// _1, tmp167, tmp168
	fcvtzs	s0, s0	// _9, _1
	fmov	w1, s0	// <retval>, _9
// varargs-dll.c:1055: }
	adrp	x0, :got:__stack_chk_guard	// tmp171,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp170, tmp171,
	ldr	x3, [sp, 104]	// tmp173, D.17897
	ldr	x2, [x0]	// tmp174,
	subs	x3, x3, x2	// tmp173, tmp174
	mov	x2, 0	// tmp174
	beq	.L2409		//,
	bl	__stack_chk_fail		//
.L2409:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE68:
	.size	use_va_args_few_hfa_4_floats, .-use_va_args_few_hfa_4_floats
	.align	2
	.global	use_va_list_few_hfa_4_floats
	.type	use_va_list_few_hfa_4_floats, %function
use_va_list_few_hfa_4_floats:
.LFB69:
	.cfi_startproc
	stp	x29, x30, [sp, -96]!	//,,,
	.cfi_def_cfa_offset 96
	.cfi_offset 29, -96
	.cfi_offset 30, -88
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -80
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp153,
// varargs-dll.c:1059: {
	adrp	x0, :got:__stack_chk_guard	// tmp155,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp154, tmp155,
	ldr	x1, [x0]	// tmp169,
	str	x1, [sp, 88]	// tmp169, D.17975
	mov	x1, 0	// tmp169
// varargs-dll.c:1060:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.17901, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1264, argv.__stack
	cmp	w1, 0	// D.17901,
	blt	.L2411		//,
	add	x1, x0, 23	// D.17907, iftmp.1264,
	and	x1, x1, -8	// D.17908, D.17907,
	str	x1, [x19]	// D.17908, argv.__stack
	b	.L2412		//
.L2411:
	add	w2, w1, 64	// D.17910, D.17901,
	str	w2, [x19, 28]	// D.17910, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17912, argv.__vr_offs
	cmp	w2, 0	// D.17912,
	ble	.L2413		//,
	add	x1, x0, 23	// D.17915, iftmp.1264,
	and	x1, x1, -8	// D.17916, D.17915,
	str	x1, [x19]	// D.17916, argv.__stack
	b	.L2412		//
.L2413:
	ldr	x2, [x19, 16]	// D.17918, argv.__vr_top
	sxtw	x0, w1	// D.17919, D.17901
	add	x2, x2, x0	// D.17920, D.17918, D.17919
	add	x0, sp, 56	// ha.1265,,
	ldr	s0, [x2]	// D.17922, MEM[(float *)_23]
	str	s0, [x0]	// D.17922, MEM[(float *)ha.1265_24]
	ldr	x2, [x19, 16]	// D.17923, argv.__vr_top
	sxtw	x0, w1	// D.17924, D.17901
	add	x0, x0, 16	// D.17925, D.17924,
	add	x0, x2, x0	// D.17926, D.17923, D.17925
	ldr	s0, [x0]	// D.17927, MEM[(float *)_30]
	str	s0, [sp, 60]	// D.17927, MEM[(float *)&ha.1262 + 4B]
	ldr	x2, [x19, 16]	// D.17928, argv.__vr_top
	sxtw	x0, w1	// D.17929, D.17901
	add	x0, x0, 32	// D.17930, D.17929,
	add	x0, x2, x0	// D.17931, D.17928, D.17930
	ldr	s0, [x0]	// D.17932, MEM[(float *)_36]
	str	s0, [sp, 64]	// D.17932, MEM[(float *)&ha.1262 + 8B]
	ldr	x2, [x19, 16]	// D.17933, argv.__vr_top
	sxtw	x0, w1	// D.17934, D.17901
	add	x0, x0, 48	// D.17935, D.17934,
	add	x0, x2, x0	// D.17936, D.17933, D.17935
	ldr	s0, [x0]	// D.17937, MEM[(float *)_42]
	str	s0, [sp, 68]	// D.17937, MEM[(float *)&ha.1262 + 12B]
	add	x0, sp, 56	// iftmp.1264,,
.L2412:
	ldp	x0, x1, [x0]	// D.6421, *iftmp.1263_12
// varargs-dll.c:1060:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp156, D.6421,,
	fmov	s0, w0	// tmp158, tmp157
	str	s0, [sp, 48]	// tmp158, a
// varargs-dll.c:1061:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.17938, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1268, argv.__stack
	cmp	w1, 0	// D.17938,
	blt	.L2415		//,
	add	x1, x0, 23	// D.17944, iftmp.1268,
	and	x1, x1, -8	// D.17945, D.17944,
	str	x1, [x19]	// D.17945, argv.__stack
	b	.L2416		//
.L2415:
	add	w2, w1, 64	// D.17947, D.17938,
	str	w2, [x19, 28]	// D.17947, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.17949, argv.__vr_offs
	cmp	w2, 0	// D.17949,
	ble	.L2417		//,
	add	x1, x0, 23	// D.17952, iftmp.1268,
	and	x1, x1, -8	// D.17953, D.17952,
	str	x1, [x19]	// D.17953, argv.__stack
	b	.L2416		//
.L2417:
	ldr	x2, [x19, 16]	// D.17955, argv.__vr_top
	sxtw	x0, w1	// D.17956, D.17938
	add	x2, x2, x0	// D.17957, D.17955, D.17956
	add	x0, sp, 72	// ha.1269,,
	ldr	s0, [x2]	// D.17959, MEM[(float *)_63]
	str	s0, [x0]	// D.17959, MEM[(float *)ha.1269_64]
	ldr	x2, [x19, 16]	// D.17960, argv.__vr_top
	sxtw	x0, w1	// D.17961, D.17938
	add	x0, x0, 16	// D.17962, D.17961,
	add	x0, x2, x0	// D.17963, D.17960, D.17962
	ldr	s0, [x0]	// D.17964, MEM[(float *)_70]
	str	s0, [sp, 76]	// D.17964, MEM[(float *)&ha.1266 + 4B]
	ldr	x2, [x19, 16]	// D.17965, argv.__vr_top
	sxtw	x0, w1	// D.17966, D.17938
	add	x0, x0, 32	// D.17967, D.17966,
	add	x0, x2, x0	// D.17968, D.17965, D.17967
	ldr	s0, [x0]	// D.17969, MEM[(float *)_76]
	str	s0, [sp, 80]	// D.17969, MEM[(float *)&ha.1266 + 8B]
	ldr	x2, [x19, 16]	// D.17970, argv.__vr_top
	sxtw	x0, w1	// D.17971, D.17938
	add	x0, x0, 48	// D.17972, D.17971,
	add	x0, x2, x0	// D.17973, D.17970, D.17972
	ldr	s0, [x0]	// D.17974, MEM[(float *)_82]
	str	s0, [sp, 84]	// D.17974, MEM[(float *)&ha.1266 + 12B]
	add	x0, sp, 72	// iftmp.1268,,
.L2416:
	ldp	x0, x1, [x0]	// D.6422, *iftmp.1267_14
// varargs-dll.c:1061:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp161, tmp160,
	fmov	s0, w0	// tmp163, tmp162
	str	s0, [sp, 52]	// tmp163, b
// varargs-dll.c:1062:   return a + b;
	ldr	s1, [sp, 48]	// tmp164, a
	ldr	s0, [sp, 52]	// tmp165, b
	fadd	s0, s1, s0	// _1, tmp164, tmp165
	fcvtzs	s0, s0	// _7, _1
	fmov	w1, s0	// <retval>, _7
// varargs-dll.c:1063: }
	adrp	x0, :got:__stack_chk_guard	// tmp168,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp167, tmp168,
	ldr	x3, [sp, 88]	// tmp170, D.17975
	ldr	x2, [x0]	// tmp171,
	subs	x3, x3, x2	// tmp170, tmp171
	mov	x2, 0	// tmp171
	beq	.L2420		//,
	bl	__stack_chk_fail		//
.L2420:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 96	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE69:
	.size	use_va_list_few_hfa_4_floats, .-use_va_list_few_hfa_4_floats
	.align	2
	.global	use_va_args_several_hfa_4_floats
	.type	use_va_args_several_hfa_4_floats, %function
use_va_args_several_hfa_4_floats:
.LFB70:
	.cfi_startproc
	stp	x29, x30, [sp, -448]!	//,,,
	.cfi_def_cfa_offset 448
	.cfi_offset 29, -448
	.cfi_offset 30, -440
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 392]	//,
	str	x2, [sp, 400]	//,
	str	x3, [sp, 408]	//,
	str	x4, [sp, 416]	//,
	str	x5, [sp, 424]	//,
	str	x6, [sp, 432]	//,
	str	x7, [sp, 440]	//,
	str	q0, [sp, 256]	//,
	str	q1, [sp, 272]	//,
	str	q2, [sp, 288]	//,
	str	q3, [sp, 304]	//,
	str	q4, [sp, 320]	//,
	str	q5, [sp, 336]	//,
	str	q6, [sp, 352]	//,
	str	q7, [sp, 368]	//,
// varargs-dll.c:1067: {
	adrp	x0, :got:__stack_chk_guard	// tmp364,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp363, tmp364,
	ldr	x1, [x0]	// tmp416,
	str	x1, [sp, 248]	// tmp416, D.18309
	mov	x1, 0	// tmp416
// varargs-dll.c:1069:   va_start (argv, format);
	add	x0, sp, 448	// tmp421,,
	str	x0, [sp, 216]	// tmp421, MEM[(struct  *)&argv].__stack
	add	x0, sp, 448	// tmp422,,
	str	x0, [sp, 224]	// tmp422, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 384	// tmp366,,
	str	x0, [sp, 232]	// tmp366, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp367,
	str	w0, [sp, 240]	// tmp367, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp368,
	str	w0, [sp, 244]	// tmp368, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1070:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 244]	// D.17976, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1272, argv.__stack
	cmp	w1, 0	// D.17976,
	blt	.L2422		//,
	add	x1, x0, 23	// D.17982, iftmp.1272,
	and	x1, x1, -8	// D.17983, D.17982,
	str	x1, [sp, 216]	// D.17983, argv.__stack
	b	.L2423		//
.L2422:
	add	w2, w1, 64	// D.17985, D.17976,
	str	w2, [sp, 244]	// D.17985, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.17987, argv.__vr_offs
	cmp	w2, 0	// D.17987,
	ble	.L2424		//,
	add	x1, x0, 23	// D.17990, iftmp.1272,
	and	x1, x1, -8	// D.17991, D.17990,
	str	x1, [sp, 216]	// D.17991, argv.__stack
	b	.L2423		//
.L2424:
	ldr	x2, [sp, 232]	// D.17993, argv.__vr_top
	sxtw	x0, w1	// D.17994, D.17976
	add	x2, x2, x0	// D.17995, D.17993, D.17994
	add	x0, sp, 72	// ha.1273,,
	ldr	s0, [x2]	// D.17997, MEM[(float *)_75]
	str	s0, [x0]	// D.17997, MEM[(float *)ha.1273_76]
	ldr	x2, [sp, 232]	// D.17998, argv.__vr_top
	sxtw	x0, w1	// D.17999, D.17976
	add	x0, x0, 16	// D.18000, D.17999,
	add	x0, x2, x0	// D.18001, D.17998, D.18000
	ldr	s0, [x0]	// D.18002, MEM[(float *)_82]
	str	s0, [sp, 76]	// D.18002, MEM[(float *)&ha.1270 + 4B]
	ldr	x2, [sp, 232]	// D.18003, argv.__vr_top
	sxtw	x0, w1	// D.18004, D.17976
	add	x0, x0, 32	// D.18005, D.18004,
	add	x0, x2, x0	// D.18006, D.18003, D.18005
	ldr	s0, [x0]	// D.18007, MEM[(float *)_88]
	str	s0, [sp, 80]	// D.18007, MEM[(float *)&ha.1270 + 8B]
	ldr	x2, [sp, 232]	// D.18008, argv.__vr_top
	sxtw	x0, w1	// D.18009, D.17976
	add	x0, x0, 48	// D.18010, D.18009,
	add	x0, x2, x0	// D.18011, D.18008, D.18010
	ldr	s0, [x0]	// D.18012, MEM[(float *)_94]
	str	s0, [sp, 84]	// D.18012, MEM[(float *)&ha.1270 + 12B]
	add	x0, sp, 72	// iftmp.1272,,
.L2423:
	ldp	x0, x1, [x0]	// D.6425, *iftmp.1271_50
// varargs-dll.c:1070:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp369, D.6425,,
	fmov	s0, w0	// tmp371, tmp370
	str	s0, [sp, 36]	// tmp371, a
// varargs-dll.c:1071:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 244]	// D.18013, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1276, argv.__stack
	cmp	w1, 0	// D.18013,
	blt	.L2426		//,
	add	x1, x0, 23	// D.18019, iftmp.1276,
	and	x1, x1, -8	// D.18020, D.18019,
	str	x1, [sp, 216]	// D.18020, argv.__stack
	b	.L2427		//
.L2426:
	add	w2, w1, 64	// D.18022, D.18013,
	str	w2, [sp, 244]	// D.18022, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18024, argv.__vr_offs
	cmp	w2, 0	// D.18024,
	ble	.L2428		//,
	add	x1, x0, 23	// D.18027, iftmp.1276,
	and	x1, x1, -8	// D.18028, D.18027,
	str	x1, [sp, 216]	// D.18028, argv.__stack
	b	.L2427		//
.L2428:
	ldr	x2, [sp, 232]	// D.18030, argv.__vr_top
	sxtw	x0, w1	// D.18031, D.18013
	add	x2, x2, x0	// D.18032, D.18030, D.18031
	add	x0, sp, 88	// ha.1277,,
	ldr	s0, [x2]	// D.18034, MEM[(float *)_115]
	str	s0, [x0]	// D.18034, MEM[(float *)ha.1277_116]
	ldr	x2, [sp, 232]	// D.18035, argv.__vr_top
	sxtw	x0, w1	// D.18036, D.18013
	add	x0, x0, 16	// D.18037, D.18036,
	add	x0, x2, x0	// D.18038, D.18035, D.18037
	ldr	s0, [x0]	// D.18039, MEM[(float *)_122]
	str	s0, [sp, 92]	// D.18039, MEM[(float *)&ha.1274 + 4B]
	ldr	x2, [sp, 232]	// D.18040, argv.__vr_top
	sxtw	x0, w1	// D.18041, D.18013
	add	x0, x0, 32	// D.18042, D.18041,
	add	x0, x2, x0	// D.18043, D.18040, D.18042
	ldr	s0, [x0]	// D.18044, MEM[(float *)_128]
	str	s0, [sp, 96]	// D.18044, MEM[(float *)&ha.1274 + 8B]
	ldr	x2, [sp, 232]	// D.18045, argv.__vr_top
	sxtw	x0, w1	// D.18046, D.18013
	add	x0, x0, 48	// D.18047, D.18046,
	add	x0, x2, x0	// D.18048, D.18045, D.18047
	ldr	s0, [x0]	// D.18049, MEM[(float *)_134]
	str	s0, [sp, 100]	// D.18049, MEM[(float *)&ha.1274 + 12B]
	add	x0, sp, 88	// iftmp.1276,,
.L2427:
	ldp	x0, x1, [x0]	// D.6426, *iftmp.1275_52
// varargs-dll.c:1071:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp374, tmp373,
	fmov	s0, w0	// tmp376, tmp375
	str	s0, [sp, 40]	// tmp376, b
// varargs-dll.c:1072:   float c = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 244]	// D.18050, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1280, argv.__stack
	cmp	w1, 0	// D.18050,
	blt	.L2430		//,
	add	x1, x0, 23	// D.18056, iftmp.1280,
	and	x1, x1, -8	// D.18057, D.18056,
	str	x1, [sp, 216]	// D.18057, argv.__stack
	b	.L2431		//
.L2430:
	add	w2, w1, 64	// D.18059, D.18050,
	str	w2, [sp, 244]	// D.18059, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18061, argv.__vr_offs
	cmp	w2, 0	// D.18061,
	ble	.L2432		//,
	add	x1, x0, 23	// D.18064, iftmp.1280,
	and	x1, x1, -8	// D.18065, D.18064,
	str	x1, [sp, 216]	// D.18065, argv.__stack
	b	.L2431		//
.L2432:
	ldr	x2, [sp, 232]	// D.18067, argv.__vr_top
	sxtw	x0, w1	// D.18068, D.18050
	add	x2, x2, x0	// D.18069, D.18067, D.18068
	add	x0, sp, 104	// ha.1281,,
	ldr	s0, [x2]	// D.18071, MEM[(float *)_155]
	str	s0, [x0]	// D.18071, MEM[(float *)ha.1281_156]
	ldr	x2, [sp, 232]	// D.18072, argv.__vr_top
	sxtw	x0, w1	// D.18073, D.18050
	add	x0, x0, 16	// D.18074, D.18073,
	add	x0, x2, x0	// D.18075, D.18072, D.18074
	ldr	s0, [x0]	// D.18076, MEM[(float *)_162]
	str	s0, [sp, 108]	// D.18076, MEM[(float *)&ha.1278 + 4B]
	ldr	x2, [sp, 232]	// D.18077, argv.__vr_top
	sxtw	x0, w1	// D.18078, D.18050
	add	x0, x0, 32	// D.18079, D.18078,
	add	x0, x2, x0	// D.18080, D.18077, D.18079
	ldr	s0, [x0]	// D.18081, MEM[(float *)_168]
	str	s0, [sp, 112]	// D.18081, MEM[(float *)&ha.1278 + 8B]
	ldr	x2, [sp, 232]	// D.18082, argv.__vr_top
	sxtw	x0, w1	// D.18083, D.18050
	add	x0, x0, 48	// D.18084, D.18083,
	add	x0, x2, x0	// D.18085, D.18082, D.18084
	ldr	s0, [x0]	// D.18086, MEM[(float *)_174]
	str	s0, [sp, 116]	// D.18086, MEM[(float *)&ha.1278 + 12B]
	add	x0, sp, 104	// iftmp.1280,,
.L2431:
	ldp	x0, x1, [x0]	// D.6427, *iftmp.1279_54
// varargs-dll.c:1072:   float c = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp377, D.6427,,
	fmov	s0, w0	// tmp379, tmp378
	str	s0, [sp, 44]	// tmp379, c
// varargs-dll.c:1073:   float d = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 244]	// D.18087, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1284, argv.__stack
	cmp	w1, 0	// D.18087,
	blt	.L2434		//,
	add	x1, x0, 23	// D.18093, iftmp.1284,
	and	x1, x1, -8	// D.18094, D.18093,
	str	x1, [sp, 216]	// D.18094, argv.__stack
	b	.L2435		//
.L2434:
	add	w2, w1, 64	// D.18096, D.18087,
	str	w2, [sp, 244]	// D.18096, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18098, argv.__vr_offs
	cmp	w2, 0	// D.18098,
	ble	.L2436		//,
	add	x1, x0, 23	// D.18101, iftmp.1284,
	and	x1, x1, -8	// D.18102, D.18101,
	str	x1, [sp, 216]	// D.18102, argv.__stack
	b	.L2435		//
.L2436:
	ldr	x2, [sp, 232]	// D.18104, argv.__vr_top
	sxtw	x0, w1	// D.18105, D.18087
	add	x2, x2, x0	// D.18106, D.18104, D.18105
	add	x0, sp, 120	// ha.1285,,
	ldr	s0, [x2]	// D.18108, MEM[(float *)_195]
	str	s0, [x0]	// D.18108, MEM[(float *)ha.1285_196]
	ldr	x2, [sp, 232]	// D.18109, argv.__vr_top
	sxtw	x0, w1	// D.18110, D.18087
	add	x0, x0, 16	// D.18111, D.18110,
	add	x0, x2, x0	// D.18112, D.18109, D.18111
	ldr	s0, [x0]	// D.18113, MEM[(float *)_202]
	str	s0, [sp, 124]	// D.18113, MEM[(float *)&ha.1282 + 4B]
	ldr	x2, [sp, 232]	// D.18114, argv.__vr_top
	sxtw	x0, w1	// D.18115, D.18087
	add	x0, x0, 32	// D.18116, D.18115,
	add	x0, x2, x0	// D.18117, D.18114, D.18116
	ldr	s0, [x0]	// D.18118, MEM[(float *)_208]
	str	s0, [sp, 128]	// D.18118, MEM[(float *)&ha.1282 + 8B]
	ldr	x2, [sp, 232]	// D.18119, argv.__vr_top
	sxtw	x0, w1	// D.18120, D.18087
	add	x0, x0, 48	// D.18121, D.18120,
	add	x0, x2, x0	// D.18122, D.18119, D.18121
	ldr	s0, [x0]	// D.18123, MEM[(float *)_214]
	str	s0, [sp, 132]	// D.18123, MEM[(float *)&ha.1282 + 12B]
	add	x0, sp, 120	// iftmp.1284,,
.L2435:
	ldp	x0, x1, [x0]	// D.6428, *iftmp.1283_56
// varargs-dll.c:1073:   float d = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp381, D.6428
	asr	x0, x0, 32	// tmp382, tmp381,
	fmov	s0, w0	// tmp384, tmp383
	str	s0, [sp, 48]	// tmp384, d
// varargs-dll.c:1074:   float e = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 244]	// D.18124, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1288, argv.__stack
	cmp	w1, 0	// D.18124,
	blt	.L2438		//,
	add	x1, x0, 23	// D.18130, iftmp.1288,
	and	x1, x1, -8	// D.18131, D.18130,
	str	x1, [sp, 216]	// D.18131, argv.__stack
	b	.L2439		//
.L2438:
	add	w2, w1, 64	// D.18133, D.18124,
	str	w2, [sp, 244]	// D.18133, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18135, argv.__vr_offs
	cmp	w2, 0	// D.18135,
	ble	.L2440		//,
	add	x1, x0, 23	// D.18138, iftmp.1288,
	and	x1, x1, -8	// D.18139, D.18138,
	str	x1, [sp, 216]	// D.18139, argv.__stack
	b	.L2439		//
.L2440:
	ldr	x2, [sp, 232]	// D.18141, argv.__vr_top
	sxtw	x0, w1	// D.18142, D.18124
	add	x2, x2, x0	// D.18143, D.18141, D.18142
	add	x0, sp, 136	// ha.1289,,
	ldr	s0, [x2]	// D.18145, MEM[(float *)_235]
	str	s0, [x0]	// D.18145, MEM[(float *)ha.1289_236]
	ldr	x2, [sp, 232]	// D.18146, argv.__vr_top
	sxtw	x0, w1	// D.18147, D.18124
	add	x0, x0, 16	// D.18148, D.18147,
	add	x0, x2, x0	// D.18149, D.18146, D.18148
	ldr	s0, [x0]	// D.18150, MEM[(float *)_242]
	str	s0, [sp, 140]	// D.18150, MEM[(float *)&ha.1286 + 4B]
	ldr	x2, [sp, 232]	// D.18151, argv.__vr_top
	sxtw	x0, w1	// D.18152, D.18124
	add	x0, x0, 32	// D.18153, D.18152,
	add	x0, x2, x0	// D.18154, D.18151, D.18153
	ldr	s0, [x0]	// D.18155, MEM[(float *)_248]
	str	s0, [sp, 144]	// D.18155, MEM[(float *)&ha.1286 + 8B]
	ldr	x2, [sp, 232]	// D.18156, argv.__vr_top
	sxtw	x0, w1	// D.18157, D.18124
	add	x0, x0, 48	// D.18158, D.18157,
	add	x0, x2, x0	// D.18159, D.18156, D.18158
	ldr	s0, [x0]	// D.18160, MEM[(float *)_254]
	str	s0, [sp, 148]	// D.18160, MEM[(float *)&ha.1286 + 12B]
	add	x0, sp, 136	// iftmp.1288,,
.L2439:
	ldp	x0, x1, [x0]	// D.6429, *iftmp.1287_58
// varargs-dll.c:1074:   float e = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp385, D.6429,,
	fmov	s0, w0	// tmp387, tmp386
	str	s0, [sp, 52]	// tmp387, e
// varargs-dll.c:1075:   float f = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 244]	// D.18161, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1292, argv.__stack
	cmp	w1, 0	// D.18161,
	blt	.L2442		//,
	add	x1, x0, 23	// D.18167, iftmp.1292,
	and	x1, x1, -8	// D.18168, D.18167,
	str	x1, [sp, 216]	// D.18168, argv.__stack
	b	.L2443		//
.L2442:
	add	w2, w1, 64	// D.18170, D.18161,
	str	w2, [sp, 244]	// D.18170, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18172, argv.__vr_offs
	cmp	w2, 0	// D.18172,
	ble	.L2444		//,
	add	x1, x0, 23	// D.18175, iftmp.1292,
	and	x1, x1, -8	// D.18176, D.18175,
	str	x1, [sp, 216]	// D.18176, argv.__stack
	b	.L2443		//
.L2444:
	ldr	x2, [sp, 232]	// D.18178, argv.__vr_top
	sxtw	x0, w1	// D.18179, D.18161
	add	x2, x2, x0	// D.18180, D.18178, D.18179
	add	x0, sp, 152	// ha.1293,,
	ldr	s0, [x2]	// D.18182, MEM[(float *)_275]
	str	s0, [x0]	// D.18182, MEM[(float *)ha.1293_276]
	ldr	x2, [sp, 232]	// D.18183, argv.__vr_top
	sxtw	x0, w1	// D.18184, D.18161
	add	x0, x0, 16	// D.18185, D.18184,
	add	x0, x2, x0	// D.18186, D.18183, D.18185
	ldr	s0, [x0]	// D.18187, MEM[(float *)_282]
	str	s0, [sp, 156]	// D.18187, MEM[(float *)&ha.1290 + 4B]
	ldr	x2, [sp, 232]	// D.18188, argv.__vr_top
	sxtw	x0, w1	// D.18189, D.18161
	add	x0, x0, 32	// D.18190, D.18189,
	add	x0, x2, x0	// D.18191, D.18188, D.18190
	ldr	s0, [x0]	// D.18192, MEM[(float *)_288]
	str	s0, [sp, 160]	// D.18192, MEM[(float *)&ha.1290 + 8B]
	ldr	x2, [sp, 232]	// D.18193, argv.__vr_top
	sxtw	x0, w1	// D.18194, D.18161
	add	x0, x0, 48	// D.18195, D.18194,
	add	x0, x2, x0	// D.18196, D.18193, D.18195
	ldr	s0, [x0]	// D.18197, MEM[(float *)_294]
	str	s0, [sp, 164]	// D.18197, MEM[(float *)&ha.1290 + 12B]
	add	x0, sp, 152	// iftmp.1292,,
.L2443:
	ldp	x0, x1, [x0]	// D.6430, *iftmp.1291_60
// varargs-dll.c:1075:   float f = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp390, tmp389,
	fmov	s0, w0	// tmp392, tmp391
	str	s0, [sp, 56]	// tmp392, f
// varargs-dll.c:1076:   float g = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 244]	// D.18198, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1296, argv.__stack
	cmp	w1, 0	// D.18198,
	blt	.L2446		//,
	add	x1, x0, 23	// D.18204, iftmp.1296,
	and	x1, x1, -8	// D.18205, D.18204,
	str	x1, [sp, 216]	// D.18205, argv.__stack
	b	.L2447		//
.L2446:
	add	w2, w1, 64	// D.18207, D.18198,
	str	w2, [sp, 244]	// D.18207, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18209, argv.__vr_offs
	cmp	w2, 0	// D.18209,
	ble	.L2448		//,
	add	x1, x0, 23	// D.18212, iftmp.1296,
	and	x1, x1, -8	// D.18213, D.18212,
	str	x1, [sp, 216]	// D.18213, argv.__stack
	b	.L2447		//
.L2448:
	ldr	x2, [sp, 232]	// D.18215, argv.__vr_top
	sxtw	x0, w1	// D.18216, D.18198
	add	x2, x2, x0	// D.18217, D.18215, D.18216
	add	x0, sp, 168	// ha.1297,,
	ldr	s0, [x2]	// D.18219, MEM[(float *)_315]
	str	s0, [x0]	// D.18219, MEM[(float *)ha.1297_316]
	ldr	x2, [sp, 232]	// D.18220, argv.__vr_top
	sxtw	x0, w1	// D.18221, D.18198
	add	x0, x0, 16	// D.18222, D.18221,
	add	x0, x2, x0	// D.18223, D.18220, D.18222
	ldr	s0, [x0]	// D.18224, MEM[(float *)_322]
	str	s0, [sp, 172]	// D.18224, MEM[(float *)&ha.1294 + 4B]
	ldr	x2, [sp, 232]	// D.18225, argv.__vr_top
	sxtw	x0, w1	// D.18226, D.18198
	add	x0, x0, 32	// D.18227, D.18226,
	add	x0, x2, x0	// D.18228, D.18225, D.18227
	ldr	s0, [x0]	// D.18229, MEM[(float *)_328]
	str	s0, [sp, 176]	// D.18229, MEM[(float *)&ha.1294 + 8B]
	ldr	x2, [sp, 232]	// D.18230, argv.__vr_top
	sxtw	x0, w1	// D.18231, D.18198
	add	x0, x0, 48	// D.18232, D.18231,
	add	x0, x2, x0	// D.18233, D.18230, D.18232
	ldr	s0, [x0]	// D.18234, MEM[(float *)_334]
	str	s0, [sp, 180]	// D.18234, MEM[(float *)&ha.1294 + 12B]
	add	x0, sp, 168	// iftmp.1296,,
.L2447:
	ldp	x0, x1, [x0]	// D.6431, *iftmp.1295_62
// varargs-dll.c:1076:   float g = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp393, D.6431,,
	fmov	s0, w0	// tmp395, tmp394
	str	s0, [sp, 60]	// tmp395, g
// varargs-dll.c:1077:   float h = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 244]	// D.18235, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1300, argv.__stack
	cmp	w1, 0	// D.18235,
	blt	.L2450		//,
	add	x1, x0, 23	// D.18241, iftmp.1300,
	and	x1, x1, -8	// D.18242, D.18241,
	str	x1, [sp, 216]	// D.18242, argv.__stack
	b	.L2451		//
.L2450:
	add	w2, w1, 64	// D.18244, D.18235,
	str	w2, [sp, 244]	// D.18244, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18246, argv.__vr_offs
	cmp	w2, 0	// D.18246,
	ble	.L2452		//,
	add	x1, x0, 23	// D.18249, iftmp.1300,
	and	x1, x1, -8	// D.18250, D.18249,
	str	x1, [sp, 216]	// D.18250, argv.__stack
	b	.L2451		//
.L2452:
	ldr	x2, [sp, 232]	// D.18252, argv.__vr_top
	sxtw	x0, w1	// D.18253, D.18235
	add	x2, x2, x0	// D.18254, D.18252, D.18253
	add	x0, sp, 184	// ha.1301,,
	ldr	s0, [x2]	// D.18256, MEM[(float *)_355]
	str	s0, [x0]	// D.18256, MEM[(float *)ha.1301_356]
	ldr	x2, [sp, 232]	// D.18257, argv.__vr_top
	sxtw	x0, w1	// D.18258, D.18235
	add	x0, x0, 16	// D.18259, D.18258,
	add	x0, x2, x0	// D.18260, D.18257, D.18259
	ldr	s0, [x0]	// D.18261, MEM[(float *)_362]
	str	s0, [sp, 188]	// D.18261, MEM[(float *)&ha.1298 + 4B]
	ldr	x2, [sp, 232]	// D.18262, argv.__vr_top
	sxtw	x0, w1	// D.18263, D.18235
	add	x0, x0, 32	// D.18264, D.18263,
	add	x0, x2, x0	// D.18265, D.18262, D.18264
	ldr	s0, [x0]	// D.18266, MEM[(float *)_368]
	str	s0, [sp, 192]	// D.18266, MEM[(float *)&ha.1298 + 8B]
	ldr	x2, [sp, 232]	// D.18267, argv.__vr_top
	sxtw	x0, w1	// D.18268, D.18235
	add	x0, x0, 48	// D.18269, D.18268,
	add	x0, x2, x0	// D.18270, D.18267, D.18269
	ldr	s0, [x0]	// D.18271, MEM[(float *)_374]
	str	s0, [sp, 196]	// D.18271, MEM[(float *)&ha.1298 + 12B]
	add	x0, sp, 184	// iftmp.1300,,
.L2451:
	ldp	x0, x1, [x0]	// D.6432, *iftmp.1299_64
// varargs-dll.c:1077:   float h = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp397, D.6432
	asr	x0, x0, 32	// tmp398, tmp397,
	fmov	s0, w0	// tmp400, tmp399
	str	s0, [sp, 64]	// tmp400, h
// varargs-dll.c:1078:   float i = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 244]	// D.18272, argv.__vr_offs
	ldr	x0, [sp, 216]	// iftmp.1304, argv.__stack
	cmp	w1, 0	// D.18272,
	blt	.L2454		//,
	add	x1, x0, 23	// D.18278, iftmp.1304,
	and	x1, x1, -8	// D.18279, D.18278,
	str	x1, [sp, 216]	// D.18279, argv.__stack
	b	.L2455		//
.L2454:
	add	w2, w1, 64	// D.18281, D.18272,
	str	w2, [sp, 244]	// D.18281, argv.__vr_offs
	ldr	w2, [sp, 244]	// D.18283, argv.__vr_offs
	cmp	w2, 0	// D.18283,
	ble	.L2456		//,
	add	x1, x0, 23	// D.18286, iftmp.1304,
	and	x1, x1, -8	// D.18287, D.18286,
	str	x1, [sp, 216]	// D.18287, argv.__stack
	b	.L2455		//
.L2456:
	ldr	x2, [sp, 232]	// D.18289, argv.__vr_top
	sxtw	x0, w1	// D.18290, D.18272
	add	x2, x2, x0	// D.18291, D.18289, D.18290
	add	x0, sp, 200	// ha.1305,,
	ldr	s0, [x2]	// D.18293, MEM[(float *)_395]
	str	s0, [x0]	// D.18293, MEM[(float *)ha.1305_396]
	ldr	x2, [sp, 232]	// D.18294, argv.__vr_top
	sxtw	x0, w1	// D.18295, D.18272
	add	x0, x0, 16	// D.18296, D.18295,
	add	x0, x2, x0	// D.18297, D.18294, D.18296
	ldr	s0, [x0]	// D.18298, MEM[(float *)_402]
	str	s0, [sp, 204]	// D.18298, MEM[(float *)&ha.1302 + 4B]
	ldr	x2, [sp, 232]	// D.18299, argv.__vr_top
	sxtw	x0, w1	// D.18300, D.18272
	add	x0, x0, 32	// D.18301, D.18300,
	add	x0, x2, x0	// D.18302, D.18299, D.18301
	ldr	s0, [x0]	// D.18303, MEM[(float *)_408]
	str	s0, [sp, 208]	// D.18303, MEM[(float *)&ha.1302 + 8B]
	ldr	x2, [sp, 232]	// D.18304, argv.__vr_top
	sxtw	x0, w1	// D.18305, D.18272
	add	x0, x0, 48	// D.18306, D.18305,
	add	x0, x2, x0	// D.18307, D.18304, D.18306
	ldr	s0, [x0]	// D.18308, MEM[(float *)_414]
	str	s0, [sp, 212]	// D.18308, MEM[(float *)&ha.1302 + 12B]
	add	x0, sp, 200	// iftmp.1304,,
.L2455:
	ldp	x0, x1, [x0]	// D.6433, *iftmp.1303_66
// varargs-dll.c:1078:   float i = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp401, D.6433,,
	fmov	s0, w0	// tmp403, tmp402
	str	s0, [sp, 68]	// tmp403, i
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s1, [sp, 36]	// tmp404, a
	ldr	s0, [sp, 40]	// tmp405, b
	fadd	s1, s1, s0	// _1, tmp404, tmp405
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 44]	// tmp406, c
	fadd	s1, s1, s0	// _2, _1, tmp406
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 48]	// tmp407, d
	fadd	s1, s1, s0	// _3, _2, tmp407
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 52]	// tmp408, e
	fadd	s1, s1, s0	// _4, _3, tmp408
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 56]	// tmp409, f
	fadd	s1, s1, s0	// _5, _4, tmp409
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 60]	// tmp410, g
	fadd	s1, s1, s0	// _6, _5, tmp410
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 64]	// tmp411, h
	fadd	s1, s1, s0	// _7, _6, tmp411
// varargs-dll.c:1080:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 68]	// tmp412, i
	fadd	s0, s1, s0	// _8, _7, tmp412
	fcvtzs	s0, s0	// _30, _8
	fmov	w1, s0	// <retval>, _30
// varargs-dll.c:1081: }
	adrp	x0, :got:__stack_chk_guard	// tmp415,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp414, tmp415,
	ldr	x3, [sp, 248]	// tmp417, D.18309
	ldr	x2, [x0]	// tmp418,
	subs	x3, x3, x2	// tmp417, tmp418
	mov	x2, 0	// tmp418
	beq	.L2459		//,
	bl	__stack_chk_fail		//
.L2459:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 448	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE70:
	.size	use_va_args_several_hfa_4_floats, .-use_va_args_several_hfa_4_floats
	.align	2
	.global	use_va_list_several_hfa_4_floats
	.type	use_va_list_several_hfa_4_floats, %function
use_va_list_several_hfa_4_floats:
.LFB71:
	.cfi_startproc
	stp	x29, x30, [sp, -240]!	//,,,
	.cfi_def_cfa_offset 240
	.cfi_offset 29, -240
	.cfi_offset 30, -232
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -224
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp363,
// varargs-dll.c:1085: {
	adrp	x0, :got:__stack_chk_guard	// tmp365,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp364, tmp365,
	ldr	x1, [x0]	// tmp413,
	str	x1, [sp, 232]	// tmp413, D.18646
	mov	x1, 0	// tmp413
// varargs-dll.c:1086:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.18313, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1308, argv.__stack
	cmp	w1, 0	// D.18313,
	blt	.L2461		//,
	add	x1, x0, 23	// D.18319, iftmp.1308,
	and	x1, x1, -8	// D.18320, D.18319,
	str	x1, [x19]	// D.18320, argv.__stack
	b	.L2462		//
.L2461:
	add	w2, w1, 64	// D.18322, D.18313,
	str	w2, [x19, 28]	// D.18322, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18324, argv.__vr_offs
	cmp	w2, 0	// D.18324,
	ble	.L2463		//,
	add	x1, x0, 23	// D.18327, iftmp.1308,
	and	x1, x1, -8	// D.18328, D.18327,
	str	x1, [x19]	// D.18328, argv.__stack
	b	.L2462		//
.L2463:
	ldr	x2, [x19, 16]	// D.18330, argv.__vr_top
	sxtw	x0, w1	// D.18331, D.18313
	add	x2, x2, x0	// D.18332, D.18330, D.18331
	add	x0, sp, 88	// ha.1309,,
	ldr	s0, [x2]	// D.18334, MEM[(float *)_72]
	str	s0, [x0]	// D.18334, MEM[(float *)ha.1309_73]
	ldr	x2, [x19, 16]	// D.18335, argv.__vr_top
	sxtw	x0, w1	// D.18336, D.18313
	add	x0, x0, 16	// D.18337, D.18336,
	add	x0, x2, x0	// D.18338, D.18335, D.18337
	ldr	s0, [x0]	// D.18339, MEM[(float *)_79]
	str	s0, [sp, 92]	// D.18339, MEM[(float *)&ha.1306 + 4B]
	ldr	x2, [x19, 16]	// D.18340, argv.__vr_top
	sxtw	x0, w1	// D.18341, D.18313
	add	x0, x0, 32	// D.18342, D.18341,
	add	x0, x2, x0	// D.18343, D.18340, D.18342
	ldr	s0, [x0]	// D.18344, MEM[(float *)_85]
	str	s0, [sp, 96]	// D.18344, MEM[(float *)&ha.1306 + 8B]
	ldr	x2, [x19, 16]	// D.18345, argv.__vr_top
	sxtw	x0, w1	// D.18346, D.18313
	add	x0, x0, 48	// D.18347, D.18346,
	add	x0, x2, x0	// D.18348, D.18345, D.18347
	ldr	s0, [x0]	// D.18349, MEM[(float *)_91]
	str	s0, [sp, 100]	// D.18349, MEM[(float *)&ha.1306 + 12B]
	add	x0, sp, 88	// iftmp.1308,,
.L2462:
	ldp	x0, x1, [x0]	// D.6437, *iftmp.1307_47
// varargs-dll.c:1086:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp366, D.6437,,
	fmov	s0, w0	// tmp368, tmp367
	str	s0, [sp, 52]	// tmp368, a
// varargs-dll.c:1087:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.18350, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1312, argv.__stack
	cmp	w1, 0	// D.18350,
	blt	.L2465		//,
	add	x1, x0, 23	// D.18356, iftmp.1312,
	and	x1, x1, -8	// D.18357, D.18356,
	str	x1, [x19]	// D.18357, argv.__stack
	b	.L2466		//
.L2465:
	add	w2, w1, 64	// D.18359, D.18350,
	str	w2, [x19, 28]	// D.18359, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18361, argv.__vr_offs
	cmp	w2, 0	// D.18361,
	ble	.L2467		//,
	add	x1, x0, 23	// D.18364, iftmp.1312,
	and	x1, x1, -8	// D.18365, D.18364,
	str	x1, [x19]	// D.18365, argv.__stack
	b	.L2466		//
.L2467:
	ldr	x2, [x19, 16]	// D.18367, argv.__vr_top
	sxtw	x0, w1	// D.18368, D.18350
	add	x2, x2, x0	// D.18369, D.18367, D.18368
	add	x0, sp, 104	// ha.1313,,
	ldr	s0, [x2]	// D.18371, MEM[(float *)_112]
	str	s0, [x0]	// D.18371, MEM[(float *)ha.1313_113]
	ldr	x2, [x19, 16]	// D.18372, argv.__vr_top
	sxtw	x0, w1	// D.18373, D.18350
	add	x0, x0, 16	// D.18374, D.18373,
	add	x0, x2, x0	// D.18375, D.18372, D.18374
	ldr	s0, [x0]	// D.18376, MEM[(float *)_119]
	str	s0, [sp, 108]	// D.18376, MEM[(float *)&ha.1310 + 4B]
	ldr	x2, [x19, 16]	// D.18377, argv.__vr_top
	sxtw	x0, w1	// D.18378, D.18350
	add	x0, x0, 32	// D.18379, D.18378,
	add	x0, x2, x0	// D.18380, D.18377, D.18379
	ldr	s0, [x0]	// D.18381, MEM[(float *)_125]
	str	s0, [sp, 112]	// D.18381, MEM[(float *)&ha.1310 + 8B]
	ldr	x2, [x19, 16]	// D.18382, argv.__vr_top
	sxtw	x0, w1	// D.18383, D.18350
	add	x0, x0, 48	// D.18384, D.18383,
	add	x0, x2, x0	// D.18385, D.18382, D.18384
	ldr	s0, [x0]	// D.18386, MEM[(float *)_131]
	str	s0, [sp, 116]	// D.18386, MEM[(float *)&ha.1310 + 12B]
	add	x0, sp, 104	// iftmp.1312,,
.L2466:
	ldp	x0, x1, [x0]	// D.6438, *iftmp.1311_49
// varargs-dll.c:1087:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp371, tmp370,
	fmov	s0, w0	// tmp373, tmp372
	str	s0, [sp, 56]	// tmp373, b
// varargs-dll.c:1088:   float c = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.18387, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1316, argv.__stack
	cmp	w1, 0	// D.18387,
	blt	.L2469		//,
	add	x1, x0, 23	// D.18393, iftmp.1316,
	and	x1, x1, -8	// D.18394, D.18393,
	str	x1, [x19]	// D.18394, argv.__stack
	b	.L2470		//
.L2469:
	add	w2, w1, 64	// D.18396, D.18387,
	str	w2, [x19, 28]	// D.18396, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18398, argv.__vr_offs
	cmp	w2, 0	// D.18398,
	ble	.L2471		//,
	add	x1, x0, 23	// D.18401, iftmp.1316,
	and	x1, x1, -8	// D.18402, D.18401,
	str	x1, [x19]	// D.18402, argv.__stack
	b	.L2470		//
.L2471:
	ldr	x2, [x19, 16]	// D.18404, argv.__vr_top
	sxtw	x0, w1	// D.18405, D.18387
	add	x2, x2, x0	// D.18406, D.18404, D.18405
	add	x0, sp, 120	// ha.1317,,
	ldr	s0, [x2]	// D.18408, MEM[(float *)_152]
	str	s0, [x0]	// D.18408, MEM[(float *)ha.1317_153]
	ldr	x2, [x19, 16]	// D.18409, argv.__vr_top
	sxtw	x0, w1	// D.18410, D.18387
	add	x0, x0, 16	// D.18411, D.18410,
	add	x0, x2, x0	// D.18412, D.18409, D.18411
	ldr	s0, [x0]	// D.18413, MEM[(float *)_159]
	str	s0, [sp, 124]	// D.18413, MEM[(float *)&ha.1314 + 4B]
	ldr	x2, [x19, 16]	// D.18414, argv.__vr_top
	sxtw	x0, w1	// D.18415, D.18387
	add	x0, x0, 32	// D.18416, D.18415,
	add	x0, x2, x0	// D.18417, D.18414, D.18416
	ldr	s0, [x0]	// D.18418, MEM[(float *)_165]
	str	s0, [sp, 128]	// D.18418, MEM[(float *)&ha.1314 + 8B]
	ldr	x2, [x19, 16]	// D.18419, argv.__vr_top
	sxtw	x0, w1	// D.18420, D.18387
	add	x0, x0, 48	// D.18421, D.18420,
	add	x0, x2, x0	// D.18422, D.18419, D.18421
	ldr	s0, [x0]	// D.18423, MEM[(float *)_171]
	str	s0, [sp, 132]	// D.18423, MEM[(float *)&ha.1314 + 12B]
	add	x0, sp, 120	// iftmp.1316,,
.L2470:
	ldp	x0, x1, [x0]	// D.6439, *iftmp.1315_51
// varargs-dll.c:1088:   float c = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp374, D.6439,,
	fmov	s0, w0	// tmp376, tmp375
	str	s0, [sp, 60]	// tmp376, c
// varargs-dll.c:1089:   float d = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.18424, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1320, argv.__stack
	cmp	w1, 0	// D.18424,
	blt	.L2473		//,
	add	x1, x0, 23	// D.18430, iftmp.1320,
	and	x1, x1, -8	// D.18431, D.18430,
	str	x1, [x19]	// D.18431, argv.__stack
	b	.L2474		//
.L2473:
	add	w2, w1, 64	// D.18433, D.18424,
	str	w2, [x19, 28]	// D.18433, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18435, argv.__vr_offs
	cmp	w2, 0	// D.18435,
	ble	.L2475		//,
	add	x1, x0, 23	// D.18438, iftmp.1320,
	and	x1, x1, -8	// D.18439, D.18438,
	str	x1, [x19]	// D.18439, argv.__stack
	b	.L2474		//
.L2475:
	ldr	x2, [x19, 16]	// D.18441, argv.__vr_top
	sxtw	x0, w1	// D.18442, D.18424
	add	x2, x2, x0	// D.18443, D.18441, D.18442
	add	x0, sp, 136	// ha.1321,,
	ldr	s0, [x2]	// D.18445, MEM[(float *)_192]
	str	s0, [x0]	// D.18445, MEM[(float *)ha.1321_193]
	ldr	x2, [x19, 16]	// D.18446, argv.__vr_top
	sxtw	x0, w1	// D.18447, D.18424
	add	x0, x0, 16	// D.18448, D.18447,
	add	x0, x2, x0	// D.18449, D.18446, D.18448
	ldr	s0, [x0]	// D.18450, MEM[(float *)_199]
	str	s0, [sp, 140]	// D.18450, MEM[(float *)&ha.1318 + 4B]
	ldr	x2, [x19, 16]	// D.18451, argv.__vr_top
	sxtw	x0, w1	// D.18452, D.18424
	add	x0, x0, 32	// D.18453, D.18452,
	add	x0, x2, x0	// D.18454, D.18451, D.18453
	ldr	s0, [x0]	// D.18455, MEM[(float *)_205]
	str	s0, [sp, 144]	// D.18455, MEM[(float *)&ha.1318 + 8B]
	ldr	x2, [x19, 16]	// D.18456, argv.__vr_top
	sxtw	x0, w1	// D.18457, D.18424
	add	x0, x0, 48	// D.18458, D.18457,
	add	x0, x2, x0	// D.18459, D.18456, D.18458
	ldr	s0, [x0]	// D.18460, MEM[(float *)_211]
	str	s0, [sp, 148]	// D.18460, MEM[(float *)&ha.1318 + 12B]
	add	x0, sp, 136	// iftmp.1320,,
.L2474:
	ldp	x0, x1, [x0]	// D.6440, *iftmp.1319_53
// varargs-dll.c:1089:   float d = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp378, D.6440
	asr	x0, x0, 32	// tmp379, tmp378,
	fmov	s0, w0	// tmp381, tmp380
	str	s0, [sp, 64]	// tmp381, d
// varargs-dll.c:1090:   float e = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.18461, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1324, argv.__stack
	cmp	w1, 0	// D.18461,
	blt	.L2477		//,
	add	x1, x0, 23	// D.18467, iftmp.1324,
	and	x1, x1, -8	// D.18468, D.18467,
	str	x1, [x19]	// D.18468, argv.__stack
	b	.L2478		//
.L2477:
	add	w2, w1, 64	// D.18470, D.18461,
	str	w2, [x19, 28]	// D.18470, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18472, argv.__vr_offs
	cmp	w2, 0	// D.18472,
	ble	.L2479		//,
	add	x1, x0, 23	// D.18475, iftmp.1324,
	and	x1, x1, -8	// D.18476, D.18475,
	str	x1, [x19]	// D.18476, argv.__stack
	b	.L2478		//
.L2479:
	ldr	x2, [x19, 16]	// D.18478, argv.__vr_top
	sxtw	x0, w1	// D.18479, D.18461
	add	x2, x2, x0	// D.18480, D.18478, D.18479
	add	x0, sp, 152	// ha.1325,,
	ldr	s0, [x2]	// D.18482, MEM[(float *)_232]
	str	s0, [x0]	// D.18482, MEM[(float *)ha.1325_233]
	ldr	x2, [x19, 16]	// D.18483, argv.__vr_top
	sxtw	x0, w1	// D.18484, D.18461
	add	x0, x0, 16	// D.18485, D.18484,
	add	x0, x2, x0	// D.18486, D.18483, D.18485
	ldr	s0, [x0]	// D.18487, MEM[(float *)_239]
	str	s0, [sp, 156]	// D.18487, MEM[(float *)&ha.1322 + 4B]
	ldr	x2, [x19, 16]	// D.18488, argv.__vr_top
	sxtw	x0, w1	// D.18489, D.18461
	add	x0, x0, 32	// D.18490, D.18489,
	add	x0, x2, x0	// D.18491, D.18488, D.18490
	ldr	s0, [x0]	// D.18492, MEM[(float *)_245]
	str	s0, [sp, 160]	// D.18492, MEM[(float *)&ha.1322 + 8B]
	ldr	x2, [x19, 16]	// D.18493, argv.__vr_top
	sxtw	x0, w1	// D.18494, D.18461
	add	x0, x0, 48	// D.18495, D.18494,
	add	x0, x2, x0	// D.18496, D.18493, D.18495
	ldr	s0, [x0]	// D.18497, MEM[(float *)_251]
	str	s0, [sp, 164]	// D.18497, MEM[(float *)&ha.1322 + 12B]
	add	x0, sp, 152	// iftmp.1324,,
.L2478:
	ldp	x0, x1, [x0]	// D.6441, *iftmp.1323_55
// varargs-dll.c:1090:   float e = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp382, D.6441,,
	fmov	s0, w0	// tmp384, tmp383
	str	s0, [sp, 68]	// tmp384, e
// varargs-dll.c:1091:   float f = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.18498, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1328, argv.__stack
	cmp	w1, 0	// D.18498,
	blt	.L2481		//,
	add	x1, x0, 23	// D.18504, iftmp.1328,
	and	x1, x1, -8	// D.18505, D.18504,
	str	x1, [x19]	// D.18505, argv.__stack
	b	.L2482		//
.L2481:
	add	w2, w1, 64	// D.18507, D.18498,
	str	w2, [x19, 28]	// D.18507, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18509, argv.__vr_offs
	cmp	w2, 0	// D.18509,
	ble	.L2483		//,
	add	x1, x0, 23	// D.18512, iftmp.1328,
	and	x1, x1, -8	// D.18513, D.18512,
	str	x1, [x19]	// D.18513, argv.__stack
	b	.L2482		//
.L2483:
	ldr	x2, [x19, 16]	// D.18515, argv.__vr_top
	sxtw	x0, w1	// D.18516, D.18498
	add	x2, x2, x0	// D.18517, D.18515, D.18516
	add	x0, sp, 168	// ha.1329,,
	ldr	s0, [x2]	// D.18519, MEM[(float *)_272]
	str	s0, [x0]	// D.18519, MEM[(float *)ha.1329_273]
	ldr	x2, [x19, 16]	// D.18520, argv.__vr_top
	sxtw	x0, w1	// D.18521, D.18498
	add	x0, x0, 16	// D.18522, D.18521,
	add	x0, x2, x0	// D.18523, D.18520, D.18522
	ldr	s0, [x0]	// D.18524, MEM[(float *)_279]
	str	s0, [sp, 172]	// D.18524, MEM[(float *)&ha.1326 + 4B]
	ldr	x2, [x19, 16]	// D.18525, argv.__vr_top
	sxtw	x0, w1	// D.18526, D.18498
	add	x0, x0, 32	// D.18527, D.18526,
	add	x0, x2, x0	// D.18528, D.18525, D.18527
	ldr	s0, [x0]	// D.18529, MEM[(float *)_285]
	str	s0, [sp, 176]	// D.18529, MEM[(float *)&ha.1326 + 8B]
	ldr	x2, [x19, 16]	// D.18530, argv.__vr_top
	sxtw	x0, w1	// D.18531, D.18498
	add	x0, x0, 48	// D.18532, D.18531,
	add	x0, x2, x0	// D.18533, D.18530, D.18532
	ldr	s0, [x0]	// D.18534, MEM[(float *)_291]
	str	s0, [sp, 180]	// D.18534, MEM[(float *)&ha.1326 + 12B]
	add	x0, sp, 168	// iftmp.1328,,
.L2482:
	ldp	x0, x1, [x0]	// D.6442, *iftmp.1327_57
// varargs-dll.c:1091:   float f = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp387, tmp386,
	fmov	s0, w0	// tmp389, tmp388
	str	s0, [sp, 72]	// tmp389, f
// varargs-dll.c:1092:   float g = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.18535, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1332, argv.__stack
	cmp	w1, 0	// D.18535,
	blt	.L2485		//,
	add	x1, x0, 23	// D.18541, iftmp.1332,
	and	x1, x1, -8	// D.18542, D.18541,
	str	x1, [x19]	// D.18542, argv.__stack
	b	.L2486		//
.L2485:
	add	w2, w1, 64	// D.18544, D.18535,
	str	w2, [x19, 28]	// D.18544, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18546, argv.__vr_offs
	cmp	w2, 0	// D.18546,
	ble	.L2487		//,
	add	x1, x0, 23	// D.18549, iftmp.1332,
	and	x1, x1, -8	// D.18550, D.18549,
	str	x1, [x19]	// D.18550, argv.__stack
	b	.L2486		//
.L2487:
	ldr	x2, [x19, 16]	// D.18552, argv.__vr_top
	sxtw	x0, w1	// D.18553, D.18535
	add	x2, x2, x0	// D.18554, D.18552, D.18553
	add	x0, sp, 184	// ha.1333,,
	ldr	s0, [x2]	// D.18556, MEM[(float *)_312]
	str	s0, [x0]	// D.18556, MEM[(float *)ha.1333_313]
	ldr	x2, [x19, 16]	// D.18557, argv.__vr_top
	sxtw	x0, w1	// D.18558, D.18535
	add	x0, x0, 16	// D.18559, D.18558,
	add	x0, x2, x0	// D.18560, D.18557, D.18559
	ldr	s0, [x0]	// D.18561, MEM[(float *)_319]
	str	s0, [sp, 188]	// D.18561, MEM[(float *)&ha.1330 + 4B]
	ldr	x2, [x19, 16]	// D.18562, argv.__vr_top
	sxtw	x0, w1	// D.18563, D.18535
	add	x0, x0, 32	// D.18564, D.18563,
	add	x0, x2, x0	// D.18565, D.18562, D.18564
	ldr	s0, [x0]	// D.18566, MEM[(float *)_325]
	str	s0, [sp, 192]	// D.18566, MEM[(float *)&ha.1330 + 8B]
	ldr	x2, [x19, 16]	// D.18567, argv.__vr_top
	sxtw	x0, w1	// D.18568, D.18535
	add	x0, x0, 48	// D.18569, D.18568,
	add	x0, x2, x0	// D.18570, D.18567, D.18569
	ldr	s0, [x0]	// D.18571, MEM[(float *)_331]
	str	s0, [sp, 196]	// D.18571, MEM[(float *)&ha.1330 + 12B]
	add	x0, sp, 184	// iftmp.1332,,
.L2486:
	ldp	x0, x1, [x0]	// D.6443, *iftmp.1331_59
// varargs-dll.c:1092:   float g = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp390, D.6443,,
	fmov	s0, w0	// tmp392, tmp391
	str	s0, [sp, 76]	// tmp392, g
// varargs-dll.c:1093:   float h = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.18572, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1336, argv.__stack
	cmp	w1, 0	// D.18572,
	blt	.L2489		//,
	add	x1, x0, 23	// D.18578, iftmp.1336,
	and	x1, x1, -8	// D.18579, D.18578,
	str	x1, [x19]	// D.18579, argv.__stack
	b	.L2490		//
.L2489:
	add	w2, w1, 64	// D.18581, D.18572,
	str	w2, [x19, 28]	// D.18581, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18583, argv.__vr_offs
	cmp	w2, 0	// D.18583,
	ble	.L2491		//,
	add	x1, x0, 23	// D.18586, iftmp.1336,
	and	x1, x1, -8	// D.18587, D.18586,
	str	x1, [x19]	// D.18587, argv.__stack
	b	.L2490		//
.L2491:
	ldr	x2, [x19, 16]	// D.18589, argv.__vr_top
	sxtw	x0, w1	// D.18590, D.18572
	add	x2, x2, x0	// D.18591, D.18589, D.18590
	add	x0, sp, 200	// ha.1337,,
	ldr	s0, [x2]	// D.18593, MEM[(float *)_352]
	str	s0, [x0]	// D.18593, MEM[(float *)ha.1337_353]
	ldr	x2, [x19, 16]	// D.18594, argv.__vr_top
	sxtw	x0, w1	// D.18595, D.18572
	add	x0, x0, 16	// D.18596, D.18595,
	add	x0, x2, x0	// D.18597, D.18594, D.18596
	ldr	s0, [x0]	// D.18598, MEM[(float *)_359]
	str	s0, [sp, 204]	// D.18598, MEM[(float *)&ha.1334 + 4B]
	ldr	x2, [x19, 16]	// D.18599, argv.__vr_top
	sxtw	x0, w1	// D.18600, D.18572
	add	x0, x0, 32	// D.18601, D.18600,
	add	x0, x2, x0	// D.18602, D.18599, D.18601
	ldr	s0, [x0]	// D.18603, MEM[(float *)_365]
	str	s0, [sp, 208]	// D.18603, MEM[(float *)&ha.1334 + 8B]
	ldr	x2, [x19, 16]	// D.18604, argv.__vr_top
	sxtw	x0, w1	// D.18605, D.18572
	add	x0, x0, 48	// D.18606, D.18605,
	add	x0, x2, x0	// D.18607, D.18604, D.18606
	ldr	s0, [x0]	// D.18608, MEM[(float *)_371]
	str	s0, [sp, 212]	// D.18608, MEM[(float *)&ha.1334 + 12B]
	add	x0, sp, 200	// iftmp.1336,,
.L2490:
	ldp	x0, x1, [x0]	// D.6444, *iftmp.1335_61
// varargs-dll.c:1093:   float h = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp394, D.6444
	asr	x0, x0, 32	// tmp395, tmp394,
	fmov	s0, w0	// tmp397, tmp396
	str	s0, [sp, 80]	// tmp397, h
// varargs-dll.c:1094:   float i = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.18609, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1340, argv.__stack
	cmp	w1, 0	// D.18609,
	blt	.L2493		//,
	add	x1, x0, 23	// D.18615, iftmp.1340,
	and	x1, x1, -8	// D.18616, D.18615,
	str	x1, [x19]	// D.18616, argv.__stack
	b	.L2494		//
.L2493:
	add	w2, w1, 64	// D.18618, D.18609,
	str	w2, [x19, 28]	// D.18618, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.18620, argv.__vr_offs
	cmp	w2, 0	// D.18620,
	ble	.L2495		//,
	add	x1, x0, 23	// D.18623, iftmp.1340,
	and	x1, x1, -8	// D.18624, D.18623,
	str	x1, [x19]	// D.18624, argv.__stack
	b	.L2494		//
.L2495:
	ldr	x2, [x19, 16]	// D.18626, argv.__vr_top
	sxtw	x0, w1	// D.18627, D.18609
	add	x2, x2, x0	// D.18628, D.18626, D.18627
	add	x0, sp, 216	// ha.1341,,
	ldr	s0, [x2]	// D.18630, MEM[(float *)_392]
	str	s0, [x0]	// D.18630, MEM[(float *)ha.1341_393]
	ldr	x2, [x19, 16]	// D.18631, argv.__vr_top
	sxtw	x0, w1	// D.18632, D.18609
	add	x0, x0, 16	// D.18633, D.18632,
	add	x0, x2, x0	// D.18634, D.18631, D.18633
	ldr	s0, [x0]	// D.18635, MEM[(float *)_399]
	str	s0, [sp, 220]	// D.18635, MEM[(float *)&ha.1338 + 4B]
	ldr	x2, [x19, 16]	// D.18636, argv.__vr_top
	sxtw	x0, w1	// D.18637, D.18609
	add	x0, x0, 32	// D.18638, D.18637,
	add	x0, x2, x0	// D.18639, D.18636, D.18638
	ldr	s0, [x0]	// D.18640, MEM[(float *)_405]
	str	s0, [sp, 224]	// D.18640, MEM[(float *)&ha.1338 + 8B]
	ldr	x2, [x19, 16]	// D.18641, argv.__vr_top
	sxtw	x0, w1	// D.18642, D.18609
	add	x0, x0, 48	// D.18643, D.18642,
	add	x0, x2, x0	// D.18644, D.18641, D.18643
	ldr	s0, [x0]	// D.18645, MEM[(float *)_411]
	str	s0, [sp, 228]	// D.18645, MEM[(float *)&ha.1338 + 12B]
	add	x0, sp, 216	// iftmp.1340,,
.L2494:
	ldp	x0, x1, [x0]	// D.6445, *iftmp.1339_63
// varargs-dll.c:1094:   float i = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp398, D.6445,,
	fmov	s0, w0	// tmp400, tmp399
	str	s0, [sp, 84]	// tmp400, i
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s1, [sp, 52]	// tmp401, a
	ldr	s0, [sp, 56]	// tmp402, b
	fadd	s1, s1, s0	// _1, tmp401, tmp402
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 60]	// tmp403, c
	fadd	s1, s1, s0	// _2, _1, tmp403
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 64]	// tmp404, d
	fadd	s1, s1, s0	// _3, _2, tmp404
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 68]	// tmp405, e
	fadd	s1, s1, s0	// _4, _3, tmp405
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 72]	// tmp406, f
	fadd	s1, s1, s0	// _5, _4, tmp406
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 76]	// tmp407, g
	fadd	s1, s1, s0	// _6, _5, tmp407
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 80]	// tmp408, h
	fadd	s1, s1, s0	// _7, _6, tmp408
// varargs-dll.c:1095:   return a + b + c + d + e + f + g + h + i;
	ldr	s0, [sp, 84]	// tmp409, i
	fadd	s0, s1, s0	// _8, _7, tmp409
	fcvtzs	s0, s0	// _28, _8
	fmov	w1, s0	// <retval>, _28
// varargs-dll.c:1096: }
	adrp	x0, :got:__stack_chk_guard	// tmp412,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp411, tmp412,
	ldr	x3, [sp, 232]	// tmp414, D.18646
	ldr	x2, [x0]	// tmp415,
	subs	x3, x3, x2	// tmp414, tmp415
	mov	x2, 0	// tmp415
	beq	.L2498		//,
	bl	__stack_chk_fail		//
.L2498:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 240	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE71:
	.size	use_va_list_several_hfa_4_floats, .-use_va_list_several_hfa_4_floats
	.align	2
	.global	use_va_args_many_hfa_4_floats
	.type	use_va_args_many_hfa_4_floats, %function
use_va_args_many_hfa_4_floats:
.LFB72:
	.cfi_startproc
	sub	sp, sp, #608	//,,
	.cfi_def_cfa_offset 608
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -608
	.cfi_offset 30, -600
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 552]	//,
	str	x2, [sp, 560]	//,
	str	x3, [sp, 568]	//,
	str	x4, [sp, 576]	//,
	str	x5, [sp, 584]	//,
	str	x6, [sp, 592]	//,
	str	x7, [sp, 600]	//,
	str	q0, [sp, 416]	//,
	str	q1, [sp, 432]	//,
	str	q2, [sp, 448]	//,
	str	q3, [sp, 464]	//,
	str	q4, [sp, 480]	//,
	str	q5, [sp, 496]	//,
	add	x0, sp, 512	// tmp701,,
	str	q6, [x0]	//,
	add	x0, sp, 512	// tmp703,,
	str	q7, [x0, 16]	//,
// varargs-dll.c:1100: {
	adrp	x0, :got:__stack_chk_guard	// tmp604,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp603, tmp604,
	ldr	x1, [x0]	// tmp696,
	str	x1, [sp, 408]	// tmp696, D.19276
	mov	x1, 0	// tmp696
// varargs-dll.c:1102:   va_start (argv, format);
	add	x0, sp, 608	// tmp705,,
	str	x0, [sp, 376]	// tmp705, MEM[(struct  *)&argv].__stack
	add	x0, sp, 608	// tmp706,,
	str	x0, [sp, 384]	// tmp706, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 544	// tmp606,,
	str	x0, [sp, 392]	// tmp606, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp607,
	str	w0, [sp, 400]	// tmp607, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp608,
	str	w0, [sp, 404]	// tmp608, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1103:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 404]	// D.18647, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1344, argv.__stack
	cmp	w1, 0	// D.18647,
	blt	.L2500		//,
	add	x1, x0, 23	// D.18653, iftmp.1344,
	and	x1, x1, -8	// D.18654, D.18653,
	str	x1, [sp, 376]	// D.18654, argv.__stack
	b	.L2501		//
.L2500:
	add	w2, w1, 64	// D.18656, D.18647,
	str	w2, [sp, 404]	// D.18656, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18658, argv.__vr_offs
	cmp	w2, 0	// D.18658,
	ble	.L2502		//,
	add	x1, x0, 23	// D.18661, iftmp.1344,
	and	x1, x1, -8	// D.18662, D.18661,
	str	x1, [sp, 376]	// D.18662, argv.__stack
	b	.L2501		//
.L2502:
	ldr	x2, [sp, 392]	// D.18664, argv.__vr_top
	sxtw	x0, w1	// D.18665, D.18647
	add	x2, x2, x0	// D.18666, D.18664, D.18665
	add	x0, sp, 104	// ha.1345,,
	ldr	s0, [x2]	// D.18668, MEM[(float *)_131]
	str	s0, [x0]	// D.18668, MEM[(float *)ha.1345_132]
	ldr	x2, [sp, 392]	// D.18669, argv.__vr_top
	sxtw	x0, w1	// D.18670, D.18647
	add	x0, x0, 16	// D.18671, D.18670,
	add	x0, x2, x0	// D.18672, D.18669, D.18671
	ldr	s0, [x0]	// D.18673, MEM[(float *)_138]
	str	s0, [sp, 108]	// D.18673, MEM[(float *)&ha.1342 + 4B]
	ldr	x2, [sp, 392]	// D.18674, argv.__vr_top
	sxtw	x0, w1	// D.18675, D.18647
	add	x0, x0, 32	// D.18676, D.18675,
	add	x0, x2, x0	// D.18677, D.18674, D.18676
	ldr	s0, [x0]	// D.18678, MEM[(float *)_144]
	str	s0, [sp, 112]	// D.18678, MEM[(float *)&ha.1342 + 8B]
	ldr	x2, [sp, 392]	// D.18679, argv.__vr_top
	sxtw	x0, w1	// D.18680, D.18647
	add	x0, x0, 48	// D.18681, D.18680,
	add	x0, x2, x0	// D.18682, D.18679, D.18681
	ldr	s0, [x0]	// D.18683, MEM[(float *)_150]
	str	s0, [sp, 116]	// D.18683, MEM[(float *)&ha.1342 + 12B]
	add	x0, sp, 104	// iftmp.1344,,
.L2501:
	ldp	x0, x1, [x0]	// D.6448, *iftmp.1343_90
// varargs-dll.c:1103:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp609, D.6448,,
	fmov	s0, w0	// tmp611, tmp610
	str	s0, [sp, 36]	// tmp611, a
// varargs-dll.c:1104:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 404]	// D.18684, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1348, argv.__stack
	cmp	w1, 0	// D.18684,
	blt	.L2504		//,
	add	x1, x0, 23	// D.18690, iftmp.1348,
	and	x1, x1, -8	// D.18691, D.18690,
	str	x1, [sp, 376]	// D.18691, argv.__stack
	b	.L2505		//
.L2504:
	add	w2, w1, 64	// D.18693, D.18684,
	str	w2, [sp, 404]	// D.18693, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18695, argv.__vr_offs
	cmp	w2, 0	// D.18695,
	ble	.L2506		//,
	add	x1, x0, 23	// D.18698, iftmp.1348,
	and	x1, x1, -8	// D.18699, D.18698,
	str	x1, [sp, 376]	// D.18699, argv.__stack
	b	.L2505		//
.L2506:
	ldr	x2, [sp, 392]	// D.18701, argv.__vr_top
	sxtw	x0, w1	// D.18702, D.18684
	add	x2, x2, x0	// D.18703, D.18701, D.18702
	add	x0, sp, 120	// ha.1349,,
	ldr	s0, [x2]	// D.18705, MEM[(float *)_171]
	str	s0, [x0]	// D.18705, MEM[(float *)ha.1349_172]
	ldr	x2, [sp, 392]	// D.18706, argv.__vr_top
	sxtw	x0, w1	// D.18707, D.18684
	add	x0, x0, 16	// D.18708, D.18707,
	add	x0, x2, x0	// D.18709, D.18706, D.18708
	ldr	s0, [x0]	// D.18710, MEM[(float *)_178]
	str	s0, [sp, 124]	// D.18710, MEM[(float *)&ha.1346 + 4B]
	ldr	x2, [sp, 392]	// D.18711, argv.__vr_top
	sxtw	x0, w1	// D.18712, D.18684
	add	x0, x0, 32	// D.18713, D.18712,
	add	x0, x2, x0	// D.18714, D.18711, D.18713
	ldr	s0, [x0]	// D.18715, MEM[(float *)_184]
	str	s0, [sp, 128]	// D.18715, MEM[(float *)&ha.1346 + 8B]
	ldr	x2, [sp, 392]	// D.18716, argv.__vr_top
	sxtw	x0, w1	// D.18717, D.18684
	add	x0, x0, 48	// D.18718, D.18717,
	add	x0, x2, x0	// D.18719, D.18716, D.18718
	ldr	s0, [x0]	// D.18720, MEM[(float *)_190]
	str	s0, [sp, 132]	// D.18720, MEM[(float *)&ha.1346 + 12B]
	add	x0, sp, 120	// iftmp.1348,,
.L2505:
	ldp	x0, x1, [x0]	// D.6449, *iftmp.1347_92
// varargs-dll.c:1104:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp614, tmp613,
	fmov	s0, w0	// tmp616, tmp615
	str	s0, [sp, 40]	// tmp616, b
// varargs-dll.c:1105:   float c = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 404]	// D.18721, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1352, argv.__stack
	cmp	w1, 0	// D.18721,
	blt	.L2508		//,
	add	x1, x0, 23	// D.18727, iftmp.1352,
	and	x1, x1, -8	// D.18728, D.18727,
	str	x1, [sp, 376]	// D.18728, argv.__stack
	b	.L2509		//
.L2508:
	add	w2, w1, 64	// D.18730, D.18721,
	str	w2, [sp, 404]	// D.18730, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18732, argv.__vr_offs
	cmp	w2, 0	// D.18732,
	ble	.L2510		//,
	add	x1, x0, 23	// D.18735, iftmp.1352,
	and	x1, x1, -8	// D.18736, D.18735,
	str	x1, [sp, 376]	// D.18736, argv.__stack
	b	.L2509		//
.L2510:
	ldr	x2, [sp, 392]	// D.18738, argv.__vr_top
	sxtw	x0, w1	// D.18739, D.18721
	add	x2, x2, x0	// D.18740, D.18738, D.18739
	add	x0, sp, 136	// ha.1353,,
	ldr	s0, [x2]	// D.18742, MEM[(float *)_211]
	str	s0, [x0]	// D.18742, MEM[(float *)ha.1353_212]
	ldr	x2, [sp, 392]	// D.18743, argv.__vr_top
	sxtw	x0, w1	// D.18744, D.18721
	add	x0, x0, 16	// D.18745, D.18744,
	add	x0, x2, x0	// D.18746, D.18743, D.18745
	ldr	s0, [x0]	// D.18747, MEM[(float *)_218]
	str	s0, [sp, 140]	// D.18747, MEM[(float *)&ha.1350 + 4B]
	ldr	x2, [sp, 392]	// D.18748, argv.__vr_top
	sxtw	x0, w1	// D.18749, D.18721
	add	x0, x0, 32	// D.18750, D.18749,
	add	x0, x2, x0	// D.18751, D.18748, D.18750
	ldr	s0, [x0]	// D.18752, MEM[(float *)_224]
	str	s0, [sp, 144]	// D.18752, MEM[(float *)&ha.1350 + 8B]
	ldr	x2, [sp, 392]	// D.18753, argv.__vr_top
	sxtw	x0, w1	// D.18754, D.18721
	add	x0, x0, 48	// D.18755, D.18754,
	add	x0, x2, x0	// D.18756, D.18753, D.18755
	ldr	s0, [x0]	// D.18757, MEM[(float *)_230]
	str	s0, [sp, 148]	// D.18757, MEM[(float *)&ha.1350 + 12B]
	add	x0, sp, 136	// iftmp.1352,,
.L2509:
	ldp	x0, x1, [x0]	// D.6450, *iftmp.1351_94
// varargs-dll.c:1105:   float c = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp617, D.6450,,
	fmov	s0, w0	// tmp619, tmp618
	str	s0, [sp, 44]	// tmp619, c
// varargs-dll.c:1106:   float d = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 404]	// D.18758, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1356, argv.__stack
	cmp	w1, 0	// D.18758,
	blt	.L2512		//,
	add	x1, x0, 23	// D.18764, iftmp.1356,
	and	x1, x1, -8	// D.18765, D.18764,
	str	x1, [sp, 376]	// D.18765, argv.__stack
	b	.L2513		//
.L2512:
	add	w2, w1, 64	// D.18767, D.18758,
	str	w2, [sp, 404]	// D.18767, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18769, argv.__vr_offs
	cmp	w2, 0	// D.18769,
	ble	.L2514		//,
	add	x1, x0, 23	// D.18772, iftmp.1356,
	and	x1, x1, -8	// D.18773, D.18772,
	str	x1, [sp, 376]	// D.18773, argv.__stack
	b	.L2513		//
.L2514:
	ldr	x2, [sp, 392]	// D.18775, argv.__vr_top
	sxtw	x0, w1	// D.18776, D.18758
	add	x2, x2, x0	// D.18777, D.18775, D.18776
	add	x0, sp, 152	// ha.1357,,
	ldr	s0, [x2]	// D.18779, MEM[(float *)_251]
	str	s0, [x0]	// D.18779, MEM[(float *)ha.1357_252]
	ldr	x2, [sp, 392]	// D.18780, argv.__vr_top
	sxtw	x0, w1	// D.18781, D.18758
	add	x0, x0, 16	// D.18782, D.18781,
	add	x0, x2, x0	// D.18783, D.18780, D.18782
	ldr	s0, [x0]	// D.18784, MEM[(float *)_258]
	str	s0, [sp, 156]	// D.18784, MEM[(float *)&ha.1354 + 4B]
	ldr	x2, [sp, 392]	// D.18785, argv.__vr_top
	sxtw	x0, w1	// D.18786, D.18758
	add	x0, x0, 32	// D.18787, D.18786,
	add	x0, x2, x0	// D.18788, D.18785, D.18787
	ldr	s0, [x0]	// D.18789, MEM[(float *)_264]
	str	s0, [sp, 160]	// D.18789, MEM[(float *)&ha.1354 + 8B]
	ldr	x2, [sp, 392]	// D.18790, argv.__vr_top
	sxtw	x0, w1	// D.18791, D.18758
	add	x0, x0, 48	// D.18792, D.18791,
	add	x0, x2, x0	// D.18793, D.18790, D.18792
	ldr	s0, [x0]	// D.18794, MEM[(float *)_270]
	str	s0, [sp, 164]	// D.18794, MEM[(float *)&ha.1354 + 12B]
	add	x0, sp, 152	// iftmp.1356,,
.L2513:
	ldp	x0, x1, [x0]	// D.6451, *iftmp.1355_96
// varargs-dll.c:1106:   float d = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp621, D.6451
	asr	x0, x0, 32	// tmp622, tmp621,
	fmov	s0, w0	// tmp624, tmp623
	str	s0, [sp, 48]	// tmp624, d
// varargs-dll.c:1107:   float e = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 404]	// D.18795, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1360, argv.__stack
	cmp	w1, 0	// D.18795,
	blt	.L2516		//,
	add	x1, x0, 23	// D.18801, iftmp.1360,
	and	x1, x1, -8	// D.18802, D.18801,
	str	x1, [sp, 376]	// D.18802, argv.__stack
	b	.L2517		//
.L2516:
	add	w2, w1, 64	// D.18804, D.18795,
	str	w2, [sp, 404]	// D.18804, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18806, argv.__vr_offs
	cmp	w2, 0	// D.18806,
	ble	.L2518		//,
	add	x1, x0, 23	// D.18809, iftmp.1360,
	and	x1, x1, -8	// D.18810, D.18809,
	str	x1, [sp, 376]	// D.18810, argv.__stack
	b	.L2517		//
.L2518:
	ldr	x2, [sp, 392]	// D.18812, argv.__vr_top
	sxtw	x0, w1	// D.18813, D.18795
	add	x2, x2, x0	// D.18814, D.18812, D.18813
	add	x0, sp, 168	// ha.1361,,
	ldr	s0, [x2]	// D.18816, MEM[(float *)_291]
	str	s0, [x0]	// D.18816, MEM[(float *)ha.1361_292]
	ldr	x2, [sp, 392]	// D.18817, argv.__vr_top
	sxtw	x0, w1	// D.18818, D.18795
	add	x0, x0, 16	// D.18819, D.18818,
	add	x0, x2, x0	// D.18820, D.18817, D.18819
	ldr	s0, [x0]	// D.18821, MEM[(float *)_298]
	str	s0, [sp, 172]	// D.18821, MEM[(float *)&ha.1358 + 4B]
	ldr	x2, [sp, 392]	// D.18822, argv.__vr_top
	sxtw	x0, w1	// D.18823, D.18795
	add	x0, x0, 32	// D.18824, D.18823,
	add	x0, x2, x0	// D.18825, D.18822, D.18824
	ldr	s0, [x0]	// D.18826, MEM[(float *)_304]
	str	s0, [sp, 176]	// D.18826, MEM[(float *)&ha.1358 + 8B]
	ldr	x2, [sp, 392]	// D.18827, argv.__vr_top
	sxtw	x0, w1	// D.18828, D.18795
	add	x0, x0, 48	// D.18829, D.18828,
	add	x0, x2, x0	// D.18830, D.18827, D.18829
	ldr	s0, [x0]	// D.18831, MEM[(float *)_310]
	str	s0, [sp, 180]	// D.18831, MEM[(float *)&ha.1358 + 12B]
	add	x0, sp, 168	// iftmp.1360,,
.L2517:
	ldp	x0, x1, [x0]	// D.6452, *iftmp.1359_98
// varargs-dll.c:1107:   float e = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp625, D.6452,,
	fmov	s0, w0	// tmp627, tmp626
	str	s0, [sp, 52]	// tmp627, e
// varargs-dll.c:1108:   float f = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 404]	// D.18832, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1364, argv.__stack
	cmp	w1, 0	// D.18832,
	blt	.L2520		//,
	add	x1, x0, 23	// D.18838, iftmp.1364,
	and	x1, x1, -8	// D.18839, D.18838,
	str	x1, [sp, 376]	// D.18839, argv.__stack
	b	.L2521		//
.L2520:
	add	w2, w1, 64	// D.18841, D.18832,
	str	w2, [sp, 404]	// D.18841, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18843, argv.__vr_offs
	cmp	w2, 0	// D.18843,
	ble	.L2522		//,
	add	x1, x0, 23	// D.18846, iftmp.1364,
	and	x1, x1, -8	// D.18847, D.18846,
	str	x1, [sp, 376]	// D.18847, argv.__stack
	b	.L2521		//
.L2522:
	ldr	x2, [sp, 392]	// D.18849, argv.__vr_top
	sxtw	x0, w1	// D.18850, D.18832
	add	x2, x2, x0	// D.18851, D.18849, D.18850
	add	x0, sp, 184	// ha.1365,,
	ldr	s0, [x2]	// D.18853, MEM[(float *)_331]
	str	s0, [x0]	// D.18853, MEM[(float *)ha.1365_332]
	ldr	x2, [sp, 392]	// D.18854, argv.__vr_top
	sxtw	x0, w1	// D.18855, D.18832
	add	x0, x0, 16	// D.18856, D.18855,
	add	x0, x2, x0	// D.18857, D.18854, D.18856
	ldr	s0, [x0]	// D.18858, MEM[(float *)_338]
	str	s0, [sp, 188]	// D.18858, MEM[(float *)&ha.1362 + 4B]
	ldr	x2, [sp, 392]	// D.18859, argv.__vr_top
	sxtw	x0, w1	// D.18860, D.18832
	add	x0, x0, 32	// D.18861, D.18860,
	add	x0, x2, x0	// D.18862, D.18859, D.18861
	ldr	s0, [x0]	// D.18863, MEM[(float *)_344]
	str	s0, [sp, 192]	// D.18863, MEM[(float *)&ha.1362 + 8B]
	ldr	x2, [sp, 392]	// D.18864, argv.__vr_top
	sxtw	x0, w1	// D.18865, D.18832
	add	x0, x0, 48	// D.18866, D.18865,
	add	x0, x2, x0	// D.18867, D.18864, D.18866
	ldr	s0, [x0]	// D.18868, MEM[(float *)_350]
	str	s0, [sp, 196]	// D.18868, MEM[(float *)&ha.1362 + 12B]
	add	x0, sp, 184	// iftmp.1364,,
.L2521:
	ldp	x0, x1, [x0]	// D.6453, *iftmp.1363_100
// varargs-dll.c:1108:   float f = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp630, tmp629,
	fmov	s0, w0	// tmp632, tmp631
	str	s0, [sp, 56]	// tmp632, f
// varargs-dll.c:1109:   float g = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 404]	// D.18869, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1368, argv.__stack
	cmp	w1, 0	// D.18869,
	blt	.L2524		//,
	add	x1, x0, 23	// D.18875, iftmp.1368,
	and	x1, x1, -8	// D.18876, D.18875,
	str	x1, [sp, 376]	// D.18876, argv.__stack
	b	.L2525		//
.L2524:
	add	w2, w1, 64	// D.18878, D.18869,
	str	w2, [sp, 404]	// D.18878, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18880, argv.__vr_offs
	cmp	w2, 0	// D.18880,
	ble	.L2526		//,
	add	x1, x0, 23	// D.18883, iftmp.1368,
	and	x1, x1, -8	// D.18884, D.18883,
	str	x1, [sp, 376]	// D.18884, argv.__stack
	b	.L2525		//
.L2526:
	ldr	x2, [sp, 392]	// D.18886, argv.__vr_top
	sxtw	x0, w1	// D.18887, D.18869
	add	x2, x2, x0	// D.18888, D.18886, D.18887
	add	x0, sp, 200	// ha.1369,,
	ldr	s0, [x2]	// D.18890, MEM[(float *)_371]
	str	s0, [x0]	// D.18890, MEM[(float *)ha.1369_372]
	ldr	x2, [sp, 392]	// D.18891, argv.__vr_top
	sxtw	x0, w1	// D.18892, D.18869
	add	x0, x0, 16	// D.18893, D.18892,
	add	x0, x2, x0	// D.18894, D.18891, D.18893
	ldr	s0, [x0]	// D.18895, MEM[(float *)_378]
	str	s0, [sp, 204]	// D.18895, MEM[(float *)&ha.1366 + 4B]
	ldr	x2, [sp, 392]	// D.18896, argv.__vr_top
	sxtw	x0, w1	// D.18897, D.18869
	add	x0, x0, 32	// D.18898, D.18897,
	add	x0, x2, x0	// D.18899, D.18896, D.18898
	ldr	s0, [x0]	// D.18900, MEM[(float *)_384]
	str	s0, [sp, 208]	// D.18900, MEM[(float *)&ha.1366 + 8B]
	ldr	x2, [sp, 392]	// D.18901, argv.__vr_top
	sxtw	x0, w1	// D.18902, D.18869
	add	x0, x0, 48	// D.18903, D.18902,
	add	x0, x2, x0	// D.18904, D.18901, D.18903
	ldr	s0, [x0]	// D.18905, MEM[(float *)_390]
	str	s0, [sp, 212]	// D.18905, MEM[(float *)&ha.1366 + 12B]
	add	x0, sp, 200	// iftmp.1368,,
.L2525:
	ldp	x0, x1, [x0]	// D.6454, *iftmp.1367_102
// varargs-dll.c:1109:   float g = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp633, D.6454,,
	fmov	s0, w0	// tmp635, tmp634
	str	s0, [sp, 60]	// tmp635, g
// varargs-dll.c:1110:   float h = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 404]	// D.18906, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1372, argv.__stack
	cmp	w1, 0	// D.18906,
	blt	.L2528		//,
	add	x1, x0, 23	// D.18912, iftmp.1372,
	and	x1, x1, -8	// D.18913, D.18912,
	str	x1, [sp, 376]	// D.18913, argv.__stack
	b	.L2529		//
.L2528:
	add	w2, w1, 64	// D.18915, D.18906,
	str	w2, [sp, 404]	// D.18915, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18917, argv.__vr_offs
	cmp	w2, 0	// D.18917,
	ble	.L2530		//,
	add	x1, x0, 23	// D.18920, iftmp.1372,
	and	x1, x1, -8	// D.18921, D.18920,
	str	x1, [sp, 376]	// D.18921, argv.__stack
	b	.L2529		//
.L2530:
	ldr	x2, [sp, 392]	// D.18923, argv.__vr_top
	sxtw	x0, w1	// D.18924, D.18906
	add	x2, x2, x0	// D.18925, D.18923, D.18924
	add	x0, sp, 216	// ha.1373,,
	ldr	s0, [x2]	// D.18927, MEM[(float *)_411]
	str	s0, [x0]	// D.18927, MEM[(float *)ha.1373_412]
	ldr	x2, [sp, 392]	// D.18928, argv.__vr_top
	sxtw	x0, w1	// D.18929, D.18906
	add	x0, x0, 16	// D.18930, D.18929,
	add	x0, x2, x0	// D.18931, D.18928, D.18930
	ldr	s0, [x0]	// D.18932, MEM[(float *)_418]
	str	s0, [sp, 220]	// D.18932, MEM[(float *)&ha.1370 + 4B]
	ldr	x2, [sp, 392]	// D.18933, argv.__vr_top
	sxtw	x0, w1	// D.18934, D.18906
	add	x0, x0, 32	// D.18935, D.18934,
	add	x0, x2, x0	// D.18936, D.18933, D.18935
	ldr	s0, [x0]	// D.18937, MEM[(float *)_424]
	str	s0, [sp, 224]	// D.18937, MEM[(float *)&ha.1370 + 8B]
	ldr	x2, [sp, 392]	// D.18938, argv.__vr_top
	sxtw	x0, w1	// D.18939, D.18906
	add	x0, x0, 48	// D.18940, D.18939,
	add	x0, x2, x0	// D.18941, D.18938, D.18940
	ldr	s0, [x0]	// D.18942, MEM[(float *)_430]
	str	s0, [sp, 228]	// D.18942, MEM[(float *)&ha.1370 + 12B]
	add	x0, sp, 216	// iftmp.1372,,
.L2529:
	ldp	x0, x1, [x0]	// D.6455, *iftmp.1371_104
// varargs-dll.c:1110:   float h = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp637, D.6455
	asr	x0, x0, 32	// tmp638, tmp637,
	fmov	s0, w0	// tmp640, tmp639
	str	s0, [sp, 64]	// tmp640, h
// varargs-dll.c:1111:   float i = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 404]	// D.18943, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1376, argv.__stack
	cmp	w1, 0	// D.18943,
	blt	.L2532		//,
	add	x1, x0, 23	// D.18949, iftmp.1376,
	and	x1, x1, -8	// D.18950, D.18949,
	str	x1, [sp, 376]	// D.18950, argv.__stack
	b	.L2533		//
.L2532:
	add	w2, w1, 64	// D.18952, D.18943,
	str	w2, [sp, 404]	// D.18952, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18954, argv.__vr_offs
	cmp	w2, 0	// D.18954,
	ble	.L2534		//,
	add	x1, x0, 23	// D.18957, iftmp.1376,
	and	x1, x1, -8	// D.18958, D.18957,
	str	x1, [sp, 376]	// D.18958, argv.__stack
	b	.L2533		//
.L2534:
	ldr	x2, [sp, 392]	// D.18960, argv.__vr_top
	sxtw	x0, w1	// D.18961, D.18943
	add	x2, x2, x0	// D.18962, D.18960, D.18961
	add	x0, sp, 232	// ha.1377,,
	ldr	s0, [x2]	// D.18964, MEM[(float *)_451]
	str	s0, [x0]	// D.18964, MEM[(float *)ha.1377_452]
	ldr	x2, [sp, 392]	// D.18965, argv.__vr_top
	sxtw	x0, w1	// D.18966, D.18943
	add	x0, x0, 16	// D.18967, D.18966,
	add	x0, x2, x0	// D.18968, D.18965, D.18967
	ldr	s0, [x0]	// D.18969, MEM[(float *)_458]
	str	s0, [sp, 236]	// D.18969, MEM[(float *)&ha.1374 + 4B]
	ldr	x2, [sp, 392]	// D.18970, argv.__vr_top
	sxtw	x0, w1	// D.18971, D.18943
	add	x0, x0, 32	// D.18972, D.18971,
	add	x0, x2, x0	// D.18973, D.18970, D.18972
	ldr	s0, [x0]	// D.18974, MEM[(float *)_464]
	str	s0, [sp, 240]	// D.18974, MEM[(float *)&ha.1374 + 8B]
	ldr	x2, [sp, 392]	// D.18975, argv.__vr_top
	sxtw	x0, w1	// D.18976, D.18943
	add	x0, x0, 48	// D.18977, D.18976,
	add	x0, x2, x0	// D.18978, D.18975, D.18977
	ldr	s0, [x0]	// D.18979, MEM[(float *)_470]
	str	s0, [sp, 244]	// D.18979, MEM[(float *)&ha.1374 + 12B]
	add	x0, sp, 232	// iftmp.1376,,
.L2533:
	ldp	x0, x1, [x0]	// D.6456, *iftmp.1375_106
// varargs-dll.c:1111:   float i = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp641, D.6456,,
	fmov	s0, w0	// tmp643, tmp642
	str	s0, [sp, 68]	// tmp643, i
// varargs-dll.c:1112:   float j = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 404]	// D.18980, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1380, argv.__stack
	cmp	w1, 0	// D.18980,
	blt	.L2536		//,
	add	x1, x0, 23	// D.18986, iftmp.1380,
	and	x1, x1, -8	// D.18987, D.18986,
	str	x1, [sp, 376]	// D.18987, argv.__stack
	b	.L2537		//
.L2536:
	add	w2, w1, 64	// D.18989, D.18980,
	str	w2, [sp, 404]	// D.18989, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.18991, argv.__vr_offs
	cmp	w2, 0	// D.18991,
	ble	.L2538		//,
	add	x1, x0, 23	// D.18994, iftmp.1380,
	and	x1, x1, -8	// D.18995, D.18994,
	str	x1, [sp, 376]	// D.18995, argv.__stack
	b	.L2537		//
.L2538:
	ldr	x2, [sp, 392]	// D.18997, argv.__vr_top
	sxtw	x0, w1	// D.18998, D.18980
	add	x2, x2, x0	// D.18999, D.18997, D.18998
	add	x0, sp, 248	// ha.1381,,
	ldr	s0, [x2]	// D.19001, MEM[(float *)_491]
	str	s0, [x0]	// D.19001, MEM[(float *)ha.1381_492]
	ldr	x2, [sp, 392]	// D.19002, argv.__vr_top
	sxtw	x0, w1	// D.19003, D.18980
	add	x0, x0, 16	// D.19004, D.19003,
	add	x0, x2, x0	// D.19005, D.19002, D.19004
	ldr	s0, [x0]	// D.19006, MEM[(float *)_498]
	str	s0, [sp, 252]	// D.19006, MEM[(float *)&ha.1378 + 4B]
	ldr	x2, [sp, 392]	// D.19007, argv.__vr_top
	sxtw	x0, w1	// D.19008, D.18980
	add	x0, x0, 32	// D.19009, D.19008,
	add	x0, x2, x0	// D.19010, D.19007, D.19009
	ldr	s0, [x0]	// D.19011, MEM[(float *)_504]
	str	s0, [sp, 256]	// D.19011, MEM[(float *)&ha.1378 + 8B]
	ldr	x2, [sp, 392]	// D.19012, argv.__vr_top
	sxtw	x0, w1	// D.19013, D.18980
	add	x0, x0, 48	// D.19014, D.19013,
	add	x0, x2, x0	// D.19015, D.19012, D.19014
	ldr	s0, [x0]	// D.19016, MEM[(float *)_510]
	str	s0, [sp, 260]	// D.19016, MEM[(float *)&ha.1378 + 12B]
	add	x0, sp, 248	// iftmp.1380,,
.L2537:
	ldp	x0, x1, [x0]	// D.6457, *iftmp.1379_108
// varargs-dll.c:1112:   float j = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp646, tmp645,
	fmov	s0, w0	// tmp648, tmp647
	str	s0, [sp, 72]	// tmp648, j
// varargs-dll.c:1113:   float k = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 404]	// D.19017, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1384, argv.__stack
	cmp	w1, 0	// D.19017,
	blt	.L2540		//,
	add	x1, x0, 23	// D.19023, iftmp.1384,
	and	x1, x1, -8	// D.19024, D.19023,
	str	x1, [sp, 376]	// D.19024, argv.__stack
	b	.L2541		//
.L2540:
	add	w2, w1, 64	// D.19026, D.19017,
	str	w2, [sp, 404]	// D.19026, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19028, argv.__vr_offs
	cmp	w2, 0	// D.19028,
	ble	.L2542		//,
	add	x1, x0, 23	// D.19031, iftmp.1384,
	and	x1, x1, -8	// D.19032, D.19031,
	str	x1, [sp, 376]	// D.19032, argv.__stack
	b	.L2541		//
.L2542:
	ldr	x2, [sp, 392]	// D.19034, argv.__vr_top
	sxtw	x0, w1	// D.19035, D.19017
	add	x2, x2, x0	// D.19036, D.19034, D.19035
	add	x0, sp, 264	// ha.1385,,
	ldr	s0, [x2]	// D.19038, MEM[(float *)_531]
	str	s0, [x0]	// D.19038, MEM[(float *)ha.1385_532]
	ldr	x2, [sp, 392]	// D.19039, argv.__vr_top
	sxtw	x0, w1	// D.19040, D.19017
	add	x0, x0, 16	// D.19041, D.19040,
	add	x0, x2, x0	// D.19042, D.19039, D.19041
	ldr	s0, [x0]	// D.19043, MEM[(float *)_538]
	str	s0, [sp, 268]	// D.19043, MEM[(float *)&ha.1382 + 4B]
	ldr	x2, [sp, 392]	// D.19044, argv.__vr_top
	sxtw	x0, w1	// D.19045, D.19017
	add	x0, x0, 32	// D.19046, D.19045,
	add	x0, x2, x0	// D.19047, D.19044, D.19046
	ldr	s0, [x0]	// D.19048, MEM[(float *)_544]
	str	s0, [sp, 272]	// D.19048, MEM[(float *)&ha.1382 + 8B]
	ldr	x2, [sp, 392]	// D.19049, argv.__vr_top
	sxtw	x0, w1	// D.19050, D.19017
	add	x0, x0, 48	// D.19051, D.19050,
	add	x0, x2, x0	// D.19052, D.19049, D.19051
	ldr	s0, [x0]	// D.19053, MEM[(float *)_550]
	str	s0, [sp, 276]	// D.19053, MEM[(float *)&ha.1382 + 12B]
	add	x0, sp, 264	// iftmp.1384,,
.L2541:
	ldp	x0, x1, [x0]	// D.6458, *iftmp.1383_110
// varargs-dll.c:1113:   float k = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp649, D.6458,,
	fmov	s0, w0	// tmp651, tmp650
	str	s0, [sp, 76]	// tmp651, k
// varargs-dll.c:1114:   float l = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 404]	// D.19054, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1388, argv.__stack
	cmp	w1, 0	// D.19054,
	blt	.L2544		//,
	add	x1, x0, 23	// D.19060, iftmp.1388,
	and	x1, x1, -8	// D.19061, D.19060,
	str	x1, [sp, 376]	// D.19061, argv.__stack
	b	.L2545		//
.L2544:
	add	w2, w1, 64	// D.19063, D.19054,
	str	w2, [sp, 404]	// D.19063, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19065, argv.__vr_offs
	cmp	w2, 0	// D.19065,
	ble	.L2546		//,
	add	x1, x0, 23	// D.19068, iftmp.1388,
	and	x1, x1, -8	// D.19069, D.19068,
	str	x1, [sp, 376]	// D.19069, argv.__stack
	b	.L2545		//
.L2546:
	ldr	x2, [sp, 392]	// D.19071, argv.__vr_top
	sxtw	x0, w1	// D.19072, D.19054
	add	x2, x2, x0	// D.19073, D.19071, D.19072
	add	x0, sp, 280	// ha.1389,,
	ldr	s0, [x2]	// D.19075, MEM[(float *)_571]
	str	s0, [x0]	// D.19075, MEM[(float *)ha.1389_572]
	ldr	x2, [sp, 392]	// D.19076, argv.__vr_top
	sxtw	x0, w1	// D.19077, D.19054
	add	x0, x0, 16	// D.19078, D.19077,
	add	x0, x2, x0	// D.19079, D.19076, D.19078
	ldr	s0, [x0]	// D.19080, MEM[(float *)_578]
	str	s0, [sp, 284]	// D.19080, MEM[(float *)&ha.1386 + 4B]
	ldr	x2, [sp, 392]	// D.19081, argv.__vr_top
	sxtw	x0, w1	// D.19082, D.19054
	add	x0, x0, 32	// D.19083, D.19082,
	add	x0, x2, x0	// D.19084, D.19081, D.19083
	ldr	s0, [x0]	// D.19085, MEM[(float *)_584]
	str	s0, [sp, 288]	// D.19085, MEM[(float *)&ha.1386 + 8B]
	ldr	x2, [sp, 392]	// D.19086, argv.__vr_top
	sxtw	x0, w1	// D.19087, D.19054
	add	x0, x0, 48	// D.19088, D.19087,
	add	x0, x2, x0	// D.19089, D.19086, D.19088
	ldr	s0, [x0]	// D.19090, MEM[(float *)_590]
	str	s0, [sp, 292]	// D.19090, MEM[(float *)&ha.1386 + 12B]
	add	x0, sp, 280	// iftmp.1388,,
.L2545:
	ldp	x0, x1, [x0]	// D.6459, *iftmp.1387_112
// varargs-dll.c:1114:   float l = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp653, D.6459
	asr	x0, x0, 32	// tmp654, tmp653,
	fmov	s0, w0	// tmp656, tmp655
	str	s0, [sp, 80]	// tmp656, l
// varargs-dll.c:1115:   float m = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 404]	// D.19091, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1392, argv.__stack
	cmp	w1, 0	// D.19091,
	blt	.L2548		//,
	add	x1, x0, 23	// D.19097, iftmp.1392,
	and	x1, x1, -8	// D.19098, D.19097,
	str	x1, [sp, 376]	// D.19098, argv.__stack
	b	.L2549		//
.L2548:
	add	w2, w1, 64	// D.19100, D.19091,
	str	w2, [sp, 404]	// D.19100, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19102, argv.__vr_offs
	cmp	w2, 0	// D.19102,
	ble	.L2550		//,
	add	x1, x0, 23	// D.19105, iftmp.1392,
	and	x1, x1, -8	// D.19106, D.19105,
	str	x1, [sp, 376]	// D.19106, argv.__stack
	b	.L2549		//
.L2550:
	ldr	x2, [sp, 392]	// D.19108, argv.__vr_top
	sxtw	x0, w1	// D.19109, D.19091
	add	x2, x2, x0	// D.19110, D.19108, D.19109
	add	x0, sp, 296	// ha.1393,,
	ldr	s0, [x2]	// D.19112, MEM[(float *)_611]
	str	s0, [x0]	// D.19112, MEM[(float *)ha.1393_612]
	ldr	x2, [sp, 392]	// D.19113, argv.__vr_top
	sxtw	x0, w1	// D.19114, D.19091
	add	x0, x0, 16	// D.19115, D.19114,
	add	x0, x2, x0	// D.19116, D.19113, D.19115
	ldr	s0, [x0]	// D.19117, MEM[(float *)_618]
	str	s0, [sp, 300]	// D.19117, MEM[(float *)&ha.1390 + 4B]
	ldr	x2, [sp, 392]	// D.19118, argv.__vr_top
	sxtw	x0, w1	// D.19119, D.19091
	add	x0, x0, 32	// D.19120, D.19119,
	add	x0, x2, x0	// D.19121, D.19118, D.19120
	ldr	s0, [x0]	// D.19122, MEM[(float *)_624]
	str	s0, [sp, 304]	// D.19122, MEM[(float *)&ha.1390 + 8B]
	ldr	x2, [sp, 392]	// D.19123, argv.__vr_top
	sxtw	x0, w1	// D.19124, D.19091
	add	x0, x0, 48	// D.19125, D.19124,
	add	x0, x2, x0	// D.19126, D.19123, D.19125
	ldr	s0, [x0]	// D.19127, MEM[(float *)_630]
	str	s0, [sp, 308]	// D.19127, MEM[(float *)&ha.1390 + 12B]
	add	x0, sp, 296	// iftmp.1392,,
.L2549:
	ldp	x0, x1, [x0]	// D.6460, *iftmp.1391_114
// varargs-dll.c:1115:   float m = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp657, D.6460,,
	fmov	s0, w0	// tmp659, tmp658
	str	s0, [sp, 84]	// tmp659, m
// varargs-dll.c:1116:   float n = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [sp, 404]	// D.19128, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1396, argv.__stack
	cmp	w1, 0	// D.19128,
	blt	.L2552		//,
	add	x1, x0, 23	// D.19134, iftmp.1396,
	and	x1, x1, -8	// D.19135, D.19134,
	str	x1, [sp, 376]	// D.19135, argv.__stack
	b	.L2553		//
.L2552:
	add	w2, w1, 64	// D.19137, D.19128,
	str	w2, [sp, 404]	// D.19137, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19139, argv.__vr_offs
	cmp	w2, 0	// D.19139,
	ble	.L2554		//,
	add	x1, x0, 23	// D.19142, iftmp.1396,
	and	x1, x1, -8	// D.19143, D.19142,
	str	x1, [sp, 376]	// D.19143, argv.__stack
	b	.L2553		//
.L2554:
	ldr	x2, [sp, 392]	// D.19145, argv.__vr_top
	sxtw	x0, w1	// D.19146, D.19128
	add	x2, x2, x0	// D.19147, D.19145, D.19146
	add	x0, sp, 312	// ha.1397,,
	ldr	s0, [x2]	// D.19149, MEM[(float *)_651]
	str	s0, [x0]	// D.19149, MEM[(float *)ha.1397_652]
	ldr	x2, [sp, 392]	// D.19150, argv.__vr_top
	sxtw	x0, w1	// D.19151, D.19128
	add	x0, x0, 16	// D.19152, D.19151,
	add	x0, x2, x0	// D.19153, D.19150, D.19152
	ldr	s0, [x0]	// D.19154, MEM[(float *)_658]
	str	s0, [sp, 316]	// D.19154, MEM[(float *)&ha.1394 + 4B]
	ldr	x2, [sp, 392]	// D.19155, argv.__vr_top
	sxtw	x0, w1	// D.19156, D.19128
	add	x0, x0, 32	// D.19157, D.19156,
	add	x0, x2, x0	// D.19158, D.19155, D.19157
	ldr	s0, [x0]	// D.19159, MEM[(float *)_664]
	str	s0, [sp, 320]	// D.19159, MEM[(float *)&ha.1394 + 8B]
	ldr	x2, [sp, 392]	// D.19160, argv.__vr_top
	sxtw	x0, w1	// D.19161, D.19128
	add	x0, x0, 48	// D.19162, D.19161,
	add	x0, x2, x0	// D.19163, D.19160, D.19162
	ldr	s0, [x0]	// D.19164, MEM[(float *)_670]
	str	s0, [sp, 324]	// D.19164, MEM[(float *)&ha.1394 + 12B]
	add	x0, sp, 312	// iftmp.1396,,
.L2553:
	ldp	x0, x1, [x0]	// D.6461, *iftmp.1395_116
// varargs-dll.c:1116:   float n = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp662, tmp661,
	fmov	s0, w0	// tmp664, tmp663
	str	s0, [sp, 88]	// tmp664, n
// varargs-dll.c:1117:   float o = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [sp, 404]	// D.19165, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1400, argv.__stack
	cmp	w1, 0	// D.19165,
	blt	.L2556		//,
	add	x1, x0, 23	// D.19171, iftmp.1400,
	and	x1, x1, -8	// D.19172, D.19171,
	str	x1, [sp, 376]	// D.19172, argv.__stack
	b	.L2557		//
.L2556:
	add	w2, w1, 64	// D.19174, D.19165,
	str	w2, [sp, 404]	// D.19174, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19176, argv.__vr_offs
	cmp	w2, 0	// D.19176,
	ble	.L2558		//,
	add	x1, x0, 23	// D.19179, iftmp.1400,
	and	x1, x1, -8	// D.19180, D.19179,
	str	x1, [sp, 376]	// D.19180, argv.__stack
	b	.L2557		//
.L2558:
	ldr	x2, [sp, 392]	// D.19182, argv.__vr_top
	sxtw	x0, w1	// D.19183, D.19165
	add	x2, x2, x0	// D.19184, D.19182, D.19183
	add	x0, sp, 328	// ha.1401,,
	ldr	s0, [x2]	// D.19186, MEM[(float *)_691]
	str	s0, [x0]	// D.19186, MEM[(float *)ha.1401_692]
	ldr	x2, [sp, 392]	// D.19187, argv.__vr_top
	sxtw	x0, w1	// D.19188, D.19165
	add	x0, x0, 16	// D.19189, D.19188,
	add	x0, x2, x0	// D.19190, D.19187, D.19189
	ldr	s0, [x0]	// D.19191, MEM[(float *)_698]
	str	s0, [sp, 332]	// D.19191, MEM[(float *)&ha.1398 + 4B]
	ldr	x2, [sp, 392]	// D.19192, argv.__vr_top
	sxtw	x0, w1	// D.19193, D.19165
	add	x0, x0, 32	// D.19194, D.19193,
	add	x0, x2, x0	// D.19195, D.19192, D.19194
	ldr	s0, [x0]	// D.19196, MEM[(float *)_704]
	str	s0, [sp, 336]	// D.19196, MEM[(float *)&ha.1398 + 8B]
	ldr	x2, [sp, 392]	// D.19197, argv.__vr_top
	sxtw	x0, w1	// D.19198, D.19165
	add	x0, x0, 48	// D.19199, D.19198,
	add	x0, x2, x0	// D.19200, D.19197, D.19199
	ldr	s0, [x0]	// D.19201, MEM[(float *)_710]
	str	s0, [sp, 340]	// D.19201, MEM[(float *)&ha.1398 + 12B]
	add	x0, sp, 328	// iftmp.1400,,
.L2557:
	ldp	x0, x1, [x0]	// D.6462, *iftmp.1399_118
// varargs-dll.c:1117:   float o = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp665, D.6462,,
	fmov	s0, w0	// tmp667, tmp666
	str	s0, [sp, 92]	// tmp667, o
// varargs-dll.c:1118:   float p = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [sp, 404]	// D.19202, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1404, argv.__stack
	cmp	w1, 0	// D.19202,
	blt	.L2560		//,
	add	x1, x0, 23	// D.19208, iftmp.1404,
	and	x1, x1, -8	// D.19209, D.19208,
	str	x1, [sp, 376]	// D.19209, argv.__stack
	b	.L2561		//
.L2560:
	add	w2, w1, 64	// D.19211, D.19202,
	str	w2, [sp, 404]	// D.19211, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19213, argv.__vr_offs
	cmp	w2, 0	// D.19213,
	ble	.L2562		//,
	add	x1, x0, 23	// D.19216, iftmp.1404,
	and	x1, x1, -8	// D.19217, D.19216,
	str	x1, [sp, 376]	// D.19217, argv.__stack
	b	.L2561		//
.L2562:
	ldr	x2, [sp, 392]	// D.19219, argv.__vr_top
	sxtw	x0, w1	// D.19220, D.19202
	add	x2, x2, x0	// D.19221, D.19219, D.19220
	add	x0, sp, 344	// ha.1405,,
	ldr	s0, [x2]	// D.19223, MEM[(float *)_731]
	str	s0, [x0]	// D.19223, MEM[(float *)ha.1405_732]
	ldr	x2, [sp, 392]	// D.19224, argv.__vr_top
	sxtw	x0, w1	// D.19225, D.19202
	add	x0, x0, 16	// D.19226, D.19225,
	add	x0, x2, x0	// D.19227, D.19224, D.19226
	ldr	s0, [x0]	// D.19228, MEM[(float *)_738]
	str	s0, [sp, 348]	// D.19228, MEM[(float *)&ha.1402 + 4B]
	ldr	x2, [sp, 392]	// D.19229, argv.__vr_top
	sxtw	x0, w1	// D.19230, D.19202
	add	x0, x0, 32	// D.19231, D.19230,
	add	x0, x2, x0	// D.19232, D.19229, D.19231
	ldr	s0, [x0]	// D.19233, MEM[(float *)_744]
	str	s0, [sp, 352]	// D.19233, MEM[(float *)&ha.1402 + 8B]
	ldr	x2, [sp, 392]	// D.19234, argv.__vr_top
	sxtw	x0, w1	// D.19235, D.19202
	add	x0, x0, 48	// D.19236, D.19235,
	add	x0, x2, x0	// D.19237, D.19234, D.19236
	ldr	s0, [x0]	// D.19238, MEM[(float *)_750]
	str	s0, [sp, 356]	// D.19238, MEM[(float *)&ha.1402 + 12B]
	add	x0, sp, 344	// iftmp.1404,,
.L2561:
	ldp	x0, x1, [x0]	// D.6463, *iftmp.1403_120
// varargs-dll.c:1118:   float p = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp669, D.6463
	asr	x0, x0, 32	// tmp670, tmp669,
	fmov	s0, w0	// tmp672, tmp671
	str	s0, [sp, 96]	// tmp672, p
// varargs-dll.c:1119:   float q = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [sp, 404]	// D.19239, argv.__vr_offs
	ldr	x0, [sp, 376]	// iftmp.1408, argv.__stack
	cmp	w1, 0	// D.19239,
	blt	.L2564		//,
	add	x1, x0, 23	// D.19245, iftmp.1408,
	and	x1, x1, -8	// D.19246, D.19245,
	str	x1, [sp, 376]	// D.19246, argv.__stack
	b	.L2565		//
.L2564:
	add	w2, w1, 64	// D.19248, D.19239,
	str	w2, [sp, 404]	// D.19248, argv.__vr_offs
	ldr	w2, [sp, 404]	// D.19250, argv.__vr_offs
	cmp	w2, 0	// D.19250,
	ble	.L2566		//,
	add	x1, x0, 23	// D.19253, iftmp.1408,
	and	x1, x1, -8	// D.19254, D.19253,
	str	x1, [sp, 376]	// D.19254, argv.__stack
	b	.L2565		//
.L2566:
	ldr	x2, [sp, 392]	// D.19256, argv.__vr_top
	sxtw	x0, w1	// D.19257, D.19239
	add	x2, x2, x0	// D.19258, D.19256, D.19257
	add	x0, sp, 360	// ha.1409,,
	ldr	s0, [x2]	// D.19260, MEM[(float *)_771]
	str	s0, [x0]	// D.19260, MEM[(float *)ha.1409_772]
	ldr	x2, [sp, 392]	// D.19261, argv.__vr_top
	sxtw	x0, w1	// D.19262, D.19239
	add	x0, x0, 16	// D.19263, D.19262,
	add	x0, x2, x0	// D.19264, D.19261, D.19263
	ldr	s0, [x0]	// D.19265, MEM[(float *)_778]
	str	s0, [sp, 364]	// D.19265, MEM[(float *)&ha.1406 + 4B]
	ldr	x2, [sp, 392]	// D.19266, argv.__vr_top
	sxtw	x0, w1	// D.19267, D.19239
	add	x0, x0, 32	// D.19268, D.19267,
	add	x0, x2, x0	// D.19269, D.19266, D.19268
	ldr	s0, [x0]	// D.19270, MEM[(float *)_784]
	str	s0, [sp, 368]	// D.19270, MEM[(float *)&ha.1406 + 8B]
	ldr	x2, [sp, 392]	// D.19271, argv.__vr_top
	sxtw	x0, w1	// D.19272, D.19239
	add	x0, x0, 48	// D.19273, D.19272,
	add	x0, x2, x0	// D.19274, D.19271, D.19273
	ldr	s0, [x0]	// D.19275, MEM[(float *)_790]
	str	s0, [sp, 372]	// D.19275, MEM[(float *)&ha.1406 + 12B]
	add	x0, sp, 360	// iftmp.1408,,
.L2565:
	ldp	x0, x1, [x0]	// D.6464, *iftmp.1407_122
// varargs-dll.c:1119:   float q = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp673, D.6464,,
	fmov	s0, w0	// tmp675, tmp674
	str	s0, [sp, 100]	// tmp675, q
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s1, [sp, 36]	// tmp676, a
	ldr	s0, [sp, 40]	// tmp677, b
	fadd	s1, s1, s0	// _1, tmp676, tmp677
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 44]	// tmp678, c
	fadd	s1, s1, s0	// _2, _1, tmp678
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 48]	// tmp679, d
	fadd	s1, s1, s0	// _3, _2, tmp679
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 52]	// tmp680, e
	fadd	s1, s1, s0	// _4, _3, tmp680
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 56]	// tmp681, f
	fadd	s1, s1, s0	// _5, _4, tmp681
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 60]	// tmp682, g
	fadd	s1, s1, s0	// _6, _5, tmp682
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 64]	// tmp683, h
	fadd	s1, s1, s0	// _7, _6, tmp683
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 68]	// tmp684, i
	fadd	s1, s1, s0	// _8, _7, tmp684
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 72]	// tmp685, j
	fadd	s1, s1, s0	// _9, _8, tmp685
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 76]	// tmp686, k
	fadd	s1, s1, s0	// _10, _9, tmp686
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 80]	// tmp687, l
	fadd	s1, s1, s0	// _11, _10, tmp687
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 84]	// tmp688, m
	fadd	s1, s1, s0	// _12, _11, tmp688
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 88]	// tmp689, n
	fadd	s1, s1, s0	// _13, _12, tmp689
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 92]	// tmp690, o
	fadd	s1, s1, s0	// _14, _13, tmp690
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 96]	// tmp691, p
	fadd	s1, s1, s0	// _15, _14, tmp691
// varargs-dll.c:1121:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 100]	// tmp692, q
	fadd	s0, s1, s0	// _16, _15, tmp692
	fcvtzs	s0, s0	// _54, _16
	fmov	w1, s0	// <retval>, _54
// varargs-dll.c:1122: }
	adrp	x0, :got:__stack_chk_guard	// tmp695,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp694, tmp695,
	ldr	x3, [sp, 408]	// tmp697, D.19276
	ldr	x2, [x0]	// tmp698,
	subs	x3, x3, x2	// tmp697, tmp698
	mov	x2, 0	// tmp698
	beq	.L2569		//,
	bl	__stack_chk_fail		//
.L2569:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 608	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE72:
	.size	use_va_args_many_hfa_4_floats, .-use_va_args_many_hfa_4_floats
	.align	2
	.global	use_va_list_many_hfa_4_floats
	.type	use_va_list_many_hfa_4_floats, %function
use_va_list_many_hfa_4_floats:
.LFB73:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -384
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp603,
// varargs-dll.c:1126: {
	adrp	x0, :got:__stack_chk_guard	// tmp605,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp604, tmp605,
	ldr	x1, [x0]	// tmp693,
	str	x1, [sp, 392]	// tmp693, D.19909
	mov	x1, 0	// tmp693
// varargs-dll.c:1127:   float a = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.19280, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1412, argv.__stack
	cmp	w1, 0	// D.19280,
	blt	.L2571		//,
	add	x1, x0, 23	// D.19286, iftmp.1412,
	and	x1, x1, -8	// D.19287, D.19286,
	str	x1, [x19]	// D.19287, argv.__stack
	b	.L2572		//
.L2571:
	add	w2, w1, 64	// D.19289, D.19280,
	str	w2, [x19, 28]	// D.19289, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19291, argv.__vr_offs
	cmp	w2, 0	// D.19291,
	ble	.L2573		//,
	add	x1, x0, 23	// D.19294, iftmp.1412,
	and	x1, x1, -8	// D.19295, D.19294,
	str	x1, [x19]	// D.19295, argv.__stack
	b	.L2572		//
.L2573:
	ldr	x2, [x19, 16]	// D.19297, argv.__vr_top
	sxtw	x0, w1	// D.19298, D.19280
	add	x2, x2, x0	// D.19299, D.19297, D.19298
	add	x0, sp, 120	// ha.1413,,
	ldr	s0, [x2]	// D.19301, MEM[(float *)_128]
	str	s0, [x0]	// D.19301, MEM[(float *)ha.1413_129]
	ldr	x2, [x19, 16]	// D.19302, argv.__vr_top
	sxtw	x0, w1	// D.19303, D.19280
	add	x0, x0, 16	// D.19304, D.19303,
	add	x0, x2, x0	// D.19305, D.19302, D.19304
	ldr	s0, [x0]	// D.19306, MEM[(float *)_135]
	str	s0, [sp, 124]	// D.19306, MEM[(float *)&ha.1410 + 4B]
	ldr	x2, [x19, 16]	// D.19307, argv.__vr_top
	sxtw	x0, w1	// D.19308, D.19280
	add	x0, x0, 32	// D.19309, D.19308,
	add	x0, x2, x0	// D.19310, D.19307, D.19309
	ldr	s0, [x0]	// D.19311, MEM[(float *)_141]
	str	s0, [sp, 128]	// D.19311, MEM[(float *)&ha.1410 + 8B]
	ldr	x2, [x19, 16]	// D.19312, argv.__vr_top
	sxtw	x0, w1	// D.19313, D.19280
	add	x0, x0, 48	// D.19314, D.19313,
	add	x0, x2, x0	// D.19315, D.19312, D.19314
	ldr	s0, [x0]	// D.19316, MEM[(float *)_147]
	str	s0, [sp, 132]	// D.19316, MEM[(float *)&ha.1410 + 12B]
	add	x0, sp, 120	// iftmp.1412,,
.L2572:
	ldp	x0, x1, [x0]	// D.6468, *iftmp.1411_87
// varargs-dll.c:1127:   float a = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp606, D.6468,,
	fmov	s0, w0	// tmp608, tmp607
	str	s0, [sp, 52]	// tmp608, a
// varargs-dll.c:1128:   float b = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.19317, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1416, argv.__stack
	cmp	w1, 0	// D.19317,
	blt	.L2575		//,
	add	x1, x0, 23	// D.19323, iftmp.1416,
	and	x1, x1, -8	// D.19324, D.19323,
	str	x1, [x19]	// D.19324, argv.__stack
	b	.L2576		//
.L2575:
	add	w2, w1, 64	// D.19326, D.19317,
	str	w2, [x19, 28]	// D.19326, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19328, argv.__vr_offs
	cmp	w2, 0	// D.19328,
	ble	.L2577		//,
	add	x1, x0, 23	// D.19331, iftmp.1416,
	and	x1, x1, -8	// D.19332, D.19331,
	str	x1, [x19]	// D.19332, argv.__stack
	b	.L2576		//
.L2577:
	ldr	x2, [x19, 16]	// D.19334, argv.__vr_top
	sxtw	x0, w1	// D.19335, D.19317
	add	x2, x2, x0	// D.19336, D.19334, D.19335
	add	x0, sp, 136	// ha.1417,,
	ldr	s0, [x2]	// D.19338, MEM[(float *)_168]
	str	s0, [x0]	// D.19338, MEM[(float *)ha.1417_169]
	ldr	x2, [x19, 16]	// D.19339, argv.__vr_top
	sxtw	x0, w1	// D.19340, D.19317
	add	x0, x0, 16	// D.19341, D.19340,
	add	x0, x2, x0	// D.19342, D.19339, D.19341
	ldr	s0, [x0]	// D.19343, MEM[(float *)_175]
	str	s0, [sp, 140]	// D.19343, MEM[(float *)&ha.1414 + 4B]
	ldr	x2, [x19, 16]	// D.19344, argv.__vr_top
	sxtw	x0, w1	// D.19345, D.19317
	add	x0, x0, 32	// D.19346, D.19345,
	add	x0, x2, x0	// D.19347, D.19344, D.19346
	ldr	s0, [x0]	// D.19348, MEM[(float *)_181]
	str	s0, [sp, 144]	// D.19348, MEM[(float *)&ha.1414 + 8B]
	ldr	x2, [x19, 16]	// D.19349, argv.__vr_top
	sxtw	x0, w1	// D.19350, D.19317
	add	x0, x0, 48	// D.19351, D.19350,
	add	x0, x2, x0	// D.19352, D.19349, D.19351
	ldr	s0, [x0]	// D.19353, MEM[(float *)_187]
	str	s0, [sp, 148]	// D.19353, MEM[(float *)&ha.1414 + 12B]
	add	x0, sp, 136	// iftmp.1416,,
.L2576:
	ldp	x0, x1, [x0]	// D.6469, *iftmp.1415_89
// varargs-dll.c:1128:   float b = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp611, tmp610,
	fmov	s0, w0	// tmp613, tmp612
	str	s0, [sp, 56]	// tmp613, b
// varargs-dll.c:1129:   float c = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.19354, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1420, argv.__stack
	cmp	w1, 0	// D.19354,
	blt	.L2579		//,
	add	x1, x0, 23	// D.19360, iftmp.1420,
	and	x1, x1, -8	// D.19361, D.19360,
	str	x1, [x19]	// D.19361, argv.__stack
	b	.L2580		//
.L2579:
	add	w2, w1, 64	// D.19363, D.19354,
	str	w2, [x19, 28]	// D.19363, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19365, argv.__vr_offs
	cmp	w2, 0	// D.19365,
	ble	.L2581		//,
	add	x1, x0, 23	// D.19368, iftmp.1420,
	and	x1, x1, -8	// D.19369, D.19368,
	str	x1, [x19]	// D.19369, argv.__stack
	b	.L2580		//
.L2581:
	ldr	x2, [x19, 16]	// D.19371, argv.__vr_top
	sxtw	x0, w1	// D.19372, D.19354
	add	x2, x2, x0	// D.19373, D.19371, D.19372
	add	x0, sp, 152	// ha.1421,,
	ldr	s0, [x2]	// D.19375, MEM[(float *)_208]
	str	s0, [x0]	// D.19375, MEM[(float *)ha.1421_209]
	ldr	x2, [x19, 16]	// D.19376, argv.__vr_top
	sxtw	x0, w1	// D.19377, D.19354
	add	x0, x0, 16	// D.19378, D.19377,
	add	x0, x2, x0	// D.19379, D.19376, D.19378
	ldr	s0, [x0]	// D.19380, MEM[(float *)_215]
	str	s0, [sp, 156]	// D.19380, MEM[(float *)&ha.1418 + 4B]
	ldr	x2, [x19, 16]	// D.19381, argv.__vr_top
	sxtw	x0, w1	// D.19382, D.19354
	add	x0, x0, 32	// D.19383, D.19382,
	add	x0, x2, x0	// D.19384, D.19381, D.19383
	ldr	s0, [x0]	// D.19385, MEM[(float *)_221]
	str	s0, [sp, 160]	// D.19385, MEM[(float *)&ha.1418 + 8B]
	ldr	x2, [x19, 16]	// D.19386, argv.__vr_top
	sxtw	x0, w1	// D.19387, D.19354
	add	x0, x0, 48	// D.19388, D.19387,
	add	x0, x2, x0	// D.19389, D.19386, D.19388
	ldr	s0, [x0]	// D.19390, MEM[(float *)_227]
	str	s0, [sp, 164]	// D.19390, MEM[(float *)&ha.1418 + 12B]
	add	x0, sp, 152	// iftmp.1420,,
.L2580:
	ldp	x0, x1, [x0]	// D.6470, *iftmp.1419_91
// varargs-dll.c:1129:   float c = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp614, D.6470,,
	fmov	s0, w0	// tmp616, tmp615
	str	s0, [sp, 60]	// tmp616, c
// varargs-dll.c:1130:   float d = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.19391, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1424, argv.__stack
	cmp	w1, 0	// D.19391,
	blt	.L2583		//,
	add	x1, x0, 23	// D.19397, iftmp.1424,
	and	x1, x1, -8	// D.19398, D.19397,
	str	x1, [x19]	// D.19398, argv.__stack
	b	.L2584		//
.L2583:
	add	w2, w1, 64	// D.19400, D.19391,
	str	w2, [x19, 28]	// D.19400, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19402, argv.__vr_offs
	cmp	w2, 0	// D.19402,
	ble	.L2585		//,
	add	x1, x0, 23	// D.19405, iftmp.1424,
	and	x1, x1, -8	// D.19406, D.19405,
	str	x1, [x19]	// D.19406, argv.__stack
	b	.L2584		//
.L2585:
	ldr	x2, [x19, 16]	// D.19408, argv.__vr_top
	sxtw	x0, w1	// D.19409, D.19391
	add	x2, x2, x0	// D.19410, D.19408, D.19409
	add	x0, sp, 168	// ha.1425,,
	ldr	s0, [x2]	// D.19412, MEM[(float *)_248]
	str	s0, [x0]	// D.19412, MEM[(float *)ha.1425_249]
	ldr	x2, [x19, 16]	// D.19413, argv.__vr_top
	sxtw	x0, w1	// D.19414, D.19391
	add	x0, x0, 16	// D.19415, D.19414,
	add	x0, x2, x0	// D.19416, D.19413, D.19415
	ldr	s0, [x0]	// D.19417, MEM[(float *)_255]
	str	s0, [sp, 172]	// D.19417, MEM[(float *)&ha.1422 + 4B]
	ldr	x2, [x19, 16]	// D.19418, argv.__vr_top
	sxtw	x0, w1	// D.19419, D.19391
	add	x0, x0, 32	// D.19420, D.19419,
	add	x0, x2, x0	// D.19421, D.19418, D.19420
	ldr	s0, [x0]	// D.19422, MEM[(float *)_261]
	str	s0, [sp, 176]	// D.19422, MEM[(float *)&ha.1422 + 8B]
	ldr	x2, [x19, 16]	// D.19423, argv.__vr_top
	sxtw	x0, w1	// D.19424, D.19391
	add	x0, x0, 48	// D.19425, D.19424,
	add	x0, x2, x0	// D.19426, D.19423, D.19425
	ldr	s0, [x0]	// D.19427, MEM[(float *)_267]
	str	s0, [sp, 180]	// D.19427, MEM[(float *)&ha.1422 + 12B]
	add	x0, sp, 168	// iftmp.1424,,
.L2584:
	ldp	x0, x1, [x0]	// D.6471, *iftmp.1423_93
// varargs-dll.c:1130:   float d = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp618, D.6471
	asr	x0, x0, 32	// tmp619, tmp618,
	fmov	s0, w0	// tmp621, tmp620
	str	s0, [sp, 64]	// tmp621, d
// varargs-dll.c:1131:   float e = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.19428, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1428, argv.__stack
	cmp	w1, 0	// D.19428,
	blt	.L2587		//,
	add	x1, x0, 23	// D.19434, iftmp.1428,
	and	x1, x1, -8	// D.19435, D.19434,
	str	x1, [x19]	// D.19435, argv.__stack
	b	.L2588		//
.L2587:
	add	w2, w1, 64	// D.19437, D.19428,
	str	w2, [x19, 28]	// D.19437, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19439, argv.__vr_offs
	cmp	w2, 0	// D.19439,
	ble	.L2589		//,
	add	x1, x0, 23	// D.19442, iftmp.1428,
	and	x1, x1, -8	// D.19443, D.19442,
	str	x1, [x19]	// D.19443, argv.__stack
	b	.L2588		//
.L2589:
	ldr	x2, [x19, 16]	// D.19445, argv.__vr_top
	sxtw	x0, w1	// D.19446, D.19428
	add	x2, x2, x0	// D.19447, D.19445, D.19446
	add	x0, sp, 184	// ha.1429,,
	ldr	s0, [x2]	// D.19449, MEM[(float *)_288]
	str	s0, [x0]	// D.19449, MEM[(float *)ha.1429_289]
	ldr	x2, [x19, 16]	// D.19450, argv.__vr_top
	sxtw	x0, w1	// D.19451, D.19428
	add	x0, x0, 16	// D.19452, D.19451,
	add	x0, x2, x0	// D.19453, D.19450, D.19452
	ldr	s0, [x0]	// D.19454, MEM[(float *)_295]
	str	s0, [sp, 188]	// D.19454, MEM[(float *)&ha.1426 + 4B]
	ldr	x2, [x19, 16]	// D.19455, argv.__vr_top
	sxtw	x0, w1	// D.19456, D.19428
	add	x0, x0, 32	// D.19457, D.19456,
	add	x0, x2, x0	// D.19458, D.19455, D.19457
	ldr	s0, [x0]	// D.19459, MEM[(float *)_301]
	str	s0, [sp, 192]	// D.19459, MEM[(float *)&ha.1426 + 8B]
	ldr	x2, [x19, 16]	// D.19460, argv.__vr_top
	sxtw	x0, w1	// D.19461, D.19428
	add	x0, x0, 48	// D.19462, D.19461,
	add	x0, x2, x0	// D.19463, D.19460, D.19462
	ldr	s0, [x0]	// D.19464, MEM[(float *)_307]
	str	s0, [sp, 196]	// D.19464, MEM[(float *)&ha.1426 + 12B]
	add	x0, sp, 184	// iftmp.1428,,
.L2588:
	ldp	x0, x1, [x0]	// D.6472, *iftmp.1427_95
// varargs-dll.c:1131:   float e = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp622, D.6472,,
	fmov	s0, w0	// tmp624, tmp623
	str	s0, [sp, 68]	// tmp624, e
// varargs-dll.c:1132:   float f = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.19465, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1432, argv.__stack
	cmp	w1, 0	// D.19465,
	blt	.L2591		//,
	add	x1, x0, 23	// D.19471, iftmp.1432,
	and	x1, x1, -8	// D.19472, D.19471,
	str	x1, [x19]	// D.19472, argv.__stack
	b	.L2592		//
.L2591:
	add	w2, w1, 64	// D.19474, D.19465,
	str	w2, [x19, 28]	// D.19474, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19476, argv.__vr_offs
	cmp	w2, 0	// D.19476,
	ble	.L2593		//,
	add	x1, x0, 23	// D.19479, iftmp.1432,
	and	x1, x1, -8	// D.19480, D.19479,
	str	x1, [x19]	// D.19480, argv.__stack
	b	.L2592		//
.L2593:
	ldr	x2, [x19, 16]	// D.19482, argv.__vr_top
	sxtw	x0, w1	// D.19483, D.19465
	add	x2, x2, x0	// D.19484, D.19482, D.19483
	add	x0, sp, 200	// ha.1433,,
	ldr	s0, [x2]	// D.19486, MEM[(float *)_328]
	str	s0, [x0]	// D.19486, MEM[(float *)ha.1433_329]
	ldr	x2, [x19, 16]	// D.19487, argv.__vr_top
	sxtw	x0, w1	// D.19488, D.19465
	add	x0, x0, 16	// D.19489, D.19488,
	add	x0, x2, x0	// D.19490, D.19487, D.19489
	ldr	s0, [x0]	// D.19491, MEM[(float *)_335]
	str	s0, [sp, 204]	// D.19491, MEM[(float *)&ha.1430 + 4B]
	ldr	x2, [x19, 16]	// D.19492, argv.__vr_top
	sxtw	x0, w1	// D.19493, D.19465
	add	x0, x0, 32	// D.19494, D.19493,
	add	x0, x2, x0	// D.19495, D.19492, D.19494
	ldr	s0, [x0]	// D.19496, MEM[(float *)_341]
	str	s0, [sp, 208]	// D.19496, MEM[(float *)&ha.1430 + 8B]
	ldr	x2, [x19, 16]	// D.19497, argv.__vr_top
	sxtw	x0, w1	// D.19498, D.19465
	add	x0, x0, 48	// D.19499, D.19498,
	add	x0, x2, x0	// D.19500, D.19497, D.19499
	ldr	s0, [x0]	// D.19501, MEM[(float *)_347]
	str	s0, [sp, 212]	// D.19501, MEM[(float *)&ha.1430 + 12B]
	add	x0, sp, 200	// iftmp.1432,,
.L2592:
	ldp	x0, x1, [x0]	// D.6473, *iftmp.1431_97
// varargs-dll.c:1132:   float f = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp627, tmp626,
	fmov	s0, w0	// tmp629, tmp628
	str	s0, [sp, 72]	// tmp629, f
// varargs-dll.c:1133:   float g = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.19502, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1436, argv.__stack
	cmp	w1, 0	// D.19502,
	blt	.L2595		//,
	add	x1, x0, 23	// D.19508, iftmp.1436,
	and	x1, x1, -8	// D.19509, D.19508,
	str	x1, [x19]	// D.19509, argv.__stack
	b	.L2596		//
.L2595:
	add	w2, w1, 64	// D.19511, D.19502,
	str	w2, [x19, 28]	// D.19511, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19513, argv.__vr_offs
	cmp	w2, 0	// D.19513,
	ble	.L2597		//,
	add	x1, x0, 23	// D.19516, iftmp.1436,
	and	x1, x1, -8	// D.19517, D.19516,
	str	x1, [x19]	// D.19517, argv.__stack
	b	.L2596		//
.L2597:
	ldr	x2, [x19, 16]	// D.19519, argv.__vr_top
	sxtw	x0, w1	// D.19520, D.19502
	add	x2, x2, x0	// D.19521, D.19519, D.19520
	add	x0, sp, 216	// ha.1437,,
	ldr	s0, [x2]	// D.19523, MEM[(float *)_368]
	str	s0, [x0]	// D.19523, MEM[(float *)ha.1437_369]
	ldr	x2, [x19, 16]	// D.19524, argv.__vr_top
	sxtw	x0, w1	// D.19525, D.19502
	add	x0, x0, 16	// D.19526, D.19525,
	add	x0, x2, x0	// D.19527, D.19524, D.19526
	ldr	s0, [x0]	// D.19528, MEM[(float *)_375]
	str	s0, [sp, 220]	// D.19528, MEM[(float *)&ha.1434 + 4B]
	ldr	x2, [x19, 16]	// D.19529, argv.__vr_top
	sxtw	x0, w1	// D.19530, D.19502
	add	x0, x0, 32	// D.19531, D.19530,
	add	x0, x2, x0	// D.19532, D.19529, D.19531
	ldr	s0, [x0]	// D.19533, MEM[(float *)_381]
	str	s0, [sp, 224]	// D.19533, MEM[(float *)&ha.1434 + 8B]
	ldr	x2, [x19, 16]	// D.19534, argv.__vr_top
	sxtw	x0, w1	// D.19535, D.19502
	add	x0, x0, 48	// D.19536, D.19535,
	add	x0, x2, x0	// D.19537, D.19534, D.19536
	ldr	s0, [x0]	// D.19538, MEM[(float *)_387]
	str	s0, [sp, 228]	// D.19538, MEM[(float *)&ha.1434 + 12B]
	add	x0, sp, 216	// iftmp.1436,,
.L2596:
	ldp	x0, x1, [x0]	// D.6474, *iftmp.1435_99
// varargs-dll.c:1133:   float g = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp630, D.6474,,
	fmov	s0, w0	// tmp632, tmp631
	str	s0, [sp, 76]	// tmp632, g
// varargs-dll.c:1134:   float h = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.19539, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1440, argv.__stack
	cmp	w1, 0	// D.19539,
	blt	.L2599		//,
	add	x1, x0, 23	// D.19545, iftmp.1440,
	and	x1, x1, -8	// D.19546, D.19545,
	str	x1, [x19]	// D.19546, argv.__stack
	b	.L2600		//
.L2599:
	add	w2, w1, 64	// D.19548, D.19539,
	str	w2, [x19, 28]	// D.19548, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19550, argv.__vr_offs
	cmp	w2, 0	// D.19550,
	ble	.L2601		//,
	add	x1, x0, 23	// D.19553, iftmp.1440,
	and	x1, x1, -8	// D.19554, D.19553,
	str	x1, [x19]	// D.19554, argv.__stack
	b	.L2600		//
.L2601:
	ldr	x2, [x19, 16]	// D.19556, argv.__vr_top
	sxtw	x0, w1	// D.19557, D.19539
	add	x2, x2, x0	// D.19558, D.19556, D.19557
	add	x0, sp, 232	// ha.1441,,
	ldr	s0, [x2]	// D.19560, MEM[(float *)_408]
	str	s0, [x0]	// D.19560, MEM[(float *)ha.1441_409]
	ldr	x2, [x19, 16]	// D.19561, argv.__vr_top
	sxtw	x0, w1	// D.19562, D.19539
	add	x0, x0, 16	// D.19563, D.19562,
	add	x0, x2, x0	// D.19564, D.19561, D.19563
	ldr	s0, [x0]	// D.19565, MEM[(float *)_415]
	str	s0, [sp, 236]	// D.19565, MEM[(float *)&ha.1438 + 4B]
	ldr	x2, [x19, 16]	// D.19566, argv.__vr_top
	sxtw	x0, w1	// D.19567, D.19539
	add	x0, x0, 32	// D.19568, D.19567,
	add	x0, x2, x0	// D.19569, D.19566, D.19568
	ldr	s0, [x0]	// D.19570, MEM[(float *)_421]
	str	s0, [sp, 240]	// D.19570, MEM[(float *)&ha.1438 + 8B]
	ldr	x2, [x19, 16]	// D.19571, argv.__vr_top
	sxtw	x0, w1	// D.19572, D.19539
	add	x0, x0, 48	// D.19573, D.19572,
	add	x0, x2, x0	// D.19574, D.19571, D.19573
	ldr	s0, [x0]	// D.19575, MEM[(float *)_427]
	str	s0, [sp, 244]	// D.19575, MEM[(float *)&ha.1438 + 12B]
	add	x0, sp, 232	// iftmp.1440,,
.L2600:
	ldp	x0, x1, [x0]	// D.6475, *iftmp.1439_101
// varargs-dll.c:1134:   float h = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp634, D.6475
	asr	x0, x0, 32	// tmp635, tmp634,
	fmov	s0, w0	// tmp637, tmp636
	str	s0, [sp, 80]	// tmp637, h
// varargs-dll.c:1135:   float i = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.19576, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1444, argv.__stack
	cmp	w1, 0	// D.19576,
	blt	.L2603		//,
	add	x1, x0, 23	// D.19582, iftmp.1444,
	and	x1, x1, -8	// D.19583, D.19582,
	str	x1, [x19]	// D.19583, argv.__stack
	b	.L2604		//
.L2603:
	add	w2, w1, 64	// D.19585, D.19576,
	str	w2, [x19, 28]	// D.19585, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19587, argv.__vr_offs
	cmp	w2, 0	// D.19587,
	ble	.L2605		//,
	add	x1, x0, 23	// D.19590, iftmp.1444,
	and	x1, x1, -8	// D.19591, D.19590,
	str	x1, [x19]	// D.19591, argv.__stack
	b	.L2604		//
.L2605:
	ldr	x2, [x19, 16]	// D.19593, argv.__vr_top
	sxtw	x0, w1	// D.19594, D.19576
	add	x2, x2, x0	// D.19595, D.19593, D.19594
	add	x0, sp, 248	// ha.1445,,
	ldr	s0, [x2]	// D.19597, MEM[(float *)_448]
	str	s0, [x0]	// D.19597, MEM[(float *)ha.1445_449]
	ldr	x2, [x19, 16]	// D.19598, argv.__vr_top
	sxtw	x0, w1	// D.19599, D.19576
	add	x0, x0, 16	// D.19600, D.19599,
	add	x0, x2, x0	// D.19601, D.19598, D.19600
	ldr	s0, [x0]	// D.19602, MEM[(float *)_455]
	str	s0, [sp, 252]	// D.19602, MEM[(float *)&ha.1442 + 4B]
	ldr	x2, [x19, 16]	// D.19603, argv.__vr_top
	sxtw	x0, w1	// D.19604, D.19576
	add	x0, x0, 32	// D.19605, D.19604,
	add	x0, x2, x0	// D.19606, D.19603, D.19605
	ldr	s0, [x0]	// D.19607, MEM[(float *)_461]
	str	s0, [sp, 256]	// D.19607, MEM[(float *)&ha.1442 + 8B]
	ldr	x2, [x19, 16]	// D.19608, argv.__vr_top
	sxtw	x0, w1	// D.19609, D.19576
	add	x0, x0, 48	// D.19610, D.19609,
	add	x0, x2, x0	// D.19611, D.19608, D.19610
	ldr	s0, [x0]	// D.19612, MEM[(float *)_467]
	str	s0, [sp, 260]	// D.19612, MEM[(float *)&ha.1442 + 12B]
	add	x0, sp, 248	// iftmp.1444,,
.L2604:
	ldp	x0, x1, [x0]	// D.6476, *iftmp.1443_103
// varargs-dll.c:1135:   float i = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp638, D.6476,,
	fmov	s0, w0	// tmp640, tmp639
	str	s0, [sp, 84]	// tmp640, i
// varargs-dll.c:1136:   float j = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.19613, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1448, argv.__stack
	cmp	w1, 0	// D.19613,
	blt	.L2607		//,
	add	x1, x0, 23	// D.19619, iftmp.1448,
	and	x1, x1, -8	// D.19620, D.19619,
	str	x1, [x19]	// D.19620, argv.__stack
	b	.L2608		//
.L2607:
	add	w2, w1, 64	// D.19622, D.19613,
	str	w2, [x19, 28]	// D.19622, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19624, argv.__vr_offs
	cmp	w2, 0	// D.19624,
	ble	.L2609		//,
	add	x1, x0, 23	// D.19627, iftmp.1448,
	and	x1, x1, -8	// D.19628, D.19627,
	str	x1, [x19]	// D.19628, argv.__stack
	b	.L2608		//
.L2609:
	ldr	x2, [x19, 16]	// D.19630, argv.__vr_top
	sxtw	x0, w1	// D.19631, D.19613
	add	x2, x2, x0	// D.19632, D.19630, D.19631
	add	x0, sp, 264	// ha.1449,,
	ldr	s0, [x2]	// D.19634, MEM[(float *)_488]
	str	s0, [x0]	// D.19634, MEM[(float *)ha.1449_489]
	ldr	x2, [x19, 16]	// D.19635, argv.__vr_top
	sxtw	x0, w1	// D.19636, D.19613
	add	x0, x0, 16	// D.19637, D.19636,
	add	x0, x2, x0	// D.19638, D.19635, D.19637
	ldr	s0, [x0]	// D.19639, MEM[(float *)_495]
	str	s0, [sp, 268]	// D.19639, MEM[(float *)&ha.1446 + 4B]
	ldr	x2, [x19, 16]	// D.19640, argv.__vr_top
	sxtw	x0, w1	// D.19641, D.19613
	add	x0, x0, 32	// D.19642, D.19641,
	add	x0, x2, x0	// D.19643, D.19640, D.19642
	ldr	s0, [x0]	// D.19644, MEM[(float *)_501]
	str	s0, [sp, 272]	// D.19644, MEM[(float *)&ha.1446 + 8B]
	ldr	x2, [x19, 16]	// D.19645, argv.__vr_top
	sxtw	x0, w1	// D.19646, D.19613
	add	x0, x0, 48	// D.19647, D.19646,
	add	x0, x2, x0	// D.19648, D.19645, D.19647
	ldr	s0, [x0]	// D.19649, MEM[(float *)_507]
	str	s0, [sp, 276]	// D.19649, MEM[(float *)&ha.1446 + 12B]
	add	x0, sp, 264	// iftmp.1448,,
.L2608:
	ldp	x0, x1, [x0]	// D.6477, *iftmp.1447_105
// varargs-dll.c:1136:   float j = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp643, tmp642,
	fmov	s0, w0	// tmp645, tmp644
	str	s0, [sp, 88]	// tmp645, j
// varargs-dll.c:1137:   float k = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.19650, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1452, argv.__stack
	cmp	w1, 0	// D.19650,
	blt	.L2611		//,
	add	x1, x0, 23	// D.19656, iftmp.1452,
	and	x1, x1, -8	// D.19657, D.19656,
	str	x1, [x19]	// D.19657, argv.__stack
	b	.L2612		//
.L2611:
	add	w2, w1, 64	// D.19659, D.19650,
	str	w2, [x19, 28]	// D.19659, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19661, argv.__vr_offs
	cmp	w2, 0	// D.19661,
	ble	.L2613		//,
	add	x1, x0, 23	// D.19664, iftmp.1452,
	and	x1, x1, -8	// D.19665, D.19664,
	str	x1, [x19]	// D.19665, argv.__stack
	b	.L2612		//
.L2613:
	ldr	x2, [x19, 16]	// D.19667, argv.__vr_top
	sxtw	x0, w1	// D.19668, D.19650
	add	x2, x2, x0	// D.19669, D.19667, D.19668
	add	x0, sp, 280	// ha.1453,,
	ldr	s0, [x2]	// D.19671, MEM[(float *)_528]
	str	s0, [x0]	// D.19671, MEM[(float *)ha.1453_529]
	ldr	x2, [x19, 16]	// D.19672, argv.__vr_top
	sxtw	x0, w1	// D.19673, D.19650
	add	x0, x0, 16	// D.19674, D.19673,
	add	x0, x2, x0	// D.19675, D.19672, D.19674
	ldr	s0, [x0]	// D.19676, MEM[(float *)_535]
	str	s0, [sp, 284]	// D.19676, MEM[(float *)&ha.1450 + 4B]
	ldr	x2, [x19, 16]	// D.19677, argv.__vr_top
	sxtw	x0, w1	// D.19678, D.19650
	add	x0, x0, 32	// D.19679, D.19678,
	add	x0, x2, x0	// D.19680, D.19677, D.19679
	ldr	s0, [x0]	// D.19681, MEM[(float *)_541]
	str	s0, [sp, 288]	// D.19681, MEM[(float *)&ha.1450 + 8B]
	ldr	x2, [x19, 16]	// D.19682, argv.__vr_top
	sxtw	x0, w1	// D.19683, D.19650
	add	x0, x0, 48	// D.19684, D.19683,
	add	x0, x2, x0	// D.19685, D.19682, D.19684
	ldr	s0, [x0]	// D.19686, MEM[(float *)_547]
	str	s0, [sp, 292]	// D.19686, MEM[(float *)&ha.1450 + 12B]
	add	x0, sp, 280	// iftmp.1452,,
.L2612:
	ldp	x0, x1, [x0]	// D.6478, *iftmp.1451_107
// varargs-dll.c:1137:   float k = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp646, D.6478,,
	fmov	s0, w0	// tmp648, tmp647
	str	s0, [sp, 92]	// tmp648, k
// varargs-dll.c:1138:   float l = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.19687, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1456, argv.__stack
	cmp	w1, 0	// D.19687,
	blt	.L2615		//,
	add	x1, x0, 23	// D.19693, iftmp.1456,
	and	x1, x1, -8	// D.19694, D.19693,
	str	x1, [x19]	// D.19694, argv.__stack
	b	.L2616		//
.L2615:
	add	w2, w1, 64	// D.19696, D.19687,
	str	w2, [x19, 28]	// D.19696, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19698, argv.__vr_offs
	cmp	w2, 0	// D.19698,
	ble	.L2617		//,
	add	x1, x0, 23	// D.19701, iftmp.1456,
	and	x1, x1, -8	// D.19702, D.19701,
	str	x1, [x19]	// D.19702, argv.__stack
	b	.L2616		//
.L2617:
	ldr	x2, [x19, 16]	// D.19704, argv.__vr_top
	sxtw	x0, w1	// D.19705, D.19687
	add	x2, x2, x0	// D.19706, D.19704, D.19705
	add	x0, sp, 296	// ha.1457,,
	ldr	s0, [x2]	// D.19708, MEM[(float *)_568]
	str	s0, [x0]	// D.19708, MEM[(float *)ha.1457_569]
	ldr	x2, [x19, 16]	// D.19709, argv.__vr_top
	sxtw	x0, w1	// D.19710, D.19687
	add	x0, x0, 16	// D.19711, D.19710,
	add	x0, x2, x0	// D.19712, D.19709, D.19711
	ldr	s0, [x0]	// D.19713, MEM[(float *)_575]
	str	s0, [sp, 300]	// D.19713, MEM[(float *)&ha.1454 + 4B]
	ldr	x2, [x19, 16]	// D.19714, argv.__vr_top
	sxtw	x0, w1	// D.19715, D.19687
	add	x0, x0, 32	// D.19716, D.19715,
	add	x0, x2, x0	// D.19717, D.19714, D.19716
	ldr	s0, [x0]	// D.19718, MEM[(float *)_581]
	str	s0, [sp, 304]	// D.19718, MEM[(float *)&ha.1454 + 8B]
	ldr	x2, [x19, 16]	// D.19719, argv.__vr_top
	sxtw	x0, w1	// D.19720, D.19687
	add	x0, x0, 48	// D.19721, D.19720,
	add	x0, x2, x0	// D.19722, D.19719, D.19721
	ldr	s0, [x0]	// D.19723, MEM[(float *)_587]
	str	s0, [sp, 308]	// D.19723, MEM[(float *)&ha.1454 + 12B]
	add	x0, sp, 296	// iftmp.1456,,
.L2616:
	ldp	x0, x1, [x0]	// D.6479, *iftmp.1455_109
// varargs-dll.c:1138:   float l = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp650, D.6479
	asr	x0, x0, 32	// tmp651, tmp650,
	fmov	s0, w0	// tmp653, tmp652
	str	s0, [sp, 96]	// tmp653, l
// varargs-dll.c:1139:   float m = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.19724, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1460, argv.__stack
	cmp	w1, 0	// D.19724,
	blt	.L2619		//,
	add	x1, x0, 23	// D.19730, iftmp.1460,
	and	x1, x1, -8	// D.19731, D.19730,
	str	x1, [x19]	// D.19731, argv.__stack
	b	.L2620		//
.L2619:
	add	w2, w1, 64	// D.19733, D.19724,
	str	w2, [x19, 28]	// D.19733, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19735, argv.__vr_offs
	cmp	w2, 0	// D.19735,
	ble	.L2621		//,
	add	x1, x0, 23	// D.19738, iftmp.1460,
	and	x1, x1, -8	// D.19739, D.19738,
	str	x1, [x19]	// D.19739, argv.__stack
	b	.L2620		//
.L2621:
	ldr	x2, [x19, 16]	// D.19741, argv.__vr_top
	sxtw	x0, w1	// D.19742, D.19724
	add	x2, x2, x0	// D.19743, D.19741, D.19742
	add	x0, sp, 312	// ha.1461,,
	ldr	s0, [x2]	// D.19745, MEM[(float *)_608]
	str	s0, [x0]	// D.19745, MEM[(float *)ha.1461_609]
	ldr	x2, [x19, 16]	// D.19746, argv.__vr_top
	sxtw	x0, w1	// D.19747, D.19724
	add	x0, x0, 16	// D.19748, D.19747,
	add	x0, x2, x0	// D.19749, D.19746, D.19748
	ldr	s0, [x0]	// D.19750, MEM[(float *)_615]
	str	s0, [sp, 316]	// D.19750, MEM[(float *)&ha.1458 + 4B]
	ldr	x2, [x19, 16]	// D.19751, argv.__vr_top
	sxtw	x0, w1	// D.19752, D.19724
	add	x0, x0, 32	// D.19753, D.19752,
	add	x0, x2, x0	// D.19754, D.19751, D.19753
	ldr	s0, [x0]	// D.19755, MEM[(float *)_621]
	str	s0, [sp, 320]	// D.19755, MEM[(float *)&ha.1458 + 8B]
	ldr	x2, [x19, 16]	// D.19756, argv.__vr_top
	sxtw	x0, w1	// D.19757, D.19724
	add	x0, x0, 48	// D.19758, D.19757,
	add	x0, x2, x0	// D.19759, D.19756, D.19758
	ldr	s0, [x0]	// D.19760, MEM[(float *)_627]
	str	s0, [sp, 324]	// D.19760, MEM[(float *)&ha.1458 + 12B]
	add	x0, sp, 312	// iftmp.1460,,
.L2620:
	ldp	x0, x1, [x0]	// D.6480, *iftmp.1459_111
// varargs-dll.c:1139:   float m = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp654, D.6480,,
	fmov	s0, w0	// tmp656, tmp655
	str	s0, [sp, 100]	// tmp656, m
// varargs-dll.c:1140:   float n = va_arg (argv, struct hfa_4_floats).b;
	ldr	w1, [x19, 28]	// D.19761, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1464, argv.__stack
	cmp	w1, 0	// D.19761,
	blt	.L2623		//,
	add	x1, x0, 23	// D.19767, iftmp.1464,
	and	x1, x1, -8	// D.19768, D.19767,
	str	x1, [x19]	// D.19768, argv.__stack
	b	.L2624		//
.L2623:
	add	w2, w1, 64	// D.19770, D.19761,
	str	w2, [x19, 28]	// D.19770, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19772, argv.__vr_offs
	cmp	w2, 0	// D.19772,
	ble	.L2625		//,
	add	x1, x0, 23	// D.19775, iftmp.1464,
	and	x1, x1, -8	// D.19776, D.19775,
	str	x1, [x19]	// D.19776, argv.__stack
	b	.L2624		//
.L2625:
	ldr	x2, [x19, 16]	// D.19778, argv.__vr_top
	sxtw	x0, w1	// D.19779, D.19761
	add	x2, x2, x0	// D.19780, D.19778, D.19779
	add	x0, sp, 328	// ha.1465,,
	ldr	s0, [x2]	// D.19782, MEM[(float *)_648]
	str	s0, [x0]	// D.19782, MEM[(float *)ha.1465_649]
	ldr	x2, [x19, 16]	// D.19783, argv.__vr_top
	sxtw	x0, w1	// D.19784, D.19761
	add	x0, x0, 16	// D.19785, D.19784,
	add	x0, x2, x0	// D.19786, D.19783, D.19785
	ldr	s0, [x0]	// D.19787, MEM[(float *)_655]
	str	s0, [sp, 332]	// D.19787, MEM[(float *)&ha.1462 + 4B]
	ldr	x2, [x19, 16]	// D.19788, argv.__vr_top
	sxtw	x0, w1	// D.19789, D.19761
	add	x0, x0, 32	// D.19790, D.19789,
	add	x0, x2, x0	// D.19791, D.19788, D.19790
	ldr	s0, [x0]	// D.19792, MEM[(float *)_661]
	str	s0, [sp, 336]	// D.19792, MEM[(float *)&ha.1462 + 8B]
	ldr	x2, [x19, 16]	// D.19793, argv.__vr_top
	sxtw	x0, w1	// D.19794, D.19761
	add	x0, x0, 48	// D.19795, D.19794,
	add	x0, x2, x0	// D.19796, D.19793, D.19795
	ldr	s0, [x0]	// D.19797, MEM[(float *)_667]
	str	s0, [sp, 340]	// D.19797, MEM[(float *)&ha.1462 + 12B]
	add	x0, sp, 328	// iftmp.1464,,
.L2624:
	ldp	x0, x1, [x0]	// D.6481, *iftmp.1463_113
// varargs-dll.c:1140:   float n = va_arg (argv, struct hfa_4_floats).b;
	asr	x0, x0, 32	// tmp659, tmp658,
	fmov	s0, w0	// tmp661, tmp660
	str	s0, [sp, 104]	// tmp661, n
// varargs-dll.c:1141:   float o = va_arg (argv, struct hfa_4_floats).c;
	ldr	w1, [x19, 28]	// D.19798, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1468, argv.__stack
	cmp	w1, 0	// D.19798,
	blt	.L2627		//,
	add	x1, x0, 23	// D.19804, iftmp.1468,
	and	x1, x1, -8	// D.19805, D.19804,
	str	x1, [x19]	// D.19805, argv.__stack
	b	.L2628		//
.L2627:
	add	w2, w1, 64	// D.19807, D.19798,
	str	w2, [x19, 28]	// D.19807, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19809, argv.__vr_offs
	cmp	w2, 0	// D.19809,
	ble	.L2629		//,
	add	x1, x0, 23	// D.19812, iftmp.1468,
	and	x1, x1, -8	// D.19813, D.19812,
	str	x1, [x19]	// D.19813, argv.__stack
	b	.L2628		//
.L2629:
	ldr	x2, [x19, 16]	// D.19815, argv.__vr_top
	sxtw	x0, w1	// D.19816, D.19798
	add	x2, x2, x0	// D.19817, D.19815, D.19816
	add	x0, sp, 344	// ha.1469,,
	ldr	s0, [x2]	// D.19819, MEM[(float *)_688]
	str	s0, [x0]	// D.19819, MEM[(float *)ha.1469_689]
	ldr	x2, [x19, 16]	// D.19820, argv.__vr_top
	sxtw	x0, w1	// D.19821, D.19798
	add	x0, x0, 16	// D.19822, D.19821,
	add	x0, x2, x0	// D.19823, D.19820, D.19822
	ldr	s0, [x0]	// D.19824, MEM[(float *)_695]
	str	s0, [sp, 348]	// D.19824, MEM[(float *)&ha.1466 + 4B]
	ldr	x2, [x19, 16]	// D.19825, argv.__vr_top
	sxtw	x0, w1	// D.19826, D.19798
	add	x0, x0, 32	// D.19827, D.19826,
	add	x0, x2, x0	// D.19828, D.19825, D.19827
	ldr	s0, [x0]	// D.19829, MEM[(float *)_701]
	str	s0, [sp, 352]	// D.19829, MEM[(float *)&ha.1466 + 8B]
	ldr	x2, [x19, 16]	// D.19830, argv.__vr_top
	sxtw	x0, w1	// D.19831, D.19798
	add	x0, x0, 48	// D.19832, D.19831,
	add	x0, x2, x0	// D.19833, D.19830, D.19832
	ldr	s0, [x0]	// D.19834, MEM[(float *)_707]
	str	s0, [sp, 356]	// D.19834, MEM[(float *)&ha.1466 + 12B]
	add	x0, sp, 344	// iftmp.1468,,
.L2628:
	ldp	x0, x1, [x0]	// D.6482, *iftmp.1467_115
// varargs-dll.c:1141:   float o = va_arg (argv, struct hfa_4_floats).c;
	sbfx	x0, x1, 0, 32	// tmp662, D.6482,,
	fmov	s0, w0	// tmp664, tmp663
	str	s0, [sp, 108]	// tmp664, o
// varargs-dll.c:1142:   float p = va_arg (argv, struct hfa_4_floats).d;
	ldr	w1, [x19, 28]	// D.19835, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1472, argv.__stack
	cmp	w1, 0	// D.19835,
	blt	.L2631		//,
	add	x1, x0, 23	// D.19841, iftmp.1472,
	and	x1, x1, -8	// D.19842, D.19841,
	str	x1, [x19]	// D.19842, argv.__stack
	b	.L2632		//
.L2631:
	add	w2, w1, 64	// D.19844, D.19835,
	str	w2, [x19, 28]	// D.19844, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19846, argv.__vr_offs
	cmp	w2, 0	// D.19846,
	ble	.L2633		//,
	add	x1, x0, 23	// D.19849, iftmp.1472,
	and	x1, x1, -8	// D.19850, D.19849,
	str	x1, [x19]	// D.19850, argv.__stack
	b	.L2632		//
.L2633:
	ldr	x2, [x19, 16]	// D.19852, argv.__vr_top
	sxtw	x0, w1	// D.19853, D.19835
	add	x2, x2, x0	// D.19854, D.19852, D.19853
	add	x0, sp, 360	// ha.1473,,
	ldr	s0, [x2]	// D.19856, MEM[(float *)_728]
	str	s0, [x0]	// D.19856, MEM[(float *)ha.1473_729]
	ldr	x2, [x19, 16]	// D.19857, argv.__vr_top
	sxtw	x0, w1	// D.19858, D.19835
	add	x0, x0, 16	// D.19859, D.19858,
	add	x0, x2, x0	// D.19860, D.19857, D.19859
	ldr	s0, [x0]	// D.19861, MEM[(float *)_735]
	str	s0, [sp, 364]	// D.19861, MEM[(float *)&ha.1470 + 4B]
	ldr	x2, [x19, 16]	// D.19862, argv.__vr_top
	sxtw	x0, w1	// D.19863, D.19835
	add	x0, x0, 32	// D.19864, D.19863,
	add	x0, x2, x0	// D.19865, D.19862, D.19864
	ldr	s0, [x0]	// D.19866, MEM[(float *)_741]
	str	s0, [sp, 368]	// D.19866, MEM[(float *)&ha.1470 + 8B]
	ldr	x2, [x19, 16]	// D.19867, argv.__vr_top
	sxtw	x0, w1	// D.19868, D.19835
	add	x0, x0, 48	// D.19869, D.19868,
	add	x0, x2, x0	// D.19870, D.19867, D.19869
	ldr	s0, [x0]	// D.19871, MEM[(float *)_747]
	str	s0, [sp, 372]	// D.19871, MEM[(float *)&ha.1470 + 12B]
	add	x0, sp, 360	// iftmp.1472,,
.L2632:
	ldp	x0, x1, [x0]	// D.6483, *iftmp.1471_117
// varargs-dll.c:1142:   float p = va_arg (argv, struct hfa_4_floats).d;
	mov	x0, x1	// tmp666, D.6483
	asr	x0, x0, 32	// tmp667, tmp666,
	fmov	s0, w0	// tmp669, tmp668
	str	s0, [sp, 112]	// tmp669, p
// varargs-dll.c:1143:   float q = va_arg (argv, struct hfa_4_floats).a;
	ldr	w1, [x19, 28]	// D.19872, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1476, argv.__stack
	cmp	w1, 0	// D.19872,
	blt	.L2635		//,
	add	x1, x0, 23	// D.19878, iftmp.1476,
	and	x1, x1, -8	// D.19879, D.19878,
	str	x1, [x19]	// D.19879, argv.__stack
	b	.L2636		//
.L2635:
	add	w2, w1, 64	// D.19881, D.19872,
	str	w2, [x19, 28]	// D.19881, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19883, argv.__vr_offs
	cmp	w2, 0	// D.19883,
	ble	.L2637		//,
	add	x1, x0, 23	// D.19886, iftmp.1476,
	and	x1, x1, -8	// D.19887, D.19886,
	str	x1, [x19]	// D.19887, argv.__stack
	b	.L2636		//
.L2637:
	ldr	x2, [x19, 16]	// D.19889, argv.__vr_top
	sxtw	x0, w1	// D.19890, D.19872
	add	x2, x2, x0	// D.19891, D.19889, D.19890
	add	x0, sp, 376	// ha.1477,,
	ldr	s0, [x2]	// D.19893, MEM[(float *)_768]
	str	s0, [x0]	// D.19893, MEM[(float *)ha.1477_769]
	ldr	x2, [x19, 16]	// D.19894, argv.__vr_top
	sxtw	x0, w1	// D.19895, D.19872
	add	x0, x0, 16	// D.19896, D.19895,
	add	x0, x2, x0	// D.19897, D.19894, D.19896
	ldr	s0, [x0]	// D.19898, MEM[(float *)_775]
	str	s0, [sp, 380]	// D.19898, MEM[(float *)&ha.1474 + 4B]
	ldr	x2, [x19, 16]	// D.19899, argv.__vr_top
	sxtw	x0, w1	// D.19900, D.19872
	add	x0, x0, 32	// D.19901, D.19900,
	add	x0, x2, x0	// D.19902, D.19899, D.19901
	ldr	s0, [x0]	// D.19903, MEM[(float *)_781]
	str	s0, [sp, 384]	// D.19903, MEM[(float *)&ha.1474 + 8B]
	ldr	x2, [x19, 16]	// D.19904, argv.__vr_top
	sxtw	x0, w1	// D.19905, D.19872
	add	x0, x0, 48	// D.19906, D.19905,
	add	x0, x2, x0	// D.19907, D.19904, D.19906
	ldr	s0, [x0]	// D.19908, MEM[(float *)_787]
	str	s0, [sp, 388]	// D.19908, MEM[(float *)&ha.1474 + 12B]
	add	x0, sp, 376	// iftmp.1476,,
.L2636:
	ldp	x0, x1, [x0]	// D.6484, *iftmp.1475_119
// varargs-dll.c:1143:   float q = va_arg (argv, struct hfa_4_floats).a;
	sbfx	x0, x0, 0, 32	// tmp670, D.6484,,
	fmov	s0, w0	// tmp672, tmp671
	str	s0, [sp, 116]	// tmp672, q
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s1, [sp, 52]	// tmp673, a
	ldr	s0, [sp, 56]	// tmp674, b
	fadd	s1, s1, s0	// _1, tmp673, tmp674
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 60]	// tmp675, c
	fadd	s1, s1, s0	// _2, _1, tmp675
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 64]	// tmp676, d
	fadd	s1, s1, s0	// _3, _2, tmp676
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 68]	// tmp677, e
	fadd	s1, s1, s0	// _4, _3, tmp677
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 72]	// tmp678, f
	fadd	s1, s1, s0	// _5, _4, tmp678
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 76]	// tmp679, g
	fadd	s1, s1, s0	// _6, _5, tmp679
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 80]	// tmp680, h
	fadd	s1, s1, s0	// _7, _6, tmp680
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 84]	// tmp681, i
	fadd	s1, s1, s0	// _8, _7, tmp681
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 88]	// tmp682, j
	fadd	s1, s1, s0	// _9, _8, tmp682
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 92]	// tmp683, k
	fadd	s1, s1, s0	// _10, _9, tmp683
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 96]	// tmp684, l
	fadd	s1, s1, s0	// _11, _10, tmp684
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 100]	// tmp685, m
	fadd	s1, s1, s0	// _12, _11, tmp685
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 104]	// tmp686, n
	fadd	s1, s1, s0	// _13, _12, tmp686
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 108]	// tmp687, o
	fadd	s1, s1, s0	// _14, _13, tmp687
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 112]	// tmp688, p
	fadd	s1, s1, s0	// _15, _14, tmp688
// varargs-dll.c:1144:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	s0, [sp, 116]	// tmp689, q
	fadd	s0, s1, s0	// _16, _15, tmp689
	fcvtzs	s0, s0	// _52, _16
	fmov	w1, s0	// <retval>, _52
// varargs-dll.c:1145: }
	adrp	x0, :got:__stack_chk_guard	// tmp692,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp691, tmp692,
	ldr	x3, [sp, 392]	// tmp694, D.19909
	ldr	x2, [x0]	// tmp695,
	subs	x3, x3, x2	// tmp694, tmp695
	mov	x2, 0	// tmp695
	beq	.L2640		//,
	bl	__stack_chk_fail		//
.L2640:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE73:
	.size	use_va_list_many_hfa_4_floats, .-use_va_list_many_hfa_4_floats
	.align	2
	.global	use_va_args_few_hfa_2_doubles
	.type	use_va_args_few_hfa_2_doubles, %function
use_va_args_few_hfa_2_doubles:
.LFB74:
	.cfi_startproc
	stp	x29, x30, [sp, -320]!	//,,,
	.cfi_def_cfa_offset 320
	.cfi_offset 29, -320
	.cfi_offset 30, -312
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 264]	//,
	str	x2, [sp, 272]	//,
	str	x3, [sp, 280]	//,
	str	x4, [sp, 288]	//,
	str	x5, [sp, 296]	//,
	str	x6, [sp, 304]	//,
	str	x7, [sp, 312]	//,
	str	q0, [sp, 128]	//,
	str	q1, [sp, 144]	//,
	str	q2, [sp, 160]	//,
	str	q3, [sp, 176]	//,
	str	q4, [sp, 192]	//,
	str	q5, [sp, 208]	//,
	str	q6, [sp, 224]	//,
	str	q7, [sp, 240]	//,
// varargs-dll.c:1149: {
	adrp	x0, :got:__stack_chk_guard	// tmp134,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp133, tmp134,
	ldr	x1, [x0]	// tmp146,
	str	x1, [sp, 120]	// tmp146, D.19964
	mov	x1, 0	// tmp146
// varargs-dll.c:1151:   va_start (argv, format);
	add	x0, sp, 320	// tmp151,,
	str	x0, [sp, 88]	// tmp151, MEM[(struct  *)&argv].__stack
	add	x0, sp, 320	// tmp152,,
	str	x0, [sp, 96]	// tmp152, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 256	// tmp136,,
	str	x0, [sp, 104]	// tmp136, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp137,
	str	w0, [sp, 112]	// tmp137, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp138,
	str	w0, [sp, 116]	// tmp138, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1152:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 116]	// D.19910, argv.__vr_offs
	ldr	x0, [sp, 88]	// iftmp.1480, argv.__stack
	cmp	w1, 0	// D.19910,
	blt	.L2642		//,
	add	x1, x0, 23	// D.19916, iftmp.1480,
	and	x1, x1, -8	// D.19917, D.19916,
	str	x1, [sp, 88]	// D.19917, argv.__stack
	b	.L2643		//
.L2642:
	add	w2, w1, 32	// D.19919, D.19910,
	str	w2, [sp, 116]	// D.19919, argv.__vr_offs
	ldr	w2, [sp, 116]	// D.19921, argv.__vr_offs
	cmp	w2, 0	// D.19921,
	ble	.L2644		//,
	add	x1, x0, 23	// D.19924, iftmp.1480,
	and	x1, x1, -8	// D.19925, D.19924,
	str	x1, [sp, 88]	// D.19925, argv.__stack
	b	.L2643		//
.L2644:
	ldr	x2, [sp, 104]	// D.19927, argv.__vr_top
	sxtw	x0, w1	// D.19928, D.19910
	add	x2, x2, x0	// D.19929, D.19927, D.19928
	add	x0, sp, 56	// ha.1481,,
	ldr	d0, [x2]	// D.19931, MEM[(double *)_26]
	str	d0, [x0]	// D.19931, MEM[(double *)ha.1481_27]
	ldr	x2, [sp, 104]	// D.19932, argv.__vr_top
	sxtw	x0, w1	// D.19933, D.19910
	add	x0, x0, 16	// D.19934, D.19933,
	add	x0, x2, x0	// D.19935, D.19932, D.19934
	ldr	d0, [x0]	// D.19936, MEM[(double *)_33]
	str	d0, [sp, 64]	// D.19936, MEM[(double *)&ha.1478 + 8B]
	add	x0, sp, 56	// iftmp.1480,,
.L2643:
	ldp	x0, x1, [x0]	// D.6487, *iftmp.1479_15
// varargs-dll.c:1152:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp139, D.6487
	str	d0, [sp, 40]	// tmp139, a
// varargs-dll.c:1153:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 116]	// D.19937, argv.__vr_offs
	ldr	x0, [sp, 88]	// iftmp.1484, argv.__stack
	cmp	w1, 0	// D.19937,
	blt	.L2646		//,
	add	x1, x0, 23	// D.19943, iftmp.1484,
	and	x1, x1, -8	// D.19944, D.19943,
	str	x1, [sp, 88]	// D.19944, argv.__stack
	b	.L2647		//
.L2646:
	add	w2, w1, 32	// D.19946, D.19937,
	str	w2, [sp, 116]	// D.19946, argv.__vr_offs
	ldr	w2, [sp, 116]	// D.19948, argv.__vr_offs
	cmp	w2, 0	// D.19948,
	ble	.L2648		//,
	add	x1, x0, 23	// D.19951, iftmp.1484,
	and	x1, x1, -8	// D.19952, D.19951,
	str	x1, [sp, 88]	// D.19952, argv.__stack
	b	.L2647		//
.L2648:
	ldr	x2, [sp, 104]	// D.19954, argv.__vr_top
	sxtw	x0, w1	// D.19955, D.19937
	add	x2, x2, x0	// D.19956, D.19954, D.19955
	add	x0, sp, 72	// ha.1485,,
	ldr	d0, [x2]	// D.19958, MEM[(double *)_54]
	str	d0, [x0]	// D.19958, MEM[(double *)ha.1485_55]
	ldr	x2, [sp, 104]	// D.19959, argv.__vr_top
	sxtw	x0, w1	// D.19960, D.19937
	add	x0, x0, 16	// D.19961, D.19960,
	add	x0, x2, x0	// D.19962, D.19959, D.19961
	ldr	d0, [x0]	// D.19963, MEM[(double *)_61]
	str	d0, [sp, 80]	// D.19963, MEM[(double *)&ha.1482 + 8B]
	add	x0, sp, 72	// iftmp.1484,,
.L2647:
	ldp	x0, x1, [x0]	// D.6488, *iftmp.1483_17
// varargs-dll.c:1153:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp140, D.6488
	str	d0, [sp, 48]	// tmp140, b
// varargs-dll.c:1155:   return a + b;
	ldr	d1, [sp, 40]	// tmp141, a
	ldr	d0, [sp, 48]	// tmp142, b
	fadd	d0, d1, d0	// _1, tmp141, tmp142
	fcvtzs	w0, d0	// _9, _1
	mov	w1, w0	// <retval>, _9
// varargs-dll.c:1156: }
	adrp	x0, :got:__stack_chk_guard	// tmp145,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp144, tmp145,
	ldr	x3, [sp, 120]	// tmp147, D.19964
	ldr	x2, [x0]	// tmp148,
	subs	x3, x3, x2	// tmp147, tmp148
	mov	x2, 0	// tmp148
	beq	.L2651		//,
	bl	__stack_chk_fail		//
.L2651:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 320	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE74:
	.size	use_va_args_few_hfa_2_doubles, .-use_va_args_few_hfa_2_doubles
	.align	2
	.global	use_va_list_few_hfa_2_doubles
	.type	use_va_list_few_hfa_2_doubles, %function
use_va_list_few_hfa_2_doubles:
.LFB75:
	.cfi_startproc
	stp	x29, x30, [sp, -112]!	//,,,
	.cfi_def_cfa_offset 112
	.cfi_offset 29, -112
	.cfi_offset 30, -104
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -96
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp133,
// varargs-dll.c:1160: {
	adrp	x0, :got:__stack_chk_guard	// tmp135,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp134, tmp135,
	ldr	x1, [x0]	// tmp143,
	str	x1, [sp, 104]	// tmp143, D.20022
	mov	x1, 0	// tmp143
// varargs-dll.c:1161:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.19968, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1488, argv.__stack
	cmp	w1, 0	// D.19968,
	blt	.L2653		//,
	add	x1, x0, 23	// D.19974, iftmp.1488,
	and	x1, x1, -8	// D.19975, D.19974,
	str	x1, [x19]	// D.19975, argv.__stack
	b	.L2654		//
.L2653:
	add	w2, w1, 32	// D.19977, D.19968,
	str	w2, [x19, 28]	// D.19977, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.19979, argv.__vr_offs
	cmp	w2, 0	// D.19979,
	ble	.L2655		//,
	add	x1, x0, 23	// D.19982, iftmp.1488,
	and	x1, x1, -8	// D.19983, D.19982,
	str	x1, [x19]	// D.19983, argv.__stack
	b	.L2654		//
.L2655:
	ldr	x2, [x19, 16]	// D.19985, argv.__vr_top
	sxtw	x0, w1	// D.19986, D.19968
	add	x2, x2, x0	// D.19987, D.19985, D.19986
	add	x0, sp, 72	// ha.1489,,
	ldr	d0, [x2]	// D.19989, MEM[(double *)_23]
	str	d0, [x0]	// D.19989, MEM[(double *)ha.1489_24]
	ldr	x2, [x19, 16]	// D.19990, argv.__vr_top
	sxtw	x0, w1	// D.19991, D.19968
	add	x0, x0, 16	// D.19992, D.19991,
	add	x0, x2, x0	// D.19993, D.19990, D.19992
	ldr	d0, [x0]	// D.19994, MEM[(double *)_30]
	str	d0, [sp, 80]	// D.19994, MEM[(double *)&ha.1486 + 8B]
	add	x0, sp, 72	// iftmp.1488,,
.L2654:
	ldp	x0, x1, [x0]	// D.6492, *iftmp.1487_12
// varargs-dll.c:1161:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp136, D.6492
	str	d0, [sp, 56]	// tmp136, a
// varargs-dll.c:1162:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.19995, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1492, argv.__stack
	cmp	w1, 0	// D.19995,
	blt	.L2657		//,
	add	x1, x0, 23	// D.20001, iftmp.1492,
	and	x1, x1, -8	// D.20002, D.20001,
	str	x1, [x19]	// D.20002, argv.__stack
	b	.L2658		//
.L2657:
	add	w2, w1, 32	// D.20004, D.19995,
	str	w2, [x19, 28]	// D.20004, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20006, argv.__vr_offs
	cmp	w2, 0	// D.20006,
	ble	.L2659		//,
	add	x1, x0, 23	// D.20009, iftmp.1492,
	and	x1, x1, -8	// D.20010, D.20009,
	str	x1, [x19]	// D.20010, argv.__stack
	b	.L2658		//
.L2659:
	ldr	x2, [x19, 16]	// D.20012, argv.__vr_top
	sxtw	x0, w1	// D.20013, D.19995
	add	x2, x2, x0	// D.20014, D.20012, D.20013
	add	x0, sp, 88	// ha.1493,,
	ldr	d0, [x2]	// D.20016, MEM[(double *)_51]
	str	d0, [x0]	// D.20016, MEM[(double *)ha.1493_52]
	ldr	x2, [x19, 16]	// D.20017, argv.__vr_top
	sxtw	x0, w1	// D.20018, D.19995
	add	x0, x0, 16	// D.20019, D.20018,
	add	x0, x2, x0	// D.20020, D.20017, D.20019
	ldr	d0, [x0]	// D.20021, MEM[(double *)_58]
	str	d0, [sp, 96]	// D.20021, MEM[(double *)&ha.1490 + 8B]
	add	x0, sp, 88	// iftmp.1492,,
.L2658:
	ldp	x0, x1, [x0]	// D.6493, *iftmp.1491_14
// varargs-dll.c:1162:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp137, D.6493
	str	d0, [sp, 64]	// tmp137, b
// varargs-dll.c:1163:   return a + b;
	ldr	d1, [sp, 56]	// tmp138, a
	ldr	d0, [sp, 64]	// tmp139, b
	fadd	d0, d1, d0	// _1, tmp138, tmp139
	fcvtzs	w0, d0	// _7, _1
	mov	w1, w0	// <retval>, _7
// varargs-dll.c:1164: }
	adrp	x0, :got:__stack_chk_guard	// tmp142,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp141, tmp142,
	ldr	x3, [sp, 104]	// tmp144, D.20022
	ldr	x2, [x0]	// tmp145,
	subs	x3, x3, x2	// tmp144, tmp145
	mov	x2, 0	// tmp145
	beq	.L2662		//,
	bl	__stack_chk_fail		//
.L2662:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 112	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE75:
	.size	use_va_list_few_hfa_2_doubles, .-use_va_list_few_hfa_2_doubles
	.align	2
	.global	use_va_args_several_hfa_2_doubles
	.type	use_va_args_several_hfa_2_doubles, %function
use_va_args_several_hfa_2_doubles:
.LFB76:
	.cfi_startproc
	stp	x29, x30, [sp, -480]!	//,,,
	.cfi_def_cfa_offset 480
	.cfi_offset 29, -480
	.cfi_offset 30, -472
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 424]	//,
	str	x2, [sp, 432]	//,
	str	x3, [sp, 440]	//,
	str	x4, [sp, 448]	//,
	str	x5, [sp, 456]	//,
	str	x6, [sp, 464]	//,
	str	x7, [sp, 472]	//,
	str	q0, [sp, 288]	//,
	str	q1, [sp, 304]	//,
	str	q2, [sp, 320]	//,
	str	q3, [sp, 336]	//,
	str	q4, [sp, 352]	//,
	str	q5, [sp, 368]	//,
	str	q6, [sp, 384]	//,
	str	q7, [sp, 400]	//,
// varargs-dll.c:1168: {
	adrp	x0, :got:__stack_chk_guard	// tmp274,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp273, tmp274,
	ldr	x1, [x0]	// tmp300,
	str	x1, [sp, 280]	// tmp300, D.20266
	mov	x1, 0	// tmp300
// varargs-dll.c:1170:   va_start (argv, format);
	add	x0, sp, 480	// tmp305,,
	str	x0, [sp, 248]	// tmp305, MEM[(struct  *)&argv].__stack
	add	x0, sp, 480	// tmp306,,
	str	x0, [sp, 256]	// tmp306, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 416	// tmp276,,
	str	x0, [sp, 264]	// tmp276, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp277,
	str	w0, [sp, 272]	// tmp277, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp278,
	str	w0, [sp, 276]	// tmp278, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1171:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 276]	// D.20023, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1496, argv.__stack
	cmp	w1, 0	// D.20023,
	blt	.L2664		//,
	add	x1, x0, 23	// D.20029, iftmp.1496,
	and	x1, x1, -8	// D.20030, D.20029,
	str	x1, [sp, 248]	// D.20030, argv.__stack
	b	.L2665		//
.L2664:
	add	w2, w1, 32	// D.20032, D.20023,
	str	w2, [sp, 276]	// D.20032, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20034, argv.__vr_offs
	cmp	w2, 0	// D.20034,
	ble	.L2666		//,
	add	x1, x0, 23	// D.20037, iftmp.1496,
	and	x1, x1, -8	// D.20038, D.20037,
	str	x1, [sp, 248]	// D.20038, argv.__stack
	b	.L2665		//
.L2666:
	ldr	x2, [sp, 264]	// D.20040, argv.__vr_top
	sxtw	x0, w1	// D.20041, D.20023
	add	x2, x2, x0	// D.20042, D.20040, D.20041
	add	x0, sp, 104	// ha.1497,,
	ldr	d0, [x2]	// D.20044, MEM[(double *)_75]
	str	d0, [x0]	// D.20044, MEM[(double *)ha.1497_76]
	ldr	x2, [sp, 264]	// D.20045, argv.__vr_top
	sxtw	x0, w1	// D.20046, D.20023
	add	x0, x0, 16	// D.20047, D.20046,
	add	x0, x2, x0	// D.20048, D.20045, D.20047
	ldr	d0, [x0]	// D.20049, MEM[(double *)_82]
	str	d0, [sp, 112]	// D.20049, MEM[(double *)&ha.1494 + 8B]
	add	x0, sp, 104	// iftmp.1496,,
.L2665:
	ldp	x0, x1, [x0]	// D.6496, *iftmp.1495_50
// varargs-dll.c:1171:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp279, D.6496
	str	d0, [sp, 32]	// tmp279, a
// varargs-dll.c:1172:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 276]	// D.20050, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1500, argv.__stack
	cmp	w1, 0	// D.20050,
	blt	.L2668		//,
	add	x1, x0, 23	// D.20056, iftmp.1500,
	and	x1, x1, -8	// D.20057, D.20056,
	str	x1, [sp, 248]	// D.20057, argv.__stack
	b	.L2669		//
.L2668:
	add	w2, w1, 32	// D.20059, D.20050,
	str	w2, [sp, 276]	// D.20059, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20061, argv.__vr_offs
	cmp	w2, 0	// D.20061,
	ble	.L2670		//,
	add	x1, x0, 23	// D.20064, iftmp.1500,
	and	x1, x1, -8	// D.20065, D.20064,
	str	x1, [sp, 248]	// D.20065, argv.__stack
	b	.L2669		//
.L2670:
	ldr	x2, [sp, 264]	// D.20067, argv.__vr_top
	sxtw	x0, w1	// D.20068, D.20050
	add	x2, x2, x0	// D.20069, D.20067, D.20068
	add	x0, sp, 120	// ha.1501,,
	ldr	d0, [x2]	// D.20071, MEM[(double *)_103]
	str	d0, [x0]	// D.20071, MEM[(double *)ha.1501_104]
	ldr	x2, [sp, 264]	// D.20072, argv.__vr_top
	sxtw	x0, w1	// D.20073, D.20050
	add	x0, x0, 16	// D.20074, D.20073,
	add	x0, x2, x0	// D.20075, D.20072, D.20074
	ldr	d0, [x0]	// D.20076, MEM[(double *)_110]
	str	d0, [sp, 128]	// D.20076, MEM[(double *)&ha.1498 + 8B]
	add	x0, sp, 120	// iftmp.1500,,
.L2669:
	ldp	x0, x1, [x0]	// D.6497, *iftmp.1499_52
// varargs-dll.c:1172:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp280, D.6497
	str	d0, [sp, 40]	// tmp280, b
// varargs-dll.c:1173:   double c = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 276]	// D.20077, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1504, argv.__stack
	cmp	w1, 0	// D.20077,
	blt	.L2672		//,
	add	x1, x0, 23	// D.20083, iftmp.1504,
	and	x1, x1, -8	// D.20084, D.20083,
	str	x1, [sp, 248]	// D.20084, argv.__stack
	b	.L2673		//
.L2672:
	add	w2, w1, 32	// D.20086, D.20077,
	str	w2, [sp, 276]	// D.20086, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20088, argv.__vr_offs
	cmp	w2, 0	// D.20088,
	ble	.L2674		//,
	add	x1, x0, 23	// D.20091, iftmp.1504,
	and	x1, x1, -8	// D.20092, D.20091,
	str	x1, [sp, 248]	// D.20092, argv.__stack
	b	.L2673		//
.L2674:
	ldr	x2, [sp, 264]	// D.20094, argv.__vr_top
	sxtw	x0, w1	// D.20095, D.20077
	add	x2, x2, x0	// D.20096, D.20094, D.20095
	add	x0, sp, 136	// ha.1505,,
	ldr	d0, [x2]	// D.20098, MEM[(double *)_131]
	str	d0, [x0]	// D.20098, MEM[(double *)ha.1505_132]
	ldr	x2, [sp, 264]	// D.20099, argv.__vr_top
	sxtw	x0, w1	// D.20100, D.20077
	add	x0, x0, 16	// D.20101, D.20100,
	add	x0, x2, x0	// D.20102, D.20099, D.20101
	ldr	d0, [x0]	// D.20103, MEM[(double *)_138]
	str	d0, [sp, 144]	// D.20103, MEM[(double *)&ha.1502 + 8B]
	add	x0, sp, 136	// iftmp.1504,,
.L2673:
	ldp	x0, x1, [x0]	// D.6498, *iftmp.1503_54
// varargs-dll.c:1173:   double c = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp281, D.6498
	str	d0, [sp, 48]	// tmp281, c
// varargs-dll.c:1174:   double d = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 276]	// D.20104, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1508, argv.__stack
	cmp	w1, 0	// D.20104,
	blt	.L2676		//,
	add	x1, x0, 23	// D.20110, iftmp.1508,
	and	x1, x1, -8	// D.20111, D.20110,
	str	x1, [sp, 248]	// D.20111, argv.__stack
	b	.L2677		//
.L2676:
	add	w2, w1, 32	// D.20113, D.20104,
	str	w2, [sp, 276]	// D.20113, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20115, argv.__vr_offs
	cmp	w2, 0	// D.20115,
	ble	.L2678		//,
	add	x1, x0, 23	// D.20118, iftmp.1508,
	and	x1, x1, -8	// D.20119, D.20118,
	str	x1, [sp, 248]	// D.20119, argv.__stack
	b	.L2677		//
.L2678:
	ldr	x2, [sp, 264]	// D.20121, argv.__vr_top
	sxtw	x0, w1	// D.20122, D.20104
	add	x2, x2, x0	// D.20123, D.20121, D.20122
	add	x0, sp, 152	// ha.1509,,
	ldr	d0, [x2]	// D.20125, MEM[(double *)_159]
	str	d0, [x0]	// D.20125, MEM[(double *)ha.1509_160]
	ldr	x2, [sp, 264]	// D.20126, argv.__vr_top
	sxtw	x0, w1	// D.20127, D.20104
	add	x0, x0, 16	// D.20128, D.20127,
	add	x0, x2, x0	// D.20129, D.20126, D.20128
	ldr	d0, [x0]	// D.20130, MEM[(double *)_166]
	str	d0, [sp, 160]	// D.20130, MEM[(double *)&ha.1506 + 8B]
	add	x0, sp, 152	// iftmp.1508,,
.L2677:
	ldp	x0, x1, [x0]	// D.6499, *iftmp.1507_56
// varargs-dll.c:1174:   double d = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp282, D.6499
	str	d0, [sp, 56]	// tmp282, d
// varargs-dll.c:1175:   double e = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 276]	// D.20131, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1512, argv.__stack
	cmp	w1, 0	// D.20131,
	blt	.L2680		//,
	add	x1, x0, 23	// D.20137, iftmp.1512,
	and	x1, x1, -8	// D.20138, D.20137,
	str	x1, [sp, 248]	// D.20138, argv.__stack
	b	.L2681		//
.L2680:
	add	w2, w1, 32	// D.20140, D.20131,
	str	w2, [sp, 276]	// D.20140, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20142, argv.__vr_offs
	cmp	w2, 0	// D.20142,
	ble	.L2682		//,
	add	x1, x0, 23	// D.20145, iftmp.1512,
	and	x1, x1, -8	// D.20146, D.20145,
	str	x1, [sp, 248]	// D.20146, argv.__stack
	b	.L2681		//
.L2682:
	ldr	x2, [sp, 264]	// D.20148, argv.__vr_top
	sxtw	x0, w1	// D.20149, D.20131
	add	x2, x2, x0	// D.20150, D.20148, D.20149
	add	x0, sp, 168	// ha.1513,,
	ldr	d0, [x2]	// D.20152, MEM[(double *)_187]
	str	d0, [x0]	// D.20152, MEM[(double *)ha.1513_188]
	ldr	x2, [sp, 264]	// D.20153, argv.__vr_top
	sxtw	x0, w1	// D.20154, D.20131
	add	x0, x0, 16	// D.20155, D.20154,
	add	x0, x2, x0	// D.20156, D.20153, D.20155
	ldr	d0, [x0]	// D.20157, MEM[(double *)_194]
	str	d0, [sp, 176]	// D.20157, MEM[(double *)&ha.1510 + 8B]
	add	x0, sp, 168	// iftmp.1512,,
.L2681:
	ldp	x0, x1, [x0]	// D.6500, *iftmp.1511_58
// varargs-dll.c:1175:   double e = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp283, D.6500
	str	d0, [sp, 64]	// tmp283, e
// varargs-dll.c:1176:   double f = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 276]	// D.20158, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1516, argv.__stack
	cmp	w1, 0	// D.20158,
	blt	.L2684		//,
	add	x1, x0, 23	// D.20164, iftmp.1516,
	and	x1, x1, -8	// D.20165, D.20164,
	str	x1, [sp, 248]	// D.20165, argv.__stack
	b	.L2685		//
.L2684:
	add	w2, w1, 32	// D.20167, D.20158,
	str	w2, [sp, 276]	// D.20167, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20169, argv.__vr_offs
	cmp	w2, 0	// D.20169,
	ble	.L2686		//,
	add	x1, x0, 23	// D.20172, iftmp.1516,
	and	x1, x1, -8	// D.20173, D.20172,
	str	x1, [sp, 248]	// D.20173, argv.__stack
	b	.L2685		//
.L2686:
	ldr	x2, [sp, 264]	// D.20175, argv.__vr_top
	sxtw	x0, w1	// D.20176, D.20158
	add	x2, x2, x0	// D.20177, D.20175, D.20176
	add	x0, sp, 184	// ha.1517,,
	ldr	d0, [x2]	// D.20179, MEM[(double *)_215]
	str	d0, [x0]	// D.20179, MEM[(double *)ha.1517_216]
	ldr	x2, [sp, 264]	// D.20180, argv.__vr_top
	sxtw	x0, w1	// D.20181, D.20158
	add	x0, x0, 16	// D.20182, D.20181,
	add	x0, x2, x0	// D.20183, D.20180, D.20182
	ldr	d0, [x0]	// D.20184, MEM[(double *)_222]
	str	d0, [sp, 192]	// D.20184, MEM[(double *)&ha.1514 + 8B]
	add	x0, sp, 184	// iftmp.1516,,
.L2685:
	ldp	x0, x1, [x0]	// D.6501, *iftmp.1515_60
// varargs-dll.c:1176:   double f = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp284, D.6501
	str	d0, [sp, 72]	// tmp284, f
// varargs-dll.c:1177:   double g = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 276]	// D.20185, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1520, argv.__stack
	cmp	w1, 0	// D.20185,
	blt	.L2688		//,
	add	x1, x0, 23	// D.20191, iftmp.1520,
	and	x1, x1, -8	// D.20192, D.20191,
	str	x1, [sp, 248]	// D.20192, argv.__stack
	b	.L2689		//
.L2688:
	add	w2, w1, 32	// D.20194, D.20185,
	str	w2, [sp, 276]	// D.20194, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20196, argv.__vr_offs
	cmp	w2, 0	// D.20196,
	ble	.L2690		//,
	add	x1, x0, 23	// D.20199, iftmp.1520,
	and	x1, x1, -8	// D.20200, D.20199,
	str	x1, [sp, 248]	// D.20200, argv.__stack
	b	.L2689		//
.L2690:
	ldr	x2, [sp, 264]	// D.20202, argv.__vr_top
	sxtw	x0, w1	// D.20203, D.20185
	add	x2, x2, x0	// D.20204, D.20202, D.20203
	add	x0, sp, 200	// ha.1521,,
	ldr	d0, [x2]	// D.20206, MEM[(double *)_243]
	str	d0, [x0]	// D.20206, MEM[(double *)ha.1521_244]
	ldr	x2, [sp, 264]	// D.20207, argv.__vr_top
	sxtw	x0, w1	// D.20208, D.20185
	add	x0, x0, 16	// D.20209, D.20208,
	add	x0, x2, x0	// D.20210, D.20207, D.20209
	ldr	d0, [x0]	// D.20211, MEM[(double *)_250]
	str	d0, [sp, 208]	// D.20211, MEM[(double *)&ha.1518 + 8B]
	add	x0, sp, 200	// iftmp.1520,,
.L2689:
	ldp	x0, x1, [x0]	// D.6502, *iftmp.1519_62
// varargs-dll.c:1177:   double g = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp285, D.6502
	str	d0, [sp, 80]	// tmp285, g
// varargs-dll.c:1178:   double h = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 276]	// D.20212, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1524, argv.__stack
	cmp	w1, 0	// D.20212,
	blt	.L2692		//,
	add	x1, x0, 23	// D.20218, iftmp.1524,
	and	x1, x1, -8	// D.20219, D.20218,
	str	x1, [sp, 248]	// D.20219, argv.__stack
	b	.L2693		//
.L2692:
	add	w2, w1, 32	// D.20221, D.20212,
	str	w2, [sp, 276]	// D.20221, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20223, argv.__vr_offs
	cmp	w2, 0	// D.20223,
	ble	.L2694		//,
	add	x1, x0, 23	// D.20226, iftmp.1524,
	and	x1, x1, -8	// D.20227, D.20226,
	str	x1, [sp, 248]	// D.20227, argv.__stack
	b	.L2693		//
.L2694:
	ldr	x2, [sp, 264]	// D.20229, argv.__vr_top
	sxtw	x0, w1	// D.20230, D.20212
	add	x2, x2, x0	// D.20231, D.20229, D.20230
	add	x0, sp, 216	// ha.1525,,
	ldr	d0, [x2]	// D.20233, MEM[(double *)_271]
	str	d0, [x0]	// D.20233, MEM[(double *)ha.1525_272]
	ldr	x2, [sp, 264]	// D.20234, argv.__vr_top
	sxtw	x0, w1	// D.20235, D.20212
	add	x0, x0, 16	// D.20236, D.20235,
	add	x0, x2, x0	// D.20237, D.20234, D.20236
	ldr	d0, [x0]	// D.20238, MEM[(double *)_278]
	str	d0, [sp, 224]	// D.20238, MEM[(double *)&ha.1522 + 8B]
	add	x0, sp, 216	// iftmp.1524,,
.L2693:
	ldp	x0, x1, [x0]	// D.6503, *iftmp.1523_64
// varargs-dll.c:1178:   double h = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp286, D.6503
	str	d0, [sp, 88]	// tmp286, h
// varargs-dll.c:1179:   double i = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 276]	// D.20239, argv.__vr_offs
	ldr	x0, [sp, 248]	// iftmp.1528, argv.__stack
	cmp	w1, 0	// D.20239,
	blt	.L2696		//,
	add	x1, x0, 23	// D.20245, iftmp.1528,
	and	x1, x1, -8	// D.20246, D.20245,
	str	x1, [sp, 248]	// D.20246, argv.__stack
	b	.L2697		//
.L2696:
	add	w2, w1, 32	// D.20248, D.20239,
	str	w2, [sp, 276]	// D.20248, argv.__vr_offs
	ldr	w2, [sp, 276]	// D.20250, argv.__vr_offs
	cmp	w2, 0	// D.20250,
	ble	.L2698		//,
	add	x1, x0, 23	// D.20253, iftmp.1528,
	and	x1, x1, -8	// D.20254, D.20253,
	str	x1, [sp, 248]	// D.20254, argv.__stack
	b	.L2697		//
.L2698:
	ldr	x2, [sp, 264]	// D.20256, argv.__vr_top
	sxtw	x0, w1	// D.20257, D.20239
	add	x2, x2, x0	// D.20258, D.20256, D.20257
	add	x0, sp, 232	// ha.1529,,
	ldr	d0, [x2]	// D.20260, MEM[(double *)_299]
	str	d0, [x0]	// D.20260, MEM[(double *)ha.1529_300]
	ldr	x2, [sp, 264]	// D.20261, argv.__vr_top
	sxtw	x0, w1	// D.20262, D.20239
	add	x0, x0, 16	// D.20263, D.20262,
	add	x0, x2, x0	// D.20264, D.20261, D.20263
	ldr	d0, [x0]	// D.20265, MEM[(double *)_306]
	str	d0, [sp, 240]	// D.20265, MEM[(double *)&ha.1526 + 8B]
	add	x0, sp, 232	// iftmp.1528,,
.L2697:
	ldp	x0, x1, [x0]	// D.6504, *iftmp.1527_66
// varargs-dll.c:1179:   double i = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp287, D.6504
	str	d0, [sp, 96]	// tmp287, i
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 32]	// tmp288, a
	ldr	d0, [sp, 40]	// tmp289, b
	fadd	d1, d1, d0	// _1, tmp288, tmp289
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 48]	// tmp290, c
	fadd	d1, d1, d0	// _2, _1, tmp290
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp291, d
	fadd	d1, d1, d0	// _3, _2, tmp291
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp292, e
	fadd	d1, d1, d0	// _4, _3, tmp292
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp293, f
	fadd	d1, d1, d0	// _5, _4, tmp293
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp294, g
	fadd	d1, d1, d0	// _6, _5, tmp294
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp295, h
	fadd	d1, d1, d0	// _7, _6, tmp295
// varargs-dll.c:1181:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp296, i
	fadd	d0, d1, d0	// _8, _7, tmp296
	fcvtzs	w0, d0	// _30, _8
	mov	w1, w0	// <retval>, _30
// varargs-dll.c:1182: }
	adrp	x0, :got:__stack_chk_guard	// tmp299,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp298, tmp299,
	ldr	x3, [sp, 280]	// tmp301, D.20266
	ldr	x2, [x0]	// tmp302,
	subs	x3, x3, x2	// tmp301, tmp302
	mov	x2, 0	// tmp302
	beq	.L2701		//,
	bl	__stack_chk_fail		//
.L2701:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 480	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE76:
	.size	use_va_args_several_hfa_2_doubles, .-use_va_args_several_hfa_2_doubles
	.align	2
	.global	use_va_list_several_hfa_2_doubles
	.type	use_va_list_several_hfa_2_doubles, %function
use_va_list_several_hfa_2_doubles:
.LFB77:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -256
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp273,
// varargs-dll.c:1186: {
	adrp	x0, :got:__stack_chk_guard	// tmp275,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp274, tmp275,
	ldr	x1, [x0]	// tmp297,
	str	x1, [sp, 264]	// tmp297, D.20513
	mov	x1, 0	// tmp297
// varargs-dll.c:1187:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20270, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1532, argv.__stack
	cmp	w1, 0	// D.20270,
	blt	.L2703		//,
	add	x1, x0, 23	// D.20276, iftmp.1532,
	and	x1, x1, -8	// D.20277, D.20276,
	str	x1, [x19]	// D.20277, argv.__stack
	b	.L2704		//
.L2703:
	add	w2, w1, 32	// D.20279, D.20270,
	str	w2, [x19, 28]	// D.20279, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20281, argv.__vr_offs
	cmp	w2, 0	// D.20281,
	ble	.L2705		//,
	add	x1, x0, 23	// D.20284, iftmp.1532,
	and	x1, x1, -8	// D.20285, D.20284,
	str	x1, [x19]	// D.20285, argv.__stack
	b	.L2704		//
.L2705:
	ldr	x2, [x19, 16]	// D.20287, argv.__vr_top
	sxtw	x0, w1	// D.20288, D.20270
	add	x2, x2, x0	// D.20289, D.20287, D.20288
	add	x0, sp, 120	// ha.1533,,
	ldr	d0, [x2]	// D.20291, MEM[(double *)_72]
	str	d0, [x0]	// D.20291, MEM[(double *)ha.1533_73]
	ldr	x2, [x19, 16]	// D.20292, argv.__vr_top
	sxtw	x0, w1	// D.20293, D.20270
	add	x0, x0, 16	// D.20294, D.20293,
	add	x0, x2, x0	// D.20295, D.20292, D.20294
	ldr	d0, [x0]	// D.20296, MEM[(double *)_79]
	str	d0, [sp, 128]	// D.20296, MEM[(double *)&ha.1530 + 8B]
	add	x0, sp, 120	// iftmp.1532,,
.L2704:
	ldp	x0, x1, [x0]	// D.6508, *iftmp.1531_47
// varargs-dll.c:1187:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp276, D.6508
	str	d0, [sp, 48]	// tmp276, a
// varargs-dll.c:1188:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.20297, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1536, argv.__stack
	cmp	w1, 0	// D.20297,
	blt	.L2707		//,
	add	x1, x0, 23	// D.20303, iftmp.1536,
	and	x1, x1, -8	// D.20304, D.20303,
	str	x1, [x19]	// D.20304, argv.__stack
	b	.L2708		//
.L2707:
	add	w2, w1, 32	// D.20306, D.20297,
	str	w2, [x19, 28]	// D.20306, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20308, argv.__vr_offs
	cmp	w2, 0	// D.20308,
	ble	.L2709		//,
	add	x1, x0, 23	// D.20311, iftmp.1536,
	and	x1, x1, -8	// D.20312, D.20311,
	str	x1, [x19]	// D.20312, argv.__stack
	b	.L2708		//
.L2709:
	ldr	x2, [x19, 16]	// D.20314, argv.__vr_top
	sxtw	x0, w1	// D.20315, D.20297
	add	x2, x2, x0	// D.20316, D.20314, D.20315
	add	x0, sp, 136	// ha.1537,,
	ldr	d0, [x2]	// D.20318, MEM[(double *)_100]
	str	d0, [x0]	// D.20318, MEM[(double *)ha.1537_101]
	ldr	x2, [x19, 16]	// D.20319, argv.__vr_top
	sxtw	x0, w1	// D.20320, D.20297
	add	x0, x0, 16	// D.20321, D.20320,
	add	x0, x2, x0	// D.20322, D.20319, D.20321
	ldr	d0, [x0]	// D.20323, MEM[(double *)_107]
	str	d0, [sp, 144]	// D.20323, MEM[(double *)&ha.1534 + 8B]
	add	x0, sp, 136	// iftmp.1536,,
.L2708:
	ldp	x0, x1, [x0]	// D.6509, *iftmp.1535_49
// varargs-dll.c:1188:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp277, D.6509
	str	d0, [sp, 56]	// tmp277, b
// varargs-dll.c:1189:   double c = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20324, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1540, argv.__stack
	cmp	w1, 0	// D.20324,
	blt	.L2711		//,
	add	x1, x0, 23	// D.20330, iftmp.1540,
	and	x1, x1, -8	// D.20331, D.20330,
	str	x1, [x19]	// D.20331, argv.__stack
	b	.L2712		//
.L2711:
	add	w2, w1, 32	// D.20333, D.20324,
	str	w2, [x19, 28]	// D.20333, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20335, argv.__vr_offs
	cmp	w2, 0	// D.20335,
	ble	.L2713		//,
	add	x1, x0, 23	// D.20338, iftmp.1540,
	and	x1, x1, -8	// D.20339, D.20338,
	str	x1, [x19]	// D.20339, argv.__stack
	b	.L2712		//
.L2713:
	ldr	x2, [x19, 16]	// D.20341, argv.__vr_top
	sxtw	x0, w1	// D.20342, D.20324
	add	x2, x2, x0	// D.20343, D.20341, D.20342
	add	x0, sp, 152	// ha.1541,,
	ldr	d0, [x2]	// D.20345, MEM[(double *)_128]
	str	d0, [x0]	// D.20345, MEM[(double *)ha.1541_129]
	ldr	x2, [x19, 16]	// D.20346, argv.__vr_top
	sxtw	x0, w1	// D.20347, D.20324
	add	x0, x0, 16	// D.20348, D.20347,
	add	x0, x2, x0	// D.20349, D.20346, D.20348
	ldr	d0, [x0]	// D.20350, MEM[(double *)_135]
	str	d0, [sp, 160]	// D.20350, MEM[(double *)&ha.1538 + 8B]
	add	x0, sp, 152	// iftmp.1540,,
.L2712:
	ldp	x0, x1, [x0]	// D.6510, *iftmp.1539_51
// varargs-dll.c:1189:   double c = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp278, D.6510
	str	d0, [sp, 64]	// tmp278, c
// varargs-dll.c:1190:   double d = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.20351, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1544, argv.__stack
	cmp	w1, 0	// D.20351,
	blt	.L2715		//,
	add	x1, x0, 23	// D.20357, iftmp.1544,
	and	x1, x1, -8	// D.20358, D.20357,
	str	x1, [x19]	// D.20358, argv.__stack
	b	.L2716		//
.L2715:
	add	w2, w1, 32	// D.20360, D.20351,
	str	w2, [x19, 28]	// D.20360, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20362, argv.__vr_offs
	cmp	w2, 0	// D.20362,
	ble	.L2717		//,
	add	x1, x0, 23	// D.20365, iftmp.1544,
	and	x1, x1, -8	// D.20366, D.20365,
	str	x1, [x19]	// D.20366, argv.__stack
	b	.L2716		//
.L2717:
	ldr	x2, [x19, 16]	// D.20368, argv.__vr_top
	sxtw	x0, w1	// D.20369, D.20351
	add	x2, x2, x0	// D.20370, D.20368, D.20369
	add	x0, sp, 168	// ha.1545,,
	ldr	d0, [x2]	// D.20372, MEM[(double *)_156]
	str	d0, [x0]	// D.20372, MEM[(double *)ha.1545_157]
	ldr	x2, [x19, 16]	// D.20373, argv.__vr_top
	sxtw	x0, w1	// D.20374, D.20351
	add	x0, x0, 16	// D.20375, D.20374,
	add	x0, x2, x0	// D.20376, D.20373, D.20375
	ldr	d0, [x0]	// D.20377, MEM[(double *)_163]
	str	d0, [sp, 176]	// D.20377, MEM[(double *)&ha.1542 + 8B]
	add	x0, sp, 168	// iftmp.1544,,
.L2716:
	ldp	x0, x1, [x0]	// D.6511, *iftmp.1543_53
// varargs-dll.c:1190:   double d = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp279, D.6511
	str	d0, [sp, 72]	// tmp279, d
// varargs-dll.c:1191:   double e = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20378, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1548, argv.__stack
	cmp	w1, 0	// D.20378,
	blt	.L2719		//,
	add	x1, x0, 23	// D.20384, iftmp.1548,
	and	x1, x1, -8	// D.20385, D.20384,
	str	x1, [x19]	// D.20385, argv.__stack
	b	.L2720		//
.L2719:
	add	w2, w1, 32	// D.20387, D.20378,
	str	w2, [x19, 28]	// D.20387, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20389, argv.__vr_offs
	cmp	w2, 0	// D.20389,
	ble	.L2721		//,
	add	x1, x0, 23	// D.20392, iftmp.1548,
	and	x1, x1, -8	// D.20393, D.20392,
	str	x1, [x19]	// D.20393, argv.__stack
	b	.L2720		//
.L2721:
	ldr	x2, [x19, 16]	// D.20395, argv.__vr_top
	sxtw	x0, w1	// D.20396, D.20378
	add	x2, x2, x0	// D.20397, D.20395, D.20396
	add	x0, sp, 184	// ha.1549,,
	ldr	d0, [x2]	// D.20399, MEM[(double *)_184]
	str	d0, [x0]	// D.20399, MEM[(double *)ha.1549_185]
	ldr	x2, [x19, 16]	// D.20400, argv.__vr_top
	sxtw	x0, w1	// D.20401, D.20378
	add	x0, x0, 16	// D.20402, D.20401,
	add	x0, x2, x0	// D.20403, D.20400, D.20402
	ldr	d0, [x0]	// D.20404, MEM[(double *)_191]
	str	d0, [sp, 192]	// D.20404, MEM[(double *)&ha.1546 + 8B]
	add	x0, sp, 184	// iftmp.1548,,
.L2720:
	ldp	x0, x1, [x0]	// D.6512, *iftmp.1547_55
// varargs-dll.c:1191:   double e = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp280, D.6512
	str	d0, [sp, 80]	// tmp280, e
// varargs-dll.c:1192:   double f = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.20405, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1552, argv.__stack
	cmp	w1, 0	// D.20405,
	blt	.L2723		//,
	add	x1, x0, 23	// D.20411, iftmp.1552,
	and	x1, x1, -8	// D.20412, D.20411,
	str	x1, [x19]	// D.20412, argv.__stack
	b	.L2724		//
.L2723:
	add	w2, w1, 32	// D.20414, D.20405,
	str	w2, [x19, 28]	// D.20414, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20416, argv.__vr_offs
	cmp	w2, 0	// D.20416,
	ble	.L2725		//,
	add	x1, x0, 23	// D.20419, iftmp.1552,
	and	x1, x1, -8	// D.20420, D.20419,
	str	x1, [x19]	// D.20420, argv.__stack
	b	.L2724		//
.L2725:
	ldr	x2, [x19, 16]	// D.20422, argv.__vr_top
	sxtw	x0, w1	// D.20423, D.20405
	add	x2, x2, x0	// D.20424, D.20422, D.20423
	add	x0, sp, 200	// ha.1553,,
	ldr	d0, [x2]	// D.20426, MEM[(double *)_212]
	str	d0, [x0]	// D.20426, MEM[(double *)ha.1553_213]
	ldr	x2, [x19, 16]	// D.20427, argv.__vr_top
	sxtw	x0, w1	// D.20428, D.20405
	add	x0, x0, 16	// D.20429, D.20428,
	add	x0, x2, x0	// D.20430, D.20427, D.20429
	ldr	d0, [x0]	// D.20431, MEM[(double *)_219]
	str	d0, [sp, 208]	// D.20431, MEM[(double *)&ha.1550 + 8B]
	add	x0, sp, 200	// iftmp.1552,,
.L2724:
	ldp	x0, x1, [x0]	// D.6513, *iftmp.1551_57
// varargs-dll.c:1192:   double f = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp281, D.6513
	str	d0, [sp, 88]	// tmp281, f
// varargs-dll.c:1193:   double g = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20432, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1556, argv.__stack
	cmp	w1, 0	// D.20432,
	blt	.L2727		//,
	add	x1, x0, 23	// D.20438, iftmp.1556,
	and	x1, x1, -8	// D.20439, D.20438,
	str	x1, [x19]	// D.20439, argv.__stack
	b	.L2728		//
.L2727:
	add	w2, w1, 32	// D.20441, D.20432,
	str	w2, [x19, 28]	// D.20441, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20443, argv.__vr_offs
	cmp	w2, 0	// D.20443,
	ble	.L2729		//,
	add	x1, x0, 23	// D.20446, iftmp.1556,
	and	x1, x1, -8	// D.20447, D.20446,
	str	x1, [x19]	// D.20447, argv.__stack
	b	.L2728		//
.L2729:
	ldr	x2, [x19, 16]	// D.20449, argv.__vr_top
	sxtw	x0, w1	// D.20450, D.20432
	add	x2, x2, x0	// D.20451, D.20449, D.20450
	add	x0, sp, 216	// ha.1557,,
	ldr	d0, [x2]	// D.20453, MEM[(double *)_240]
	str	d0, [x0]	// D.20453, MEM[(double *)ha.1557_241]
	ldr	x2, [x19, 16]	// D.20454, argv.__vr_top
	sxtw	x0, w1	// D.20455, D.20432
	add	x0, x0, 16	// D.20456, D.20455,
	add	x0, x2, x0	// D.20457, D.20454, D.20456
	ldr	d0, [x0]	// D.20458, MEM[(double *)_247]
	str	d0, [sp, 224]	// D.20458, MEM[(double *)&ha.1554 + 8B]
	add	x0, sp, 216	// iftmp.1556,,
.L2728:
	ldp	x0, x1, [x0]	// D.6514, *iftmp.1555_59
// varargs-dll.c:1193:   double g = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp282, D.6514
	str	d0, [sp, 96]	// tmp282, g
// varargs-dll.c:1194:   double h = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.20459, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1560, argv.__stack
	cmp	w1, 0	// D.20459,
	blt	.L2731		//,
	add	x1, x0, 23	// D.20465, iftmp.1560,
	and	x1, x1, -8	// D.20466, D.20465,
	str	x1, [x19]	// D.20466, argv.__stack
	b	.L2732		//
.L2731:
	add	w2, w1, 32	// D.20468, D.20459,
	str	w2, [x19, 28]	// D.20468, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20470, argv.__vr_offs
	cmp	w2, 0	// D.20470,
	ble	.L2733		//,
	add	x1, x0, 23	// D.20473, iftmp.1560,
	and	x1, x1, -8	// D.20474, D.20473,
	str	x1, [x19]	// D.20474, argv.__stack
	b	.L2732		//
.L2733:
	ldr	x2, [x19, 16]	// D.20476, argv.__vr_top
	sxtw	x0, w1	// D.20477, D.20459
	add	x2, x2, x0	// D.20478, D.20476, D.20477
	add	x0, sp, 232	// ha.1561,,
	ldr	d0, [x2]	// D.20480, MEM[(double *)_268]
	str	d0, [x0]	// D.20480, MEM[(double *)ha.1561_269]
	ldr	x2, [x19, 16]	// D.20481, argv.__vr_top
	sxtw	x0, w1	// D.20482, D.20459
	add	x0, x0, 16	// D.20483, D.20482,
	add	x0, x2, x0	// D.20484, D.20481, D.20483
	ldr	d0, [x0]	// D.20485, MEM[(double *)_275]
	str	d0, [sp, 240]	// D.20485, MEM[(double *)&ha.1558 + 8B]
	add	x0, sp, 232	// iftmp.1560,,
.L2732:
	ldp	x0, x1, [x0]	// D.6515, *iftmp.1559_61
// varargs-dll.c:1194:   double h = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp283, D.6515
	str	d0, [sp, 104]	// tmp283, h
// varargs-dll.c:1195:   double i = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20486, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1564, argv.__stack
	cmp	w1, 0	// D.20486,
	blt	.L2735		//,
	add	x1, x0, 23	// D.20492, iftmp.1564,
	and	x1, x1, -8	// D.20493, D.20492,
	str	x1, [x19]	// D.20493, argv.__stack
	b	.L2736		//
.L2735:
	add	w2, w1, 32	// D.20495, D.20486,
	str	w2, [x19, 28]	// D.20495, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20497, argv.__vr_offs
	cmp	w2, 0	// D.20497,
	ble	.L2737		//,
	add	x1, x0, 23	// D.20500, iftmp.1564,
	and	x1, x1, -8	// D.20501, D.20500,
	str	x1, [x19]	// D.20501, argv.__stack
	b	.L2736		//
.L2737:
	ldr	x2, [x19, 16]	// D.20503, argv.__vr_top
	sxtw	x0, w1	// D.20504, D.20486
	add	x2, x2, x0	// D.20505, D.20503, D.20504
	add	x0, sp, 248	// ha.1565,,
	ldr	d0, [x2]	// D.20507, MEM[(double *)_296]
	str	d0, [x0]	// D.20507, MEM[(double *)ha.1565_297]
	ldr	x2, [x19, 16]	// D.20508, argv.__vr_top
	sxtw	x0, w1	// D.20509, D.20486
	add	x0, x0, 16	// D.20510, D.20509,
	add	x0, x2, x0	// D.20511, D.20508, D.20510
	ldr	d0, [x0]	// D.20512, MEM[(double *)_303]
	str	d0, [sp, 256]	// D.20512, MEM[(double *)&ha.1562 + 8B]
	add	x0, sp, 248	// iftmp.1564,,
.L2736:
	ldp	x0, x1, [x0]	// D.6516, *iftmp.1563_63
// varargs-dll.c:1195:   double i = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp284, D.6516
	str	d0, [sp, 112]	// tmp284, i
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 48]	// tmp285, a
	ldr	d0, [sp, 56]	// tmp286, b
	fadd	d1, d1, d0	// _1, tmp285, tmp286
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp287, c
	fadd	d1, d1, d0	// _2, _1, tmp287
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp288, d
	fadd	d1, d1, d0	// _3, _2, tmp288
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp289, e
	fadd	d1, d1, d0	// _4, _3, tmp289
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp290, f
	fadd	d1, d1, d0	// _5, _4, tmp290
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp291, g
	fadd	d1, d1, d0	// _6, _5, tmp291
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 104]	// tmp292, h
	fadd	d1, d1, d0	// _7, _6, tmp292
// varargs-dll.c:1196:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 112]	// tmp293, i
	fadd	d0, d1, d0	// _8, _7, tmp293
	fcvtzs	w0, d0	// _28, _8
	mov	w1, w0	// <retval>, _28
// varargs-dll.c:1197: }
	adrp	x0, :got:__stack_chk_guard	// tmp296,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp295, tmp296,
	ldr	x3, [sp, 264]	// tmp298, D.20513
	ldr	x2, [x0]	// tmp299,
	subs	x3, x3, x2	// tmp298, tmp299
	mov	x2, 0	// tmp299
	beq	.L2740		//,
	bl	__stack_chk_fail		//
.L2740:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE77:
	.size	use_va_list_several_hfa_2_doubles, .-use_va_list_several_hfa_2_doubles
	.align	2
	.global	use_va_args_many_hfa_2_doubles
	.type	use_va_args_many_hfa_2_doubles, %function
use_va_args_many_hfa_2_doubles:
.LFB78:
	.cfi_startproc
	sub	sp, sp, #672	//,,
	.cfi_def_cfa_offset 672
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -672
	.cfi_offset 30, -664
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 616]	//,
	str	x2, [sp, 624]	//,
	str	x3, [sp, 632]	//,
	str	x4, [sp, 640]	//,
	str	x5, [sp, 648]	//,
	str	x6, [sp, 656]	//,
	str	x7, [sp, 664]	//,
	str	q0, [sp, 480]	//,
	str	q1, [sp, 496]	//,
	add	x0, sp, 512	// tmp481,,
	str	q2, [x0]	//,
	add	x0, sp, 512	// tmp483,,
	str	q3, [x0, 16]	//,
	add	x0, sp, 512	// tmp485,,
	str	q4, [x0, 32]	//,
	add	x0, sp, 512	// tmp487,,
	str	q5, [x0, 48]	//,
	add	x0, sp, 512	// tmp489,,
	str	q6, [x0, 64]	//,
	add	x0, sp, 512	// tmp491,,
	str	q7, [x0, 80]	//,
// varargs-dll.c:1201: {
	adrp	x0, :got:__stack_chk_guard	// tmp434,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp433, tmp434,
	ldr	x1, [x0]	// tmp476,
	str	x1, [sp, 472]	// tmp476, D.20973
	mov	x1, 0	// tmp476
// varargs-dll.c:1203:   va_start (argv, format);
	add	x0, sp, 672	// tmp493,,
	str	x0, [sp, 440]	// tmp493, MEM[(struct  *)&argv].__stack
	add	x0, sp, 672	// tmp494,,
	str	x0, [sp, 448]	// tmp494, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 608	// tmp436,,
	str	x0, [sp, 456]	// tmp436, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp437,
	str	w0, [sp, 464]	// tmp437, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp438,
	str	w0, [sp, 468]	// tmp438, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1204:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20514, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1568, argv.__stack
	cmp	w1, 0	// D.20514,
	blt	.L2742		//,
	add	x1, x0, 23	// D.20520, iftmp.1568,
	and	x1, x1, -8	// D.20521, D.20520,
	str	x1, [sp, 440]	// D.20521, argv.__stack
	b	.L2743		//
.L2742:
	add	w2, w1, 32	// D.20523, D.20514,
	str	w2, [sp, 468]	// D.20523, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20525, argv.__vr_offs
	cmp	w2, 0	// D.20525,
	ble	.L2744		//,
	add	x1, x0, 23	// D.20528, iftmp.1568,
	and	x1, x1, -8	// D.20529, D.20528,
	str	x1, [sp, 440]	// D.20529, argv.__stack
	b	.L2743		//
.L2744:
	ldr	x2, [sp, 456]	// D.20531, argv.__vr_top
	sxtw	x0, w1	// D.20532, D.20514
	add	x2, x2, x0	// D.20533, D.20531, D.20532
	add	x0, sp, 168	// ha.1569,,
	ldr	d0, [x2]	// D.20535, MEM[(double *)_131]
	str	d0, [x0]	// D.20535, MEM[(double *)ha.1569_132]
	ldr	x2, [sp, 456]	// D.20536, argv.__vr_top
	sxtw	x0, w1	// D.20537, D.20514
	add	x0, x0, 16	// D.20538, D.20537,
	add	x0, x2, x0	// D.20539, D.20536, D.20538
	ldr	d0, [x0]	// D.20540, MEM[(double *)_138]
	str	d0, [sp, 176]	// D.20540, MEM[(double *)&ha.1566 + 8B]
	add	x0, sp, 168	// iftmp.1568,,
.L2743:
	ldp	x0, x1, [x0]	// D.6519, *iftmp.1567_90
// varargs-dll.c:1204:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp439, D.6519
	str	d0, [sp, 32]	// tmp439, a
// varargs-dll.c:1205:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20541, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1572, argv.__stack
	cmp	w1, 0	// D.20541,
	blt	.L2746		//,
	add	x1, x0, 23	// D.20547, iftmp.1572,
	and	x1, x1, -8	// D.20548, D.20547,
	str	x1, [sp, 440]	// D.20548, argv.__stack
	b	.L2747		//
.L2746:
	add	w2, w1, 32	// D.20550, D.20541,
	str	w2, [sp, 468]	// D.20550, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20552, argv.__vr_offs
	cmp	w2, 0	// D.20552,
	ble	.L2748		//,
	add	x1, x0, 23	// D.20555, iftmp.1572,
	and	x1, x1, -8	// D.20556, D.20555,
	str	x1, [sp, 440]	// D.20556, argv.__stack
	b	.L2747		//
.L2748:
	ldr	x2, [sp, 456]	// D.20558, argv.__vr_top
	sxtw	x0, w1	// D.20559, D.20541
	add	x2, x2, x0	// D.20560, D.20558, D.20559
	add	x0, sp, 184	// ha.1573,,
	ldr	d0, [x2]	// D.20562, MEM[(double *)_159]
	str	d0, [x0]	// D.20562, MEM[(double *)ha.1573_160]
	ldr	x2, [sp, 456]	// D.20563, argv.__vr_top
	sxtw	x0, w1	// D.20564, D.20541
	add	x0, x0, 16	// D.20565, D.20564,
	add	x0, x2, x0	// D.20566, D.20563, D.20565
	ldr	d0, [x0]	// D.20567, MEM[(double *)_166]
	str	d0, [sp, 192]	// D.20567, MEM[(double *)&ha.1570 + 8B]
	add	x0, sp, 184	// iftmp.1572,,
.L2747:
	ldp	x0, x1, [x0]	// D.6520, *iftmp.1571_92
// varargs-dll.c:1205:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp440, D.6520
	str	d0, [sp, 40]	// tmp440, b
// varargs-dll.c:1206:   double c = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20568, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1576, argv.__stack
	cmp	w1, 0	// D.20568,
	blt	.L2750		//,
	add	x1, x0, 23	// D.20574, iftmp.1576,
	and	x1, x1, -8	// D.20575, D.20574,
	str	x1, [sp, 440]	// D.20575, argv.__stack
	b	.L2751		//
.L2750:
	add	w2, w1, 32	// D.20577, D.20568,
	str	w2, [sp, 468]	// D.20577, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20579, argv.__vr_offs
	cmp	w2, 0	// D.20579,
	ble	.L2752		//,
	add	x1, x0, 23	// D.20582, iftmp.1576,
	and	x1, x1, -8	// D.20583, D.20582,
	str	x1, [sp, 440]	// D.20583, argv.__stack
	b	.L2751		//
.L2752:
	ldr	x2, [sp, 456]	// D.20585, argv.__vr_top
	sxtw	x0, w1	// D.20586, D.20568
	add	x2, x2, x0	// D.20587, D.20585, D.20586
	add	x0, sp, 200	// ha.1577,,
	ldr	d0, [x2]	// D.20589, MEM[(double *)_187]
	str	d0, [x0]	// D.20589, MEM[(double *)ha.1577_188]
	ldr	x2, [sp, 456]	// D.20590, argv.__vr_top
	sxtw	x0, w1	// D.20591, D.20568
	add	x0, x0, 16	// D.20592, D.20591,
	add	x0, x2, x0	// D.20593, D.20590, D.20592
	ldr	d0, [x0]	// D.20594, MEM[(double *)_194]
	str	d0, [sp, 208]	// D.20594, MEM[(double *)&ha.1574 + 8B]
	add	x0, sp, 200	// iftmp.1576,,
.L2751:
	ldp	x0, x1, [x0]	// D.6521, *iftmp.1575_94
// varargs-dll.c:1206:   double c = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp441, D.6521
	str	d0, [sp, 48]	// tmp441, c
// varargs-dll.c:1207:   double d = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20595, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1580, argv.__stack
	cmp	w1, 0	// D.20595,
	blt	.L2754		//,
	add	x1, x0, 23	// D.20601, iftmp.1580,
	and	x1, x1, -8	// D.20602, D.20601,
	str	x1, [sp, 440]	// D.20602, argv.__stack
	b	.L2755		//
.L2754:
	add	w2, w1, 32	// D.20604, D.20595,
	str	w2, [sp, 468]	// D.20604, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20606, argv.__vr_offs
	cmp	w2, 0	// D.20606,
	ble	.L2756		//,
	add	x1, x0, 23	// D.20609, iftmp.1580,
	and	x1, x1, -8	// D.20610, D.20609,
	str	x1, [sp, 440]	// D.20610, argv.__stack
	b	.L2755		//
.L2756:
	ldr	x2, [sp, 456]	// D.20612, argv.__vr_top
	sxtw	x0, w1	// D.20613, D.20595
	add	x2, x2, x0	// D.20614, D.20612, D.20613
	add	x0, sp, 216	// ha.1581,,
	ldr	d0, [x2]	// D.20616, MEM[(double *)_215]
	str	d0, [x0]	// D.20616, MEM[(double *)ha.1581_216]
	ldr	x2, [sp, 456]	// D.20617, argv.__vr_top
	sxtw	x0, w1	// D.20618, D.20595
	add	x0, x0, 16	// D.20619, D.20618,
	add	x0, x2, x0	// D.20620, D.20617, D.20619
	ldr	d0, [x0]	// D.20621, MEM[(double *)_222]
	str	d0, [sp, 224]	// D.20621, MEM[(double *)&ha.1578 + 8B]
	add	x0, sp, 216	// iftmp.1580,,
.L2755:
	ldp	x0, x1, [x0]	// D.6522, *iftmp.1579_96
// varargs-dll.c:1207:   double d = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp442, D.6522
	str	d0, [sp, 56]	// tmp442, d
// varargs-dll.c:1208:   double e = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20622, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1584, argv.__stack
	cmp	w1, 0	// D.20622,
	blt	.L2758		//,
	add	x1, x0, 23	// D.20628, iftmp.1584,
	and	x1, x1, -8	// D.20629, D.20628,
	str	x1, [sp, 440]	// D.20629, argv.__stack
	b	.L2759		//
.L2758:
	add	w2, w1, 32	// D.20631, D.20622,
	str	w2, [sp, 468]	// D.20631, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20633, argv.__vr_offs
	cmp	w2, 0	// D.20633,
	ble	.L2760		//,
	add	x1, x0, 23	// D.20636, iftmp.1584,
	and	x1, x1, -8	// D.20637, D.20636,
	str	x1, [sp, 440]	// D.20637, argv.__stack
	b	.L2759		//
.L2760:
	ldr	x2, [sp, 456]	// D.20639, argv.__vr_top
	sxtw	x0, w1	// D.20640, D.20622
	add	x2, x2, x0	// D.20641, D.20639, D.20640
	add	x0, sp, 232	// ha.1585,,
	ldr	d0, [x2]	// D.20643, MEM[(double *)_243]
	str	d0, [x0]	// D.20643, MEM[(double *)ha.1585_244]
	ldr	x2, [sp, 456]	// D.20644, argv.__vr_top
	sxtw	x0, w1	// D.20645, D.20622
	add	x0, x0, 16	// D.20646, D.20645,
	add	x0, x2, x0	// D.20647, D.20644, D.20646
	ldr	d0, [x0]	// D.20648, MEM[(double *)_250]
	str	d0, [sp, 240]	// D.20648, MEM[(double *)&ha.1582 + 8B]
	add	x0, sp, 232	// iftmp.1584,,
.L2759:
	ldp	x0, x1, [x0]	// D.6523, *iftmp.1583_98
// varargs-dll.c:1208:   double e = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp443, D.6523
	str	d0, [sp, 64]	// tmp443, e
// varargs-dll.c:1209:   double f = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20649, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1588, argv.__stack
	cmp	w1, 0	// D.20649,
	blt	.L2762		//,
	add	x1, x0, 23	// D.20655, iftmp.1588,
	and	x1, x1, -8	// D.20656, D.20655,
	str	x1, [sp, 440]	// D.20656, argv.__stack
	b	.L2763		//
.L2762:
	add	w2, w1, 32	// D.20658, D.20649,
	str	w2, [sp, 468]	// D.20658, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20660, argv.__vr_offs
	cmp	w2, 0	// D.20660,
	ble	.L2764		//,
	add	x1, x0, 23	// D.20663, iftmp.1588,
	and	x1, x1, -8	// D.20664, D.20663,
	str	x1, [sp, 440]	// D.20664, argv.__stack
	b	.L2763		//
.L2764:
	ldr	x2, [sp, 456]	// D.20666, argv.__vr_top
	sxtw	x0, w1	// D.20667, D.20649
	add	x2, x2, x0	// D.20668, D.20666, D.20667
	add	x0, sp, 248	// ha.1589,,
	ldr	d0, [x2]	// D.20670, MEM[(double *)_271]
	str	d0, [x0]	// D.20670, MEM[(double *)ha.1589_272]
	ldr	x2, [sp, 456]	// D.20671, argv.__vr_top
	sxtw	x0, w1	// D.20672, D.20649
	add	x0, x0, 16	// D.20673, D.20672,
	add	x0, x2, x0	// D.20674, D.20671, D.20673
	ldr	d0, [x0]	// D.20675, MEM[(double *)_278]
	str	d0, [sp, 256]	// D.20675, MEM[(double *)&ha.1586 + 8B]
	add	x0, sp, 248	// iftmp.1588,,
.L2763:
	ldp	x0, x1, [x0]	// D.6524, *iftmp.1587_100
// varargs-dll.c:1209:   double f = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp444, D.6524
	str	d0, [sp, 72]	// tmp444, f
// varargs-dll.c:1210:   double g = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20676, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1592, argv.__stack
	cmp	w1, 0	// D.20676,
	blt	.L2766		//,
	add	x1, x0, 23	// D.20682, iftmp.1592,
	and	x1, x1, -8	// D.20683, D.20682,
	str	x1, [sp, 440]	// D.20683, argv.__stack
	b	.L2767		//
.L2766:
	add	w2, w1, 32	// D.20685, D.20676,
	str	w2, [sp, 468]	// D.20685, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20687, argv.__vr_offs
	cmp	w2, 0	// D.20687,
	ble	.L2768		//,
	add	x1, x0, 23	// D.20690, iftmp.1592,
	and	x1, x1, -8	// D.20691, D.20690,
	str	x1, [sp, 440]	// D.20691, argv.__stack
	b	.L2767		//
.L2768:
	ldr	x2, [sp, 456]	// D.20693, argv.__vr_top
	sxtw	x0, w1	// D.20694, D.20676
	add	x2, x2, x0	// D.20695, D.20693, D.20694
	add	x0, sp, 264	// ha.1593,,
	ldr	d0, [x2]	// D.20697, MEM[(double *)_299]
	str	d0, [x0]	// D.20697, MEM[(double *)ha.1593_300]
	ldr	x2, [sp, 456]	// D.20698, argv.__vr_top
	sxtw	x0, w1	// D.20699, D.20676
	add	x0, x0, 16	// D.20700, D.20699,
	add	x0, x2, x0	// D.20701, D.20698, D.20700
	ldr	d0, [x0]	// D.20702, MEM[(double *)_306]
	str	d0, [sp, 272]	// D.20702, MEM[(double *)&ha.1590 + 8B]
	add	x0, sp, 264	// iftmp.1592,,
.L2767:
	ldp	x0, x1, [x0]	// D.6525, *iftmp.1591_102
// varargs-dll.c:1210:   double g = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp445, D.6525
	str	d0, [sp, 80]	// tmp445, g
// varargs-dll.c:1211:   double h = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20703, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1596, argv.__stack
	cmp	w1, 0	// D.20703,
	blt	.L2770		//,
	add	x1, x0, 23	// D.20709, iftmp.1596,
	and	x1, x1, -8	// D.20710, D.20709,
	str	x1, [sp, 440]	// D.20710, argv.__stack
	b	.L2771		//
.L2770:
	add	w2, w1, 32	// D.20712, D.20703,
	str	w2, [sp, 468]	// D.20712, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20714, argv.__vr_offs
	cmp	w2, 0	// D.20714,
	ble	.L2772		//,
	add	x1, x0, 23	// D.20717, iftmp.1596,
	and	x1, x1, -8	// D.20718, D.20717,
	str	x1, [sp, 440]	// D.20718, argv.__stack
	b	.L2771		//
.L2772:
	ldr	x2, [sp, 456]	// D.20720, argv.__vr_top
	sxtw	x0, w1	// D.20721, D.20703
	add	x2, x2, x0	// D.20722, D.20720, D.20721
	add	x0, sp, 280	// ha.1597,,
	ldr	d0, [x2]	// D.20724, MEM[(double *)_327]
	str	d0, [x0]	// D.20724, MEM[(double *)ha.1597_328]
	ldr	x2, [sp, 456]	// D.20725, argv.__vr_top
	sxtw	x0, w1	// D.20726, D.20703
	add	x0, x0, 16	// D.20727, D.20726,
	add	x0, x2, x0	// D.20728, D.20725, D.20727
	ldr	d0, [x0]	// D.20729, MEM[(double *)_334]
	str	d0, [sp, 288]	// D.20729, MEM[(double *)&ha.1594 + 8B]
	add	x0, sp, 280	// iftmp.1596,,
.L2771:
	ldp	x0, x1, [x0]	// D.6526, *iftmp.1595_104
// varargs-dll.c:1211:   double h = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp446, D.6526
	str	d0, [sp, 88]	// tmp446, h
// varargs-dll.c:1212:   double i = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20730, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1600, argv.__stack
	cmp	w1, 0	// D.20730,
	blt	.L2774		//,
	add	x1, x0, 23	// D.20736, iftmp.1600,
	and	x1, x1, -8	// D.20737, D.20736,
	str	x1, [sp, 440]	// D.20737, argv.__stack
	b	.L2775		//
.L2774:
	add	w2, w1, 32	// D.20739, D.20730,
	str	w2, [sp, 468]	// D.20739, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20741, argv.__vr_offs
	cmp	w2, 0	// D.20741,
	ble	.L2776		//,
	add	x1, x0, 23	// D.20744, iftmp.1600,
	and	x1, x1, -8	// D.20745, D.20744,
	str	x1, [sp, 440]	// D.20745, argv.__stack
	b	.L2775		//
.L2776:
	ldr	x2, [sp, 456]	// D.20747, argv.__vr_top
	sxtw	x0, w1	// D.20748, D.20730
	add	x2, x2, x0	// D.20749, D.20747, D.20748
	add	x0, sp, 296	// ha.1601,,
	ldr	d0, [x2]	// D.20751, MEM[(double *)_355]
	str	d0, [x0]	// D.20751, MEM[(double *)ha.1601_356]
	ldr	x2, [sp, 456]	// D.20752, argv.__vr_top
	sxtw	x0, w1	// D.20753, D.20730
	add	x0, x0, 16	// D.20754, D.20753,
	add	x0, x2, x0	// D.20755, D.20752, D.20754
	ldr	d0, [x0]	// D.20756, MEM[(double *)_362]
	str	d0, [sp, 304]	// D.20756, MEM[(double *)&ha.1598 + 8B]
	add	x0, sp, 296	// iftmp.1600,,
.L2775:
	ldp	x0, x1, [x0]	// D.6527, *iftmp.1599_106
// varargs-dll.c:1212:   double i = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp447, D.6527
	str	d0, [sp, 96]	// tmp447, i
// varargs-dll.c:1213:   double j = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20757, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1604, argv.__stack
	cmp	w1, 0	// D.20757,
	blt	.L2778		//,
	add	x1, x0, 23	// D.20763, iftmp.1604,
	and	x1, x1, -8	// D.20764, D.20763,
	str	x1, [sp, 440]	// D.20764, argv.__stack
	b	.L2779		//
.L2778:
	add	w2, w1, 32	// D.20766, D.20757,
	str	w2, [sp, 468]	// D.20766, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20768, argv.__vr_offs
	cmp	w2, 0	// D.20768,
	ble	.L2780		//,
	add	x1, x0, 23	// D.20771, iftmp.1604,
	and	x1, x1, -8	// D.20772, D.20771,
	str	x1, [sp, 440]	// D.20772, argv.__stack
	b	.L2779		//
.L2780:
	ldr	x2, [sp, 456]	// D.20774, argv.__vr_top
	sxtw	x0, w1	// D.20775, D.20757
	add	x2, x2, x0	// D.20776, D.20774, D.20775
	add	x0, sp, 312	// ha.1605,,
	ldr	d0, [x2]	// D.20778, MEM[(double *)_383]
	str	d0, [x0]	// D.20778, MEM[(double *)ha.1605_384]
	ldr	x2, [sp, 456]	// D.20779, argv.__vr_top
	sxtw	x0, w1	// D.20780, D.20757
	add	x0, x0, 16	// D.20781, D.20780,
	add	x0, x2, x0	// D.20782, D.20779, D.20781
	ldr	d0, [x0]	// D.20783, MEM[(double *)_390]
	str	d0, [sp, 320]	// D.20783, MEM[(double *)&ha.1602 + 8B]
	add	x0, sp, 312	// iftmp.1604,,
.L2779:
	ldp	x0, x1, [x0]	// D.6528, *iftmp.1603_108
// varargs-dll.c:1213:   double j = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp448, D.6528
	str	d0, [sp, 104]	// tmp448, j
// varargs-dll.c:1214:   double k = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20784, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1608, argv.__stack
	cmp	w1, 0	// D.20784,
	blt	.L2782		//,
	add	x1, x0, 23	// D.20790, iftmp.1608,
	and	x1, x1, -8	// D.20791, D.20790,
	str	x1, [sp, 440]	// D.20791, argv.__stack
	b	.L2783		//
.L2782:
	add	w2, w1, 32	// D.20793, D.20784,
	str	w2, [sp, 468]	// D.20793, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20795, argv.__vr_offs
	cmp	w2, 0	// D.20795,
	ble	.L2784		//,
	add	x1, x0, 23	// D.20798, iftmp.1608,
	and	x1, x1, -8	// D.20799, D.20798,
	str	x1, [sp, 440]	// D.20799, argv.__stack
	b	.L2783		//
.L2784:
	ldr	x2, [sp, 456]	// D.20801, argv.__vr_top
	sxtw	x0, w1	// D.20802, D.20784
	add	x2, x2, x0	// D.20803, D.20801, D.20802
	add	x0, sp, 328	// ha.1609,,
	ldr	d0, [x2]	// D.20805, MEM[(double *)_411]
	str	d0, [x0]	// D.20805, MEM[(double *)ha.1609_412]
	ldr	x2, [sp, 456]	// D.20806, argv.__vr_top
	sxtw	x0, w1	// D.20807, D.20784
	add	x0, x0, 16	// D.20808, D.20807,
	add	x0, x2, x0	// D.20809, D.20806, D.20808
	ldr	d0, [x0]	// D.20810, MEM[(double *)_418]
	str	d0, [sp, 336]	// D.20810, MEM[(double *)&ha.1606 + 8B]
	add	x0, sp, 328	// iftmp.1608,,
.L2783:
	ldp	x0, x1, [x0]	// D.6529, *iftmp.1607_110
// varargs-dll.c:1214:   double k = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp449, D.6529
	str	d0, [sp, 112]	// tmp449, k
// varargs-dll.c:1215:   double l = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20811, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1612, argv.__stack
	cmp	w1, 0	// D.20811,
	blt	.L2786		//,
	add	x1, x0, 23	// D.20817, iftmp.1612,
	and	x1, x1, -8	// D.20818, D.20817,
	str	x1, [sp, 440]	// D.20818, argv.__stack
	b	.L2787		//
.L2786:
	add	w2, w1, 32	// D.20820, D.20811,
	str	w2, [sp, 468]	// D.20820, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20822, argv.__vr_offs
	cmp	w2, 0	// D.20822,
	ble	.L2788		//,
	add	x1, x0, 23	// D.20825, iftmp.1612,
	and	x1, x1, -8	// D.20826, D.20825,
	str	x1, [sp, 440]	// D.20826, argv.__stack
	b	.L2787		//
.L2788:
	ldr	x2, [sp, 456]	// D.20828, argv.__vr_top
	sxtw	x0, w1	// D.20829, D.20811
	add	x2, x2, x0	// D.20830, D.20828, D.20829
	add	x0, sp, 344	// ha.1613,,
	ldr	d0, [x2]	// D.20832, MEM[(double *)_439]
	str	d0, [x0]	// D.20832, MEM[(double *)ha.1613_440]
	ldr	x2, [sp, 456]	// D.20833, argv.__vr_top
	sxtw	x0, w1	// D.20834, D.20811
	add	x0, x0, 16	// D.20835, D.20834,
	add	x0, x2, x0	// D.20836, D.20833, D.20835
	ldr	d0, [x0]	// D.20837, MEM[(double *)_446]
	str	d0, [sp, 352]	// D.20837, MEM[(double *)&ha.1610 + 8B]
	add	x0, sp, 344	// iftmp.1612,,
.L2787:
	ldp	x0, x1, [x0]	// D.6530, *iftmp.1611_112
// varargs-dll.c:1215:   double l = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp450, D.6530
	str	d0, [sp, 120]	// tmp450, l
// varargs-dll.c:1216:   double m = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20838, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1616, argv.__stack
	cmp	w1, 0	// D.20838,
	blt	.L2790		//,
	add	x1, x0, 23	// D.20844, iftmp.1616,
	and	x1, x1, -8	// D.20845, D.20844,
	str	x1, [sp, 440]	// D.20845, argv.__stack
	b	.L2791		//
.L2790:
	add	w2, w1, 32	// D.20847, D.20838,
	str	w2, [sp, 468]	// D.20847, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20849, argv.__vr_offs
	cmp	w2, 0	// D.20849,
	ble	.L2792		//,
	add	x1, x0, 23	// D.20852, iftmp.1616,
	and	x1, x1, -8	// D.20853, D.20852,
	str	x1, [sp, 440]	// D.20853, argv.__stack
	b	.L2791		//
.L2792:
	ldr	x2, [sp, 456]	// D.20855, argv.__vr_top
	sxtw	x0, w1	// D.20856, D.20838
	add	x2, x2, x0	// D.20857, D.20855, D.20856
	add	x0, sp, 360	// ha.1617,,
	ldr	d0, [x2]	// D.20859, MEM[(double *)_467]
	str	d0, [x0]	// D.20859, MEM[(double *)ha.1617_468]
	ldr	x2, [sp, 456]	// D.20860, argv.__vr_top
	sxtw	x0, w1	// D.20861, D.20838
	add	x0, x0, 16	// D.20862, D.20861,
	add	x0, x2, x0	// D.20863, D.20860, D.20862
	ldr	d0, [x0]	// D.20864, MEM[(double *)_474]
	str	d0, [sp, 368]	// D.20864, MEM[(double *)&ha.1614 + 8B]
	add	x0, sp, 360	// iftmp.1616,,
.L2791:
	ldp	x0, x1, [x0]	// D.6531, *iftmp.1615_114
// varargs-dll.c:1216:   double m = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp451, D.6531
	str	d0, [sp, 128]	// tmp451, m
// varargs-dll.c:1217:   double n = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20865, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1620, argv.__stack
	cmp	w1, 0	// D.20865,
	blt	.L2794		//,
	add	x1, x0, 23	// D.20871, iftmp.1620,
	and	x1, x1, -8	// D.20872, D.20871,
	str	x1, [sp, 440]	// D.20872, argv.__stack
	b	.L2795		//
.L2794:
	add	w2, w1, 32	// D.20874, D.20865,
	str	w2, [sp, 468]	// D.20874, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20876, argv.__vr_offs
	cmp	w2, 0	// D.20876,
	ble	.L2796		//,
	add	x1, x0, 23	// D.20879, iftmp.1620,
	and	x1, x1, -8	// D.20880, D.20879,
	str	x1, [sp, 440]	// D.20880, argv.__stack
	b	.L2795		//
.L2796:
	ldr	x2, [sp, 456]	// D.20882, argv.__vr_top
	sxtw	x0, w1	// D.20883, D.20865
	add	x2, x2, x0	// D.20884, D.20882, D.20883
	add	x0, sp, 376	// ha.1621,,
	ldr	d0, [x2]	// D.20886, MEM[(double *)_495]
	str	d0, [x0]	// D.20886, MEM[(double *)ha.1621_496]
	ldr	x2, [sp, 456]	// D.20887, argv.__vr_top
	sxtw	x0, w1	// D.20888, D.20865
	add	x0, x0, 16	// D.20889, D.20888,
	add	x0, x2, x0	// D.20890, D.20887, D.20889
	ldr	d0, [x0]	// D.20891, MEM[(double *)_502]
	str	d0, [sp, 384]	// D.20891, MEM[(double *)&ha.1618 + 8B]
	add	x0, sp, 376	// iftmp.1620,,
.L2795:
	ldp	x0, x1, [x0]	// D.6532, *iftmp.1619_116
// varargs-dll.c:1217:   double n = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp452, D.6532
	str	d0, [sp, 136]	// tmp452, n
// varargs-dll.c:1218:   double o = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20892, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1624, argv.__stack
	cmp	w1, 0	// D.20892,
	blt	.L2798		//,
	add	x1, x0, 23	// D.20898, iftmp.1624,
	and	x1, x1, -8	// D.20899, D.20898,
	str	x1, [sp, 440]	// D.20899, argv.__stack
	b	.L2799		//
.L2798:
	add	w2, w1, 32	// D.20901, D.20892,
	str	w2, [sp, 468]	// D.20901, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20903, argv.__vr_offs
	cmp	w2, 0	// D.20903,
	ble	.L2800		//,
	add	x1, x0, 23	// D.20906, iftmp.1624,
	and	x1, x1, -8	// D.20907, D.20906,
	str	x1, [sp, 440]	// D.20907, argv.__stack
	b	.L2799		//
.L2800:
	ldr	x2, [sp, 456]	// D.20909, argv.__vr_top
	sxtw	x0, w1	// D.20910, D.20892
	add	x2, x2, x0	// D.20911, D.20909, D.20910
	add	x0, sp, 392	// ha.1625,,
	ldr	d0, [x2]	// D.20913, MEM[(double *)_523]
	str	d0, [x0]	// D.20913, MEM[(double *)ha.1625_524]
	ldr	x2, [sp, 456]	// D.20914, argv.__vr_top
	sxtw	x0, w1	// D.20915, D.20892
	add	x0, x0, 16	// D.20916, D.20915,
	add	x0, x2, x0	// D.20917, D.20914, D.20916
	ldr	d0, [x0]	// D.20918, MEM[(double *)_530]
	str	d0, [sp, 400]	// D.20918, MEM[(double *)&ha.1622 + 8B]
	add	x0, sp, 392	// iftmp.1624,,
.L2799:
	ldp	x0, x1, [x0]	// D.6533, *iftmp.1623_118
// varargs-dll.c:1218:   double o = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp453, D.6533
	str	d0, [sp, 144]	// tmp453, o
// varargs-dll.c:1219:   double p = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [sp, 468]	// D.20919, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1628, argv.__stack
	cmp	w1, 0	// D.20919,
	blt	.L2802		//,
	add	x1, x0, 23	// D.20925, iftmp.1628,
	and	x1, x1, -8	// D.20926, D.20925,
	str	x1, [sp, 440]	// D.20926, argv.__stack
	b	.L2803		//
.L2802:
	add	w2, w1, 32	// D.20928, D.20919,
	str	w2, [sp, 468]	// D.20928, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20930, argv.__vr_offs
	cmp	w2, 0	// D.20930,
	ble	.L2804		//,
	add	x1, x0, 23	// D.20933, iftmp.1628,
	and	x1, x1, -8	// D.20934, D.20933,
	str	x1, [sp, 440]	// D.20934, argv.__stack
	b	.L2803		//
.L2804:
	ldr	x2, [sp, 456]	// D.20936, argv.__vr_top
	sxtw	x0, w1	// D.20937, D.20919
	add	x2, x2, x0	// D.20938, D.20936, D.20937
	add	x0, sp, 408	// ha.1629,,
	ldr	d0, [x2]	// D.20940, MEM[(double *)_551]
	str	d0, [x0]	// D.20940, MEM[(double *)ha.1629_552]
	ldr	x2, [sp, 456]	// D.20941, argv.__vr_top
	sxtw	x0, w1	// D.20942, D.20919
	add	x0, x0, 16	// D.20943, D.20942,
	add	x0, x2, x0	// D.20944, D.20941, D.20943
	ldr	d0, [x0]	// D.20945, MEM[(double *)_558]
	str	d0, [sp, 416]	// D.20945, MEM[(double *)&ha.1626 + 8B]
	add	x0, sp, 408	// iftmp.1628,,
.L2803:
	ldp	x0, x1, [x0]	// D.6534, *iftmp.1627_120
// varargs-dll.c:1219:   double p = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp454, D.6534
	str	d0, [sp, 152]	// tmp454, p
// varargs-dll.c:1220:   double q = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [sp, 468]	// D.20946, argv.__vr_offs
	ldr	x0, [sp, 440]	// iftmp.1632, argv.__stack
	cmp	w1, 0	// D.20946,
	blt	.L2806		//,
	add	x1, x0, 23	// D.20952, iftmp.1632,
	and	x1, x1, -8	// D.20953, D.20952,
	str	x1, [sp, 440]	// D.20953, argv.__stack
	b	.L2807		//
.L2806:
	add	w2, w1, 32	// D.20955, D.20946,
	str	w2, [sp, 468]	// D.20955, argv.__vr_offs
	ldr	w2, [sp, 468]	// D.20957, argv.__vr_offs
	cmp	w2, 0	// D.20957,
	ble	.L2808		//,
	add	x1, x0, 23	// D.20960, iftmp.1632,
	and	x1, x1, -8	// D.20961, D.20960,
	str	x1, [sp, 440]	// D.20961, argv.__stack
	b	.L2807		//
.L2808:
	ldr	x2, [sp, 456]	// D.20963, argv.__vr_top
	sxtw	x0, w1	// D.20964, D.20946
	add	x2, x2, x0	// D.20965, D.20963, D.20964
	add	x0, sp, 424	// ha.1633,,
	ldr	d0, [x2]	// D.20967, MEM[(double *)_579]
	str	d0, [x0]	// D.20967, MEM[(double *)ha.1633_580]
	ldr	x2, [sp, 456]	// D.20968, argv.__vr_top
	sxtw	x0, w1	// D.20969, D.20946
	add	x0, x0, 16	// D.20970, D.20969,
	add	x0, x2, x0	// D.20971, D.20968, D.20970
	ldr	d0, [x0]	// D.20972, MEM[(double *)_586]
	str	d0, [sp, 432]	// D.20972, MEM[(double *)&ha.1630 + 8B]
	add	x0, sp, 424	// iftmp.1632,,
.L2807:
	ldp	x0, x1, [x0]	// D.6535, *iftmp.1631_122
// varargs-dll.c:1220:   double q = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp455, D.6535
	str	d0, [sp, 160]	// tmp455, q
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 32]	// tmp456, a
	ldr	d0, [sp, 40]	// tmp457, b
	fadd	d1, d1, d0	// _1, tmp456, tmp457
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 48]	// tmp458, c
	fadd	d1, d1, d0	// _2, _1, tmp458
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp459, d
	fadd	d1, d1, d0	// _3, _2, tmp459
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp460, e
	fadd	d1, d1, d0	// _4, _3, tmp460
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp461, f
	fadd	d1, d1, d0	// _5, _4, tmp461
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp462, g
	fadd	d1, d1, d0	// _6, _5, tmp462
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp463, h
	fadd	d1, d1, d0	// _7, _6, tmp463
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp464, i
	fadd	d1, d1, d0	// _8, _7, tmp464
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp465, j
	fadd	d1, d1, d0	// _9, _8, tmp465
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp466, k
	fadd	d1, d1, d0	// _10, _9, tmp466
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp467, l
	fadd	d1, d1, d0	// _11, _10, tmp467
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp468, m
	fadd	d1, d1, d0	// _12, _11, tmp468
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp469, n
	fadd	d1, d1, d0	// _13, _12, tmp469
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp470, o
	fadd	d1, d1, d0	// _14, _13, tmp470
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp471, p
	fadd	d1, d1, d0	// _15, _14, tmp471
// varargs-dll.c:1222:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp472, q
	fadd	d0, d1, d0	// _16, _15, tmp472
	fcvtzs	w0, d0	// _54, _16
	mov	w1, w0	// <retval>, _54
// varargs-dll.c:1223: }
	adrp	x0, :got:__stack_chk_guard	// tmp475,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp474, tmp475,
	ldr	x3, [sp, 472]	// tmp477, D.20973
	ldr	x2, [x0]	// tmp478,
	subs	x3, x3, x2	// tmp477, tmp478
	mov	x2, 0	// tmp478
	beq	.L2811		//,
	bl	__stack_chk_fail		//
.L2811:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 672	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE78:
	.size	use_va_args_many_hfa_2_doubles, .-use_va_args_many_hfa_2_doubles
	.align	2
	.global	use_va_list_many_hfa_2_doubles
	.type	use_va_list_many_hfa_2_doubles, %function
use_va_list_many_hfa_2_doubles:
.LFB79:
	.cfi_startproc
	stp	x29, x30, [sp, -464]!	//,,,
	.cfi_def_cfa_offset 464
	.cfi_offset 29, -464
	.cfi_offset 30, -456
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -448
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp433,
// varargs-dll.c:1227: {
	adrp	x0, :got:__stack_chk_guard	// tmp435,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp434, tmp435,
	ldr	x1, [x0]	// tmp473,
	str	x1, [sp, 456]	// tmp473, D.21436
	mov	x1, 0	// tmp473
// varargs-dll.c:1228:   double a = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.20977, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1636, argv.__stack
	cmp	w1, 0	// D.20977,
	blt	.L2813		//,
	add	x1, x0, 23	// D.20983, iftmp.1636,
	and	x1, x1, -8	// D.20984, D.20983,
	str	x1, [x19]	// D.20984, argv.__stack
	b	.L2814		//
.L2813:
	add	w2, w1, 32	// D.20986, D.20977,
	str	w2, [x19, 28]	// D.20986, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.20988, argv.__vr_offs
	cmp	w2, 0	// D.20988,
	ble	.L2815		//,
	add	x1, x0, 23	// D.20991, iftmp.1636,
	and	x1, x1, -8	// D.20992, D.20991,
	str	x1, [x19]	// D.20992, argv.__stack
	b	.L2814		//
.L2815:
	ldr	x2, [x19, 16]	// D.20994, argv.__vr_top
	sxtw	x0, w1	// D.20995, D.20977
	add	x2, x2, x0	// D.20996, D.20994, D.20995
	add	x0, sp, 184	// ha.1637,,
	ldr	d0, [x2]	// D.20998, MEM[(double *)_128]
	str	d0, [x0]	// D.20998, MEM[(double *)ha.1637_129]
	ldr	x2, [x19, 16]	// D.20999, argv.__vr_top
	sxtw	x0, w1	// D.21000, D.20977
	add	x0, x0, 16	// D.21001, D.21000,
	add	x0, x2, x0	// D.21002, D.20999, D.21001
	ldr	d0, [x0]	// D.21003, MEM[(double *)_135]
	str	d0, [sp, 192]	// D.21003, MEM[(double *)&ha.1634 + 8B]
	add	x0, sp, 184	// iftmp.1636,,
.L2814:
	ldp	x0, x1, [x0]	// D.6539, *iftmp.1635_87
// varargs-dll.c:1228:   double a = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp436, D.6539
	str	d0, [sp, 48]	// tmp436, a
// varargs-dll.c:1229:   double b = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21004, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1640, argv.__stack
	cmp	w1, 0	// D.21004,
	blt	.L2817		//,
	add	x1, x0, 23	// D.21010, iftmp.1640,
	and	x1, x1, -8	// D.21011, D.21010,
	str	x1, [x19]	// D.21011, argv.__stack
	b	.L2818		//
.L2817:
	add	w2, w1, 32	// D.21013, D.21004,
	str	w2, [x19, 28]	// D.21013, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21015, argv.__vr_offs
	cmp	w2, 0	// D.21015,
	ble	.L2819		//,
	add	x1, x0, 23	// D.21018, iftmp.1640,
	and	x1, x1, -8	// D.21019, D.21018,
	str	x1, [x19]	// D.21019, argv.__stack
	b	.L2818		//
.L2819:
	ldr	x2, [x19, 16]	// D.21021, argv.__vr_top
	sxtw	x0, w1	// D.21022, D.21004
	add	x2, x2, x0	// D.21023, D.21021, D.21022
	add	x0, sp, 200	// ha.1641,,
	ldr	d0, [x2]	// D.21025, MEM[(double *)_156]
	str	d0, [x0]	// D.21025, MEM[(double *)ha.1641_157]
	ldr	x2, [x19, 16]	// D.21026, argv.__vr_top
	sxtw	x0, w1	// D.21027, D.21004
	add	x0, x0, 16	// D.21028, D.21027,
	add	x0, x2, x0	// D.21029, D.21026, D.21028
	ldr	d0, [x0]	// D.21030, MEM[(double *)_163]
	str	d0, [sp, 208]	// D.21030, MEM[(double *)&ha.1638 + 8B]
	add	x0, sp, 200	// iftmp.1640,,
.L2818:
	ldp	x0, x1, [x0]	// D.6540, *iftmp.1639_89
// varargs-dll.c:1229:   double b = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp437, D.6540
	str	d0, [sp, 56]	// tmp437, b
// varargs-dll.c:1230:   double c = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21031, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1644, argv.__stack
	cmp	w1, 0	// D.21031,
	blt	.L2821		//,
	add	x1, x0, 23	// D.21037, iftmp.1644,
	and	x1, x1, -8	// D.21038, D.21037,
	str	x1, [x19]	// D.21038, argv.__stack
	b	.L2822		//
.L2821:
	add	w2, w1, 32	// D.21040, D.21031,
	str	w2, [x19, 28]	// D.21040, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21042, argv.__vr_offs
	cmp	w2, 0	// D.21042,
	ble	.L2823		//,
	add	x1, x0, 23	// D.21045, iftmp.1644,
	and	x1, x1, -8	// D.21046, D.21045,
	str	x1, [x19]	// D.21046, argv.__stack
	b	.L2822		//
.L2823:
	ldr	x2, [x19, 16]	// D.21048, argv.__vr_top
	sxtw	x0, w1	// D.21049, D.21031
	add	x2, x2, x0	// D.21050, D.21048, D.21049
	add	x0, sp, 216	// ha.1645,,
	ldr	d0, [x2]	// D.21052, MEM[(double *)_184]
	str	d0, [x0]	// D.21052, MEM[(double *)ha.1645_185]
	ldr	x2, [x19, 16]	// D.21053, argv.__vr_top
	sxtw	x0, w1	// D.21054, D.21031
	add	x0, x0, 16	// D.21055, D.21054,
	add	x0, x2, x0	// D.21056, D.21053, D.21055
	ldr	d0, [x0]	// D.21057, MEM[(double *)_191]
	str	d0, [sp, 224]	// D.21057, MEM[(double *)&ha.1642 + 8B]
	add	x0, sp, 216	// iftmp.1644,,
.L2822:
	ldp	x0, x1, [x0]	// D.6541, *iftmp.1643_91
// varargs-dll.c:1230:   double c = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp438, D.6541
	str	d0, [sp, 64]	// tmp438, c
// varargs-dll.c:1231:   double d = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21058, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1648, argv.__stack
	cmp	w1, 0	// D.21058,
	blt	.L2825		//,
	add	x1, x0, 23	// D.21064, iftmp.1648,
	and	x1, x1, -8	// D.21065, D.21064,
	str	x1, [x19]	// D.21065, argv.__stack
	b	.L2826		//
.L2825:
	add	w2, w1, 32	// D.21067, D.21058,
	str	w2, [x19, 28]	// D.21067, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21069, argv.__vr_offs
	cmp	w2, 0	// D.21069,
	ble	.L2827		//,
	add	x1, x0, 23	// D.21072, iftmp.1648,
	and	x1, x1, -8	// D.21073, D.21072,
	str	x1, [x19]	// D.21073, argv.__stack
	b	.L2826		//
.L2827:
	ldr	x2, [x19, 16]	// D.21075, argv.__vr_top
	sxtw	x0, w1	// D.21076, D.21058
	add	x2, x2, x0	// D.21077, D.21075, D.21076
	add	x0, sp, 232	// ha.1649,,
	ldr	d0, [x2]	// D.21079, MEM[(double *)_212]
	str	d0, [x0]	// D.21079, MEM[(double *)ha.1649_213]
	ldr	x2, [x19, 16]	// D.21080, argv.__vr_top
	sxtw	x0, w1	// D.21081, D.21058
	add	x0, x0, 16	// D.21082, D.21081,
	add	x0, x2, x0	// D.21083, D.21080, D.21082
	ldr	d0, [x0]	// D.21084, MEM[(double *)_219]
	str	d0, [sp, 240]	// D.21084, MEM[(double *)&ha.1646 + 8B]
	add	x0, sp, 232	// iftmp.1648,,
.L2826:
	ldp	x0, x1, [x0]	// D.6542, *iftmp.1647_93
// varargs-dll.c:1231:   double d = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp439, D.6542
	str	d0, [sp, 72]	// tmp439, d
// varargs-dll.c:1232:   double e = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21085, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1652, argv.__stack
	cmp	w1, 0	// D.21085,
	blt	.L2829		//,
	add	x1, x0, 23	// D.21091, iftmp.1652,
	and	x1, x1, -8	// D.21092, D.21091,
	str	x1, [x19]	// D.21092, argv.__stack
	b	.L2830		//
.L2829:
	add	w2, w1, 32	// D.21094, D.21085,
	str	w2, [x19, 28]	// D.21094, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21096, argv.__vr_offs
	cmp	w2, 0	// D.21096,
	ble	.L2831		//,
	add	x1, x0, 23	// D.21099, iftmp.1652,
	and	x1, x1, -8	// D.21100, D.21099,
	str	x1, [x19]	// D.21100, argv.__stack
	b	.L2830		//
.L2831:
	ldr	x2, [x19, 16]	// D.21102, argv.__vr_top
	sxtw	x0, w1	// D.21103, D.21085
	add	x2, x2, x0	// D.21104, D.21102, D.21103
	add	x0, sp, 248	// ha.1653,,
	ldr	d0, [x2]	// D.21106, MEM[(double *)_240]
	str	d0, [x0]	// D.21106, MEM[(double *)ha.1653_241]
	ldr	x2, [x19, 16]	// D.21107, argv.__vr_top
	sxtw	x0, w1	// D.21108, D.21085
	add	x0, x0, 16	// D.21109, D.21108,
	add	x0, x2, x0	// D.21110, D.21107, D.21109
	ldr	d0, [x0]	// D.21111, MEM[(double *)_247]
	str	d0, [sp, 256]	// D.21111, MEM[(double *)&ha.1650 + 8B]
	add	x0, sp, 248	// iftmp.1652,,
.L2830:
	ldp	x0, x1, [x0]	// D.6543, *iftmp.1651_95
// varargs-dll.c:1232:   double e = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp440, D.6543
	str	d0, [sp, 80]	// tmp440, e
// varargs-dll.c:1233:   double f = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21112, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1656, argv.__stack
	cmp	w1, 0	// D.21112,
	blt	.L2833		//,
	add	x1, x0, 23	// D.21118, iftmp.1656,
	and	x1, x1, -8	// D.21119, D.21118,
	str	x1, [x19]	// D.21119, argv.__stack
	b	.L2834		//
.L2833:
	add	w2, w1, 32	// D.21121, D.21112,
	str	w2, [x19, 28]	// D.21121, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21123, argv.__vr_offs
	cmp	w2, 0	// D.21123,
	ble	.L2835		//,
	add	x1, x0, 23	// D.21126, iftmp.1656,
	and	x1, x1, -8	// D.21127, D.21126,
	str	x1, [x19]	// D.21127, argv.__stack
	b	.L2834		//
.L2835:
	ldr	x2, [x19, 16]	// D.21129, argv.__vr_top
	sxtw	x0, w1	// D.21130, D.21112
	add	x2, x2, x0	// D.21131, D.21129, D.21130
	add	x0, sp, 264	// ha.1657,,
	ldr	d0, [x2]	// D.21133, MEM[(double *)_268]
	str	d0, [x0]	// D.21133, MEM[(double *)ha.1657_269]
	ldr	x2, [x19, 16]	// D.21134, argv.__vr_top
	sxtw	x0, w1	// D.21135, D.21112
	add	x0, x0, 16	// D.21136, D.21135,
	add	x0, x2, x0	// D.21137, D.21134, D.21136
	ldr	d0, [x0]	// D.21138, MEM[(double *)_275]
	str	d0, [sp, 272]	// D.21138, MEM[(double *)&ha.1654 + 8B]
	add	x0, sp, 264	// iftmp.1656,,
.L2834:
	ldp	x0, x1, [x0]	// D.6544, *iftmp.1655_97
// varargs-dll.c:1233:   double f = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp441, D.6544
	str	d0, [sp, 88]	// tmp441, f
// varargs-dll.c:1234:   double g = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21139, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1660, argv.__stack
	cmp	w1, 0	// D.21139,
	blt	.L2837		//,
	add	x1, x0, 23	// D.21145, iftmp.1660,
	and	x1, x1, -8	// D.21146, D.21145,
	str	x1, [x19]	// D.21146, argv.__stack
	b	.L2838		//
.L2837:
	add	w2, w1, 32	// D.21148, D.21139,
	str	w2, [x19, 28]	// D.21148, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21150, argv.__vr_offs
	cmp	w2, 0	// D.21150,
	ble	.L2839		//,
	add	x1, x0, 23	// D.21153, iftmp.1660,
	and	x1, x1, -8	// D.21154, D.21153,
	str	x1, [x19]	// D.21154, argv.__stack
	b	.L2838		//
.L2839:
	ldr	x2, [x19, 16]	// D.21156, argv.__vr_top
	sxtw	x0, w1	// D.21157, D.21139
	add	x2, x2, x0	// D.21158, D.21156, D.21157
	add	x0, sp, 280	// ha.1661,,
	ldr	d0, [x2]	// D.21160, MEM[(double *)_296]
	str	d0, [x0]	// D.21160, MEM[(double *)ha.1661_297]
	ldr	x2, [x19, 16]	// D.21161, argv.__vr_top
	sxtw	x0, w1	// D.21162, D.21139
	add	x0, x0, 16	// D.21163, D.21162,
	add	x0, x2, x0	// D.21164, D.21161, D.21163
	ldr	d0, [x0]	// D.21165, MEM[(double *)_303]
	str	d0, [sp, 288]	// D.21165, MEM[(double *)&ha.1658 + 8B]
	add	x0, sp, 280	// iftmp.1660,,
.L2838:
	ldp	x0, x1, [x0]	// D.6545, *iftmp.1659_99
// varargs-dll.c:1234:   double g = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp442, D.6545
	str	d0, [sp, 96]	// tmp442, g
// varargs-dll.c:1235:   double h = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21166, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1664, argv.__stack
	cmp	w1, 0	// D.21166,
	blt	.L2841		//,
	add	x1, x0, 23	// D.21172, iftmp.1664,
	and	x1, x1, -8	// D.21173, D.21172,
	str	x1, [x19]	// D.21173, argv.__stack
	b	.L2842		//
.L2841:
	add	w2, w1, 32	// D.21175, D.21166,
	str	w2, [x19, 28]	// D.21175, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21177, argv.__vr_offs
	cmp	w2, 0	// D.21177,
	ble	.L2843		//,
	add	x1, x0, 23	// D.21180, iftmp.1664,
	and	x1, x1, -8	// D.21181, D.21180,
	str	x1, [x19]	// D.21181, argv.__stack
	b	.L2842		//
.L2843:
	ldr	x2, [x19, 16]	// D.21183, argv.__vr_top
	sxtw	x0, w1	// D.21184, D.21166
	add	x2, x2, x0	// D.21185, D.21183, D.21184
	add	x0, sp, 296	// ha.1665,,
	ldr	d0, [x2]	// D.21187, MEM[(double *)_324]
	str	d0, [x0]	// D.21187, MEM[(double *)ha.1665_325]
	ldr	x2, [x19, 16]	// D.21188, argv.__vr_top
	sxtw	x0, w1	// D.21189, D.21166
	add	x0, x0, 16	// D.21190, D.21189,
	add	x0, x2, x0	// D.21191, D.21188, D.21190
	ldr	d0, [x0]	// D.21192, MEM[(double *)_331]
	str	d0, [sp, 304]	// D.21192, MEM[(double *)&ha.1662 + 8B]
	add	x0, sp, 296	// iftmp.1664,,
.L2842:
	ldp	x0, x1, [x0]	// D.6546, *iftmp.1663_101
// varargs-dll.c:1235:   double h = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp443, D.6546
	str	d0, [sp, 104]	// tmp443, h
// varargs-dll.c:1236:   double i = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21193, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1668, argv.__stack
	cmp	w1, 0	// D.21193,
	blt	.L2845		//,
	add	x1, x0, 23	// D.21199, iftmp.1668,
	and	x1, x1, -8	// D.21200, D.21199,
	str	x1, [x19]	// D.21200, argv.__stack
	b	.L2846		//
.L2845:
	add	w2, w1, 32	// D.21202, D.21193,
	str	w2, [x19, 28]	// D.21202, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21204, argv.__vr_offs
	cmp	w2, 0	// D.21204,
	ble	.L2847		//,
	add	x1, x0, 23	// D.21207, iftmp.1668,
	and	x1, x1, -8	// D.21208, D.21207,
	str	x1, [x19]	// D.21208, argv.__stack
	b	.L2846		//
.L2847:
	ldr	x2, [x19, 16]	// D.21210, argv.__vr_top
	sxtw	x0, w1	// D.21211, D.21193
	add	x2, x2, x0	// D.21212, D.21210, D.21211
	add	x0, sp, 312	// ha.1669,,
	ldr	d0, [x2]	// D.21214, MEM[(double *)_352]
	str	d0, [x0]	// D.21214, MEM[(double *)ha.1669_353]
	ldr	x2, [x19, 16]	// D.21215, argv.__vr_top
	sxtw	x0, w1	// D.21216, D.21193
	add	x0, x0, 16	// D.21217, D.21216,
	add	x0, x2, x0	// D.21218, D.21215, D.21217
	ldr	d0, [x0]	// D.21219, MEM[(double *)_359]
	str	d0, [sp, 320]	// D.21219, MEM[(double *)&ha.1666 + 8B]
	add	x0, sp, 312	// iftmp.1668,,
.L2846:
	ldp	x0, x1, [x0]	// D.6547, *iftmp.1667_103
// varargs-dll.c:1236:   double i = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp444, D.6547
	str	d0, [sp, 112]	// tmp444, i
// varargs-dll.c:1237:   double j = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21220, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1672, argv.__stack
	cmp	w1, 0	// D.21220,
	blt	.L2849		//,
	add	x1, x0, 23	// D.21226, iftmp.1672,
	and	x1, x1, -8	// D.21227, D.21226,
	str	x1, [x19]	// D.21227, argv.__stack
	b	.L2850		//
.L2849:
	add	w2, w1, 32	// D.21229, D.21220,
	str	w2, [x19, 28]	// D.21229, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21231, argv.__vr_offs
	cmp	w2, 0	// D.21231,
	ble	.L2851		//,
	add	x1, x0, 23	// D.21234, iftmp.1672,
	and	x1, x1, -8	// D.21235, D.21234,
	str	x1, [x19]	// D.21235, argv.__stack
	b	.L2850		//
.L2851:
	ldr	x2, [x19, 16]	// D.21237, argv.__vr_top
	sxtw	x0, w1	// D.21238, D.21220
	add	x2, x2, x0	// D.21239, D.21237, D.21238
	add	x0, sp, 328	// ha.1673,,
	ldr	d0, [x2]	// D.21241, MEM[(double *)_380]
	str	d0, [x0]	// D.21241, MEM[(double *)ha.1673_381]
	ldr	x2, [x19, 16]	// D.21242, argv.__vr_top
	sxtw	x0, w1	// D.21243, D.21220
	add	x0, x0, 16	// D.21244, D.21243,
	add	x0, x2, x0	// D.21245, D.21242, D.21244
	ldr	d0, [x0]	// D.21246, MEM[(double *)_387]
	str	d0, [sp, 336]	// D.21246, MEM[(double *)&ha.1670 + 8B]
	add	x0, sp, 328	// iftmp.1672,,
.L2850:
	ldp	x0, x1, [x0]	// D.6548, *iftmp.1671_105
// varargs-dll.c:1237:   double j = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp445, D.6548
	str	d0, [sp, 120]	// tmp445, j
// varargs-dll.c:1238:   double k = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21247, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1676, argv.__stack
	cmp	w1, 0	// D.21247,
	blt	.L2853		//,
	add	x1, x0, 23	// D.21253, iftmp.1676,
	and	x1, x1, -8	// D.21254, D.21253,
	str	x1, [x19]	// D.21254, argv.__stack
	b	.L2854		//
.L2853:
	add	w2, w1, 32	// D.21256, D.21247,
	str	w2, [x19, 28]	// D.21256, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21258, argv.__vr_offs
	cmp	w2, 0	// D.21258,
	ble	.L2855		//,
	add	x1, x0, 23	// D.21261, iftmp.1676,
	and	x1, x1, -8	// D.21262, D.21261,
	str	x1, [x19]	// D.21262, argv.__stack
	b	.L2854		//
.L2855:
	ldr	x2, [x19, 16]	// D.21264, argv.__vr_top
	sxtw	x0, w1	// D.21265, D.21247
	add	x2, x2, x0	// D.21266, D.21264, D.21265
	add	x0, sp, 344	// ha.1677,,
	ldr	d0, [x2]	// D.21268, MEM[(double *)_408]
	str	d0, [x0]	// D.21268, MEM[(double *)ha.1677_409]
	ldr	x2, [x19, 16]	// D.21269, argv.__vr_top
	sxtw	x0, w1	// D.21270, D.21247
	add	x0, x0, 16	// D.21271, D.21270,
	add	x0, x2, x0	// D.21272, D.21269, D.21271
	ldr	d0, [x0]	// D.21273, MEM[(double *)_415]
	str	d0, [sp, 352]	// D.21273, MEM[(double *)&ha.1674 + 8B]
	add	x0, sp, 344	// iftmp.1676,,
.L2854:
	ldp	x0, x1, [x0]	// D.6549, *iftmp.1675_107
// varargs-dll.c:1238:   double k = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp446, D.6549
	str	d0, [sp, 128]	// tmp446, k
// varargs-dll.c:1239:   double l = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21274, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1680, argv.__stack
	cmp	w1, 0	// D.21274,
	blt	.L2857		//,
	add	x1, x0, 23	// D.21280, iftmp.1680,
	and	x1, x1, -8	// D.21281, D.21280,
	str	x1, [x19]	// D.21281, argv.__stack
	b	.L2858		//
.L2857:
	add	w2, w1, 32	// D.21283, D.21274,
	str	w2, [x19, 28]	// D.21283, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21285, argv.__vr_offs
	cmp	w2, 0	// D.21285,
	ble	.L2859		//,
	add	x1, x0, 23	// D.21288, iftmp.1680,
	and	x1, x1, -8	// D.21289, D.21288,
	str	x1, [x19]	// D.21289, argv.__stack
	b	.L2858		//
.L2859:
	ldr	x2, [x19, 16]	// D.21291, argv.__vr_top
	sxtw	x0, w1	// D.21292, D.21274
	add	x2, x2, x0	// D.21293, D.21291, D.21292
	add	x0, sp, 360	// ha.1681,,
	ldr	d0, [x2]	// D.21295, MEM[(double *)_436]
	str	d0, [x0]	// D.21295, MEM[(double *)ha.1681_437]
	ldr	x2, [x19, 16]	// D.21296, argv.__vr_top
	sxtw	x0, w1	// D.21297, D.21274
	add	x0, x0, 16	// D.21298, D.21297,
	add	x0, x2, x0	// D.21299, D.21296, D.21298
	ldr	d0, [x0]	// D.21300, MEM[(double *)_443]
	str	d0, [sp, 368]	// D.21300, MEM[(double *)&ha.1678 + 8B]
	add	x0, sp, 360	// iftmp.1680,,
.L2858:
	ldp	x0, x1, [x0]	// D.6550, *iftmp.1679_109
// varargs-dll.c:1239:   double l = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp447, D.6550
	str	d0, [sp, 136]	// tmp447, l
// varargs-dll.c:1240:   double m = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21301, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1684, argv.__stack
	cmp	w1, 0	// D.21301,
	blt	.L2861		//,
	add	x1, x0, 23	// D.21307, iftmp.1684,
	and	x1, x1, -8	// D.21308, D.21307,
	str	x1, [x19]	// D.21308, argv.__stack
	b	.L2862		//
.L2861:
	add	w2, w1, 32	// D.21310, D.21301,
	str	w2, [x19, 28]	// D.21310, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21312, argv.__vr_offs
	cmp	w2, 0	// D.21312,
	ble	.L2863		//,
	add	x1, x0, 23	// D.21315, iftmp.1684,
	and	x1, x1, -8	// D.21316, D.21315,
	str	x1, [x19]	// D.21316, argv.__stack
	b	.L2862		//
.L2863:
	ldr	x2, [x19, 16]	// D.21318, argv.__vr_top
	sxtw	x0, w1	// D.21319, D.21301
	add	x2, x2, x0	// D.21320, D.21318, D.21319
	add	x0, sp, 376	// ha.1685,,
	ldr	d0, [x2]	// D.21322, MEM[(double *)_464]
	str	d0, [x0]	// D.21322, MEM[(double *)ha.1685_465]
	ldr	x2, [x19, 16]	// D.21323, argv.__vr_top
	sxtw	x0, w1	// D.21324, D.21301
	add	x0, x0, 16	// D.21325, D.21324,
	add	x0, x2, x0	// D.21326, D.21323, D.21325
	ldr	d0, [x0]	// D.21327, MEM[(double *)_471]
	str	d0, [sp, 384]	// D.21327, MEM[(double *)&ha.1682 + 8B]
	add	x0, sp, 376	// iftmp.1684,,
.L2862:
	ldp	x0, x1, [x0]	// D.6551, *iftmp.1683_111
// varargs-dll.c:1240:   double m = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp448, D.6551
	str	d0, [sp, 144]	// tmp448, m
// varargs-dll.c:1241:   double n = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21328, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1688, argv.__stack
	cmp	w1, 0	// D.21328,
	blt	.L2865		//,
	add	x1, x0, 23	// D.21334, iftmp.1688,
	and	x1, x1, -8	// D.21335, D.21334,
	str	x1, [x19]	// D.21335, argv.__stack
	b	.L2866		//
.L2865:
	add	w2, w1, 32	// D.21337, D.21328,
	str	w2, [x19, 28]	// D.21337, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21339, argv.__vr_offs
	cmp	w2, 0	// D.21339,
	ble	.L2867		//,
	add	x1, x0, 23	// D.21342, iftmp.1688,
	and	x1, x1, -8	// D.21343, D.21342,
	str	x1, [x19]	// D.21343, argv.__stack
	b	.L2866		//
.L2867:
	ldr	x2, [x19, 16]	// D.21345, argv.__vr_top
	sxtw	x0, w1	// D.21346, D.21328
	add	x2, x2, x0	// D.21347, D.21345, D.21346
	add	x0, sp, 392	// ha.1689,,
	ldr	d0, [x2]	// D.21349, MEM[(double *)_492]
	str	d0, [x0]	// D.21349, MEM[(double *)ha.1689_493]
	ldr	x2, [x19, 16]	// D.21350, argv.__vr_top
	sxtw	x0, w1	// D.21351, D.21328
	add	x0, x0, 16	// D.21352, D.21351,
	add	x0, x2, x0	// D.21353, D.21350, D.21352
	ldr	d0, [x0]	// D.21354, MEM[(double *)_499]
	str	d0, [sp, 400]	// D.21354, MEM[(double *)&ha.1686 + 8B]
	add	x0, sp, 392	// iftmp.1688,,
.L2866:
	ldp	x0, x1, [x0]	// D.6552, *iftmp.1687_113
// varargs-dll.c:1241:   double n = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp449, D.6552
	str	d0, [sp, 152]	// tmp449, n
// varargs-dll.c:1242:   double o = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21355, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1692, argv.__stack
	cmp	w1, 0	// D.21355,
	blt	.L2869		//,
	add	x1, x0, 23	// D.21361, iftmp.1692,
	and	x1, x1, -8	// D.21362, D.21361,
	str	x1, [x19]	// D.21362, argv.__stack
	b	.L2870		//
.L2869:
	add	w2, w1, 32	// D.21364, D.21355,
	str	w2, [x19, 28]	// D.21364, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21366, argv.__vr_offs
	cmp	w2, 0	// D.21366,
	ble	.L2871		//,
	add	x1, x0, 23	// D.21369, iftmp.1692,
	and	x1, x1, -8	// D.21370, D.21369,
	str	x1, [x19]	// D.21370, argv.__stack
	b	.L2870		//
.L2871:
	ldr	x2, [x19, 16]	// D.21372, argv.__vr_top
	sxtw	x0, w1	// D.21373, D.21355
	add	x2, x2, x0	// D.21374, D.21372, D.21373
	add	x0, sp, 408	// ha.1693,,
	ldr	d0, [x2]	// D.21376, MEM[(double *)_520]
	str	d0, [x0]	// D.21376, MEM[(double *)ha.1693_521]
	ldr	x2, [x19, 16]	// D.21377, argv.__vr_top
	sxtw	x0, w1	// D.21378, D.21355
	add	x0, x0, 16	// D.21379, D.21378,
	add	x0, x2, x0	// D.21380, D.21377, D.21379
	ldr	d0, [x0]	// D.21381, MEM[(double *)_527]
	str	d0, [sp, 416]	// D.21381, MEM[(double *)&ha.1690 + 8B]
	add	x0, sp, 408	// iftmp.1692,,
.L2870:
	ldp	x0, x1, [x0]	// D.6553, *iftmp.1691_115
// varargs-dll.c:1242:   double o = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp450, D.6553
	str	d0, [sp, 160]	// tmp450, o
// varargs-dll.c:1243:   double p = va_arg (argv, struct hfa_2_doubles).b;
	ldr	w1, [x19, 28]	// D.21382, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1696, argv.__stack
	cmp	w1, 0	// D.21382,
	blt	.L2873		//,
	add	x1, x0, 23	// D.21388, iftmp.1696,
	and	x1, x1, -8	// D.21389, D.21388,
	str	x1, [x19]	// D.21389, argv.__stack
	b	.L2874		//
.L2873:
	add	w2, w1, 32	// D.21391, D.21382,
	str	w2, [x19, 28]	// D.21391, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21393, argv.__vr_offs
	cmp	w2, 0	// D.21393,
	ble	.L2875		//,
	add	x1, x0, 23	// D.21396, iftmp.1696,
	and	x1, x1, -8	// D.21397, D.21396,
	str	x1, [x19]	// D.21397, argv.__stack
	b	.L2874		//
.L2875:
	ldr	x2, [x19, 16]	// D.21399, argv.__vr_top
	sxtw	x0, w1	// D.21400, D.21382
	add	x2, x2, x0	// D.21401, D.21399, D.21400
	add	x0, sp, 424	// ha.1697,,
	ldr	d0, [x2]	// D.21403, MEM[(double *)_548]
	str	d0, [x0]	// D.21403, MEM[(double *)ha.1697_549]
	ldr	x2, [x19, 16]	// D.21404, argv.__vr_top
	sxtw	x0, w1	// D.21405, D.21382
	add	x0, x0, 16	// D.21406, D.21405,
	add	x0, x2, x0	// D.21407, D.21404, D.21406
	ldr	d0, [x0]	// D.21408, MEM[(double *)_555]
	str	d0, [sp, 432]	// D.21408, MEM[(double *)&ha.1694 + 8B]
	add	x0, sp, 424	// iftmp.1696,,
.L2874:
	ldp	x0, x1, [x0]	// D.6554, *iftmp.1695_117
// varargs-dll.c:1243:   double p = va_arg (argv, struct hfa_2_doubles).b;
	fmov	d0, x1	// tmp451, D.6554
	str	d0, [sp, 168]	// tmp451, p
// varargs-dll.c:1244:   double q = va_arg (argv, struct hfa_2_doubles).a;
	ldr	w1, [x19, 28]	// D.21409, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1700, argv.__stack
	cmp	w1, 0	// D.21409,
	blt	.L2877		//,
	add	x1, x0, 23	// D.21415, iftmp.1700,
	and	x1, x1, -8	// D.21416, D.21415,
	str	x1, [x19]	// D.21416, argv.__stack
	b	.L2878		//
.L2877:
	add	w2, w1, 32	// D.21418, D.21409,
	str	w2, [x19, 28]	// D.21418, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21420, argv.__vr_offs
	cmp	w2, 0	// D.21420,
	ble	.L2879		//,
	add	x1, x0, 23	// D.21423, iftmp.1700,
	and	x1, x1, -8	// D.21424, D.21423,
	str	x1, [x19]	// D.21424, argv.__stack
	b	.L2878		//
.L2879:
	ldr	x2, [x19, 16]	// D.21426, argv.__vr_top
	sxtw	x0, w1	// D.21427, D.21409
	add	x2, x2, x0	// D.21428, D.21426, D.21427
	add	x0, sp, 440	// ha.1701,,
	ldr	d0, [x2]	// D.21430, MEM[(double *)_576]
	str	d0, [x0]	// D.21430, MEM[(double *)ha.1701_577]
	ldr	x2, [x19, 16]	// D.21431, argv.__vr_top
	sxtw	x0, w1	// D.21432, D.21409
	add	x0, x0, 16	// D.21433, D.21432,
	add	x0, x2, x0	// D.21434, D.21431, D.21433
	ldr	d0, [x0]	// D.21435, MEM[(double *)_583]
	str	d0, [sp, 448]	// D.21435, MEM[(double *)&ha.1698 + 8B]
	add	x0, sp, 440	// iftmp.1700,,
.L2878:
	ldp	x0, x1, [x0]	// D.6555, *iftmp.1699_119
// varargs-dll.c:1244:   double q = va_arg (argv, struct hfa_2_doubles).a;
	fmov	d0, x0	// tmp452, D.6555
	str	d0, [sp, 176]	// tmp452, q
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 48]	// tmp453, a
	ldr	d0, [sp, 56]	// tmp454, b
	fadd	d1, d1, d0	// _1, tmp453, tmp454
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp455, c
	fadd	d1, d1, d0	// _2, _1, tmp455
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp456, d
	fadd	d1, d1, d0	// _3, _2, tmp456
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp457, e
	fadd	d1, d1, d0	// _4, _3, tmp457
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp458, f
	fadd	d1, d1, d0	// _5, _4, tmp458
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp459, g
	fadd	d1, d1, d0	// _6, _5, tmp459
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp460, h
	fadd	d1, d1, d0	// _7, _6, tmp460
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp461, i
	fadd	d1, d1, d0	// _8, _7, tmp461
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp462, j
	fadd	d1, d1, d0	// _9, _8, tmp462
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp463, k
	fadd	d1, d1, d0	// _10, _9, tmp463
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp464, l
	fadd	d1, d1, d0	// _11, _10, tmp464
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp465, m
	fadd	d1, d1, d0	// _12, _11, tmp465
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp466, n
	fadd	d1, d1, d0	// _13, _12, tmp466
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp467, o
	fadd	d1, d1, d0	// _14, _13, tmp467
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 168]	// tmp468, p
	fadd	d1, d1, d0	// _15, _14, tmp468
// varargs-dll.c:1245:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 176]	// tmp469, q
	fadd	d0, d1, d0	// _16, _15, tmp469
	fcvtzs	w0, d0	// _52, _16
	mov	w1, w0	// <retval>, _52
// varargs-dll.c:1246: }
	adrp	x0, :got:__stack_chk_guard	// tmp472,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp471, tmp472,
	ldr	x3, [sp, 456]	// tmp474, D.21436
	ldr	x2, [x0]	// tmp475,
	subs	x3, x3, x2	// tmp474, tmp475
	mov	x2, 0	// tmp475
	beq	.L2882		//,
	bl	__stack_chk_fail		//
.L2882:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 464	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE79:
	.size	use_va_list_many_hfa_2_doubles, .-use_va_list_many_hfa_2_doubles
	.align	2
	.global	use_va_args_few_hfa_4_doubles
	.type	use_va_args_few_hfa_4_doubles, %function
use_va_args_few_hfa_4_doubles:
.LFB80:
	.cfi_startproc
	stp	x29, x30, [sp, -416]!	//,,,
	.cfi_def_cfa_offset 416
	.cfi_offset 29, -416
	.cfi_offset 30, -408
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 360]	//,
	str	x2, [sp, 368]	//,
	str	x3, [sp, 376]	//,
	str	x4, [sp, 384]	//,
	str	x5, [sp, 392]	//,
	str	x6, [sp, 400]	//,
	str	x7, [sp, 408]	//,
	str	q0, [sp, 224]	//,
	str	q1, [sp, 240]	//,
	str	q2, [sp, 256]	//,
	str	q3, [sp, 272]	//,
	str	q4, [sp, 288]	//,
	str	q5, [sp, 304]	//,
	str	q6, [sp, 320]	//,
	str	q7, [sp, 336]	//,
// varargs-dll.c:1250: {
	adrp	x0, :got:__stack_chk_guard	// tmp152,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp151, tmp152,
	ldr	x1, [x0]	// tmp172,
	str	x1, [sp, 216]	// tmp172, D.21511
	mov	x1, 0	// tmp172
// varargs-dll.c:1252:   va_start (argv, format);
	add	x0, sp, 416	// tmp177,,
	str	x0, [sp, 56]	// tmp177, MEM[(struct  *)&argv].__stack
	add	x0, sp, 416	// tmp178,,
	str	x0, [sp, 64]	// tmp178, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 352	// tmp154,,
	str	x0, [sp, 72]	// tmp154, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp155,
	str	w0, [sp, 80]	// tmp155, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp156,
	str	w0, [sp, 84]	// tmp156, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1253:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 84]	// D.21437, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.1704, argv.__stack
	cmp	w1, 0	// D.21437,
	blt	.L2884		//,
	add	x1, x0, 39	// D.21443, iftmp.1704,
	and	x1, x1, -8	// D.21444, D.21443,
	str	x1, [sp, 56]	// D.21444, argv.__stack
	b	.L2885		//
.L2884:
	add	w2, w1, 64	// D.21446, D.21437,
	str	w2, [sp, 84]	// D.21446, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.21448, argv.__vr_offs
	cmp	w2, 0	// D.21448,
	ble	.L2886		//,
	add	x1, x0, 39	// D.21451, iftmp.1704,
	and	x1, x1, -8	// D.21452, D.21451,
	str	x1, [sp, 56]	// D.21452, argv.__stack
	b	.L2885		//
.L2886:
	ldr	x2, [sp, 72]	// D.21454, argv.__vr_top
	sxtw	x0, w1	// D.21455, D.21437
	add	x2, x2, x0	// D.21456, D.21454, D.21455
	add	x0, sp, 152	// ha.1705,,
	ldr	d0, [x2]	// D.21458, MEM[(double *)_26]
	str	d0, [x0]	// D.21458, MEM[(double *)ha.1705_27]
	ldr	x2, [sp, 72]	// D.21459, argv.__vr_top
	sxtw	x0, w1	// D.21460, D.21437
	add	x0, x0, 16	// D.21461, D.21460,
	add	x0, x2, x0	// D.21462, D.21459, D.21461
	ldr	d0, [x0]	// D.21463, MEM[(double *)_33]
	str	d0, [sp, 160]	// D.21463, MEM[(double *)&ha.1702 + 8B]
	ldr	x2, [sp, 72]	// D.21464, argv.__vr_top
	sxtw	x0, w1	// D.21465, D.21437
	add	x0, x0, 32	// D.21466, D.21465,
	add	x0, x2, x0	// D.21467, D.21464, D.21466
	ldr	d0, [x0]	// D.21468, MEM[(double *)_39]
	str	d0, [sp, 168]	// D.21468, MEM[(double *)&ha.1702 + 16B]
	ldr	x2, [sp, 72]	// D.21469, argv.__vr_top
	sxtw	x0, w1	// D.21470, D.21437
	add	x0, x0, 48	// D.21471, D.21470,
	add	x0, x2, x0	// D.21472, D.21469, D.21471
	ldr	d0, [x0]	// D.21473, MEM[(double *)_45]
	str	d0, [sp, 176]	// D.21473, MEM[(double *)&ha.1702 + 24B]
	add	x0, sp, 152	// iftmp.1704,,
.L2885:
	add	x1, sp, 88	// tmp157,,
	ldp	q0, q1, [x0]	// tmp159, tmp160, *iftmp.1703_15
	stp	q0, q1, [x1]	// tmp159, tmp160, D.6558
// varargs-dll.c:1253:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 88]	// tmp161, D.6558.a
	str	d0, [sp, 40]	// tmp161, a
// varargs-dll.c:1254:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 84]	// D.21474, argv.__vr_offs
	ldr	x0, [sp, 56]	// iftmp.1708, argv.__stack
	cmp	w1, 0	// D.21474,
	blt	.L2888		//,
	add	x1, x0, 39	// D.21480, iftmp.1708,
	and	x1, x1, -8	// D.21481, D.21480,
	str	x1, [sp, 56]	// D.21481, argv.__stack
	b	.L2889		//
.L2888:
	add	w2, w1, 64	// D.21483, D.21474,
	str	w2, [sp, 84]	// D.21483, argv.__vr_offs
	ldr	w2, [sp, 84]	// D.21485, argv.__vr_offs
	cmp	w2, 0	// D.21485,
	ble	.L2890		//,
	add	x1, x0, 39	// D.21488, iftmp.1708,
	and	x1, x1, -8	// D.21489, D.21488,
	str	x1, [sp, 56]	// D.21489, argv.__stack
	b	.L2889		//
.L2890:
	ldr	x2, [sp, 72]	// D.21491, argv.__vr_top
	sxtw	x0, w1	// D.21492, D.21474
	add	x2, x2, x0	// D.21493, D.21491, D.21492
	add	x0, sp, 184	// ha.1709,,
	ldr	d0, [x2]	// D.21495, MEM[(double *)_66]
	str	d0, [x0]	// D.21495, MEM[(double *)ha.1709_67]
	ldr	x2, [sp, 72]	// D.21496, argv.__vr_top
	sxtw	x0, w1	// D.21497, D.21474
	add	x0, x0, 16	// D.21498, D.21497,
	add	x0, x2, x0	// D.21499, D.21496, D.21498
	ldr	d0, [x0]	// D.21500, MEM[(double *)_73]
	str	d0, [sp, 192]	// D.21500, MEM[(double *)&ha.1706 + 8B]
	ldr	x2, [sp, 72]	// D.21501, argv.__vr_top
	sxtw	x0, w1	// D.21502, D.21474
	add	x0, x0, 32	// D.21503, D.21502,
	add	x0, x2, x0	// D.21504, D.21501, D.21503
	ldr	d0, [x0]	// D.21505, MEM[(double *)_79]
	str	d0, [sp, 200]	// D.21505, MEM[(double *)&ha.1706 + 16B]
	ldr	x2, [sp, 72]	// D.21506, argv.__vr_top
	sxtw	x0, w1	// D.21507, D.21474
	add	x0, x0, 48	// D.21508, D.21507,
	add	x0, x2, x0	// D.21509, D.21506, D.21508
	ldr	d0, [x0]	// D.21510, MEM[(double *)_85]
	str	d0, [sp, 208]	// D.21510, MEM[(double *)&ha.1706 + 24B]
	add	x0, sp, 184	// iftmp.1708,,
.L2889:
	add	x1, sp, 120	// tmp162,,
	ldp	q0, q1, [x0]	// tmp164, tmp165, *iftmp.1707_17
	stp	q0, q1, [x1]	// tmp164, tmp165, D.6559
// varargs-dll.c:1254:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 128]	// tmp166, D.6559.b
	str	d0, [sp, 48]	// tmp166, b
// varargs-dll.c:1256:   return a + b;
	ldr	d1, [sp, 40]	// tmp167, a
	ldr	d0, [sp, 48]	// tmp168, b
	fadd	d0, d1, d0	// _1, tmp167, tmp168
	fcvtzs	w0, d0	// _9, _1
	mov	w1, w0	// <retval>, _9
// varargs-dll.c:1257: }
	adrp	x0, :got:__stack_chk_guard	// tmp171,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp170, tmp171,
	ldr	x3, [sp, 216]	// tmp173, D.21511
	ldr	x2, [x0]	// tmp174,
	subs	x3, x3, x2	// tmp173, tmp174
	mov	x2, 0	// tmp174
	beq	.L2893		//,
	bl	__stack_chk_fail		//
.L2893:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 416	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE80:
	.size	use_va_args_few_hfa_4_doubles, .-use_va_args_few_hfa_4_doubles
	.align	2
	.global	use_va_list_few_hfa_4_doubles
	.type	use_va_list_few_hfa_4_doubles, %function
use_va_list_few_hfa_4_doubles:
.LFB81:
	.cfi_startproc
	stp	x29, x30, [sp, -208]!	//,,,
	.cfi_def_cfa_offset 208
	.cfi_offset 29, -208
	.cfi_offset 30, -200
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -192
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp151,
// varargs-dll.c:1261: {
	adrp	x0, :got:__stack_chk_guard	// tmp153,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp152, tmp153,
	ldr	x1, [x0]	// tmp169,
	str	x1, [sp, 200]	// tmp169, D.21589
	mov	x1, 0	// tmp169
// varargs-dll.c:1262:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.21515, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1712, argv.__stack
	cmp	w1, 0	// D.21515,
	blt	.L2895		//,
	add	x1, x0, 39	// D.21521, iftmp.1712,
	and	x1, x1, -8	// D.21522, D.21521,
	str	x1, [x19]	// D.21522, argv.__stack
	b	.L2896		//
.L2895:
	add	w2, w1, 64	// D.21524, D.21515,
	str	w2, [x19, 28]	// D.21524, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21526, argv.__vr_offs
	cmp	w2, 0	// D.21526,
	ble	.L2897		//,
	add	x1, x0, 39	// D.21529, iftmp.1712,
	and	x1, x1, -8	// D.21530, D.21529,
	str	x1, [x19]	// D.21530, argv.__stack
	b	.L2896		//
.L2897:
	ldr	x2, [x19, 16]	// D.21532, argv.__vr_top
	sxtw	x0, w1	// D.21533, D.21515
	add	x2, x2, x0	// D.21534, D.21532, D.21533
	add	x0, sp, 136	// ha.1713,,
	ldr	d0, [x2]	// D.21536, MEM[(double *)_23]
	str	d0, [x0]	// D.21536, MEM[(double *)ha.1713_24]
	ldr	x2, [x19, 16]	// D.21537, argv.__vr_top
	sxtw	x0, w1	// D.21538, D.21515
	add	x0, x0, 16	// D.21539, D.21538,
	add	x0, x2, x0	// D.21540, D.21537, D.21539
	ldr	d0, [x0]	// D.21541, MEM[(double *)_30]
	str	d0, [sp, 144]	// D.21541, MEM[(double *)&ha.1710 + 8B]
	ldr	x2, [x19, 16]	// D.21542, argv.__vr_top
	sxtw	x0, w1	// D.21543, D.21515
	add	x0, x0, 32	// D.21544, D.21543,
	add	x0, x2, x0	// D.21545, D.21542, D.21544
	ldr	d0, [x0]	// D.21546, MEM[(double *)_36]
	str	d0, [sp, 152]	// D.21546, MEM[(double *)&ha.1710 + 16B]
	ldr	x2, [x19, 16]	// D.21547, argv.__vr_top
	sxtw	x0, w1	// D.21548, D.21515
	add	x0, x0, 48	// D.21549, D.21548,
	add	x0, x2, x0	// D.21550, D.21547, D.21549
	ldr	d0, [x0]	// D.21551, MEM[(double *)_42]
	str	d0, [sp, 160]	// D.21551, MEM[(double *)&ha.1710 + 24B]
	add	x0, sp, 136	// iftmp.1712,,
.L2896:
	add	x1, sp, 72	// tmp154,,
	ldp	q0, q1, [x0]	// tmp156, tmp157, *iftmp.1711_12
	stp	q0, q1, [x1]	// tmp156, tmp157, D.6563
// varargs-dll.c:1262:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 72]	// tmp158, D.6563.a
	str	d0, [sp, 56]	// tmp158, a
// varargs-dll.c:1263:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.21552, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1716, argv.__stack
	cmp	w1, 0	// D.21552,
	blt	.L2899		//,
	add	x1, x0, 39	// D.21558, iftmp.1716,
	and	x1, x1, -8	// D.21559, D.21558,
	str	x1, [x19]	// D.21559, argv.__stack
	b	.L2900		//
.L2899:
	add	w2, w1, 64	// D.21561, D.21552,
	str	w2, [x19, 28]	// D.21561, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21563, argv.__vr_offs
	cmp	w2, 0	// D.21563,
	ble	.L2901		//,
	add	x1, x0, 39	// D.21566, iftmp.1716,
	and	x1, x1, -8	// D.21567, D.21566,
	str	x1, [x19]	// D.21567, argv.__stack
	b	.L2900		//
.L2901:
	ldr	x2, [x19, 16]	// D.21569, argv.__vr_top
	sxtw	x0, w1	// D.21570, D.21552
	add	x2, x2, x0	// D.21571, D.21569, D.21570
	add	x0, sp, 168	// ha.1717,,
	ldr	d0, [x2]	// D.21573, MEM[(double *)_63]
	str	d0, [x0]	// D.21573, MEM[(double *)ha.1717_64]
	ldr	x2, [x19, 16]	// D.21574, argv.__vr_top
	sxtw	x0, w1	// D.21575, D.21552
	add	x0, x0, 16	// D.21576, D.21575,
	add	x0, x2, x0	// D.21577, D.21574, D.21576
	ldr	d0, [x0]	// D.21578, MEM[(double *)_70]
	str	d0, [sp, 176]	// D.21578, MEM[(double *)&ha.1714 + 8B]
	ldr	x2, [x19, 16]	// D.21579, argv.__vr_top
	sxtw	x0, w1	// D.21580, D.21552
	add	x0, x0, 32	// D.21581, D.21580,
	add	x0, x2, x0	// D.21582, D.21579, D.21581
	ldr	d0, [x0]	// D.21583, MEM[(double *)_76]
	str	d0, [sp, 184]	// D.21583, MEM[(double *)&ha.1714 + 16B]
	ldr	x2, [x19, 16]	// D.21584, argv.__vr_top
	sxtw	x0, w1	// D.21585, D.21552
	add	x0, x0, 48	// D.21586, D.21585,
	add	x0, x2, x0	// D.21587, D.21584, D.21586
	ldr	d0, [x0]	// D.21588, MEM[(double *)_82]
	str	d0, [sp, 192]	// D.21588, MEM[(double *)&ha.1714 + 24B]
	add	x0, sp, 168	// iftmp.1716,,
.L2900:
	add	x1, sp, 104	// tmp159,,
	ldp	q0, q1, [x0]	// tmp161, tmp162, *iftmp.1715_14
	stp	q0, q1, [x1]	// tmp161, tmp162, D.6564
// varargs-dll.c:1263:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 112]	// tmp163, D.6564.b
	str	d0, [sp, 64]	// tmp163, b
// varargs-dll.c:1264:   return a + b;
	ldr	d1, [sp, 56]	// tmp164, a
	ldr	d0, [sp, 64]	// tmp165, b
	fadd	d0, d1, d0	// _1, tmp164, tmp165
	fcvtzs	w0, d0	// _7, _1
	mov	w1, w0	// <retval>, _7
// varargs-dll.c:1265: }
	adrp	x0, :got:__stack_chk_guard	// tmp168,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp167, tmp168,
	ldr	x3, [sp, 200]	// tmp170, D.21589
	ldr	x2, [x0]	// tmp171,
	subs	x3, x3, x2	// tmp170, tmp171
	mov	x2, 0	// tmp171
	beq	.L2904		//,
	bl	__stack_chk_fail		//
.L2904:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 208	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE81:
	.size	use_va_list_few_hfa_4_doubles, .-use_va_list_few_hfa_4_doubles
	.align	2
	.global	use_va_args_several_hfa_4_doubles
	.type	use_va_args_several_hfa_4_doubles, %function
use_va_args_several_hfa_4_doubles:
.LFB82:
	.cfi_startproc
	sub	sp, sp, #912	//,,
	.cfi_def_cfa_offset 912
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -912
	.cfi_offset 30, -904
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 856]	//,
	str	x2, [sp, 864]	//,
	str	x3, [sp, 872]	//,
	str	x4, [sp, 880]	//,
	str	x5, [sp, 888]	//,
	str	x6, [sp, 896]	//,
	str	x7, [sp, 904]	//,
	add	x0, sp, 512	// tmp422,,
	str	q0, [x0, 208]	//,
	add	x0, sp, 512	// tmp424,,
	str	q1, [x0, 224]	//,
	add	x0, sp, 512	// tmp426,,
	str	q2, [x0, 240]	//,
	add	x0, sp, 1024	// tmp428,,
	str	q3, [x0, -256]	//,
	add	x0, sp, 1024	// tmp430,,
	str	q4, [x0, -240]	//,
	add	x0, sp, 1024	// tmp432,,
	str	q5, [x0, -224]	//,
	add	x0, sp, 1024	// tmp434,,
	str	q6, [x0, -208]	//,
	add	x0, sp, 1024	// tmp436,,
	str	q7, [x0, -192]	//,
// varargs-dll.c:1269: {
	adrp	x0, :got:__stack_chk_guard	// tmp355,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp354, tmp355,
	ldr	x1, [x0]	// tmp417,
	str	x1, [sp, 712]	// tmp417, D.21923
	mov	x1, 0	// tmp417
// varargs-dll.c:1271:   va_start (argv, format);
	add	x0, sp, 912	// tmp438,,
	str	x0, [sp, 104]	// tmp438, MEM[(struct  *)&argv].__stack
	add	x0, sp, 912	// tmp439,,
	str	x0, [sp, 112]	// tmp439, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 848	// tmp357,,
	str	x0, [sp, 120]	// tmp357, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp358,
	str	w0, [sp, 128]	// tmp358, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp359,
	str	w0, [sp, 132]	// tmp359, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1272:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 132]	// D.21590, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1720, argv.__stack
	cmp	w1, 0	// D.21590,
	blt	.L2906		//,
	add	x1, x0, 39	// D.21596, iftmp.1720,
	and	x1, x1, -8	// D.21597, D.21596,
	str	x1, [sp, 104]	// D.21597, argv.__stack
	b	.L2907		//
.L2906:
	add	w2, w1, 64	// D.21599, D.21590,
	str	w2, [sp, 132]	// D.21599, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21601, argv.__vr_offs
	cmp	w2, 0	// D.21601,
	ble	.L2908		//,
	add	x1, x0, 39	// D.21604, iftmp.1720,
	and	x1, x1, -8	// D.21605, D.21604,
	str	x1, [sp, 104]	// D.21605, argv.__stack
	b	.L2907		//
.L2908:
	ldr	x2, [sp, 120]	// D.21607, argv.__vr_top
	sxtw	x0, w1	// D.21608, D.21590
	add	x2, x2, x0	// D.21609, D.21607, D.21608
	add	x0, sp, 424	// ha.1721,,
	ldr	d0, [x2]	// D.21611, MEM[(double *)_75]
	str	d0, [x0]	// D.21611, MEM[(double *)ha.1721_76]
	ldr	x2, [sp, 120]	// D.21612, argv.__vr_top
	sxtw	x0, w1	// D.21613, D.21590
	add	x0, x0, 16	// D.21614, D.21613,
	add	x0, x2, x0	// D.21615, D.21612, D.21614
	ldr	d0, [x0]	// D.21616, MEM[(double *)_82]
	str	d0, [sp, 432]	// D.21616, MEM[(double *)&ha.1718 + 8B]
	ldr	x2, [sp, 120]	// D.21617, argv.__vr_top
	sxtw	x0, w1	// D.21618, D.21590
	add	x0, x0, 32	// D.21619, D.21618,
	add	x0, x2, x0	// D.21620, D.21617, D.21619
	ldr	d0, [x0]	// D.21621, MEM[(double *)_88]
	str	d0, [sp, 440]	// D.21621, MEM[(double *)&ha.1718 + 16B]
	ldr	x2, [sp, 120]	// D.21622, argv.__vr_top
	sxtw	x0, w1	// D.21623, D.21590
	add	x0, x0, 48	// D.21624, D.21623,
	add	x0, x2, x0	// D.21625, D.21622, D.21624
	ldr	d0, [x0]	// D.21626, MEM[(double *)_94]
	str	d0, [sp, 448]	// D.21626, MEM[(double *)&ha.1718 + 24B]
	add	x0, sp, 424	// iftmp.1720,,
.L2907:
	add	x1, sp, 136	// tmp360,,
	ldp	q0, q1, [x0]	// tmp362, tmp363, *iftmp.1719_50
	stp	q0, q1, [x1]	// tmp362, tmp363, D.6567
// varargs-dll.c:1272:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 136]	// tmp364, D.6567.a
	str	d0, [sp, 32]	// tmp364, a
// varargs-dll.c:1273:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 132]	// D.21627, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1724, argv.__stack
	cmp	w1, 0	// D.21627,
	blt	.L2910		//,
	add	x1, x0, 39	// D.21633, iftmp.1724,
	and	x1, x1, -8	// D.21634, D.21633,
	str	x1, [sp, 104]	// D.21634, argv.__stack
	b	.L2911		//
.L2910:
	add	w2, w1, 64	// D.21636, D.21627,
	str	w2, [sp, 132]	// D.21636, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21638, argv.__vr_offs
	cmp	w2, 0	// D.21638,
	ble	.L2912		//,
	add	x1, x0, 39	// D.21641, iftmp.1724,
	and	x1, x1, -8	// D.21642, D.21641,
	str	x1, [sp, 104]	// D.21642, argv.__stack
	b	.L2911		//
.L2912:
	ldr	x2, [sp, 120]	// D.21644, argv.__vr_top
	sxtw	x0, w1	// D.21645, D.21627
	add	x2, x2, x0	// D.21646, D.21644, D.21645
	add	x0, sp, 456	// ha.1725,,
	ldr	d0, [x2]	// D.21648, MEM[(double *)_115]
	str	d0, [x0]	// D.21648, MEM[(double *)ha.1725_116]
	ldr	x2, [sp, 120]	// D.21649, argv.__vr_top
	sxtw	x0, w1	// D.21650, D.21627
	add	x0, x0, 16	// D.21651, D.21650,
	add	x0, x2, x0	// D.21652, D.21649, D.21651
	ldr	d0, [x0]	// D.21653, MEM[(double *)_122]
	str	d0, [sp, 464]	// D.21653, MEM[(double *)&ha.1722 + 8B]
	ldr	x2, [sp, 120]	// D.21654, argv.__vr_top
	sxtw	x0, w1	// D.21655, D.21627
	add	x0, x0, 32	// D.21656, D.21655,
	add	x0, x2, x0	// D.21657, D.21654, D.21656
	ldr	d0, [x0]	// D.21658, MEM[(double *)_128]
	str	d0, [sp, 472]	// D.21658, MEM[(double *)&ha.1722 + 16B]
	ldr	x2, [sp, 120]	// D.21659, argv.__vr_top
	sxtw	x0, w1	// D.21660, D.21627
	add	x0, x0, 48	// D.21661, D.21660,
	add	x0, x2, x0	// D.21662, D.21659, D.21661
	ldr	d0, [x0]	// D.21663, MEM[(double *)_134]
	str	d0, [sp, 480]	// D.21663, MEM[(double *)&ha.1722 + 24B]
	add	x0, sp, 456	// iftmp.1724,,
.L2911:
	add	x1, sp, 168	// tmp365,,
	ldp	q0, q1, [x0]	// tmp367, tmp368, *iftmp.1723_52
	stp	q0, q1, [x1]	// tmp367, tmp368, D.6568
// varargs-dll.c:1273:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 176]	// tmp369, D.6568.b
	str	d0, [sp, 40]	// tmp369, b
// varargs-dll.c:1274:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 132]	// D.21664, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1728, argv.__stack
	cmp	w1, 0	// D.21664,
	blt	.L2914		//,
	add	x1, x0, 39	// D.21670, iftmp.1728,
	and	x1, x1, -8	// D.21671, D.21670,
	str	x1, [sp, 104]	// D.21671, argv.__stack
	b	.L2915		//
.L2914:
	add	w2, w1, 64	// D.21673, D.21664,
	str	w2, [sp, 132]	// D.21673, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21675, argv.__vr_offs
	cmp	w2, 0	// D.21675,
	ble	.L2916		//,
	add	x1, x0, 39	// D.21678, iftmp.1728,
	and	x1, x1, -8	// D.21679, D.21678,
	str	x1, [sp, 104]	// D.21679, argv.__stack
	b	.L2915		//
.L2916:
	ldr	x2, [sp, 120]	// D.21681, argv.__vr_top
	sxtw	x0, w1	// D.21682, D.21664
	add	x2, x2, x0	// D.21683, D.21681, D.21682
	add	x0, sp, 488	// ha.1729,,
	ldr	d0, [x2]	// D.21685, MEM[(double *)_155]
	str	d0, [x0]	// D.21685, MEM[(double *)ha.1729_156]
	ldr	x2, [sp, 120]	// D.21686, argv.__vr_top
	sxtw	x0, w1	// D.21687, D.21664
	add	x0, x0, 16	// D.21688, D.21687,
	add	x0, x2, x0	// D.21689, D.21686, D.21688
	ldr	d0, [x0]	// D.21690, MEM[(double *)_162]
	str	d0, [sp, 496]	// D.21690, MEM[(double *)&ha.1726 + 8B]
	ldr	x2, [sp, 120]	// D.21691, argv.__vr_top
	sxtw	x0, w1	// D.21692, D.21664
	add	x0, x0, 32	// D.21693, D.21692,
	add	x0, x2, x0	// D.21694, D.21691, D.21693
	ldr	d0, [x0]	// D.21695, MEM[(double *)_168]
	str	d0, [sp, 504]	// D.21695, MEM[(double *)&ha.1726 + 16B]
	ldr	x2, [sp, 120]	// D.21696, argv.__vr_top
	sxtw	x0, w1	// D.21697, D.21664
	add	x0, x0, 48	// D.21698, D.21697,
	add	x0, x2, x0	// D.21699, D.21696, D.21698
	ldr	d0, [x0]	// D.21700, MEM[(double *)_174]
	str	d0, [sp, 512]	// D.21700, MEM[(double *)&ha.1726 + 24B]
	add	x0, sp, 488	// iftmp.1728,,
.L2915:
	add	x1, sp, 200	// tmp370,,
	ldp	q0, q1, [x0]	// tmp372, tmp373, *iftmp.1727_54
	stp	q0, q1, [x1]	// tmp372, tmp373, D.6569
// varargs-dll.c:1274:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 216]	// tmp374, D.6569.c
	str	d0, [sp, 48]	// tmp374, c
// varargs-dll.c:1275:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 132]	// D.21701, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1732, argv.__stack
	cmp	w1, 0	// D.21701,
	blt	.L2918		//,
	add	x1, x0, 39	// D.21707, iftmp.1732,
	and	x1, x1, -8	// D.21708, D.21707,
	str	x1, [sp, 104]	// D.21708, argv.__stack
	b	.L2919		//
.L2918:
	add	w2, w1, 64	// D.21710, D.21701,
	str	w2, [sp, 132]	// D.21710, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21712, argv.__vr_offs
	cmp	w2, 0	// D.21712,
	ble	.L2920		//,
	add	x1, x0, 39	// D.21715, iftmp.1732,
	and	x1, x1, -8	// D.21716, D.21715,
	str	x1, [sp, 104]	// D.21716, argv.__stack
	b	.L2919		//
.L2920:
	ldr	x2, [sp, 120]	// D.21718, argv.__vr_top
	sxtw	x0, w1	// D.21719, D.21701
	add	x2, x2, x0	// D.21720, D.21718, D.21719
	add	x0, sp, 520	// ha.1733,,
	ldr	d0, [x2]	// D.21722, MEM[(double *)_195]
	str	d0, [x0]	// D.21722, MEM[(double *)ha.1733_196]
	ldr	x2, [sp, 120]	// D.21723, argv.__vr_top
	sxtw	x0, w1	// D.21724, D.21701
	add	x0, x0, 16	// D.21725, D.21724,
	add	x0, x2, x0	// D.21726, D.21723, D.21725
	ldr	d0, [x0]	// D.21727, MEM[(double *)_202]
	str	d0, [sp, 528]	// D.21727, MEM[(double *)&ha.1730 + 8B]
	ldr	x2, [sp, 120]	// D.21728, argv.__vr_top
	sxtw	x0, w1	// D.21729, D.21701
	add	x0, x0, 32	// D.21730, D.21729,
	add	x0, x2, x0	// D.21731, D.21728, D.21730
	ldr	d0, [x0]	// D.21732, MEM[(double *)_208]
	str	d0, [sp, 536]	// D.21732, MEM[(double *)&ha.1730 + 16B]
	ldr	x2, [sp, 120]	// D.21733, argv.__vr_top
	sxtw	x0, w1	// D.21734, D.21701
	add	x0, x0, 48	// D.21735, D.21734,
	add	x0, x2, x0	// D.21736, D.21733, D.21735
	ldr	d0, [x0]	// D.21737, MEM[(double *)_214]
	str	d0, [sp, 544]	// D.21737, MEM[(double *)&ha.1730 + 24B]
	add	x0, sp, 520	// iftmp.1732,,
.L2919:
	add	x1, sp, 232	// tmp375,,
	ldp	q0, q1, [x0]	// tmp377, tmp378, *iftmp.1731_56
	stp	q0, q1, [x1]	// tmp377, tmp378, D.6570
// varargs-dll.c:1275:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 256]	// tmp379, D.6570.d
	str	d0, [sp, 56]	// tmp379, d
// varargs-dll.c:1276:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 132]	// D.21738, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1736, argv.__stack
	cmp	w1, 0	// D.21738,
	blt	.L2922		//,
	add	x1, x0, 39	// D.21744, iftmp.1736,
	and	x1, x1, -8	// D.21745, D.21744,
	str	x1, [sp, 104]	// D.21745, argv.__stack
	b	.L2923		//
.L2922:
	add	w2, w1, 64	// D.21747, D.21738,
	str	w2, [sp, 132]	// D.21747, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21749, argv.__vr_offs
	cmp	w2, 0	// D.21749,
	ble	.L2924		//,
	add	x1, x0, 39	// D.21752, iftmp.1736,
	and	x1, x1, -8	// D.21753, D.21752,
	str	x1, [sp, 104]	// D.21753, argv.__stack
	b	.L2923		//
.L2924:
	ldr	x2, [sp, 120]	// D.21755, argv.__vr_top
	sxtw	x0, w1	// D.21756, D.21738
	add	x2, x2, x0	// D.21757, D.21755, D.21756
	add	x0, sp, 552	// ha.1737,,
	ldr	d0, [x2]	// D.21759, MEM[(double *)_235]
	str	d0, [x0]	// D.21759, MEM[(double *)ha.1737_236]
	ldr	x2, [sp, 120]	// D.21760, argv.__vr_top
	sxtw	x0, w1	// D.21761, D.21738
	add	x0, x0, 16	// D.21762, D.21761,
	add	x0, x2, x0	// D.21763, D.21760, D.21762
	ldr	d0, [x0]	// D.21764, MEM[(double *)_242]
	str	d0, [sp, 560]	// D.21764, MEM[(double *)&ha.1734 + 8B]
	ldr	x2, [sp, 120]	// D.21765, argv.__vr_top
	sxtw	x0, w1	// D.21766, D.21738
	add	x0, x0, 32	// D.21767, D.21766,
	add	x0, x2, x0	// D.21768, D.21765, D.21767
	ldr	d0, [x0]	// D.21769, MEM[(double *)_248]
	str	d0, [sp, 568]	// D.21769, MEM[(double *)&ha.1734 + 16B]
	ldr	x2, [sp, 120]	// D.21770, argv.__vr_top
	sxtw	x0, w1	// D.21771, D.21738
	add	x0, x0, 48	// D.21772, D.21771,
	add	x0, x2, x0	// D.21773, D.21770, D.21772
	ldr	d0, [x0]	// D.21774, MEM[(double *)_254]
	str	d0, [sp, 576]	// D.21774, MEM[(double *)&ha.1734 + 24B]
	add	x0, sp, 552	// iftmp.1736,,
.L2923:
	add	x1, sp, 264	// tmp380,,
	ldp	q0, q1, [x0]	// tmp382, tmp383, *iftmp.1735_58
	stp	q0, q1, [x1]	// tmp382, tmp383, D.6571
// varargs-dll.c:1276:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 264]	// tmp384, D.6571.a
	str	d0, [sp, 64]	// tmp384, e
// varargs-dll.c:1277:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 132]	// D.21775, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1740, argv.__stack
	cmp	w1, 0	// D.21775,
	blt	.L2926		//,
	add	x1, x0, 39	// D.21781, iftmp.1740,
	and	x1, x1, -8	// D.21782, D.21781,
	str	x1, [sp, 104]	// D.21782, argv.__stack
	b	.L2927		//
.L2926:
	add	w2, w1, 64	// D.21784, D.21775,
	str	w2, [sp, 132]	// D.21784, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21786, argv.__vr_offs
	cmp	w2, 0	// D.21786,
	ble	.L2928		//,
	add	x1, x0, 39	// D.21789, iftmp.1740,
	and	x1, x1, -8	// D.21790, D.21789,
	str	x1, [sp, 104]	// D.21790, argv.__stack
	b	.L2927		//
.L2928:
	ldr	x2, [sp, 120]	// D.21792, argv.__vr_top
	sxtw	x0, w1	// D.21793, D.21775
	add	x2, x2, x0	// D.21794, D.21792, D.21793
	add	x0, sp, 584	// ha.1741,,
	ldr	d0, [x2]	// D.21796, MEM[(double *)_275]
	str	d0, [x0]	// D.21796, MEM[(double *)ha.1741_276]
	ldr	x2, [sp, 120]	// D.21797, argv.__vr_top
	sxtw	x0, w1	// D.21798, D.21775
	add	x0, x0, 16	// D.21799, D.21798,
	add	x0, x2, x0	// D.21800, D.21797, D.21799
	ldr	d0, [x0]	// D.21801, MEM[(double *)_282]
	str	d0, [sp, 592]	// D.21801, MEM[(double *)&ha.1738 + 8B]
	ldr	x2, [sp, 120]	// D.21802, argv.__vr_top
	sxtw	x0, w1	// D.21803, D.21775
	add	x0, x0, 32	// D.21804, D.21803,
	add	x0, x2, x0	// D.21805, D.21802, D.21804
	ldr	d0, [x0]	// D.21806, MEM[(double *)_288]
	str	d0, [sp, 600]	// D.21806, MEM[(double *)&ha.1738 + 16B]
	ldr	x2, [sp, 120]	// D.21807, argv.__vr_top
	sxtw	x0, w1	// D.21808, D.21775
	add	x0, x0, 48	// D.21809, D.21808,
	add	x0, x2, x0	// D.21810, D.21807, D.21809
	ldr	d0, [x0]	// D.21811, MEM[(double *)_294]
	str	d0, [sp, 608]	// D.21811, MEM[(double *)&ha.1738 + 24B]
	add	x0, sp, 584	// iftmp.1740,,
.L2927:
	add	x1, sp, 296	// tmp385,,
	ldp	q0, q1, [x0]	// tmp387, tmp388, *iftmp.1739_60
	stp	q0, q1, [x1]	// tmp387, tmp388, D.6572
// varargs-dll.c:1277:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 304]	// tmp389, D.6572.b
	str	d0, [sp, 72]	// tmp389, f
// varargs-dll.c:1278:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 132]	// D.21812, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1744, argv.__stack
	cmp	w1, 0	// D.21812,
	blt	.L2930		//,
	add	x1, x0, 39	// D.21818, iftmp.1744,
	and	x1, x1, -8	// D.21819, D.21818,
	str	x1, [sp, 104]	// D.21819, argv.__stack
	b	.L2931		//
.L2930:
	add	w2, w1, 64	// D.21821, D.21812,
	str	w2, [sp, 132]	// D.21821, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21823, argv.__vr_offs
	cmp	w2, 0	// D.21823,
	ble	.L2932		//,
	add	x1, x0, 39	// D.21826, iftmp.1744,
	and	x1, x1, -8	// D.21827, D.21826,
	str	x1, [sp, 104]	// D.21827, argv.__stack
	b	.L2931		//
.L2932:
	ldr	x2, [sp, 120]	// D.21829, argv.__vr_top
	sxtw	x0, w1	// D.21830, D.21812
	add	x2, x2, x0	// D.21831, D.21829, D.21830
	add	x0, sp, 616	// ha.1745,,
	ldr	d0, [x2]	// D.21833, MEM[(double *)_315]
	str	d0, [x0]	// D.21833, MEM[(double *)ha.1745_316]
	ldr	x2, [sp, 120]	// D.21834, argv.__vr_top
	sxtw	x0, w1	// D.21835, D.21812
	add	x0, x0, 16	// D.21836, D.21835,
	add	x0, x2, x0	// D.21837, D.21834, D.21836
	ldr	d0, [x0]	// D.21838, MEM[(double *)_322]
	str	d0, [sp, 624]	// D.21838, MEM[(double *)&ha.1742 + 8B]
	ldr	x2, [sp, 120]	// D.21839, argv.__vr_top
	sxtw	x0, w1	// D.21840, D.21812
	add	x0, x0, 32	// D.21841, D.21840,
	add	x0, x2, x0	// D.21842, D.21839, D.21841
	ldr	d0, [x0]	// D.21843, MEM[(double *)_328]
	str	d0, [sp, 632]	// D.21843, MEM[(double *)&ha.1742 + 16B]
	ldr	x2, [sp, 120]	// D.21844, argv.__vr_top
	sxtw	x0, w1	// D.21845, D.21812
	add	x0, x0, 48	// D.21846, D.21845,
	add	x0, x2, x0	// D.21847, D.21844, D.21846
	ldr	d0, [x0]	// D.21848, MEM[(double *)_334]
	str	d0, [sp, 640]	// D.21848, MEM[(double *)&ha.1742 + 24B]
	add	x0, sp, 616	// iftmp.1744,,
.L2931:
	add	x1, sp, 328	// tmp390,,
	ldp	q0, q1, [x0]	// tmp392, tmp393, *iftmp.1743_62
	stp	q0, q1, [x1]	// tmp392, tmp393, D.6573
// varargs-dll.c:1278:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 344]	// tmp394, D.6573.c
	str	d0, [sp, 80]	// tmp394, g
// varargs-dll.c:1279:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 132]	// D.21849, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1748, argv.__stack
	cmp	w1, 0	// D.21849,
	blt	.L2934		//,
	add	x1, x0, 39	// D.21855, iftmp.1748,
	and	x1, x1, -8	// D.21856, D.21855,
	str	x1, [sp, 104]	// D.21856, argv.__stack
	b	.L2935		//
.L2934:
	add	w2, w1, 64	// D.21858, D.21849,
	str	w2, [sp, 132]	// D.21858, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21860, argv.__vr_offs
	cmp	w2, 0	// D.21860,
	ble	.L2936		//,
	add	x1, x0, 39	// D.21863, iftmp.1748,
	and	x1, x1, -8	// D.21864, D.21863,
	str	x1, [sp, 104]	// D.21864, argv.__stack
	b	.L2935		//
.L2936:
	ldr	x2, [sp, 120]	// D.21866, argv.__vr_top
	sxtw	x0, w1	// D.21867, D.21849
	add	x2, x2, x0	// D.21868, D.21866, D.21867
	add	x0, sp, 648	// ha.1749,,
	ldr	d0, [x2]	// D.21870, MEM[(double *)_355]
	str	d0, [x0]	// D.21870, MEM[(double *)ha.1749_356]
	ldr	x2, [sp, 120]	// D.21871, argv.__vr_top
	sxtw	x0, w1	// D.21872, D.21849
	add	x0, x0, 16	// D.21873, D.21872,
	add	x0, x2, x0	// D.21874, D.21871, D.21873
	ldr	d0, [x0]	// D.21875, MEM[(double *)_362]
	str	d0, [sp, 656]	// D.21875, MEM[(double *)&ha.1746 + 8B]
	ldr	x2, [sp, 120]	// D.21876, argv.__vr_top
	sxtw	x0, w1	// D.21877, D.21849
	add	x0, x0, 32	// D.21878, D.21877,
	add	x0, x2, x0	// D.21879, D.21876, D.21878
	ldr	d0, [x0]	// D.21880, MEM[(double *)_368]
	str	d0, [sp, 664]	// D.21880, MEM[(double *)&ha.1746 + 16B]
	ldr	x2, [sp, 120]	// D.21881, argv.__vr_top
	sxtw	x0, w1	// D.21882, D.21849
	add	x0, x0, 48	// D.21883, D.21882,
	add	x0, x2, x0	// D.21884, D.21881, D.21883
	ldr	d0, [x0]	// D.21885, MEM[(double *)_374]
	str	d0, [sp, 672]	// D.21885, MEM[(double *)&ha.1746 + 24B]
	add	x0, sp, 648	// iftmp.1748,,
.L2935:
	add	x1, sp, 360	// tmp395,,
	ldp	q0, q1, [x0]	// tmp397, tmp398, *iftmp.1747_64
	stp	q0, q1, [x1]	// tmp397, tmp398, D.6574
// varargs-dll.c:1279:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 384]	// tmp399, D.6574.d
	str	d0, [sp, 88]	// tmp399, h
// varargs-dll.c:1280:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 132]	// D.21886, argv.__vr_offs
	ldr	x0, [sp, 104]	// iftmp.1752, argv.__stack
	cmp	w1, 0	// D.21886,
	blt	.L2938		//,
	add	x1, x0, 39	// D.21892, iftmp.1752,
	and	x1, x1, -8	// D.21893, D.21892,
	str	x1, [sp, 104]	// D.21893, argv.__stack
	b	.L2939		//
.L2938:
	add	w2, w1, 64	// D.21895, D.21886,
	str	w2, [sp, 132]	// D.21895, argv.__vr_offs
	ldr	w2, [sp, 132]	// D.21897, argv.__vr_offs
	cmp	w2, 0	// D.21897,
	ble	.L2940		//,
	add	x1, x0, 39	// D.21900, iftmp.1752,
	and	x1, x1, -8	// D.21901, D.21900,
	str	x1, [sp, 104]	// D.21901, argv.__stack
	b	.L2939		//
.L2940:
	ldr	x2, [sp, 120]	// D.21903, argv.__vr_top
	sxtw	x0, w1	// D.21904, D.21886
	add	x2, x2, x0	// D.21905, D.21903, D.21904
	add	x0, sp, 680	// ha.1753,,
	ldr	d0, [x2]	// D.21907, MEM[(double *)_395]
	str	d0, [x0]	// D.21907, MEM[(double *)ha.1753_396]
	ldr	x2, [sp, 120]	// D.21908, argv.__vr_top
	sxtw	x0, w1	// D.21909, D.21886
	add	x0, x0, 16	// D.21910, D.21909,
	add	x0, x2, x0	// D.21911, D.21908, D.21910
	ldr	d0, [x0]	// D.21912, MEM[(double *)_402]
	str	d0, [sp, 688]	// D.21912, MEM[(double *)&ha.1750 + 8B]
	ldr	x2, [sp, 120]	// D.21913, argv.__vr_top
	sxtw	x0, w1	// D.21914, D.21886
	add	x0, x0, 32	// D.21915, D.21914,
	add	x0, x2, x0	// D.21916, D.21913, D.21915
	ldr	d0, [x0]	// D.21917, MEM[(double *)_408]
	str	d0, [sp, 696]	// D.21917, MEM[(double *)&ha.1750 + 16B]
	ldr	x2, [sp, 120]	// D.21918, argv.__vr_top
	sxtw	x0, w1	// D.21919, D.21886
	add	x0, x0, 48	// D.21920, D.21919,
	add	x0, x2, x0	// D.21921, D.21918, D.21920
	ldr	d0, [x0]	// D.21922, MEM[(double *)_414]
	str	d0, [sp, 704]	// D.21922, MEM[(double *)&ha.1750 + 24B]
	add	x0, sp, 680	// iftmp.1752,,
.L2939:
	add	x1, sp, 392	// tmp400,,
	ldp	q0, q1, [x0]	// tmp402, tmp403, *iftmp.1751_66
	stp	q0, q1, [x1]	// tmp402, tmp403, D.6575
// varargs-dll.c:1280:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 392]	// tmp404, D.6575.a
	str	d0, [sp, 96]	// tmp404, i
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 32]	// tmp405, a
	ldr	d0, [sp, 40]	// tmp406, b
	fadd	d1, d1, d0	// _1, tmp405, tmp406
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 48]	// tmp407, c
	fadd	d1, d1, d0	// _2, _1, tmp407
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 56]	// tmp408, d
	fadd	d1, d1, d0	// _3, _2, tmp408
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp409, e
	fadd	d1, d1, d0	// _4, _3, tmp409
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp410, f
	fadd	d1, d1, d0	// _5, _4, tmp410
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp411, g
	fadd	d1, d1, d0	// _6, _5, tmp411
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp412, h
	fadd	d1, d1, d0	// _7, _6, tmp412
// varargs-dll.c:1282:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp413, i
	fadd	d0, d1, d0	// _8, _7, tmp413
	fcvtzs	w0, d0	// _30, _8
	mov	w1, w0	// <retval>, _30
// varargs-dll.c:1283: }
	adrp	x0, :got:__stack_chk_guard	// tmp416,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp415, tmp416,
	ldr	x3, [sp, 712]	// tmp418, D.21923
	ldr	x2, [x0]	// tmp419,
	subs	x3, x3, x2	// tmp418, tmp419
	mov	x2, 0	// tmp419
	beq	.L2943		//,
	bl	__stack_chk_fail		//
.L2943:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 912	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE82:
	.size	use_va_args_several_hfa_4_doubles, .-use_va_args_several_hfa_4_doubles
	.align	2
	.global	use_va_list_several_hfa_4_doubles
	.type	use_va_list_several_hfa_4_doubles, %function
use_va_list_several_hfa_4_doubles:
.LFB83:
	.cfi_startproc
	sub	sp, sp, #704	//,,
	.cfi_def_cfa_offset 704
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -704
	.cfi_offset 30, -696
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -688
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp354,
// varargs-dll.c:1287: {
	adrp	x0, :got:__stack_chk_guard	// tmp356,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp355, tmp356,
	ldr	x1, [x0]	// tmp414,
	str	x1, [sp, 696]	// tmp414, D.22260
	mov	x1, 0	// tmp414
// varargs-dll.c:1288:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.21927, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1756, argv.__stack
	cmp	w1, 0	// D.21927,
	blt	.L2945		//,
	add	x1, x0, 39	// D.21933, iftmp.1756,
	and	x1, x1, -8	// D.21934, D.21933,
	str	x1, [x19]	// D.21934, argv.__stack
	b	.L2946		//
.L2945:
	add	w2, w1, 64	// D.21936, D.21927,
	str	w2, [x19, 28]	// D.21936, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21938, argv.__vr_offs
	cmp	w2, 0	// D.21938,
	ble	.L2947		//,
	add	x1, x0, 39	// D.21941, iftmp.1756,
	and	x1, x1, -8	// D.21942, D.21941,
	str	x1, [x19]	// D.21942, argv.__stack
	b	.L2946		//
.L2947:
	ldr	x2, [x19, 16]	// D.21944, argv.__vr_top
	sxtw	x0, w1	// D.21945, D.21927
	add	x2, x2, x0	// D.21946, D.21944, D.21945
	add	x0, sp, 408	// ha.1757,,
	ldr	d0, [x2]	// D.21948, MEM[(double *)_72]
	str	d0, [x0]	// D.21948, MEM[(double *)ha.1757_73]
	ldr	x2, [x19, 16]	// D.21949, argv.__vr_top
	sxtw	x0, w1	// D.21950, D.21927
	add	x0, x0, 16	// D.21951, D.21950,
	add	x0, x2, x0	// D.21952, D.21949, D.21951
	ldr	d0, [x0]	// D.21953, MEM[(double *)_79]
	str	d0, [sp, 416]	// D.21953, MEM[(double *)&ha.1754 + 8B]
	ldr	x2, [x19, 16]	// D.21954, argv.__vr_top
	sxtw	x0, w1	// D.21955, D.21927
	add	x0, x0, 32	// D.21956, D.21955,
	add	x0, x2, x0	// D.21957, D.21954, D.21956
	ldr	d0, [x0]	// D.21958, MEM[(double *)_85]
	str	d0, [sp, 424]	// D.21958, MEM[(double *)&ha.1754 + 16B]
	ldr	x2, [x19, 16]	// D.21959, argv.__vr_top
	sxtw	x0, w1	// D.21960, D.21927
	add	x0, x0, 48	// D.21961, D.21960,
	add	x0, x2, x0	// D.21962, D.21959, D.21961
	ldr	d0, [x0]	// D.21963, MEM[(double *)_91]
	str	d0, [sp, 432]	// D.21963, MEM[(double *)&ha.1754 + 24B]
	add	x0, sp, 408	// iftmp.1756,,
.L2946:
	add	x1, sp, 120	// tmp357,,
	ldp	q0, q1, [x0]	// tmp359, tmp360, *iftmp.1755_47
	stp	q0, q1, [x1]	// tmp359, tmp360, D.6579
// varargs-dll.c:1288:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 120]	// tmp361, D.6579.a
	str	d0, [sp, 48]	// tmp361, a
// varargs-dll.c:1289:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.21964, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1760, argv.__stack
	cmp	w1, 0	// D.21964,
	blt	.L2949		//,
	add	x1, x0, 39	// D.21970, iftmp.1760,
	and	x1, x1, -8	// D.21971, D.21970,
	str	x1, [x19]	// D.21971, argv.__stack
	b	.L2950		//
.L2949:
	add	w2, w1, 64	// D.21973, D.21964,
	str	w2, [x19, 28]	// D.21973, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.21975, argv.__vr_offs
	cmp	w2, 0	// D.21975,
	ble	.L2951		//,
	add	x1, x0, 39	// D.21978, iftmp.1760,
	and	x1, x1, -8	// D.21979, D.21978,
	str	x1, [x19]	// D.21979, argv.__stack
	b	.L2950		//
.L2951:
	ldr	x2, [x19, 16]	// D.21981, argv.__vr_top
	sxtw	x0, w1	// D.21982, D.21964
	add	x2, x2, x0	// D.21983, D.21981, D.21982
	add	x0, sp, 440	// ha.1761,,
	ldr	d0, [x2]	// D.21985, MEM[(double *)_112]
	str	d0, [x0]	// D.21985, MEM[(double *)ha.1761_113]
	ldr	x2, [x19, 16]	// D.21986, argv.__vr_top
	sxtw	x0, w1	// D.21987, D.21964
	add	x0, x0, 16	// D.21988, D.21987,
	add	x0, x2, x0	// D.21989, D.21986, D.21988
	ldr	d0, [x0]	// D.21990, MEM[(double *)_119]
	str	d0, [sp, 448]	// D.21990, MEM[(double *)&ha.1758 + 8B]
	ldr	x2, [x19, 16]	// D.21991, argv.__vr_top
	sxtw	x0, w1	// D.21992, D.21964
	add	x0, x0, 32	// D.21993, D.21992,
	add	x0, x2, x0	// D.21994, D.21991, D.21993
	ldr	d0, [x0]	// D.21995, MEM[(double *)_125]
	str	d0, [sp, 456]	// D.21995, MEM[(double *)&ha.1758 + 16B]
	ldr	x2, [x19, 16]	// D.21996, argv.__vr_top
	sxtw	x0, w1	// D.21997, D.21964
	add	x0, x0, 48	// D.21998, D.21997,
	add	x0, x2, x0	// D.21999, D.21996, D.21998
	ldr	d0, [x0]	// D.22000, MEM[(double *)_131]
	str	d0, [sp, 464]	// D.22000, MEM[(double *)&ha.1758 + 24B]
	add	x0, sp, 440	// iftmp.1760,,
.L2950:
	add	x1, sp, 152	// tmp362,,
	ldp	q0, q1, [x0]	// tmp364, tmp365, *iftmp.1759_49
	stp	q0, q1, [x1]	// tmp364, tmp365, D.6580
// varargs-dll.c:1289:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 160]	// tmp366, D.6580.b
	str	d0, [sp, 56]	// tmp366, b
// varargs-dll.c:1290:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.22001, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1764, argv.__stack
	cmp	w1, 0	// D.22001,
	blt	.L2953		//,
	add	x1, x0, 39	// D.22007, iftmp.1764,
	and	x1, x1, -8	// D.22008, D.22007,
	str	x1, [x19]	// D.22008, argv.__stack
	b	.L2954		//
.L2953:
	add	w2, w1, 64	// D.22010, D.22001,
	str	w2, [x19, 28]	// D.22010, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22012, argv.__vr_offs
	cmp	w2, 0	// D.22012,
	ble	.L2955		//,
	add	x1, x0, 39	// D.22015, iftmp.1764,
	and	x1, x1, -8	// D.22016, D.22015,
	str	x1, [x19]	// D.22016, argv.__stack
	b	.L2954		//
.L2955:
	ldr	x2, [x19, 16]	// D.22018, argv.__vr_top
	sxtw	x0, w1	// D.22019, D.22001
	add	x2, x2, x0	// D.22020, D.22018, D.22019
	add	x0, sp, 472	// ha.1765,,
	ldr	d0, [x2]	// D.22022, MEM[(double *)_152]
	str	d0, [x0]	// D.22022, MEM[(double *)ha.1765_153]
	ldr	x2, [x19, 16]	// D.22023, argv.__vr_top
	sxtw	x0, w1	// D.22024, D.22001
	add	x0, x0, 16	// D.22025, D.22024,
	add	x0, x2, x0	// D.22026, D.22023, D.22025
	ldr	d0, [x0]	// D.22027, MEM[(double *)_159]
	str	d0, [sp, 480]	// D.22027, MEM[(double *)&ha.1762 + 8B]
	ldr	x2, [x19, 16]	// D.22028, argv.__vr_top
	sxtw	x0, w1	// D.22029, D.22001
	add	x0, x0, 32	// D.22030, D.22029,
	add	x0, x2, x0	// D.22031, D.22028, D.22030
	ldr	d0, [x0]	// D.22032, MEM[(double *)_165]
	str	d0, [sp, 488]	// D.22032, MEM[(double *)&ha.1762 + 16B]
	ldr	x2, [x19, 16]	// D.22033, argv.__vr_top
	sxtw	x0, w1	// D.22034, D.22001
	add	x0, x0, 48	// D.22035, D.22034,
	add	x0, x2, x0	// D.22036, D.22033, D.22035
	ldr	d0, [x0]	// D.22037, MEM[(double *)_171]
	str	d0, [sp, 496]	// D.22037, MEM[(double *)&ha.1762 + 24B]
	add	x0, sp, 472	// iftmp.1764,,
.L2954:
	add	x1, sp, 184	// tmp367,,
	ldp	q0, q1, [x0]	// tmp369, tmp370, *iftmp.1763_51
	stp	q0, q1, [x1]	// tmp369, tmp370, D.6581
// varargs-dll.c:1290:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 200]	// tmp371, D.6581.c
	str	d0, [sp, 64]	// tmp371, c
// varargs-dll.c:1291:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.22038, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1768, argv.__stack
	cmp	w1, 0	// D.22038,
	blt	.L2957		//,
	add	x1, x0, 39	// D.22044, iftmp.1768,
	and	x1, x1, -8	// D.22045, D.22044,
	str	x1, [x19]	// D.22045, argv.__stack
	b	.L2958		//
.L2957:
	add	w2, w1, 64	// D.22047, D.22038,
	str	w2, [x19, 28]	// D.22047, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22049, argv.__vr_offs
	cmp	w2, 0	// D.22049,
	ble	.L2959		//,
	add	x1, x0, 39	// D.22052, iftmp.1768,
	and	x1, x1, -8	// D.22053, D.22052,
	str	x1, [x19]	// D.22053, argv.__stack
	b	.L2958		//
.L2959:
	ldr	x2, [x19, 16]	// D.22055, argv.__vr_top
	sxtw	x0, w1	// D.22056, D.22038
	add	x2, x2, x0	// D.22057, D.22055, D.22056
	add	x0, sp, 504	// ha.1769,,
	ldr	d0, [x2]	// D.22059, MEM[(double *)_192]
	str	d0, [x0]	// D.22059, MEM[(double *)ha.1769_193]
	ldr	x2, [x19, 16]	// D.22060, argv.__vr_top
	sxtw	x0, w1	// D.22061, D.22038
	add	x0, x0, 16	// D.22062, D.22061,
	add	x0, x2, x0	// D.22063, D.22060, D.22062
	ldr	d0, [x0]	// D.22064, MEM[(double *)_199]
	str	d0, [sp, 512]	// D.22064, MEM[(double *)&ha.1766 + 8B]
	ldr	x2, [x19, 16]	// D.22065, argv.__vr_top
	sxtw	x0, w1	// D.22066, D.22038
	add	x0, x0, 32	// D.22067, D.22066,
	add	x0, x2, x0	// D.22068, D.22065, D.22067
	ldr	d0, [x0]	// D.22069, MEM[(double *)_205]
	str	d0, [sp, 520]	// D.22069, MEM[(double *)&ha.1766 + 16B]
	ldr	x2, [x19, 16]	// D.22070, argv.__vr_top
	sxtw	x0, w1	// D.22071, D.22038
	add	x0, x0, 48	// D.22072, D.22071,
	add	x0, x2, x0	// D.22073, D.22070, D.22072
	ldr	d0, [x0]	// D.22074, MEM[(double *)_211]
	str	d0, [sp, 528]	// D.22074, MEM[(double *)&ha.1766 + 24B]
	add	x0, sp, 504	// iftmp.1768,,
.L2958:
	add	x1, sp, 216	// tmp372,,
	ldp	q0, q1, [x0]	// tmp374, tmp375, *iftmp.1767_53
	stp	q0, q1, [x1]	// tmp374, tmp375, D.6582
// varargs-dll.c:1291:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 240]	// tmp376, D.6582.d
	str	d0, [sp, 72]	// tmp376, d
// varargs-dll.c:1292:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.22075, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1772, argv.__stack
	cmp	w1, 0	// D.22075,
	blt	.L2961		//,
	add	x1, x0, 39	// D.22081, iftmp.1772,
	and	x1, x1, -8	// D.22082, D.22081,
	str	x1, [x19]	// D.22082, argv.__stack
	b	.L2962		//
.L2961:
	add	w2, w1, 64	// D.22084, D.22075,
	str	w2, [x19, 28]	// D.22084, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22086, argv.__vr_offs
	cmp	w2, 0	// D.22086,
	ble	.L2963		//,
	add	x1, x0, 39	// D.22089, iftmp.1772,
	and	x1, x1, -8	// D.22090, D.22089,
	str	x1, [x19]	// D.22090, argv.__stack
	b	.L2962		//
.L2963:
	ldr	x2, [x19, 16]	// D.22092, argv.__vr_top
	sxtw	x0, w1	// D.22093, D.22075
	add	x2, x2, x0	// D.22094, D.22092, D.22093
	add	x0, sp, 536	// ha.1773,,
	ldr	d0, [x2]	// D.22096, MEM[(double *)_232]
	str	d0, [x0]	// D.22096, MEM[(double *)ha.1773_233]
	ldr	x2, [x19, 16]	// D.22097, argv.__vr_top
	sxtw	x0, w1	// D.22098, D.22075
	add	x0, x0, 16	// D.22099, D.22098,
	add	x0, x2, x0	// D.22100, D.22097, D.22099
	ldr	d0, [x0]	// D.22101, MEM[(double *)_239]
	str	d0, [sp, 544]	// D.22101, MEM[(double *)&ha.1770 + 8B]
	ldr	x2, [x19, 16]	// D.22102, argv.__vr_top
	sxtw	x0, w1	// D.22103, D.22075
	add	x0, x0, 32	// D.22104, D.22103,
	add	x0, x2, x0	// D.22105, D.22102, D.22104
	ldr	d0, [x0]	// D.22106, MEM[(double *)_245]
	str	d0, [sp, 552]	// D.22106, MEM[(double *)&ha.1770 + 16B]
	ldr	x2, [x19, 16]	// D.22107, argv.__vr_top
	sxtw	x0, w1	// D.22108, D.22075
	add	x0, x0, 48	// D.22109, D.22108,
	add	x0, x2, x0	// D.22110, D.22107, D.22109
	ldr	d0, [x0]	// D.22111, MEM[(double *)_251]
	str	d0, [sp, 560]	// D.22111, MEM[(double *)&ha.1770 + 24B]
	add	x0, sp, 536	// iftmp.1772,,
.L2962:
	add	x1, sp, 248	// tmp377,,
	ldp	q0, q1, [x0]	// tmp379, tmp380, *iftmp.1771_55
	stp	q0, q1, [x1]	// tmp379, tmp380, D.6583
// varargs-dll.c:1292:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 248]	// tmp381, D.6583.a
	str	d0, [sp, 80]	// tmp381, e
// varargs-dll.c:1293:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.22112, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1776, argv.__stack
	cmp	w1, 0	// D.22112,
	blt	.L2965		//,
	add	x1, x0, 39	// D.22118, iftmp.1776,
	and	x1, x1, -8	// D.22119, D.22118,
	str	x1, [x19]	// D.22119, argv.__stack
	b	.L2966		//
.L2965:
	add	w2, w1, 64	// D.22121, D.22112,
	str	w2, [x19, 28]	// D.22121, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22123, argv.__vr_offs
	cmp	w2, 0	// D.22123,
	ble	.L2967		//,
	add	x1, x0, 39	// D.22126, iftmp.1776,
	and	x1, x1, -8	// D.22127, D.22126,
	str	x1, [x19]	// D.22127, argv.__stack
	b	.L2966		//
.L2967:
	ldr	x2, [x19, 16]	// D.22129, argv.__vr_top
	sxtw	x0, w1	// D.22130, D.22112
	add	x2, x2, x0	// D.22131, D.22129, D.22130
	add	x0, sp, 568	// ha.1777,,
	ldr	d0, [x2]	// D.22133, MEM[(double *)_272]
	str	d0, [x0]	// D.22133, MEM[(double *)ha.1777_273]
	ldr	x2, [x19, 16]	// D.22134, argv.__vr_top
	sxtw	x0, w1	// D.22135, D.22112
	add	x0, x0, 16	// D.22136, D.22135,
	add	x0, x2, x0	// D.22137, D.22134, D.22136
	ldr	d0, [x0]	// D.22138, MEM[(double *)_279]
	str	d0, [sp, 576]	// D.22138, MEM[(double *)&ha.1774 + 8B]
	ldr	x2, [x19, 16]	// D.22139, argv.__vr_top
	sxtw	x0, w1	// D.22140, D.22112
	add	x0, x0, 32	// D.22141, D.22140,
	add	x0, x2, x0	// D.22142, D.22139, D.22141
	ldr	d0, [x0]	// D.22143, MEM[(double *)_285]
	str	d0, [sp, 584]	// D.22143, MEM[(double *)&ha.1774 + 16B]
	ldr	x2, [x19, 16]	// D.22144, argv.__vr_top
	sxtw	x0, w1	// D.22145, D.22112
	add	x0, x0, 48	// D.22146, D.22145,
	add	x0, x2, x0	// D.22147, D.22144, D.22146
	ldr	d0, [x0]	// D.22148, MEM[(double *)_291]
	str	d0, [sp, 592]	// D.22148, MEM[(double *)&ha.1774 + 24B]
	add	x0, sp, 568	// iftmp.1776,,
.L2966:
	add	x1, sp, 280	// tmp382,,
	ldp	q0, q1, [x0]	// tmp384, tmp385, *iftmp.1775_57
	stp	q0, q1, [x1]	// tmp384, tmp385, D.6584
// varargs-dll.c:1293:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 288]	// tmp386, D.6584.b
	str	d0, [sp, 88]	// tmp386, f
// varargs-dll.c:1294:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.22149, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1780, argv.__stack
	cmp	w1, 0	// D.22149,
	blt	.L2969		//,
	add	x1, x0, 39	// D.22155, iftmp.1780,
	and	x1, x1, -8	// D.22156, D.22155,
	str	x1, [x19]	// D.22156, argv.__stack
	b	.L2970		//
.L2969:
	add	w2, w1, 64	// D.22158, D.22149,
	str	w2, [x19, 28]	// D.22158, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22160, argv.__vr_offs
	cmp	w2, 0	// D.22160,
	ble	.L2971		//,
	add	x1, x0, 39	// D.22163, iftmp.1780,
	and	x1, x1, -8	// D.22164, D.22163,
	str	x1, [x19]	// D.22164, argv.__stack
	b	.L2970		//
.L2971:
	ldr	x2, [x19, 16]	// D.22166, argv.__vr_top
	sxtw	x0, w1	// D.22167, D.22149
	add	x2, x2, x0	// D.22168, D.22166, D.22167
	add	x0, sp, 600	// ha.1781,,
	ldr	d0, [x2]	// D.22170, MEM[(double *)_312]
	str	d0, [x0]	// D.22170, MEM[(double *)ha.1781_313]
	ldr	x2, [x19, 16]	// D.22171, argv.__vr_top
	sxtw	x0, w1	// D.22172, D.22149
	add	x0, x0, 16	// D.22173, D.22172,
	add	x0, x2, x0	// D.22174, D.22171, D.22173
	ldr	d0, [x0]	// D.22175, MEM[(double *)_319]
	str	d0, [sp, 608]	// D.22175, MEM[(double *)&ha.1778 + 8B]
	ldr	x2, [x19, 16]	// D.22176, argv.__vr_top
	sxtw	x0, w1	// D.22177, D.22149
	add	x0, x0, 32	// D.22178, D.22177,
	add	x0, x2, x0	// D.22179, D.22176, D.22178
	ldr	d0, [x0]	// D.22180, MEM[(double *)_325]
	str	d0, [sp, 616]	// D.22180, MEM[(double *)&ha.1778 + 16B]
	ldr	x2, [x19, 16]	// D.22181, argv.__vr_top
	sxtw	x0, w1	// D.22182, D.22149
	add	x0, x0, 48	// D.22183, D.22182,
	add	x0, x2, x0	// D.22184, D.22181, D.22183
	ldr	d0, [x0]	// D.22185, MEM[(double *)_331]
	str	d0, [sp, 624]	// D.22185, MEM[(double *)&ha.1778 + 24B]
	add	x0, sp, 600	// iftmp.1780,,
.L2970:
	add	x1, sp, 312	// tmp387,,
	ldp	q0, q1, [x0]	// tmp389, tmp390, *iftmp.1779_59
	stp	q0, q1, [x1]	// tmp389, tmp390, D.6585
// varargs-dll.c:1294:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 328]	// tmp391, D.6585.c
	str	d0, [sp, 96]	// tmp391, g
// varargs-dll.c:1295:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.22186, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1784, argv.__stack
	cmp	w1, 0	// D.22186,
	blt	.L2973		//,
	add	x1, x0, 39	// D.22192, iftmp.1784,
	and	x1, x1, -8	// D.22193, D.22192,
	str	x1, [x19]	// D.22193, argv.__stack
	b	.L2974		//
.L2973:
	add	w2, w1, 64	// D.22195, D.22186,
	str	w2, [x19, 28]	// D.22195, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22197, argv.__vr_offs
	cmp	w2, 0	// D.22197,
	ble	.L2975		//,
	add	x1, x0, 39	// D.22200, iftmp.1784,
	and	x1, x1, -8	// D.22201, D.22200,
	str	x1, [x19]	// D.22201, argv.__stack
	b	.L2974		//
.L2975:
	ldr	x2, [x19, 16]	// D.22203, argv.__vr_top
	sxtw	x0, w1	// D.22204, D.22186
	add	x2, x2, x0	// D.22205, D.22203, D.22204
	add	x0, sp, 632	// ha.1785,,
	ldr	d0, [x2]	// D.22207, MEM[(double *)_352]
	str	d0, [x0]	// D.22207, MEM[(double *)ha.1785_353]
	ldr	x2, [x19, 16]	// D.22208, argv.__vr_top
	sxtw	x0, w1	// D.22209, D.22186
	add	x0, x0, 16	// D.22210, D.22209,
	add	x0, x2, x0	// D.22211, D.22208, D.22210
	ldr	d0, [x0]	// D.22212, MEM[(double *)_359]
	str	d0, [sp, 640]	// D.22212, MEM[(double *)&ha.1782 + 8B]
	ldr	x2, [x19, 16]	// D.22213, argv.__vr_top
	sxtw	x0, w1	// D.22214, D.22186
	add	x0, x0, 32	// D.22215, D.22214,
	add	x0, x2, x0	// D.22216, D.22213, D.22215
	ldr	d0, [x0]	// D.22217, MEM[(double *)_365]
	str	d0, [sp, 648]	// D.22217, MEM[(double *)&ha.1782 + 16B]
	ldr	x2, [x19, 16]	// D.22218, argv.__vr_top
	sxtw	x0, w1	// D.22219, D.22186
	add	x0, x0, 48	// D.22220, D.22219,
	add	x0, x2, x0	// D.22221, D.22218, D.22220
	ldr	d0, [x0]	// D.22222, MEM[(double *)_371]
	str	d0, [sp, 656]	// D.22222, MEM[(double *)&ha.1782 + 24B]
	add	x0, sp, 632	// iftmp.1784,,
.L2974:
	add	x1, sp, 344	// tmp392,,
	ldp	q0, q1, [x0]	// tmp394, tmp395, *iftmp.1783_61
	stp	q0, q1, [x1]	// tmp394, tmp395, D.6586
// varargs-dll.c:1295:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 368]	// tmp396, D.6586.d
	str	d0, [sp, 104]	// tmp396, h
// varargs-dll.c:1296:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.22223, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1788, argv.__stack
	cmp	w1, 0	// D.22223,
	blt	.L2977		//,
	add	x1, x0, 39	// D.22229, iftmp.1788,
	and	x1, x1, -8	// D.22230, D.22229,
	str	x1, [x19]	// D.22230, argv.__stack
	b	.L2978		//
.L2977:
	add	w2, w1, 64	// D.22232, D.22223,
	str	w2, [x19, 28]	// D.22232, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22234, argv.__vr_offs
	cmp	w2, 0	// D.22234,
	ble	.L2979		//,
	add	x1, x0, 39	// D.22237, iftmp.1788,
	and	x1, x1, -8	// D.22238, D.22237,
	str	x1, [x19]	// D.22238, argv.__stack
	b	.L2978		//
.L2979:
	ldr	x2, [x19, 16]	// D.22240, argv.__vr_top
	sxtw	x0, w1	// D.22241, D.22223
	add	x2, x2, x0	// D.22242, D.22240, D.22241
	add	x0, sp, 664	// ha.1789,,
	ldr	d0, [x2]	// D.22244, MEM[(double *)_392]
	str	d0, [x0]	// D.22244, MEM[(double *)ha.1789_393]
	ldr	x2, [x19, 16]	// D.22245, argv.__vr_top
	sxtw	x0, w1	// D.22246, D.22223
	add	x0, x0, 16	// D.22247, D.22246,
	add	x0, x2, x0	// D.22248, D.22245, D.22247
	ldr	d0, [x0]	// D.22249, MEM[(double *)_399]
	str	d0, [sp, 672]	// D.22249, MEM[(double *)&ha.1786 + 8B]
	ldr	x2, [x19, 16]	// D.22250, argv.__vr_top
	sxtw	x0, w1	// D.22251, D.22223
	add	x0, x0, 32	// D.22252, D.22251,
	add	x0, x2, x0	// D.22253, D.22250, D.22252
	ldr	d0, [x0]	// D.22254, MEM[(double *)_405]
	str	d0, [sp, 680]	// D.22254, MEM[(double *)&ha.1786 + 16B]
	ldr	x2, [x19, 16]	// D.22255, argv.__vr_top
	sxtw	x0, w1	// D.22256, D.22223
	add	x0, x0, 48	// D.22257, D.22256,
	add	x0, x2, x0	// D.22258, D.22255, D.22257
	ldr	d0, [x0]	// D.22259, MEM[(double *)_411]
	str	d0, [sp, 688]	// D.22259, MEM[(double *)&ha.1786 + 24B]
	add	x0, sp, 664	// iftmp.1788,,
.L2978:
	add	x1, sp, 376	// tmp397,,
	ldp	q0, q1, [x0]	// tmp399, tmp400, *iftmp.1787_63
	stp	q0, q1, [x1]	// tmp399, tmp400, D.6587
// varargs-dll.c:1296:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 376]	// tmp401, D.6587.a
	str	d0, [sp, 112]	// tmp401, i
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d1, [sp, 48]	// tmp402, a
	ldr	d0, [sp, 56]	// tmp403, b
	fadd	d1, d1, d0	// _1, tmp402, tmp403
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 64]	// tmp404, c
	fadd	d1, d1, d0	// _2, _1, tmp404
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 72]	// tmp405, d
	fadd	d1, d1, d0	// _3, _2, tmp405
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 80]	// tmp406, e
	fadd	d1, d1, d0	// _4, _3, tmp406
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 88]	// tmp407, f
	fadd	d1, d1, d0	// _5, _4, tmp407
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 96]	// tmp408, g
	fadd	d1, d1, d0	// _6, _5, tmp408
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 104]	// tmp409, h
	fadd	d1, d1, d0	// _7, _6, tmp409
// varargs-dll.c:1297:   return a + b + c + d + e + f + g + h + i;
	ldr	d0, [sp, 112]	// tmp410, i
	fadd	d0, d1, d0	// _8, _7, tmp410
	fcvtzs	w0, d0	// _28, _8
	mov	w1, w0	// <retval>, _28
// varargs-dll.c:1298: }
	adrp	x0, :got:__stack_chk_guard	// tmp413,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp412, tmp413,
	ldr	x3, [sp, 696]	// tmp415, D.22260
	ldr	x2, [x0]	// tmp416,
	subs	x3, x3, x2	// tmp415, tmp416
	mov	x2, 0	// tmp416
	beq	.L2982		//,
	bl	__stack_chk_fail		//
.L2982:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 704	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE83:
	.size	use_va_list_several_hfa_4_doubles, .-use_va_list_several_hfa_4_doubles
	.align	2
	.global	use_va_args_many_hfa_4_doubles
	.type	use_va_args_many_hfa_4_doubles, %function
use_va_args_many_hfa_4_doubles:
.LFB84:
	.cfi_startproc
	sub	sp, sp, #1488	//,,
	.cfi_def_cfa_offset 1488
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1488
	.cfi_offset 30, -1480
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 1432]	//,
	str	x2, [sp, 1440]	//,
	str	x3, [sp, 1448]	//,
	str	x4, [sp, 1456]	//,
	str	x5, [sp, 1464]	//,
	str	x6, [sp, 1472]	//,
	str	x7, [sp, 1480]	//,
	add	x0, sp, 1536	// tmp702,,
	str	q0, [x0, -240]	//,
	add	x0, sp, 1536	// tmp704,,
	str	q1, [x0, -224]	//,
	add	x0, sp, 1536	// tmp706,,
	str	q2, [x0, -208]	//,
	add	x0, sp, 1536	// tmp708,,
	str	q3, [x0, -192]	//,
	add	x0, sp, 1536	// tmp710,,
	str	q4, [x0, -176]	//,
	add	x0, sp, 1536	// tmp712,,
	str	q5, [x0, -160]	//,
	add	x0, sp, 1536	// tmp714,,
	str	q6, [x0, -144]	//,
	add	x0, sp, 1536	// tmp716,,
	str	q7, [x0, -128]	//,
// varargs-dll.c:1302: {
	adrp	x0, :got:__stack_chk_guard	// tmp587,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp586, tmp587,
	ldr	x1, [x0]	// tmp697,
	str	x1, [sp, 1288]	// tmp697, D.22890
	mov	x1, 0	// tmp697
// varargs-dll.c:1304:   va_start (argv, format);
	add	x0, sp, 1488	// tmp718,,
	str	x0, [sp, 168]	// tmp718, MEM[(struct  *)&argv].__stack
	add	x0, sp, 1488	// tmp719,,
	str	x0, [sp, 176]	// tmp719, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 1424	// tmp589,,
	str	x0, [sp, 184]	// tmp589, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp590,
	str	w0, [sp, 192]	// tmp590, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp591,
	str	w0, [sp, 196]	// tmp591, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1305:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 196]	// D.22261, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1792, argv.__stack
	cmp	w1, 0	// D.22261,
	blt	.L2984		//,
	add	x1, x0, 39	// D.22267, iftmp.1792,
	and	x1, x1, -8	// D.22268, D.22267,
	str	x1, [sp, 168]	// D.22268, argv.__stack
	b	.L2985		//
.L2984:
	add	w2, w1, 64	// D.22270, D.22261,
	str	w2, [sp, 196]	// D.22270, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22272, argv.__vr_offs
	cmp	w2, 0	// D.22272,
	ble	.L2986		//,
	add	x1, x0, 39	// D.22275, iftmp.1792,
	and	x1, x1, -8	// D.22276, D.22275,
	str	x1, [sp, 168]	// D.22276, argv.__stack
	b	.L2985		//
.L2986:
	ldr	x2, [sp, 184]	// D.22278, argv.__vr_top
	sxtw	x0, w1	// D.22279, D.22261
	add	x2, x2, x0	// D.22280, D.22278, D.22279
	add	x0, sp, 744	// ha.1793,,
	ldr	d0, [x2]	// D.22282, MEM[(double *)_131]
	str	d0, [x0]	// D.22282, MEM[(double *)ha.1793_132]
	ldr	x2, [sp, 184]	// D.22283, argv.__vr_top
	sxtw	x0, w1	// D.22284, D.22261
	add	x0, x0, 16	// D.22285, D.22284,
	add	x0, x2, x0	// D.22286, D.22283, D.22285
	ldr	d0, [x0]	// D.22287, MEM[(double *)_138]
	str	d0, [sp, 752]	// D.22287, MEM[(double *)&ha.1790 + 8B]
	ldr	x2, [sp, 184]	// D.22288, argv.__vr_top
	sxtw	x0, w1	// D.22289, D.22261
	add	x0, x0, 32	// D.22290, D.22289,
	add	x0, x2, x0	// D.22291, D.22288, D.22290
	ldr	d0, [x0]	// D.22292, MEM[(double *)_144]
	str	d0, [sp, 760]	// D.22292, MEM[(double *)&ha.1790 + 16B]
	ldr	x2, [sp, 184]	// D.22293, argv.__vr_top
	sxtw	x0, w1	// D.22294, D.22261
	add	x0, x0, 48	// D.22295, D.22294,
	add	x0, x2, x0	// D.22296, D.22293, D.22295
	ldr	d0, [x0]	// D.22297, MEM[(double *)_150]
	str	d0, [sp, 768]	// D.22297, MEM[(double *)&ha.1790 + 24B]
	add	x0, sp, 744	// iftmp.1792,,
.L2985:
	add	x1, sp, 200	// tmp592,,
	ldp	q0, q1, [x0]	// tmp594, tmp595, *iftmp.1791_90
	stp	q0, q1, [x1]	// tmp594, tmp595, D.6590
// varargs-dll.c:1305:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 200]	// tmp596, D.6590.a
	str	d0, [sp, 32]	// tmp596, a
// varargs-dll.c:1306:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 196]	// D.22298, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1796, argv.__stack
	cmp	w1, 0	// D.22298,
	blt	.L2988		//,
	add	x1, x0, 39	// D.22304, iftmp.1796,
	and	x1, x1, -8	// D.22305, D.22304,
	str	x1, [sp, 168]	// D.22305, argv.__stack
	b	.L2989		//
.L2988:
	add	w2, w1, 64	// D.22307, D.22298,
	str	w2, [sp, 196]	// D.22307, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22309, argv.__vr_offs
	cmp	w2, 0	// D.22309,
	ble	.L2990		//,
	add	x1, x0, 39	// D.22312, iftmp.1796,
	and	x1, x1, -8	// D.22313, D.22312,
	str	x1, [sp, 168]	// D.22313, argv.__stack
	b	.L2989		//
.L2990:
	ldr	x2, [sp, 184]	// D.22315, argv.__vr_top
	sxtw	x0, w1	// D.22316, D.22298
	add	x2, x2, x0	// D.22317, D.22315, D.22316
	add	x0, sp, 776	// ha.1797,,
	ldr	d0, [x2]	// D.22319, MEM[(double *)_171]
	str	d0, [x0]	// D.22319, MEM[(double *)ha.1797_172]
	ldr	x2, [sp, 184]	// D.22320, argv.__vr_top
	sxtw	x0, w1	// D.22321, D.22298
	add	x0, x0, 16	// D.22322, D.22321,
	add	x0, x2, x0	// D.22323, D.22320, D.22322
	ldr	d0, [x0]	// D.22324, MEM[(double *)_178]
	str	d0, [sp, 784]	// D.22324, MEM[(double *)&ha.1794 + 8B]
	ldr	x2, [sp, 184]	// D.22325, argv.__vr_top
	sxtw	x0, w1	// D.22326, D.22298
	add	x0, x0, 32	// D.22327, D.22326,
	add	x0, x2, x0	// D.22328, D.22325, D.22327
	ldr	d0, [x0]	// D.22329, MEM[(double *)_184]
	str	d0, [sp, 792]	// D.22329, MEM[(double *)&ha.1794 + 16B]
	ldr	x2, [sp, 184]	// D.22330, argv.__vr_top
	sxtw	x0, w1	// D.22331, D.22298
	add	x0, x0, 48	// D.22332, D.22331,
	add	x0, x2, x0	// D.22333, D.22330, D.22332
	ldr	d0, [x0]	// D.22334, MEM[(double *)_190]
	str	d0, [sp, 800]	// D.22334, MEM[(double *)&ha.1794 + 24B]
	add	x0, sp, 776	// iftmp.1796,,
.L2989:
	add	x1, sp, 232	// tmp597,,
	ldp	q0, q1, [x0]	// tmp599, tmp600, *iftmp.1795_92
	stp	q0, q1, [x1]	// tmp599, tmp600, D.6591
// varargs-dll.c:1306:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 240]	// tmp601, D.6591.b
	str	d0, [sp, 40]	// tmp601, b
// varargs-dll.c:1307:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 196]	// D.22335, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1800, argv.__stack
	cmp	w1, 0	// D.22335,
	blt	.L2992		//,
	add	x1, x0, 39	// D.22341, iftmp.1800,
	and	x1, x1, -8	// D.22342, D.22341,
	str	x1, [sp, 168]	// D.22342, argv.__stack
	b	.L2993		//
.L2992:
	add	w2, w1, 64	// D.22344, D.22335,
	str	w2, [sp, 196]	// D.22344, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22346, argv.__vr_offs
	cmp	w2, 0	// D.22346,
	ble	.L2994		//,
	add	x1, x0, 39	// D.22349, iftmp.1800,
	and	x1, x1, -8	// D.22350, D.22349,
	str	x1, [sp, 168]	// D.22350, argv.__stack
	b	.L2993		//
.L2994:
	ldr	x2, [sp, 184]	// D.22352, argv.__vr_top
	sxtw	x0, w1	// D.22353, D.22335
	add	x2, x2, x0	// D.22354, D.22352, D.22353
	add	x0, sp, 808	// ha.1801,,
	ldr	d0, [x2]	// D.22356, MEM[(double *)_211]
	str	d0, [x0]	// D.22356, MEM[(double *)ha.1801_212]
	ldr	x2, [sp, 184]	// D.22357, argv.__vr_top
	sxtw	x0, w1	// D.22358, D.22335
	add	x0, x0, 16	// D.22359, D.22358,
	add	x0, x2, x0	// D.22360, D.22357, D.22359
	ldr	d0, [x0]	// D.22361, MEM[(double *)_218]
	str	d0, [sp, 816]	// D.22361, MEM[(double *)&ha.1798 + 8B]
	ldr	x2, [sp, 184]	// D.22362, argv.__vr_top
	sxtw	x0, w1	// D.22363, D.22335
	add	x0, x0, 32	// D.22364, D.22363,
	add	x0, x2, x0	// D.22365, D.22362, D.22364
	ldr	d0, [x0]	// D.22366, MEM[(double *)_224]
	str	d0, [sp, 824]	// D.22366, MEM[(double *)&ha.1798 + 16B]
	ldr	x2, [sp, 184]	// D.22367, argv.__vr_top
	sxtw	x0, w1	// D.22368, D.22335
	add	x0, x0, 48	// D.22369, D.22368,
	add	x0, x2, x0	// D.22370, D.22367, D.22369
	ldr	d0, [x0]	// D.22371, MEM[(double *)_230]
	str	d0, [sp, 832]	// D.22371, MEM[(double *)&ha.1798 + 24B]
	add	x0, sp, 808	// iftmp.1800,,
.L2993:
	add	x1, sp, 264	// tmp602,,
	ldp	q0, q1, [x0]	// tmp604, tmp605, *iftmp.1799_94
	stp	q0, q1, [x1]	// tmp604, tmp605, D.6592
// varargs-dll.c:1307:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 280]	// tmp606, D.6592.c
	str	d0, [sp, 48]	// tmp606, c
// varargs-dll.c:1308:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 196]	// D.22372, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1804, argv.__stack
	cmp	w1, 0	// D.22372,
	blt	.L2996		//,
	add	x1, x0, 39	// D.22378, iftmp.1804,
	and	x1, x1, -8	// D.22379, D.22378,
	str	x1, [sp, 168]	// D.22379, argv.__stack
	b	.L2997		//
.L2996:
	add	w2, w1, 64	// D.22381, D.22372,
	str	w2, [sp, 196]	// D.22381, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22383, argv.__vr_offs
	cmp	w2, 0	// D.22383,
	ble	.L2998		//,
	add	x1, x0, 39	// D.22386, iftmp.1804,
	and	x1, x1, -8	// D.22387, D.22386,
	str	x1, [sp, 168]	// D.22387, argv.__stack
	b	.L2997		//
.L2998:
	ldr	x2, [sp, 184]	// D.22389, argv.__vr_top
	sxtw	x0, w1	// D.22390, D.22372
	add	x2, x2, x0	// D.22391, D.22389, D.22390
	add	x0, sp, 840	// ha.1805,,
	ldr	d0, [x2]	// D.22393, MEM[(double *)_251]
	str	d0, [x0]	// D.22393, MEM[(double *)ha.1805_252]
	ldr	x2, [sp, 184]	// D.22394, argv.__vr_top
	sxtw	x0, w1	// D.22395, D.22372
	add	x0, x0, 16	// D.22396, D.22395,
	add	x0, x2, x0	// D.22397, D.22394, D.22396
	ldr	d0, [x0]	// D.22398, MEM[(double *)_258]
	str	d0, [sp, 848]	// D.22398, MEM[(double *)&ha.1802 + 8B]
	ldr	x2, [sp, 184]	// D.22399, argv.__vr_top
	sxtw	x0, w1	// D.22400, D.22372
	add	x0, x0, 32	// D.22401, D.22400,
	add	x0, x2, x0	// D.22402, D.22399, D.22401
	ldr	d0, [x0]	// D.22403, MEM[(double *)_264]
	str	d0, [sp, 856]	// D.22403, MEM[(double *)&ha.1802 + 16B]
	ldr	x2, [sp, 184]	// D.22404, argv.__vr_top
	sxtw	x0, w1	// D.22405, D.22372
	add	x0, x0, 48	// D.22406, D.22405,
	add	x0, x2, x0	// D.22407, D.22404, D.22406
	ldr	d0, [x0]	// D.22408, MEM[(double *)_270]
	str	d0, [sp, 864]	// D.22408, MEM[(double *)&ha.1802 + 24B]
	add	x0, sp, 840	// iftmp.1804,,
.L2997:
	add	x1, sp, 296	// tmp607,,
	ldp	q0, q1, [x0]	// tmp609, tmp610, *iftmp.1803_96
	stp	q0, q1, [x1]	// tmp609, tmp610, D.6593
// varargs-dll.c:1308:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 320]	// tmp611, D.6593.d
	str	d0, [sp, 56]	// tmp611, d
// varargs-dll.c:1309:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 196]	// D.22409, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1808, argv.__stack
	cmp	w1, 0	// D.22409,
	blt	.L3000		//,
	add	x1, x0, 39	// D.22415, iftmp.1808,
	and	x1, x1, -8	// D.22416, D.22415,
	str	x1, [sp, 168]	// D.22416, argv.__stack
	b	.L3001		//
.L3000:
	add	w2, w1, 64	// D.22418, D.22409,
	str	w2, [sp, 196]	// D.22418, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22420, argv.__vr_offs
	cmp	w2, 0	// D.22420,
	ble	.L3002		//,
	add	x1, x0, 39	// D.22423, iftmp.1808,
	and	x1, x1, -8	// D.22424, D.22423,
	str	x1, [sp, 168]	// D.22424, argv.__stack
	b	.L3001		//
.L3002:
	ldr	x2, [sp, 184]	// D.22426, argv.__vr_top
	sxtw	x0, w1	// D.22427, D.22409
	add	x2, x2, x0	// D.22428, D.22426, D.22427
	add	x0, sp, 872	// ha.1809,,
	ldr	d0, [x2]	// D.22430, MEM[(double *)_291]
	str	d0, [x0]	// D.22430, MEM[(double *)ha.1809_292]
	ldr	x2, [sp, 184]	// D.22431, argv.__vr_top
	sxtw	x0, w1	// D.22432, D.22409
	add	x0, x0, 16	// D.22433, D.22432,
	add	x0, x2, x0	// D.22434, D.22431, D.22433
	ldr	d0, [x0]	// D.22435, MEM[(double *)_298]
	str	d0, [sp, 880]	// D.22435, MEM[(double *)&ha.1806 + 8B]
	ldr	x2, [sp, 184]	// D.22436, argv.__vr_top
	sxtw	x0, w1	// D.22437, D.22409
	add	x0, x0, 32	// D.22438, D.22437,
	add	x0, x2, x0	// D.22439, D.22436, D.22438
	ldr	d0, [x0]	// D.22440, MEM[(double *)_304]
	str	d0, [sp, 888]	// D.22440, MEM[(double *)&ha.1806 + 16B]
	ldr	x2, [sp, 184]	// D.22441, argv.__vr_top
	sxtw	x0, w1	// D.22442, D.22409
	add	x0, x0, 48	// D.22443, D.22442,
	add	x0, x2, x0	// D.22444, D.22441, D.22443
	ldr	d0, [x0]	// D.22445, MEM[(double *)_310]
	str	d0, [sp, 896]	// D.22445, MEM[(double *)&ha.1806 + 24B]
	add	x0, sp, 872	// iftmp.1808,,
.L3001:
	add	x1, sp, 328	// tmp612,,
	ldp	q0, q1, [x0]	// tmp614, tmp615, *iftmp.1807_98
	stp	q0, q1, [x1]	// tmp614, tmp615, D.6594
// varargs-dll.c:1309:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 328]	// tmp616, D.6594.a
	str	d0, [sp, 64]	// tmp616, e
// varargs-dll.c:1310:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 196]	// D.22446, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1812, argv.__stack
	cmp	w1, 0	// D.22446,
	blt	.L3004		//,
	add	x1, x0, 39	// D.22452, iftmp.1812,
	and	x1, x1, -8	// D.22453, D.22452,
	str	x1, [sp, 168]	// D.22453, argv.__stack
	b	.L3005		//
.L3004:
	add	w2, w1, 64	// D.22455, D.22446,
	str	w2, [sp, 196]	// D.22455, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22457, argv.__vr_offs
	cmp	w2, 0	// D.22457,
	ble	.L3006		//,
	add	x1, x0, 39	// D.22460, iftmp.1812,
	and	x1, x1, -8	// D.22461, D.22460,
	str	x1, [sp, 168]	// D.22461, argv.__stack
	b	.L3005		//
.L3006:
	ldr	x2, [sp, 184]	// D.22463, argv.__vr_top
	sxtw	x0, w1	// D.22464, D.22446
	add	x2, x2, x0	// D.22465, D.22463, D.22464
	add	x0, sp, 904	// ha.1813,,
	ldr	d0, [x2]	// D.22467, MEM[(double *)_331]
	str	d0, [x0]	// D.22467, MEM[(double *)ha.1813_332]
	ldr	x2, [sp, 184]	// D.22468, argv.__vr_top
	sxtw	x0, w1	// D.22469, D.22446
	add	x0, x0, 16	// D.22470, D.22469,
	add	x0, x2, x0	// D.22471, D.22468, D.22470
	ldr	d0, [x0]	// D.22472, MEM[(double *)_338]
	str	d0, [sp, 912]	// D.22472, MEM[(double *)&ha.1810 + 8B]
	ldr	x2, [sp, 184]	// D.22473, argv.__vr_top
	sxtw	x0, w1	// D.22474, D.22446
	add	x0, x0, 32	// D.22475, D.22474,
	add	x0, x2, x0	// D.22476, D.22473, D.22475
	ldr	d0, [x0]	// D.22477, MEM[(double *)_344]
	str	d0, [sp, 920]	// D.22477, MEM[(double *)&ha.1810 + 16B]
	ldr	x2, [sp, 184]	// D.22478, argv.__vr_top
	sxtw	x0, w1	// D.22479, D.22446
	add	x0, x0, 48	// D.22480, D.22479,
	add	x0, x2, x0	// D.22481, D.22478, D.22480
	ldr	d0, [x0]	// D.22482, MEM[(double *)_350]
	str	d0, [sp, 928]	// D.22482, MEM[(double *)&ha.1810 + 24B]
	add	x0, sp, 904	// iftmp.1812,,
.L3005:
	add	x1, sp, 360	// tmp617,,
	ldp	q0, q1, [x0]	// tmp619, tmp620, *iftmp.1811_100
	stp	q0, q1, [x1]	// tmp619, tmp620, D.6595
// varargs-dll.c:1310:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 368]	// tmp621, D.6595.b
	str	d0, [sp, 72]	// tmp621, f
// varargs-dll.c:1311:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 196]	// D.22483, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1816, argv.__stack
	cmp	w1, 0	// D.22483,
	blt	.L3008		//,
	add	x1, x0, 39	// D.22489, iftmp.1816,
	and	x1, x1, -8	// D.22490, D.22489,
	str	x1, [sp, 168]	// D.22490, argv.__stack
	b	.L3009		//
.L3008:
	add	w2, w1, 64	// D.22492, D.22483,
	str	w2, [sp, 196]	// D.22492, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22494, argv.__vr_offs
	cmp	w2, 0	// D.22494,
	ble	.L3010		//,
	add	x1, x0, 39	// D.22497, iftmp.1816,
	and	x1, x1, -8	// D.22498, D.22497,
	str	x1, [sp, 168]	// D.22498, argv.__stack
	b	.L3009		//
.L3010:
	ldr	x2, [sp, 184]	// D.22500, argv.__vr_top
	sxtw	x0, w1	// D.22501, D.22483
	add	x2, x2, x0	// D.22502, D.22500, D.22501
	add	x0, sp, 936	// ha.1817,,
	ldr	d0, [x2]	// D.22504, MEM[(double *)_371]
	str	d0, [x0]	// D.22504, MEM[(double *)ha.1817_372]
	ldr	x2, [sp, 184]	// D.22505, argv.__vr_top
	sxtw	x0, w1	// D.22506, D.22483
	add	x0, x0, 16	// D.22507, D.22506,
	add	x0, x2, x0	// D.22508, D.22505, D.22507
	ldr	d0, [x0]	// D.22509, MEM[(double *)_378]
	str	d0, [sp, 944]	// D.22509, MEM[(double *)&ha.1814 + 8B]
	ldr	x2, [sp, 184]	// D.22510, argv.__vr_top
	sxtw	x0, w1	// D.22511, D.22483
	add	x0, x0, 32	// D.22512, D.22511,
	add	x0, x2, x0	// D.22513, D.22510, D.22512
	ldr	d0, [x0]	// D.22514, MEM[(double *)_384]
	str	d0, [sp, 952]	// D.22514, MEM[(double *)&ha.1814 + 16B]
	ldr	x2, [sp, 184]	// D.22515, argv.__vr_top
	sxtw	x0, w1	// D.22516, D.22483
	add	x0, x0, 48	// D.22517, D.22516,
	add	x0, x2, x0	// D.22518, D.22515, D.22517
	ldr	d0, [x0]	// D.22519, MEM[(double *)_390]
	str	d0, [sp, 960]	// D.22519, MEM[(double *)&ha.1814 + 24B]
	add	x0, sp, 936	// iftmp.1816,,
.L3009:
	add	x1, sp, 392	// tmp622,,
	ldp	q0, q1, [x0]	// tmp624, tmp625, *iftmp.1815_102
	stp	q0, q1, [x1]	// tmp624, tmp625, D.6596
// varargs-dll.c:1311:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 408]	// tmp626, D.6596.c
	str	d0, [sp, 80]	// tmp626, g
// varargs-dll.c:1312:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 196]	// D.22520, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1820, argv.__stack
	cmp	w1, 0	// D.22520,
	blt	.L3012		//,
	add	x1, x0, 39	// D.22526, iftmp.1820,
	and	x1, x1, -8	// D.22527, D.22526,
	str	x1, [sp, 168]	// D.22527, argv.__stack
	b	.L3013		//
.L3012:
	add	w2, w1, 64	// D.22529, D.22520,
	str	w2, [sp, 196]	// D.22529, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22531, argv.__vr_offs
	cmp	w2, 0	// D.22531,
	ble	.L3014		//,
	add	x1, x0, 39	// D.22534, iftmp.1820,
	and	x1, x1, -8	// D.22535, D.22534,
	str	x1, [sp, 168]	// D.22535, argv.__stack
	b	.L3013		//
.L3014:
	ldr	x2, [sp, 184]	// D.22537, argv.__vr_top
	sxtw	x0, w1	// D.22538, D.22520
	add	x2, x2, x0	// D.22539, D.22537, D.22538
	add	x0, sp, 968	// ha.1821,,
	ldr	d0, [x2]	// D.22541, MEM[(double *)_411]
	str	d0, [x0]	// D.22541, MEM[(double *)ha.1821_412]
	ldr	x2, [sp, 184]	// D.22542, argv.__vr_top
	sxtw	x0, w1	// D.22543, D.22520
	add	x0, x0, 16	// D.22544, D.22543,
	add	x0, x2, x0	// D.22545, D.22542, D.22544
	ldr	d0, [x0]	// D.22546, MEM[(double *)_418]
	str	d0, [sp, 976]	// D.22546, MEM[(double *)&ha.1818 + 8B]
	ldr	x2, [sp, 184]	// D.22547, argv.__vr_top
	sxtw	x0, w1	// D.22548, D.22520
	add	x0, x0, 32	// D.22549, D.22548,
	add	x0, x2, x0	// D.22550, D.22547, D.22549
	ldr	d0, [x0]	// D.22551, MEM[(double *)_424]
	str	d0, [sp, 984]	// D.22551, MEM[(double *)&ha.1818 + 16B]
	ldr	x2, [sp, 184]	// D.22552, argv.__vr_top
	sxtw	x0, w1	// D.22553, D.22520
	add	x0, x0, 48	// D.22554, D.22553,
	add	x0, x2, x0	// D.22555, D.22552, D.22554
	ldr	d0, [x0]	// D.22556, MEM[(double *)_430]
	str	d0, [sp, 992]	// D.22556, MEM[(double *)&ha.1818 + 24B]
	add	x0, sp, 968	// iftmp.1820,,
.L3013:
	add	x1, sp, 424	// tmp627,,
	ldp	q0, q1, [x0]	// tmp629, tmp630, *iftmp.1819_104
	stp	q0, q1, [x1]	// tmp629, tmp630, D.6597
// varargs-dll.c:1312:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 448]	// tmp631, D.6597.d
	str	d0, [sp, 88]	// tmp631, h
// varargs-dll.c:1313:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 196]	// D.22557, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1824, argv.__stack
	cmp	w1, 0	// D.22557,
	blt	.L3016		//,
	add	x1, x0, 39	// D.22563, iftmp.1824,
	and	x1, x1, -8	// D.22564, D.22563,
	str	x1, [sp, 168]	// D.22564, argv.__stack
	b	.L3017		//
.L3016:
	add	w2, w1, 64	// D.22566, D.22557,
	str	w2, [sp, 196]	// D.22566, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22568, argv.__vr_offs
	cmp	w2, 0	// D.22568,
	ble	.L3018		//,
	add	x1, x0, 39	// D.22571, iftmp.1824,
	and	x1, x1, -8	// D.22572, D.22571,
	str	x1, [sp, 168]	// D.22572, argv.__stack
	b	.L3017		//
.L3018:
	ldr	x2, [sp, 184]	// D.22574, argv.__vr_top
	sxtw	x0, w1	// D.22575, D.22557
	add	x2, x2, x0	// D.22576, D.22574, D.22575
	add	x0, sp, 1000	// ha.1825,,
	ldr	d0, [x2]	// D.22578, MEM[(double *)_451]
	str	d0, [x0]	// D.22578, MEM[(double *)ha.1825_452]
	ldr	x2, [sp, 184]	// D.22579, argv.__vr_top
	sxtw	x0, w1	// D.22580, D.22557
	add	x0, x0, 16	// D.22581, D.22580,
	add	x0, x2, x0	// D.22582, D.22579, D.22581
	ldr	d0, [x0]	// D.22583, MEM[(double *)_458]
	str	d0, [sp, 1008]	// D.22583, MEM[(double *)&ha.1822 + 8B]
	ldr	x2, [sp, 184]	// D.22584, argv.__vr_top
	sxtw	x0, w1	// D.22585, D.22557
	add	x0, x0, 32	// D.22586, D.22585,
	add	x0, x2, x0	// D.22587, D.22584, D.22586
	ldr	d0, [x0]	// D.22588, MEM[(double *)_464]
	str	d0, [sp, 1016]	// D.22588, MEM[(double *)&ha.1822 + 16B]
	ldr	x2, [sp, 184]	// D.22589, argv.__vr_top
	sxtw	x0, w1	// D.22590, D.22557
	add	x0, x0, 48	// D.22591, D.22590,
	add	x0, x2, x0	// D.22592, D.22589, D.22591
	ldr	d0, [x0]	// D.22593, MEM[(double *)_470]
	str	d0, [sp, 1024]	// D.22593, MEM[(double *)&ha.1822 + 24B]
	add	x0, sp, 1000	// iftmp.1824,,
.L3017:
	add	x1, sp, 456	// tmp632,,
	ldp	q0, q1, [x0]	// tmp634, tmp635, *iftmp.1823_106
	stp	q0, q1, [x1]	// tmp634, tmp635, D.6598
// varargs-dll.c:1313:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 456]	// tmp636, D.6598.a
	str	d0, [sp, 96]	// tmp636, i
// varargs-dll.c:1314:   double j = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 196]	// D.22594, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1828, argv.__stack
	cmp	w1, 0	// D.22594,
	blt	.L3020		//,
	add	x1, x0, 39	// D.22600, iftmp.1828,
	and	x1, x1, -8	// D.22601, D.22600,
	str	x1, [sp, 168]	// D.22601, argv.__stack
	b	.L3021		//
.L3020:
	add	w2, w1, 64	// D.22603, D.22594,
	str	w2, [sp, 196]	// D.22603, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22605, argv.__vr_offs
	cmp	w2, 0	// D.22605,
	ble	.L3022		//,
	add	x1, x0, 39	// D.22608, iftmp.1828,
	and	x1, x1, -8	// D.22609, D.22608,
	str	x1, [sp, 168]	// D.22609, argv.__stack
	b	.L3021		//
.L3022:
	ldr	x2, [sp, 184]	// D.22611, argv.__vr_top
	sxtw	x0, w1	// D.22612, D.22594
	add	x2, x2, x0	// D.22613, D.22611, D.22612
	add	x0, sp, 1032	// ha.1829,,
	ldr	d0, [x2]	// D.22615, MEM[(double *)_491]
	str	d0, [x0]	// D.22615, MEM[(double *)ha.1829_492]
	ldr	x2, [sp, 184]	// D.22616, argv.__vr_top
	sxtw	x0, w1	// D.22617, D.22594
	add	x0, x0, 16	// D.22618, D.22617,
	add	x0, x2, x0	// D.22619, D.22616, D.22618
	ldr	d0, [x0]	// D.22620, MEM[(double *)_498]
	str	d0, [sp, 1040]	// D.22620, MEM[(double *)&ha.1826 + 8B]
	ldr	x2, [sp, 184]	// D.22621, argv.__vr_top
	sxtw	x0, w1	// D.22622, D.22594
	add	x0, x0, 32	// D.22623, D.22622,
	add	x0, x2, x0	// D.22624, D.22621, D.22623
	ldr	d0, [x0]	// D.22625, MEM[(double *)_504]
	str	d0, [sp, 1048]	// D.22625, MEM[(double *)&ha.1826 + 16B]
	ldr	x2, [sp, 184]	// D.22626, argv.__vr_top
	sxtw	x0, w1	// D.22627, D.22594
	add	x0, x0, 48	// D.22628, D.22627,
	add	x0, x2, x0	// D.22629, D.22626, D.22628
	ldr	d0, [x0]	// D.22630, MEM[(double *)_510]
	str	d0, [sp, 1056]	// D.22630, MEM[(double *)&ha.1826 + 24B]
	add	x0, sp, 1032	// iftmp.1828,,
.L3021:
	add	x1, sp, 488	// tmp637,,
	ldp	q0, q1, [x0]	// tmp639, tmp640, *iftmp.1827_108
	stp	q0, q1, [x1]	// tmp639, tmp640, D.6599
// varargs-dll.c:1314:   double j = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 496]	// tmp641, D.6599.b
	str	d0, [sp, 104]	// tmp641, j
// varargs-dll.c:1315:   double k = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 196]	// D.22631, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1832, argv.__stack
	cmp	w1, 0	// D.22631,
	blt	.L3024		//,
	add	x1, x0, 39	// D.22637, iftmp.1832,
	and	x1, x1, -8	// D.22638, D.22637,
	str	x1, [sp, 168]	// D.22638, argv.__stack
	b	.L3025		//
.L3024:
	add	w2, w1, 64	// D.22640, D.22631,
	str	w2, [sp, 196]	// D.22640, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22642, argv.__vr_offs
	cmp	w2, 0	// D.22642,
	ble	.L3026		//,
	add	x1, x0, 39	// D.22645, iftmp.1832,
	and	x1, x1, -8	// D.22646, D.22645,
	str	x1, [sp, 168]	// D.22646, argv.__stack
	b	.L3025		//
.L3026:
	ldr	x2, [sp, 184]	// D.22648, argv.__vr_top
	sxtw	x0, w1	// D.22649, D.22631
	add	x2, x2, x0	// D.22650, D.22648, D.22649
	add	x0, sp, 1064	// ha.1833,,
	ldr	d0, [x2]	// D.22652, MEM[(double *)_531]
	str	d0, [x0]	// D.22652, MEM[(double *)ha.1833_532]
	ldr	x2, [sp, 184]	// D.22653, argv.__vr_top
	sxtw	x0, w1	// D.22654, D.22631
	add	x0, x0, 16	// D.22655, D.22654,
	add	x0, x2, x0	// D.22656, D.22653, D.22655
	ldr	d0, [x0]	// D.22657, MEM[(double *)_538]
	str	d0, [sp, 1072]	// D.22657, MEM[(double *)&ha.1830 + 8B]
	ldr	x2, [sp, 184]	// D.22658, argv.__vr_top
	sxtw	x0, w1	// D.22659, D.22631
	add	x0, x0, 32	// D.22660, D.22659,
	add	x0, x2, x0	// D.22661, D.22658, D.22660
	ldr	d0, [x0]	// D.22662, MEM[(double *)_544]
	str	d0, [sp, 1080]	// D.22662, MEM[(double *)&ha.1830 + 16B]
	ldr	x2, [sp, 184]	// D.22663, argv.__vr_top
	sxtw	x0, w1	// D.22664, D.22631
	add	x0, x0, 48	// D.22665, D.22664,
	add	x0, x2, x0	// D.22666, D.22663, D.22665
	ldr	d0, [x0]	// D.22667, MEM[(double *)_550]
	str	d0, [sp, 1088]	// D.22667, MEM[(double *)&ha.1830 + 24B]
	add	x0, sp, 1064	// iftmp.1832,,
.L3025:
	add	x1, sp, 520	// tmp642,,
	ldp	q0, q1, [x0]	// tmp644, tmp645, *iftmp.1831_110
	stp	q0, q1, [x1]	// tmp644, tmp645, D.6600
// varargs-dll.c:1315:   double k = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 536]	// tmp646, D.6600.c
	str	d0, [sp, 112]	// tmp646, k
// varargs-dll.c:1316:   double l = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 196]	// D.22668, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1836, argv.__stack
	cmp	w1, 0	// D.22668,
	blt	.L3028		//,
	add	x1, x0, 39	// D.22674, iftmp.1836,
	and	x1, x1, -8	// D.22675, D.22674,
	str	x1, [sp, 168]	// D.22675, argv.__stack
	b	.L3029		//
.L3028:
	add	w2, w1, 64	// D.22677, D.22668,
	str	w2, [sp, 196]	// D.22677, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22679, argv.__vr_offs
	cmp	w2, 0	// D.22679,
	ble	.L3030		//,
	add	x1, x0, 39	// D.22682, iftmp.1836,
	and	x1, x1, -8	// D.22683, D.22682,
	str	x1, [sp, 168]	// D.22683, argv.__stack
	b	.L3029		//
.L3030:
	ldr	x2, [sp, 184]	// D.22685, argv.__vr_top
	sxtw	x0, w1	// D.22686, D.22668
	add	x2, x2, x0	// D.22687, D.22685, D.22686
	add	x0, sp, 1096	// ha.1837,,
	ldr	d0, [x2]	// D.22689, MEM[(double *)_571]
	str	d0, [x0]	// D.22689, MEM[(double *)ha.1837_572]
	ldr	x2, [sp, 184]	// D.22690, argv.__vr_top
	sxtw	x0, w1	// D.22691, D.22668
	add	x0, x0, 16	// D.22692, D.22691,
	add	x0, x2, x0	// D.22693, D.22690, D.22692
	ldr	d0, [x0]	// D.22694, MEM[(double *)_578]
	str	d0, [sp, 1104]	// D.22694, MEM[(double *)&ha.1834 + 8B]
	ldr	x2, [sp, 184]	// D.22695, argv.__vr_top
	sxtw	x0, w1	// D.22696, D.22668
	add	x0, x0, 32	// D.22697, D.22696,
	add	x0, x2, x0	// D.22698, D.22695, D.22697
	ldr	d0, [x0]	// D.22699, MEM[(double *)_584]
	str	d0, [sp, 1112]	// D.22699, MEM[(double *)&ha.1834 + 16B]
	ldr	x2, [sp, 184]	// D.22700, argv.__vr_top
	sxtw	x0, w1	// D.22701, D.22668
	add	x0, x0, 48	// D.22702, D.22701,
	add	x0, x2, x0	// D.22703, D.22700, D.22702
	ldr	d0, [x0]	// D.22704, MEM[(double *)_590]
	str	d0, [sp, 1120]	// D.22704, MEM[(double *)&ha.1834 + 24B]
	add	x0, sp, 1096	// iftmp.1836,,
.L3029:
	add	x1, sp, 552	// tmp647,,
	ldp	q0, q1, [x0]	// tmp649, tmp650, *iftmp.1835_112
	stp	q0, q1, [x1]	// tmp649, tmp650, D.6601
// varargs-dll.c:1316:   double l = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 576]	// tmp651, D.6601.d
	str	d0, [sp, 120]	// tmp651, l
// varargs-dll.c:1317:   double m = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 196]	// D.22705, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1840, argv.__stack
	cmp	w1, 0	// D.22705,
	blt	.L3032		//,
	add	x1, x0, 39	// D.22711, iftmp.1840,
	and	x1, x1, -8	// D.22712, D.22711,
	str	x1, [sp, 168]	// D.22712, argv.__stack
	b	.L3033		//
.L3032:
	add	w2, w1, 64	// D.22714, D.22705,
	str	w2, [sp, 196]	// D.22714, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22716, argv.__vr_offs
	cmp	w2, 0	// D.22716,
	ble	.L3034		//,
	add	x1, x0, 39	// D.22719, iftmp.1840,
	and	x1, x1, -8	// D.22720, D.22719,
	str	x1, [sp, 168]	// D.22720, argv.__stack
	b	.L3033		//
.L3034:
	ldr	x2, [sp, 184]	// D.22722, argv.__vr_top
	sxtw	x0, w1	// D.22723, D.22705
	add	x2, x2, x0	// D.22724, D.22722, D.22723
	add	x0, sp, 1128	// ha.1841,,
	ldr	d0, [x2]	// D.22726, MEM[(double *)_611]
	str	d0, [x0]	// D.22726, MEM[(double *)ha.1841_612]
	ldr	x2, [sp, 184]	// D.22727, argv.__vr_top
	sxtw	x0, w1	// D.22728, D.22705
	add	x0, x0, 16	// D.22729, D.22728,
	add	x0, x2, x0	// D.22730, D.22727, D.22729
	ldr	d0, [x0]	// D.22731, MEM[(double *)_618]
	str	d0, [sp, 1136]	// D.22731, MEM[(double *)&ha.1838 + 8B]
	ldr	x2, [sp, 184]	// D.22732, argv.__vr_top
	sxtw	x0, w1	// D.22733, D.22705
	add	x0, x0, 32	// D.22734, D.22733,
	add	x0, x2, x0	// D.22735, D.22732, D.22734
	ldr	d0, [x0]	// D.22736, MEM[(double *)_624]
	str	d0, [sp, 1144]	// D.22736, MEM[(double *)&ha.1838 + 16B]
	ldr	x2, [sp, 184]	// D.22737, argv.__vr_top
	sxtw	x0, w1	// D.22738, D.22705
	add	x0, x0, 48	// D.22739, D.22738,
	add	x0, x2, x0	// D.22740, D.22737, D.22739
	ldr	d0, [x0]	// D.22741, MEM[(double *)_630]
	str	d0, [sp, 1152]	// D.22741, MEM[(double *)&ha.1838 + 24B]
	add	x0, sp, 1128	// iftmp.1840,,
.L3033:
	add	x1, sp, 584	// tmp652,,
	ldp	q0, q1, [x0]	// tmp654, tmp655, *iftmp.1839_114
	stp	q0, q1, [x1]	// tmp654, tmp655, D.6602
// varargs-dll.c:1317:   double m = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 584]	// tmp656, D.6602.a
	str	d0, [sp, 128]	// tmp656, m
// varargs-dll.c:1318:   double n = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [sp, 196]	// D.22742, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1844, argv.__stack
	cmp	w1, 0	// D.22742,
	blt	.L3036		//,
	add	x1, x0, 39	// D.22748, iftmp.1844,
	and	x1, x1, -8	// D.22749, D.22748,
	str	x1, [sp, 168]	// D.22749, argv.__stack
	b	.L3037		//
.L3036:
	add	w2, w1, 64	// D.22751, D.22742,
	str	w2, [sp, 196]	// D.22751, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22753, argv.__vr_offs
	cmp	w2, 0	// D.22753,
	ble	.L3038		//,
	add	x1, x0, 39	// D.22756, iftmp.1844,
	and	x1, x1, -8	// D.22757, D.22756,
	str	x1, [sp, 168]	// D.22757, argv.__stack
	b	.L3037		//
.L3038:
	ldr	x2, [sp, 184]	// D.22759, argv.__vr_top
	sxtw	x0, w1	// D.22760, D.22742
	add	x2, x2, x0	// D.22761, D.22759, D.22760
	add	x0, sp, 1160	// ha.1845,,
	ldr	d0, [x2]	// D.22763, MEM[(double *)_651]
	str	d0, [x0]	// D.22763, MEM[(double *)ha.1845_652]
	ldr	x2, [sp, 184]	// D.22764, argv.__vr_top
	sxtw	x0, w1	// D.22765, D.22742
	add	x0, x0, 16	// D.22766, D.22765,
	add	x0, x2, x0	// D.22767, D.22764, D.22766
	ldr	d0, [x0]	// D.22768, MEM[(double *)_658]
	str	d0, [sp, 1168]	// D.22768, MEM[(double *)&ha.1842 + 8B]
	ldr	x2, [sp, 184]	// D.22769, argv.__vr_top
	sxtw	x0, w1	// D.22770, D.22742
	add	x0, x0, 32	// D.22771, D.22770,
	add	x0, x2, x0	// D.22772, D.22769, D.22771
	ldr	d0, [x0]	// D.22773, MEM[(double *)_664]
	str	d0, [sp, 1176]	// D.22773, MEM[(double *)&ha.1842 + 16B]
	ldr	x2, [sp, 184]	// D.22774, argv.__vr_top
	sxtw	x0, w1	// D.22775, D.22742
	add	x0, x0, 48	// D.22776, D.22775,
	add	x0, x2, x0	// D.22777, D.22774, D.22776
	ldr	d0, [x0]	// D.22778, MEM[(double *)_670]
	str	d0, [sp, 1184]	// D.22778, MEM[(double *)&ha.1842 + 24B]
	add	x0, sp, 1160	// iftmp.1844,,
.L3037:
	add	x1, sp, 616	// tmp657,,
	ldp	q0, q1, [x0]	// tmp659, tmp660, *iftmp.1843_116
	stp	q0, q1, [x1]	// tmp659, tmp660, D.6603
// varargs-dll.c:1318:   double n = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 624]	// tmp661, D.6603.b
	str	d0, [sp, 136]	// tmp661, n
// varargs-dll.c:1319:   double o = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [sp, 196]	// D.22779, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1848, argv.__stack
	cmp	w1, 0	// D.22779,
	blt	.L3040		//,
	add	x1, x0, 39	// D.22785, iftmp.1848,
	and	x1, x1, -8	// D.22786, D.22785,
	str	x1, [sp, 168]	// D.22786, argv.__stack
	b	.L3041		//
.L3040:
	add	w2, w1, 64	// D.22788, D.22779,
	str	w2, [sp, 196]	// D.22788, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22790, argv.__vr_offs
	cmp	w2, 0	// D.22790,
	ble	.L3042		//,
	add	x1, x0, 39	// D.22793, iftmp.1848,
	and	x1, x1, -8	// D.22794, D.22793,
	str	x1, [sp, 168]	// D.22794, argv.__stack
	b	.L3041		//
.L3042:
	ldr	x2, [sp, 184]	// D.22796, argv.__vr_top
	sxtw	x0, w1	// D.22797, D.22779
	add	x2, x2, x0	// D.22798, D.22796, D.22797
	add	x0, sp, 1192	// ha.1849,,
	ldr	d0, [x2]	// D.22800, MEM[(double *)_691]
	str	d0, [x0]	// D.22800, MEM[(double *)ha.1849_692]
	ldr	x2, [sp, 184]	// D.22801, argv.__vr_top
	sxtw	x0, w1	// D.22802, D.22779
	add	x0, x0, 16	// D.22803, D.22802,
	add	x0, x2, x0	// D.22804, D.22801, D.22803
	ldr	d0, [x0]	// D.22805, MEM[(double *)_698]
	str	d0, [sp, 1200]	// D.22805, MEM[(double *)&ha.1846 + 8B]
	ldr	x2, [sp, 184]	// D.22806, argv.__vr_top
	sxtw	x0, w1	// D.22807, D.22779
	add	x0, x0, 32	// D.22808, D.22807,
	add	x0, x2, x0	// D.22809, D.22806, D.22808
	ldr	d0, [x0]	// D.22810, MEM[(double *)_704]
	str	d0, [sp, 1208]	// D.22810, MEM[(double *)&ha.1846 + 16B]
	ldr	x2, [sp, 184]	// D.22811, argv.__vr_top
	sxtw	x0, w1	// D.22812, D.22779
	add	x0, x0, 48	// D.22813, D.22812,
	add	x0, x2, x0	// D.22814, D.22811, D.22813
	ldr	d0, [x0]	// D.22815, MEM[(double *)_710]
	str	d0, [sp, 1216]	// D.22815, MEM[(double *)&ha.1846 + 24B]
	add	x0, sp, 1192	// iftmp.1848,,
.L3041:
	add	x1, sp, 648	// tmp662,,
	ldp	q0, q1, [x0]	// tmp664, tmp665, *iftmp.1847_118
	stp	q0, q1, [x1]	// tmp664, tmp665, D.6604
// varargs-dll.c:1319:   double o = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 664]	// tmp666, D.6604.c
	str	d0, [sp, 144]	// tmp666, o
// varargs-dll.c:1320:   double p = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [sp, 196]	// D.22816, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1852, argv.__stack
	cmp	w1, 0	// D.22816,
	blt	.L3044		//,
	add	x1, x0, 39	// D.22822, iftmp.1852,
	and	x1, x1, -8	// D.22823, D.22822,
	str	x1, [sp, 168]	// D.22823, argv.__stack
	b	.L3045		//
.L3044:
	add	w2, w1, 64	// D.22825, D.22816,
	str	w2, [sp, 196]	// D.22825, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22827, argv.__vr_offs
	cmp	w2, 0	// D.22827,
	ble	.L3046		//,
	add	x1, x0, 39	// D.22830, iftmp.1852,
	and	x1, x1, -8	// D.22831, D.22830,
	str	x1, [sp, 168]	// D.22831, argv.__stack
	b	.L3045		//
.L3046:
	ldr	x2, [sp, 184]	// D.22833, argv.__vr_top
	sxtw	x0, w1	// D.22834, D.22816
	add	x2, x2, x0	// D.22835, D.22833, D.22834
	add	x0, sp, 1224	// ha.1853,,
	ldr	d0, [x2]	// D.22837, MEM[(double *)_731]
	str	d0, [x0]	// D.22837, MEM[(double *)ha.1853_732]
	ldr	x2, [sp, 184]	// D.22838, argv.__vr_top
	sxtw	x0, w1	// D.22839, D.22816
	add	x0, x0, 16	// D.22840, D.22839,
	add	x0, x2, x0	// D.22841, D.22838, D.22840
	ldr	d0, [x0]	// D.22842, MEM[(double *)_738]
	str	d0, [sp, 1232]	// D.22842, MEM[(double *)&ha.1850 + 8B]
	ldr	x2, [sp, 184]	// D.22843, argv.__vr_top
	sxtw	x0, w1	// D.22844, D.22816
	add	x0, x0, 32	// D.22845, D.22844,
	add	x0, x2, x0	// D.22846, D.22843, D.22845
	ldr	d0, [x0]	// D.22847, MEM[(double *)_744]
	str	d0, [sp, 1240]	// D.22847, MEM[(double *)&ha.1850 + 16B]
	ldr	x2, [sp, 184]	// D.22848, argv.__vr_top
	sxtw	x0, w1	// D.22849, D.22816
	add	x0, x0, 48	// D.22850, D.22849,
	add	x0, x2, x0	// D.22851, D.22848, D.22850
	ldr	d0, [x0]	// D.22852, MEM[(double *)_750]
	str	d0, [sp, 1248]	// D.22852, MEM[(double *)&ha.1850 + 24B]
	add	x0, sp, 1224	// iftmp.1852,,
.L3045:
	add	x1, sp, 680	// tmp667,,
	ldp	q0, q1, [x0]	// tmp669, tmp670, *iftmp.1851_120
	stp	q0, q1, [x1]	// tmp669, tmp670, D.6605
// varargs-dll.c:1320:   double p = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 704]	// tmp671, D.6605.d
	str	d0, [sp, 152]	// tmp671, p
// varargs-dll.c:1321:   double q = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [sp, 196]	// D.22853, argv.__vr_offs
	ldr	x0, [sp, 168]	// iftmp.1856, argv.__stack
	cmp	w1, 0	// D.22853,
	blt	.L3048		//,
	add	x1, x0, 39	// D.22859, iftmp.1856,
	and	x1, x1, -8	// D.22860, D.22859,
	str	x1, [sp, 168]	// D.22860, argv.__stack
	b	.L3049		//
.L3048:
	add	w2, w1, 64	// D.22862, D.22853,
	str	w2, [sp, 196]	// D.22862, argv.__vr_offs
	ldr	w2, [sp, 196]	// D.22864, argv.__vr_offs
	cmp	w2, 0	// D.22864,
	ble	.L3050		//,
	add	x1, x0, 39	// D.22867, iftmp.1856,
	and	x1, x1, -8	// D.22868, D.22867,
	str	x1, [sp, 168]	// D.22868, argv.__stack
	b	.L3049		//
.L3050:
	ldr	x2, [sp, 184]	// D.22870, argv.__vr_top
	sxtw	x0, w1	// D.22871, D.22853
	add	x2, x2, x0	// D.22872, D.22870, D.22871
	add	x0, sp, 1256	// ha.1857,,
	ldr	d0, [x2]	// D.22874, MEM[(double *)_771]
	str	d0, [x0]	// D.22874, MEM[(double *)ha.1857_772]
	ldr	x2, [sp, 184]	// D.22875, argv.__vr_top
	sxtw	x0, w1	// D.22876, D.22853
	add	x0, x0, 16	// D.22877, D.22876,
	add	x0, x2, x0	// D.22878, D.22875, D.22877
	ldr	d0, [x0]	// D.22879, MEM[(double *)_778]
	str	d0, [sp, 1264]	// D.22879, MEM[(double *)&ha.1854 + 8B]
	ldr	x2, [sp, 184]	// D.22880, argv.__vr_top
	sxtw	x0, w1	// D.22881, D.22853
	add	x0, x0, 32	// D.22882, D.22881,
	add	x0, x2, x0	// D.22883, D.22880, D.22882
	ldr	d0, [x0]	// D.22884, MEM[(double *)_784]
	str	d0, [sp, 1272]	// D.22884, MEM[(double *)&ha.1854 + 16B]
	ldr	x2, [sp, 184]	// D.22885, argv.__vr_top
	sxtw	x0, w1	// D.22886, D.22853
	add	x0, x0, 48	// D.22887, D.22886,
	add	x0, x2, x0	// D.22888, D.22885, D.22887
	ldr	d0, [x0]	// D.22889, MEM[(double *)_790]
	str	d0, [sp, 1280]	// D.22889, MEM[(double *)&ha.1854 + 24B]
	add	x0, sp, 1256	// iftmp.1856,,
.L3049:
	add	x1, sp, 712	// tmp672,,
	ldp	q0, q1, [x0]	// tmp674, tmp675, *iftmp.1855_122
	stp	q0, q1, [x1]	// tmp674, tmp675, D.6606
// varargs-dll.c:1321:   double q = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 712]	// tmp676, D.6606.a
	str	d0, [sp, 160]	// tmp676, q
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 32]	// tmp677, a
	ldr	d0, [sp, 40]	// tmp678, b
	fadd	d1, d1, d0	// _1, tmp677, tmp678
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 48]	// tmp679, c
	fadd	d1, d1, d0	// _2, _1, tmp679
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 56]	// tmp680, d
	fadd	d1, d1, d0	// _3, _2, tmp680
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp681, e
	fadd	d1, d1, d0	// _4, _3, tmp681
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp682, f
	fadd	d1, d1, d0	// _5, _4, tmp682
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp683, g
	fadd	d1, d1, d0	// _6, _5, tmp683
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp684, h
	fadd	d1, d1, d0	// _7, _6, tmp684
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp685, i
	fadd	d1, d1, d0	// _8, _7, tmp685
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp686, j
	fadd	d1, d1, d0	// _9, _8, tmp686
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp687, k
	fadd	d1, d1, d0	// _10, _9, tmp687
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp688, l
	fadd	d1, d1, d0	// _11, _10, tmp688
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp689, m
	fadd	d1, d1, d0	// _12, _11, tmp689
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp690, n
	fadd	d1, d1, d0	// _13, _12, tmp690
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp691, o
	fadd	d1, d1, d0	// _14, _13, tmp691
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp692, p
	fadd	d1, d1, d0	// _15, _14, tmp692
// varargs-dll.c:1323:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp693, q
	fadd	d0, d1, d0	// _16, _15, tmp693
	fcvtzs	w0, d0	// _54, _16
	mov	w1, w0	// <retval>, _54
// varargs-dll.c:1324: }
	adrp	x0, :got:__stack_chk_guard	// tmp696,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp695, tmp696,
	ldr	x3, [sp, 1288]	// tmp698, D.22890
	ldr	x2, [x0]	// tmp699,
	subs	x3, x3, x2	// tmp698, tmp699
	mov	x2, 0	// tmp699
	beq	.L3053		//,
	bl	__stack_chk_fail		//
.L3053:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1488	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE84:
	.size	use_va_args_many_hfa_4_doubles, .-use_va_args_many_hfa_4_doubles
	.align	2
	.global	use_va_list_many_hfa_4_doubles
	.type	use_va_list_many_hfa_4_doubles, %function
use_va_list_many_hfa_4_doubles:
.LFB85:
	.cfi_startproc
	sub	sp, sp, #1280	//,,
	.cfi_def_cfa_offset 1280
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1280
	.cfi_offset 30, -1272
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -1264
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp586,
// varargs-dll.c:1328: {
	adrp	x0, :got:__stack_chk_guard	// tmp588,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp587, tmp588,
	ldr	x1, [x0]	// tmp694,
	str	x1, [sp, 1272]	// tmp694, D.23523
	mov	x1, 0	// tmp694
// varargs-dll.c:1329:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.22894, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1860, argv.__stack
	cmp	w1, 0	// D.22894,
	blt	.L3055		//,
	add	x1, x0, 39	// D.22900, iftmp.1860,
	and	x1, x1, -8	// D.22901, D.22900,
	str	x1, [x19]	// D.22901, argv.__stack
	b	.L3056		//
.L3055:
	add	w2, w1, 64	// D.22903, D.22894,
	str	w2, [x19, 28]	// D.22903, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22905, argv.__vr_offs
	cmp	w2, 0	// D.22905,
	ble	.L3057		//,
	add	x1, x0, 39	// D.22908, iftmp.1860,
	and	x1, x1, -8	// D.22909, D.22908,
	str	x1, [x19]	// D.22909, argv.__stack
	b	.L3056		//
.L3057:
	ldr	x2, [x19, 16]	// D.22911, argv.__vr_top
	sxtw	x0, w1	// D.22912, D.22894
	add	x2, x2, x0	// D.22913, D.22911, D.22912
	add	x0, sp, 728	// ha.1861,,
	ldr	d0, [x2]	// D.22915, MEM[(double *)_128]
	str	d0, [x0]	// D.22915, MEM[(double *)ha.1861_129]
	ldr	x2, [x19, 16]	// D.22916, argv.__vr_top
	sxtw	x0, w1	// D.22917, D.22894
	add	x0, x0, 16	// D.22918, D.22917,
	add	x0, x2, x0	// D.22919, D.22916, D.22918
	ldr	d0, [x0]	// D.22920, MEM[(double *)_135]
	str	d0, [sp, 736]	// D.22920, MEM[(double *)&ha.1858 + 8B]
	ldr	x2, [x19, 16]	// D.22921, argv.__vr_top
	sxtw	x0, w1	// D.22922, D.22894
	add	x0, x0, 32	// D.22923, D.22922,
	add	x0, x2, x0	// D.22924, D.22921, D.22923
	ldr	d0, [x0]	// D.22925, MEM[(double *)_141]
	str	d0, [sp, 744]	// D.22925, MEM[(double *)&ha.1858 + 16B]
	ldr	x2, [x19, 16]	// D.22926, argv.__vr_top
	sxtw	x0, w1	// D.22927, D.22894
	add	x0, x0, 48	// D.22928, D.22927,
	add	x0, x2, x0	// D.22929, D.22926, D.22928
	ldr	d0, [x0]	// D.22930, MEM[(double *)_147]
	str	d0, [sp, 752]	// D.22930, MEM[(double *)&ha.1858 + 24B]
	add	x0, sp, 728	// iftmp.1860,,
.L3056:
	add	x1, sp, 184	// tmp589,,
	ldp	q0, q1, [x0]	// tmp591, tmp592, *iftmp.1859_87
	stp	q0, q1, [x1]	// tmp591, tmp592, D.6610
// varargs-dll.c:1329:   double a = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 184]	// tmp593, D.6610.a
	str	d0, [sp, 48]	// tmp593, a
// varargs-dll.c:1330:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.22931, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1864, argv.__stack
	cmp	w1, 0	// D.22931,
	blt	.L3059		//,
	add	x1, x0, 39	// D.22937, iftmp.1864,
	and	x1, x1, -8	// D.22938, D.22937,
	str	x1, [x19]	// D.22938, argv.__stack
	b	.L3060		//
.L3059:
	add	w2, w1, 64	// D.22940, D.22931,
	str	w2, [x19, 28]	// D.22940, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22942, argv.__vr_offs
	cmp	w2, 0	// D.22942,
	ble	.L3061		//,
	add	x1, x0, 39	// D.22945, iftmp.1864,
	and	x1, x1, -8	// D.22946, D.22945,
	str	x1, [x19]	// D.22946, argv.__stack
	b	.L3060		//
.L3061:
	ldr	x2, [x19, 16]	// D.22948, argv.__vr_top
	sxtw	x0, w1	// D.22949, D.22931
	add	x2, x2, x0	// D.22950, D.22948, D.22949
	add	x0, sp, 760	// ha.1865,,
	ldr	d0, [x2]	// D.22952, MEM[(double *)_168]
	str	d0, [x0]	// D.22952, MEM[(double *)ha.1865_169]
	ldr	x2, [x19, 16]	// D.22953, argv.__vr_top
	sxtw	x0, w1	// D.22954, D.22931
	add	x0, x0, 16	// D.22955, D.22954,
	add	x0, x2, x0	// D.22956, D.22953, D.22955
	ldr	d0, [x0]	// D.22957, MEM[(double *)_175]
	str	d0, [sp, 768]	// D.22957, MEM[(double *)&ha.1862 + 8B]
	ldr	x2, [x19, 16]	// D.22958, argv.__vr_top
	sxtw	x0, w1	// D.22959, D.22931
	add	x0, x0, 32	// D.22960, D.22959,
	add	x0, x2, x0	// D.22961, D.22958, D.22960
	ldr	d0, [x0]	// D.22962, MEM[(double *)_181]
	str	d0, [sp, 776]	// D.22962, MEM[(double *)&ha.1862 + 16B]
	ldr	x2, [x19, 16]	// D.22963, argv.__vr_top
	sxtw	x0, w1	// D.22964, D.22931
	add	x0, x0, 48	// D.22965, D.22964,
	add	x0, x2, x0	// D.22966, D.22963, D.22965
	ldr	d0, [x0]	// D.22967, MEM[(double *)_187]
	str	d0, [sp, 784]	// D.22967, MEM[(double *)&ha.1862 + 24B]
	add	x0, sp, 760	// iftmp.1864,,
.L3060:
	add	x1, sp, 216	// tmp594,,
	ldp	q0, q1, [x0]	// tmp596, tmp597, *iftmp.1863_89
	stp	q0, q1, [x1]	// tmp596, tmp597, D.6611
// varargs-dll.c:1330:   double b = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 224]	// tmp598, D.6611.b
	str	d0, [sp, 56]	// tmp598, b
// varargs-dll.c:1331:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.22968, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1868, argv.__stack
	cmp	w1, 0	// D.22968,
	blt	.L3063		//,
	add	x1, x0, 39	// D.22974, iftmp.1868,
	and	x1, x1, -8	// D.22975, D.22974,
	str	x1, [x19]	// D.22975, argv.__stack
	b	.L3064		//
.L3063:
	add	w2, w1, 64	// D.22977, D.22968,
	str	w2, [x19, 28]	// D.22977, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.22979, argv.__vr_offs
	cmp	w2, 0	// D.22979,
	ble	.L3065		//,
	add	x1, x0, 39	// D.22982, iftmp.1868,
	and	x1, x1, -8	// D.22983, D.22982,
	str	x1, [x19]	// D.22983, argv.__stack
	b	.L3064		//
.L3065:
	ldr	x2, [x19, 16]	// D.22985, argv.__vr_top
	sxtw	x0, w1	// D.22986, D.22968
	add	x2, x2, x0	// D.22987, D.22985, D.22986
	add	x0, sp, 792	// ha.1869,,
	ldr	d0, [x2]	// D.22989, MEM[(double *)_208]
	str	d0, [x0]	// D.22989, MEM[(double *)ha.1869_209]
	ldr	x2, [x19, 16]	// D.22990, argv.__vr_top
	sxtw	x0, w1	// D.22991, D.22968
	add	x0, x0, 16	// D.22992, D.22991,
	add	x0, x2, x0	// D.22993, D.22990, D.22992
	ldr	d0, [x0]	// D.22994, MEM[(double *)_215]
	str	d0, [sp, 800]	// D.22994, MEM[(double *)&ha.1866 + 8B]
	ldr	x2, [x19, 16]	// D.22995, argv.__vr_top
	sxtw	x0, w1	// D.22996, D.22968
	add	x0, x0, 32	// D.22997, D.22996,
	add	x0, x2, x0	// D.22998, D.22995, D.22997
	ldr	d0, [x0]	// D.22999, MEM[(double *)_221]
	str	d0, [sp, 808]	// D.22999, MEM[(double *)&ha.1866 + 16B]
	ldr	x2, [x19, 16]	// D.23000, argv.__vr_top
	sxtw	x0, w1	// D.23001, D.22968
	add	x0, x0, 48	// D.23002, D.23001,
	add	x0, x2, x0	// D.23003, D.23000, D.23002
	ldr	d0, [x0]	// D.23004, MEM[(double *)_227]
	str	d0, [sp, 816]	// D.23004, MEM[(double *)&ha.1866 + 24B]
	add	x0, sp, 792	// iftmp.1868,,
.L3064:
	add	x1, sp, 248	// tmp599,,
	ldp	q0, q1, [x0]	// tmp601, tmp602, *iftmp.1867_91
	stp	q0, q1, [x1]	// tmp601, tmp602, D.6612
// varargs-dll.c:1331:   double c = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 264]	// tmp603, D.6612.c
	str	d0, [sp, 64]	// tmp603, c
// varargs-dll.c:1332:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.23005, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1872, argv.__stack
	cmp	w1, 0	// D.23005,
	blt	.L3067		//,
	add	x1, x0, 39	// D.23011, iftmp.1872,
	and	x1, x1, -8	// D.23012, D.23011,
	str	x1, [x19]	// D.23012, argv.__stack
	b	.L3068		//
.L3067:
	add	w2, w1, 64	// D.23014, D.23005,
	str	w2, [x19, 28]	// D.23014, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23016, argv.__vr_offs
	cmp	w2, 0	// D.23016,
	ble	.L3069		//,
	add	x1, x0, 39	// D.23019, iftmp.1872,
	and	x1, x1, -8	// D.23020, D.23019,
	str	x1, [x19]	// D.23020, argv.__stack
	b	.L3068		//
.L3069:
	ldr	x2, [x19, 16]	// D.23022, argv.__vr_top
	sxtw	x0, w1	// D.23023, D.23005
	add	x2, x2, x0	// D.23024, D.23022, D.23023
	add	x0, sp, 824	// ha.1873,,
	ldr	d0, [x2]	// D.23026, MEM[(double *)_248]
	str	d0, [x0]	// D.23026, MEM[(double *)ha.1873_249]
	ldr	x2, [x19, 16]	// D.23027, argv.__vr_top
	sxtw	x0, w1	// D.23028, D.23005
	add	x0, x0, 16	// D.23029, D.23028,
	add	x0, x2, x0	// D.23030, D.23027, D.23029
	ldr	d0, [x0]	// D.23031, MEM[(double *)_255]
	str	d0, [sp, 832]	// D.23031, MEM[(double *)&ha.1870 + 8B]
	ldr	x2, [x19, 16]	// D.23032, argv.__vr_top
	sxtw	x0, w1	// D.23033, D.23005
	add	x0, x0, 32	// D.23034, D.23033,
	add	x0, x2, x0	// D.23035, D.23032, D.23034
	ldr	d0, [x0]	// D.23036, MEM[(double *)_261]
	str	d0, [sp, 840]	// D.23036, MEM[(double *)&ha.1870 + 16B]
	ldr	x2, [x19, 16]	// D.23037, argv.__vr_top
	sxtw	x0, w1	// D.23038, D.23005
	add	x0, x0, 48	// D.23039, D.23038,
	add	x0, x2, x0	// D.23040, D.23037, D.23039
	ldr	d0, [x0]	// D.23041, MEM[(double *)_267]
	str	d0, [sp, 848]	// D.23041, MEM[(double *)&ha.1870 + 24B]
	add	x0, sp, 824	// iftmp.1872,,
.L3068:
	add	x1, sp, 280	// tmp604,,
	ldp	q0, q1, [x0]	// tmp606, tmp607, *iftmp.1871_93
	stp	q0, q1, [x1]	// tmp606, tmp607, D.6613
// varargs-dll.c:1332:   double d = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 304]	// tmp608, D.6613.d
	str	d0, [sp, 72]	// tmp608, d
// varargs-dll.c:1333:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.23042, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1876, argv.__stack
	cmp	w1, 0	// D.23042,
	blt	.L3071		//,
	add	x1, x0, 39	// D.23048, iftmp.1876,
	and	x1, x1, -8	// D.23049, D.23048,
	str	x1, [x19]	// D.23049, argv.__stack
	b	.L3072		//
.L3071:
	add	w2, w1, 64	// D.23051, D.23042,
	str	w2, [x19, 28]	// D.23051, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23053, argv.__vr_offs
	cmp	w2, 0	// D.23053,
	ble	.L3073		//,
	add	x1, x0, 39	// D.23056, iftmp.1876,
	and	x1, x1, -8	// D.23057, D.23056,
	str	x1, [x19]	// D.23057, argv.__stack
	b	.L3072		//
.L3073:
	ldr	x2, [x19, 16]	// D.23059, argv.__vr_top
	sxtw	x0, w1	// D.23060, D.23042
	add	x2, x2, x0	// D.23061, D.23059, D.23060
	add	x0, sp, 856	// ha.1877,,
	ldr	d0, [x2]	// D.23063, MEM[(double *)_288]
	str	d0, [x0]	// D.23063, MEM[(double *)ha.1877_289]
	ldr	x2, [x19, 16]	// D.23064, argv.__vr_top
	sxtw	x0, w1	// D.23065, D.23042
	add	x0, x0, 16	// D.23066, D.23065,
	add	x0, x2, x0	// D.23067, D.23064, D.23066
	ldr	d0, [x0]	// D.23068, MEM[(double *)_295]
	str	d0, [sp, 864]	// D.23068, MEM[(double *)&ha.1874 + 8B]
	ldr	x2, [x19, 16]	// D.23069, argv.__vr_top
	sxtw	x0, w1	// D.23070, D.23042
	add	x0, x0, 32	// D.23071, D.23070,
	add	x0, x2, x0	// D.23072, D.23069, D.23071
	ldr	d0, [x0]	// D.23073, MEM[(double *)_301]
	str	d0, [sp, 872]	// D.23073, MEM[(double *)&ha.1874 + 16B]
	ldr	x2, [x19, 16]	// D.23074, argv.__vr_top
	sxtw	x0, w1	// D.23075, D.23042
	add	x0, x0, 48	// D.23076, D.23075,
	add	x0, x2, x0	// D.23077, D.23074, D.23076
	ldr	d0, [x0]	// D.23078, MEM[(double *)_307]
	str	d0, [sp, 880]	// D.23078, MEM[(double *)&ha.1874 + 24B]
	add	x0, sp, 856	// iftmp.1876,,
.L3072:
	add	x1, sp, 312	// tmp609,,
	ldp	q0, q1, [x0]	// tmp611, tmp612, *iftmp.1875_95
	stp	q0, q1, [x1]	// tmp611, tmp612, D.6614
// varargs-dll.c:1333:   double e = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 312]	// tmp613, D.6614.a
	str	d0, [sp, 80]	// tmp613, e
// varargs-dll.c:1334:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.23079, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1880, argv.__stack
	cmp	w1, 0	// D.23079,
	blt	.L3075		//,
	add	x1, x0, 39	// D.23085, iftmp.1880,
	and	x1, x1, -8	// D.23086, D.23085,
	str	x1, [x19]	// D.23086, argv.__stack
	b	.L3076		//
.L3075:
	add	w2, w1, 64	// D.23088, D.23079,
	str	w2, [x19, 28]	// D.23088, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23090, argv.__vr_offs
	cmp	w2, 0	// D.23090,
	ble	.L3077		//,
	add	x1, x0, 39	// D.23093, iftmp.1880,
	and	x1, x1, -8	// D.23094, D.23093,
	str	x1, [x19]	// D.23094, argv.__stack
	b	.L3076		//
.L3077:
	ldr	x2, [x19, 16]	// D.23096, argv.__vr_top
	sxtw	x0, w1	// D.23097, D.23079
	add	x2, x2, x0	// D.23098, D.23096, D.23097
	add	x0, sp, 888	// ha.1881,,
	ldr	d0, [x2]	// D.23100, MEM[(double *)_328]
	str	d0, [x0]	// D.23100, MEM[(double *)ha.1881_329]
	ldr	x2, [x19, 16]	// D.23101, argv.__vr_top
	sxtw	x0, w1	// D.23102, D.23079
	add	x0, x0, 16	// D.23103, D.23102,
	add	x0, x2, x0	// D.23104, D.23101, D.23103
	ldr	d0, [x0]	// D.23105, MEM[(double *)_335]
	str	d0, [sp, 896]	// D.23105, MEM[(double *)&ha.1878 + 8B]
	ldr	x2, [x19, 16]	// D.23106, argv.__vr_top
	sxtw	x0, w1	// D.23107, D.23079
	add	x0, x0, 32	// D.23108, D.23107,
	add	x0, x2, x0	// D.23109, D.23106, D.23108
	ldr	d0, [x0]	// D.23110, MEM[(double *)_341]
	str	d0, [sp, 904]	// D.23110, MEM[(double *)&ha.1878 + 16B]
	ldr	x2, [x19, 16]	// D.23111, argv.__vr_top
	sxtw	x0, w1	// D.23112, D.23079
	add	x0, x0, 48	// D.23113, D.23112,
	add	x0, x2, x0	// D.23114, D.23111, D.23113
	ldr	d0, [x0]	// D.23115, MEM[(double *)_347]
	str	d0, [sp, 912]	// D.23115, MEM[(double *)&ha.1878 + 24B]
	add	x0, sp, 888	// iftmp.1880,,
.L3076:
	add	x1, sp, 344	// tmp614,,
	ldp	q0, q1, [x0]	// tmp616, tmp617, *iftmp.1879_97
	stp	q0, q1, [x1]	// tmp616, tmp617, D.6615
// varargs-dll.c:1334:   double f = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 352]	// tmp618, D.6615.b
	str	d0, [sp, 88]	// tmp618, f
// varargs-dll.c:1335:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.23116, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1884, argv.__stack
	cmp	w1, 0	// D.23116,
	blt	.L3079		//,
	add	x1, x0, 39	// D.23122, iftmp.1884,
	and	x1, x1, -8	// D.23123, D.23122,
	str	x1, [x19]	// D.23123, argv.__stack
	b	.L3080		//
.L3079:
	add	w2, w1, 64	// D.23125, D.23116,
	str	w2, [x19, 28]	// D.23125, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23127, argv.__vr_offs
	cmp	w2, 0	// D.23127,
	ble	.L3081		//,
	add	x1, x0, 39	// D.23130, iftmp.1884,
	and	x1, x1, -8	// D.23131, D.23130,
	str	x1, [x19]	// D.23131, argv.__stack
	b	.L3080		//
.L3081:
	ldr	x2, [x19, 16]	// D.23133, argv.__vr_top
	sxtw	x0, w1	// D.23134, D.23116
	add	x2, x2, x0	// D.23135, D.23133, D.23134
	add	x0, sp, 920	// ha.1885,,
	ldr	d0, [x2]	// D.23137, MEM[(double *)_368]
	str	d0, [x0]	// D.23137, MEM[(double *)ha.1885_369]
	ldr	x2, [x19, 16]	// D.23138, argv.__vr_top
	sxtw	x0, w1	// D.23139, D.23116
	add	x0, x0, 16	// D.23140, D.23139,
	add	x0, x2, x0	// D.23141, D.23138, D.23140
	ldr	d0, [x0]	// D.23142, MEM[(double *)_375]
	str	d0, [sp, 928]	// D.23142, MEM[(double *)&ha.1882 + 8B]
	ldr	x2, [x19, 16]	// D.23143, argv.__vr_top
	sxtw	x0, w1	// D.23144, D.23116
	add	x0, x0, 32	// D.23145, D.23144,
	add	x0, x2, x0	// D.23146, D.23143, D.23145
	ldr	d0, [x0]	// D.23147, MEM[(double *)_381]
	str	d0, [sp, 936]	// D.23147, MEM[(double *)&ha.1882 + 16B]
	ldr	x2, [x19, 16]	// D.23148, argv.__vr_top
	sxtw	x0, w1	// D.23149, D.23116
	add	x0, x0, 48	// D.23150, D.23149,
	add	x0, x2, x0	// D.23151, D.23148, D.23150
	ldr	d0, [x0]	// D.23152, MEM[(double *)_387]
	str	d0, [sp, 944]	// D.23152, MEM[(double *)&ha.1882 + 24B]
	add	x0, sp, 920	// iftmp.1884,,
.L3080:
	add	x1, sp, 376	// tmp619,,
	ldp	q0, q1, [x0]	// tmp621, tmp622, *iftmp.1883_99
	stp	q0, q1, [x1]	// tmp621, tmp622, D.6616
// varargs-dll.c:1335:   double g = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 392]	// tmp623, D.6616.c
	str	d0, [sp, 96]	// tmp623, g
// varargs-dll.c:1336:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.23153, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1888, argv.__stack
	cmp	w1, 0	// D.23153,
	blt	.L3083		//,
	add	x1, x0, 39	// D.23159, iftmp.1888,
	and	x1, x1, -8	// D.23160, D.23159,
	str	x1, [x19]	// D.23160, argv.__stack
	b	.L3084		//
.L3083:
	add	w2, w1, 64	// D.23162, D.23153,
	str	w2, [x19, 28]	// D.23162, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23164, argv.__vr_offs
	cmp	w2, 0	// D.23164,
	ble	.L3085		//,
	add	x1, x0, 39	// D.23167, iftmp.1888,
	and	x1, x1, -8	// D.23168, D.23167,
	str	x1, [x19]	// D.23168, argv.__stack
	b	.L3084		//
.L3085:
	ldr	x2, [x19, 16]	// D.23170, argv.__vr_top
	sxtw	x0, w1	// D.23171, D.23153
	add	x2, x2, x0	// D.23172, D.23170, D.23171
	add	x0, sp, 952	// ha.1889,,
	ldr	d0, [x2]	// D.23174, MEM[(double *)_408]
	str	d0, [x0]	// D.23174, MEM[(double *)ha.1889_409]
	ldr	x2, [x19, 16]	// D.23175, argv.__vr_top
	sxtw	x0, w1	// D.23176, D.23153
	add	x0, x0, 16	// D.23177, D.23176,
	add	x0, x2, x0	// D.23178, D.23175, D.23177
	ldr	d0, [x0]	// D.23179, MEM[(double *)_415]
	str	d0, [sp, 960]	// D.23179, MEM[(double *)&ha.1886 + 8B]
	ldr	x2, [x19, 16]	// D.23180, argv.__vr_top
	sxtw	x0, w1	// D.23181, D.23153
	add	x0, x0, 32	// D.23182, D.23181,
	add	x0, x2, x0	// D.23183, D.23180, D.23182
	ldr	d0, [x0]	// D.23184, MEM[(double *)_421]
	str	d0, [sp, 968]	// D.23184, MEM[(double *)&ha.1886 + 16B]
	ldr	x2, [x19, 16]	// D.23185, argv.__vr_top
	sxtw	x0, w1	// D.23186, D.23153
	add	x0, x0, 48	// D.23187, D.23186,
	add	x0, x2, x0	// D.23188, D.23185, D.23187
	ldr	d0, [x0]	// D.23189, MEM[(double *)_427]
	str	d0, [sp, 976]	// D.23189, MEM[(double *)&ha.1886 + 24B]
	add	x0, sp, 952	// iftmp.1888,,
.L3084:
	add	x1, sp, 408	// tmp624,,
	ldp	q0, q1, [x0]	// tmp626, tmp627, *iftmp.1887_101
	stp	q0, q1, [x1]	// tmp626, tmp627, D.6617
// varargs-dll.c:1336:   double h = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 432]	// tmp628, D.6617.d
	str	d0, [sp, 104]	// tmp628, h
// varargs-dll.c:1337:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.23190, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1892, argv.__stack
	cmp	w1, 0	// D.23190,
	blt	.L3087		//,
	add	x1, x0, 39	// D.23196, iftmp.1892,
	and	x1, x1, -8	// D.23197, D.23196,
	str	x1, [x19]	// D.23197, argv.__stack
	b	.L3088		//
.L3087:
	add	w2, w1, 64	// D.23199, D.23190,
	str	w2, [x19, 28]	// D.23199, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23201, argv.__vr_offs
	cmp	w2, 0	// D.23201,
	ble	.L3089		//,
	add	x1, x0, 39	// D.23204, iftmp.1892,
	and	x1, x1, -8	// D.23205, D.23204,
	str	x1, [x19]	// D.23205, argv.__stack
	b	.L3088		//
.L3089:
	ldr	x2, [x19, 16]	// D.23207, argv.__vr_top
	sxtw	x0, w1	// D.23208, D.23190
	add	x2, x2, x0	// D.23209, D.23207, D.23208
	add	x0, sp, 984	// ha.1893,,
	ldr	d0, [x2]	// D.23211, MEM[(double *)_448]
	str	d0, [x0]	// D.23211, MEM[(double *)ha.1893_449]
	ldr	x2, [x19, 16]	// D.23212, argv.__vr_top
	sxtw	x0, w1	// D.23213, D.23190
	add	x0, x0, 16	// D.23214, D.23213,
	add	x0, x2, x0	// D.23215, D.23212, D.23214
	ldr	d0, [x0]	// D.23216, MEM[(double *)_455]
	str	d0, [sp, 992]	// D.23216, MEM[(double *)&ha.1890 + 8B]
	ldr	x2, [x19, 16]	// D.23217, argv.__vr_top
	sxtw	x0, w1	// D.23218, D.23190
	add	x0, x0, 32	// D.23219, D.23218,
	add	x0, x2, x0	// D.23220, D.23217, D.23219
	ldr	d0, [x0]	// D.23221, MEM[(double *)_461]
	str	d0, [sp, 1000]	// D.23221, MEM[(double *)&ha.1890 + 16B]
	ldr	x2, [x19, 16]	// D.23222, argv.__vr_top
	sxtw	x0, w1	// D.23223, D.23190
	add	x0, x0, 48	// D.23224, D.23223,
	add	x0, x2, x0	// D.23225, D.23222, D.23224
	ldr	d0, [x0]	// D.23226, MEM[(double *)_467]
	str	d0, [sp, 1008]	// D.23226, MEM[(double *)&ha.1890 + 24B]
	add	x0, sp, 984	// iftmp.1892,,
.L3088:
	add	x1, sp, 440	// tmp629,,
	ldp	q0, q1, [x0]	// tmp631, tmp632, *iftmp.1891_103
	stp	q0, q1, [x1]	// tmp631, tmp632, D.6618
// varargs-dll.c:1337:   double i = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 440]	// tmp633, D.6618.a
	str	d0, [sp, 112]	// tmp633, i
// varargs-dll.c:1338:   double j = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.23227, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1896, argv.__stack
	cmp	w1, 0	// D.23227,
	blt	.L3091		//,
	add	x1, x0, 39	// D.23233, iftmp.1896,
	and	x1, x1, -8	// D.23234, D.23233,
	str	x1, [x19]	// D.23234, argv.__stack
	b	.L3092		//
.L3091:
	add	w2, w1, 64	// D.23236, D.23227,
	str	w2, [x19, 28]	// D.23236, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23238, argv.__vr_offs
	cmp	w2, 0	// D.23238,
	ble	.L3093		//,
	add	x1, x0, 39	// D.23241, iftmp.1896,
	and	x1, x1, -8	// D.23242, D.23241,
	str	x1, [x19]	// D.23242, argv.__stack
	b	.L3092		//
.L3093:
	ldr	x2, [x19, 16]	// D.23244, argv.__vr_top
	sxtw	x0, w1	// D.23245, D.23227
	add	x2, x2, x0	// D.23246, D.23244, D.23245
	add	x0, sp, 1016	// ha.1897,,
	ldr	d0, [x2]	// D.23248, MEM[(double *)_488]
	str	d0, [x0]	// D.23248, MEM[(double *)ha.1897_489]
	ldr	x2, [x19, 16]	// D.23249, argv.__vr_top
	sxtw	x0, w1	// D.23250, D.23227
	add	x0, x0, 16	// D.23251, D.23250,
	add	x0, x2, x0	// D.23252, D.23249, D.23251
	ldr	d0, [x0]	// D.23253, MEM[(double *)_495]
	str	d0, [sp, 1024]	// D.23253, MEM[(double *)&ha.1894 + 8B]
	ldr	x2, [x19, 16]	// D.23254, argv.__vr_top
	sxtw	x0, w1	// D.23255, D.23227
	add	x0, x0, 32	// D.23256, D.23255,
	add	x0, x2, x0	// D.23257, D.23254, D.23256
	ldr	d0, [x0]	// D.23258, MEM[(double *)_501]
	str	d0, [sp, 1032]	// D.23258, MEM[(double *)&ha.1894 + 16B]
	ldr	x2, [x19, 16]	// D.23259, argv.__vr_top
	sxtw	x0, w1	// D.23260, D.23227
	add	x0, x0, 48	// D.23261, D.23260,
	add	x0, x2, x0	// D.23262, D.23259, D.23261
	ldr	d0, [x0]	// D.23263, MEM[(double *)_507]
	str	d0, [sp, 1040]	// D.23263, MEM[(double *)&ha.1894 + 24B]
	add	x0, sp, 1016	// iftmp.1896,,
.L3092:
	add	x1, sp, 472	// tmp634,,
	ldp	q0, q1, [x0]	// tmp636, tmp637, *iftmp.1895_105
	stp	q0, q1, [x1]	// tmp636, tmp637, D.6619
// varargs-dll.c:1338:   double j = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 480]	// tmp638, D.6619.b
	str	d0, [sp, 120]	// tmp638, j
// varargs-dll.c:1339:   double k = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.23264, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1900, argv.__stack
	cmp	w1, 0	// D.23264,
	blt	.L3095		//,
	add	x1, x0, 39	// D.23270, iftmp.1900,
	and	x1, x1, -8	// D.23271, D.23270,
	str	x1, [x19]	// D.23271, argv.__stack
	b	.L3096		//
.L3095:
	add	w2, w1, 64	// D.23273, D.23264,
	str	w2, [x19, 28]	// D.23273, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23275, argv.__vr_offs
	cmp	w2, 0	// D.23275,
	ble	.L3097		//,
	add	x1, x0, 39	// D.23278, iftmp.1900,
	and	x1, x1, -8	// D.23279, D.23278,
	str	x1, [x19]	// D.23279, argv.__stack
	b	.L3096		//
.L3097:
	ldr	x2, [x19, 16]	// D.23281, argv.__vr_top
	sxtw	x0, w1	// D.23282, D.23264
	add	x2, x2, x0	// D.23283, D.23281, D.23282
	add	x0, sp, 1048	// ha.1901,,
	ldr	d0, [x2]	// D.23285, MEM[(double *)_528]
	str	d0, [x0]	// D.23285, MEM[(double *)ha.1901_529]
	ldr	x2, [x19, 16]	// D.23286, argv.__vr_top
	sxtw	x0, w1	// D.23287, D.23264
	add	x0, x0, 16	// D.23288, D.23287,
	add	x0, x2, x0	// D.23289, D.23286, D.23288
	ldr	d0, [x0]	// D.23290, MEM[(double *)_535]
	str	d0, [sp, 1056]	// D.23290, MEM[(double *)&ha.1898 + 8B]
	ldr	x2, [x19, 16]	// D.23291, argv.__vr_top
	sxtw	x0, w1	// D.23292, D.23264
	add	x0, x0, 32	// D.23293, D.23292,
	add	x0, x2, x0	// D.23294, D.23291, D.23293
	ldr	d0, [x0]	// D.23295, MEM[(double *)_541]
	str	d0, [sp, 1064]	// D.23295, MEM[(double *)&ha.1898 + 16B]
	ldr	x2, [x19, 16]	// D.23296, argv.__vr_top
	sxtw	x0, w1	// D.23297, D.23264
	add	x0, x0, 48	// D.23298, D.23297,
	add	x0, x2, x0	// D.23299, D.23296, D.23298
	ldr	d0, [x0]	// D.23300, MEM[(double *)_547]
	str	d0, [sp, 1072]	// D.23300, MEM[(double *)&ha.1898 + 24B]
	add	x0, sp, 1048	// iftmp.1900,,
.L3096:
	add	x1, sp, 504	// tmp639,,
	ldp	q0, q1, [x0]	// tmp641, tmp642, *iftmp.1899_107
	stp	q0, q1, [x1]	// tmp641, tmp642, D.6620
// varargs-dll.c:1339:   double k = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 520]	// tmp643, D.6620.c
	str	d0, [sp, 128]	// tmp643, k
// varargs-dll.c:1340:   double l = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.23301, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1904, argv.__stack
	cmp	w1, 0	// D.23301,
	blt	.L3099		//,
	add	x1, x0, 39	// D.23307, iftmp.1904,
	and	x1, x1, -8	// D.23308, D.23307,
	str	x1, [x19]	// D.23308, argv.__stack
	b	.L3100		//
.L3099:
	add	w2, w1, 64	// D.23310, D.23301,
	str	w2, [x19, 28]	// D.23310, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23312, argv.__vr_offs
	cmp	w2, 0	// D.23312,
	ble	.L3101		//,
	add	x1, x0, 39	// D.23315, iftmp.1904,
	and	x1, x1, -8	// D.23316, D.23315,
	str	x1, [x19]	// D.23316, argv.__stack
	b	.L3100		//
.L3101:
	ldr	x2, [x19, 16]	// D.23318, argv.__vr_top
	sxtw	x0, w1	// D.23319, D.23301
	add	x2, x2, x0	// D.23320, D.23318, D.23319
	add	x0, sp, 1080	// ha.1905,,
	ldr	d0, [x2]	// D.23322, MEM[(double *)_568]
	str	d0, [x0]	// D.23322, MEM[(double *)ha.1905_569]
	ldr	x2, [x19, 16]	// D.23323, argv.__vr_top
	sxtw	x0, w1	// D.23324, D.23301
	add	x0, x0, 16	// D.23325, D.23324,
	add	x0, x2, x0	// D.23326, D.23323, D.23325
	ldr	d0, [x0]	// D.23327, MEM[(double *)_575]
	str	d0, [sp, 1088]	// D.23327, MEM[(double *)&ha.1902 + 8B]
	ldr	x2, [x19, 16]	// D.23328, argv.__vr_top
	sxtw	x0, w1	// D.23329, D.23301
	add	x0, x0, 32	// D.23330, D.23329,
	add	x0, x2, x0	// D.23331, D.23328, D.23330
	ldr	d0, [x0]	// D.23332, MEM[(double *)_581]
	str	d0, [sp, 1096]	// D.23332, MEM[(double *)&ha.1902 + 16B]
	ldr	x2, [x19, 16]	// D.23333, argv.__vr_top
	sxtw	x0, w1	// D.23334, D.23301
	add	x0, x0, 48	// D.23335, D.23334,
	add	x0, x2, x0	// D.23336, D.23333, D.23335
	ldr	d0, [x0]	// D.23337, MEM[(double *)_587]
	str	d0, [sp, 1104]	// D.23337, MEM[(double *)&ha.1902 + 24B]
	add	x0, sp, 1080	// iftmp.1904,,
.L3100:
	add	x1, sp, 536	// tmp644,,
	ldp	q0, q1, [x0]	// tmp646, tmp647, *iftmp.1903_109
	stp	q0, q1, [x1]	// tmp646, tmp647, D.6621
// varargs-dll.c:1340:   double l = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 560]	// tmp648, D.6621.d
	str	d0, [sp, 136]	// tmp648, l
// varargs-dll.c:1341:   double m = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.23338, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1908, argv.__stack
	cmp	w1, 0	// D.23338,
	blt	.L3103		//,
	add	x1, x0, 39	// D.23344, iftmp.1908,
	and	x1, x1, -8	// D.23345, D.23344,
	str	x1, [x19]	// D.23345, argv.__stack
	b	.L3104		//
.L3103:
	add	w2, w1, 64	// D.23347, D.23338,
	str	w2, [x19, 28]	// D.23347, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23349, argv.__vr_offs
	cmp	w2, 0	// D.23349,
	ble	.L3105		//,
	add	x1, x0, 39	// D.23352, iftmp.1908,
	and	x1, x1, -8	// D.23353, D.23352,
	str	x1, [x19]	// D.23353, argv.__stack
	b	.L3104		//
.L3105:
	ldr	x2, [x19, 16]	// D.23355, argv.__vr_top
	sxtw	x0, w1	// D.23356, D.23338
	add	x2, x2, x0	// D.23357, D.23355, D.23356
	add	x0, sp, 1112	// ha.1909,,
	ldr	d0, [x2]	// D.23359, MEM[(double *)_608]
	str	d0, [x0]	// D.23359, MEM[(double *)ha.1909_609]
	ldr	x2, [x19, 16]	// D.23360, argv.__vr_top
	sxtw	x0, w1	// D.23361, D.23338
	add	x0, x0, 16	// D.23362, D.23361,
	add	x0, x2, x0	// D.23363, D.23360, D.23362
	ldr	d0, [x0]	// D.23364, MEM[(double *)_615]
	str	d0, [sp, 1120]	// D.23364, MEM[(double *)&ha.1906 + 8B]
	ldr	x2, [x19, 16]	// D.23365, argv.__vr_top
	sxtw	x0, w1	// D.23366, D.23338
	add	x0, x0, 32	// D.23367, D.23366,
	add	x0, x2, x0	// D.23368, D.23365, D.23367
	ldr	d0, [x0]	// D.23369, MEM[(double *)_621]
	str	d0, [sp, 1128]	// D.23369, MEM[(double *)&ha.1906 + 16B]
	ldr	x2, [x19, 16]	// D.23370, argv.__vr_top
	sxtw	x0, w1	// D.23371, D.23338
	add	x0, x0, 48	// D.23372, D.23371,
	add	x0, x2, x0	// D.23373, D.23370, D.23372
	ldr	d0, [x0]	// D.23374, MEM[(double *)_627]
	str	d0, [sp, 1136]	// D.23374, MEM[(double *)&ha.1906 + 24B]
	add	x0, sp, 1112	// iftmp.1908,,
.L3104:
	add	x1, sp, 568	// tmp649,,
	ldp	q0, q1, [x0]	// tmp651, tmp652, *iftmp.1907_111
	stp	q0, q1, [x1]	// tmp651, tmp652, D.6622
// varargs-dll.c:1341:   double m = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 568]	// tmp653, D.6622.a
	str	d0, [sp, 144]	// tmp653, m
// varargs-dll.c:1342:   double n = va_arg (argv, struct hfa_4_doubles).b;
	ldr	w1, [x19, 28]	// D.23375, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1912, argv.__stack
	cmp	w1, 0	// D.23375,
	blt	.L3107		//,
	add	x1, x0, 39	// D.23381, iftmp.1912,
	and	x1, x1, -8	// D.23382, D.23381,
	str	x1, [x19]	// D.23382, argv.__stack
	b	.L3108		//
.L3107:
	add	w2, w1, 64	// D.23384, D.23375,
	str	w2, [x19, 28]	// D.23384, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23386, argv.__vr_offs
	cmp	w2, 0	// D.23386,
	ble	.L3109		//,
	add	x1, x0, 39	// D.23389, iftmp.1912,
	and	x1, x1, -8	// D.23390, D.23389,
	str	x1, [x19]	// D.23390, argv.__stack
	b	.L3108		//
.L3109:
	ldr	x2, [x19, 16]	// D.23392, argv.__vr_top
	sxtw	x0, w1	// D.23393, D.23375
	add	x2, x2, x0	// D.23394, D.23392, D.23393
	add	x0, sp, 1144	// ha.1913,,
	ldr	d0, [x2]	// D.23396, MEM[(double *)_648]
	str	d0, [x0]	// D.23396, MEM[(double *)ha.1913_649]
	ldr	x2, [x19, 16]	// D.23397, argv.__vr_top
	sxtw	x0, w1	// D.23398, D.23375
	add	x0, x0, 16	// D.23399, D.23398,
	add	x0, x2, x0	// D.23400, D.23397, D.23399
	ldr	d0, [x0]	// D.23401, MEM[(double *)_655]
	str	d0, [sp, 1152]	// D.23401, MEM[(double *)&ha.1910 + 8B]
	ldr	x2, [x19, 16]	// D.23402, argv.__vr_top
	sxtw	x0, w1	// D.23403, D.23375
	add	x0, x0, 32	// D.23404, D.23403,
	add	x0, x2, x0	// D.23405, D.23402, D.23404
	ldr	d0, [x0]	// D.23406, MEM[(double *)_661]
	str	d0, [sp, 1160]	// D.23406, MEM[(double *)&ha.1910 + 16B]
	ldr	x2, [x19, 16]	// D.23407, argv.__vr_top
	sxtw	x0, w1	// D.23408, D.23375
	add	x0, x0, 48	// D.23409, D.23408,
	add	x0, x2, x0	// D.23410, D.23407, D.23409
	ldr	d0, [x0]	// D.23411, MEM[(double *)_667]
	str	d0, [sp, 1168]	// D.23411, MEM[(double *)&ha.1910 + 24B]
	add	x0, sp, 1144	// iftmp.1912,,
.L3108:
	add	x1, sp, 600	// tmp654,,
	ldp	q0, q1, [x0]	// tmp656, tmp657, *iftmp.1911_113
	stp	q0, q1, [x1]	// tmp656, tmp657, D.6623
// varargs-dll.c:1342:   double n = va_arg (argv, struct hfa_4_doubles).b;
	ldr	d0, [sp, 608]	// tmp658, D.6623.b
	str	d0, [sp, 152]	// tmp658, n
// varargs-dll.c:1343:   double o = va_arg (argv, struct hfa_4_doubles).c;
	ldr	w1, [x19, 28]	// D.23412, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1916, argv.__stack
	cmp	w1, 0	// D.23412,
	blt	.L3111		//,
	add	x1, x0, 39	// D.23418, iftmp.1916,
	and	x1, x1, -8	// D.23419, D.23418,
	str	x1, [x19]	// D.23419, argv.__stack
	b	.L3112		//
.L3111:
	add	w2, w1, 64	// D.23421, D.23412,
	str	w2, [x19, 28]	// D.23421, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23423, argv.__vr_offs
	cmp	w2, 0	// D.23423,
	ble	.L3113		//,
	add	x1, x0, 39	// D.23426, iftmp.1916,
	and	x1, x1, -8	// D.23427, D.23426,
	str	x1, [x19]	// D.23427, argv.__stack
	b	.L3112		//
.L3113:
	ldr	x2, [x19, 16]	// D.23429, argv.__vr_top
	sxtw	x0, w1	// D.23430, D.23412
	add	x2, x2, x0	// D.23431, D.23429, D.23430
	add	x0, sp, 1176	// ha.1917,,
	ldr	d0, [x2]	// D.23433, MEM[(double *)_688]
	str	d0, [x0]	// D.23433, MEM[(double *)ha.1917_689]
	ldr	x2, [x19, 16]	// D.23434, argv.__vr_top
	sxtw	x0, w1	// D.23435, D.23412
	add	x0, x0, 16	// D.23436, D.23435,
	add	x0, x2, x0	// D.23437, D.23434, D.23436
	ldr	d0, [x0]	// D.23438, MEM[(double *)_695]
	str	d0, [sp, 1184]	// D.23438, MEM[(double *)&ha.1914 + 8B]
	ldr	x2, [x19, 16]	// D.23439, argv.__vr_top
	sxtw	x0, w1	// D.23440, D.23412
	add	x0, x0, 32	// D.23441, D.23440,
	add	x0, x2, x0	// D.23442, D.23439, D.23441
	ldr	d0, [x0]	// D.23443, MEM[(double *)_701]
	str	d0, [sp, 1192]	// D.23443, MEM[(double *)&ha.1914 + 16B]
	ldr	x2, [x19, 16]	// D.23444, argv.__vr_top
	sxtw	x0, w1	// D.23445, D.23412
	add	x0, x0, 48	// D.23446, D.23445,
	add	x0, x2, x0	// D.23447, D.23444, D.23446
	ldr	d0, [x0]	// D.23448, MEM[(double *)_707]
	str	d0, [sp, 1200]	// D.23448, MEM[(double *)&ha.1914 + 24B]
	add	x0, sp, 1176	// iftmp.1916,,
.L3112:
	add	x1, sp, 632	// tmp659,,
	ldp	q0, q1, [x0]	// tmp661, tmp662, *iftmp.1915_115
	stp	q0, q1, [x1]	// tmp661, tmp662, D.6624
// varargs-dll.c:1343:   double o = va_arg (argv, struct hfa_4_doubles).c;
	ldr	d0, [sp, 648]	// tmp663, D.6624.c
	str	d0, [sp, 160]	// tmp663, o
// varargs-dll.c:1344:   double p = va_arg (argv, struct hfa_4_doubles).d;
	ldr	w1, [x19, 28]	// D.23449, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1920, argv.__stack
	cmp	w1, 0	// D.23449,
	blt	.L3115		//,
	add	x1, x0, 39	// D.23455, iftmp.1920,
	and	x1, x1, -8	// D.23456, D.23455,
	str	x1, [x19]	// D.23456, argv.__stack
	b	.L3116		//
.L3115:
	add	w2, w1, 64	// D.23458, D.23449,
	str	w2, [x19, 28]	// D.23458, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23460, argv.__vr_offs
	cmp	w2, 0	// D.23460,
	ble	.L3117		//,
	add	x1, x0, 39	// D.23463, iftmp.1920,
	and	x1, x1, -8	// D.23464, D.23463,
	str	x1, [x19]	// D.23464, argv.__stack
	b	.L3116		//
.L3117:
	ldr	x2, [x19, 16]	// D.23466, argv.__vr_top
	sxtw	x0, w1	// D.23467, D.23449
	add	x2, x2, x0	// D.23468, D.23466, D.23467
	add	x0, sp, 1208	// ha.1921,,
	ldr	d0, [x2]	// D.23470, MEM[(double *)_728]
	str	d0, [x0]	// D.23470, MEM[(double *)ha.1921_729]
	ldr	x2, [x19, 16]	// D.23471, argv.__vr_top
	sxtw	x0, w1	// D.23472, D.23449
	add	x0, x0, 16	// D.23473, D.23472,
	add	x0, x2, x0	// D.23474, D.23471, D.23473
	ldr	d0, [x0]	// D.23475, MEM[(double *)_735]
	str	d0, [sp, 1216]	// D.23475, MEM[(double *)&ha.1918 + 8B]
	ldr	x2, [x19, 16]	// D.23476, argv.__vr_top
	sxtw	x0, w1	// D.23477, D.23449
	add	x0, x0, 32	// D.23478, D.23477,
	add	x0, x2, x0	// D.23479, D.23476, D.23478
	ldr	d0, [x0]	// D.23480, MEM[(double *)_741]
	str	d0, [sp, 1224]	// D.23480, MEM[(double *)&ha.1918 + 16B]
	ldr	x2, [x19, 16]	// D.23481, argv.__vr_top
	sxtw	x0, w1	// D.23482, D.23449
	add	x0, x0, 48	// D.23483, D.23482,
	add	x0, x2, x0	// D.23484, D.23481, D.23483
	ldr	d0, [x0]	// D.23485, MEM[(double *)_747]
	str	d0, [sp, 1232]	// D.23485, MEM[(double *)&ha.1918 + 24B]
	add	x0, sp, 1208	// iftmp.1920,,
.L3116:
	add	x1, sp, 664	// tmp664,,
	ldp	q0, q1, [x0]	// tmp666, tmp667, *iftmp.1919_117
	stp	q0, q1, [x1]	// tmp666, tmp667, D.6625
// varargs-dll.c:1344:   double p = va_arg (argv, struct hfa_4_doubles).d;
	ldr	d0, [sp, 688]	// tmp668, D.6625.d
	str	d0, [sp, 168]	// tmp668, p
// varargs-dll.c:1345:   double q = va_arg (argv, struct hfa_4_doubles).a;
	ldr	w1, [x19, 28]	// D.23486, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.1924, argv.__stack
	cmp	w1, 0	// D.23486,
	blt	.L3119		//,
	add	x1, x0, 39	// D.23492, iftmp.1924,
	and	x1, x1, -8	// D.23493, D.23492,
	str	x1, [x19]	// D.23493, argv.__stack
	b	.L3120		//
.L3119:
	add	w2, w1, 64	// D.23495, D.23486,
	str	w2, [x19, 28]	// D.23495, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.23497, argv.__vr_offs
	cmp	w2, 0	// D.23497,
	ble	.L3121		//,
	add	x1, x0, 39	// D.23500, iftmp.1924,
	and	x1, x1, -8	// D.23501, D.23500,
	str	x1, [x19]	// D.23501, argv.__stack
	b	.L3120		//
.L3121:
	ldr	x2, [x19, 16]	// D.23503, argv.__vr_top
	sxtw	x0, w1	// D.23504, D.23486
	add	x2, x2, x0	// D.23505, D.23503, D.23504
	add	x0, sp, 1240	// ha.1925,,
	ldr	d0, [x2]	// D.23507, MEM[(double *)_768]
	str	d0, [x0]	// D.23507, MEM[(double *)ha.1925_769]
	ldr	x2, [x19, 16]	// D.23508, argv.__vr_top
	sxtw	x0, w1	// D.23509, D.23486
	add	x0, x0, 16	// D.23510, D.23509,
	add	x0, x2, x0	// D.23511, D.23508, D.23510
	ldr	d0, [x0]	// D.23512, MEM[(double *)_775]
	str	d0, [sp, 1248]	// D.23512, MEM[(double *)&ha.1922 + 8B]
	ldr	x2, [x19, 16]	// D.23513, argv.__vr_top
	sxtw	x0, w1	// D.23514, D.23486
	add	x0, x0, 32	// D.23515, D.23514,
	add	x0, x2, x0	// D.23516, D.23513, D.23515
	ldr	d0, [x0]	// D.23517, MEM[(double *)_781]
	str	d0, [sp, 1256]	// D.23517, MEM[(double *)&ha.1922 + 16B]
	ldr	x2, [x19, 16]	// D.23518, argv.__vr_top
	sxtw	x0, w1	// D.23519, D.23486
	add	x0, x0, 48	// D.23520, D.23519,
	add	x0, x2, x0	// D.23521, D.23518, D.23520
	ldr	d0, [x0]	// D.23522, MEM[(double *)_787]
	str	d0, [sp, 1264]	// D.23522, MEM[(double *)&ha.1922 + 24B]
	add	x0, sp, 1240	// iftmp.1924,,
.L3120:
	add	x1, sp, 696	// tmp669,,
	ldp	q0, q1, [x0]	// tmp671, tmp672, *iftmp.1923_119
	stp	q0, q1, [x1]	// tmp671, tmp672, D.6626
// varargs-dll.c:1345:   double q = va_arg (argv, struct hfa_4_doubles).a;
	ldr	d0, [sp, 696]	// tmp673, D.6626.a
	str	d0, [sp, 176]	// tmp673, q
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d1, [sp, 48]	// tmp674, a
	ldr	d0, [sp, 56]	// tmp675, b
	fadd	d1, d1, d0	// _1, tmp674, tmp675
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 64]	// tmp676, c
	fadd	d1, d1, d0	// _2, _1, tmp676
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp677, d
	fadd	d1, d1, d0	// _3, _2, tmp677
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp678, e
	fadd	d1, d1, d0	// _4, _3, tmp678
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp679, f
	fadd	d1, d1, d0	// _5, _4, tmp679
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp680, g
	fadd	d1, d1, d0	// _6, _5, tmp680
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp681, h
	fadd	d1, d1, d0	// _7, _6, tmp681
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp682, i
	fadd	d1, d1, d0	// _8, _7, tmp682
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp683, j
	fadd	d1, d1, d0	// _9, _8, tmp683
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp684, k
	fadd	d1, d1, d0	// _10, _9, tmp684
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp685, l
	fadd	d1, d1, d0	// _11, _10, tmp685
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp686, m
	fadd	d1, d1, d0	// _12, _11, tmp686
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp687, n
	fadd	d1, d1, d0	// _13, _12, tmp687
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 160]	// tmp688, o
	fadd	d1, d1, d0	// _14, _13, tmp688
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 168]	// tmp689, p
	fadd	d1, d1, d0	// _15, _14, tmp689
// varargs-dll.c:1346:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 176]	// tmp690, q
	fadd	d0, d1, d0	// _16, _15, tmp690
	fcvtzs	w0, d0	// _52, _16
	mov	w1, w0	// <retval>, _52
// varargs-dll.c:1347: }
	adrp	x0, :got:__stack_chk_guard	// tmp693,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp692, tmp693,
	ldr	x3, [sp, 1272]	// tmp695, D.23523
	ldr	x2, [x0]	// tmp696,
	subs	x3, x3, x2	// tmp695, tmp696
	mov	x2, 0	// tmp696
	beq	.L3124		//,
	bl	__stack_chk_fail		//
.L3124:
	mov	w0, w1	//, <retval>
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1280	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE85:
	.size	use_va_list_many_hfa_4_doubles, .-use_va_list_many_hfa_4_doubles
	.align	2
	.global	use_va_args_few_hva_2_short_vector_8_bytes
	.type	use_va_args_few_hva_2_short_vector_8_bytes, %function
use_va_args_few_hva_2_short_vector_8_bytes:
.LFB86:
	.cfi_startproc
	stp	x29, x30, [sp, -272]!	//,,,
	.cfi_def_cfa_offset 272
	.cfi_offset 29, -272
	.cfi_offset 30, -264
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 216]	//,
	str	x2, [sp, 224]	//,
	str	x3, [sp, 232]	//,
	str	x4, [sp, 240]	//,
	str	x5, [sp, 248]	//,
	str	x6, [sp, 256]	//,
	str	x7, [sp, 264]	//,
	str	q0, [sp, 80]	//,
	str	q1, [sp, 96]	//,
	str	q2, [sp, 112]	//,
	str	q3, [sp, 128]	//,
	str	q4, [sp, 144]	//,
	str	q5, [sp, 160]	//,
	str	q6, [sp, 176]	//,
	str	q7, [sp, 192]	//,
// varargs-dll.c:1351: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp132,
	str	x1, [sp, 72]	// tmp132, D.23560
	mov	x1, 0	// tmp132
// varargs-dll.c:1353:   va_start (argv, format);
	add	x0, sp, 272	// tmp137,,
	str	x0, [sp, 40]	// tmp137, MEM[(struct  *)&argv].__stack
	add	x0, sp, 272	// tmp138,,
	str	x0, [sp, 48]	// tmp138, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 208	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1354:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 64]	// D.23524, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.1927, argv.__stack
	cmp	w1, 0	// D.23524,
	blt	.L3126		//,
	add	x1, x0, 23	// D.23529, iftmp.1927,
	and	x1, x1, -8	// D.23530, D.23529,
	str	x1, [sp, 40]	// D.23530, argv.__stack
	b	.L3127		//
.L3126:
	add	w2, w1, 16	// D.23532, D.23524,
	str	w2, [sp, 64]	// D.23532, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.23534, argv.__gr_offs
	cmp	w2, 0	// D.23534,
	ble	.L3128		//,
	add	x1, x0, 23	// D.23537, iftmp.1927,
	and	x1, x1, -8	// D.23538, D.23537,
	str	x1, [sp, 40]	// D.23538, argv.__stack
	b	.L3127		//
.L3128:
	ldr	x2, [sp, 48]	// D.23540, argv.__gr_top
	sxtw	x0, w1	// D.23541, D.23524
	add	x0, x2, x0	// iftmp.1927, D.23540, D.23541
.L3127:
	ldp	x0, x1, [x0]	// D.6629, *iftmp.1926_14
// varargs-dll.c:1354:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 32]	// tmp122, a
// varargs-dll.c:1355:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 64]	// D.23542, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.1929, argv.__stack
	cmp	w1, 0	// D.23542,
	blt	.L3130		//,
	add	x1, x0, 23	// D.23547, iftmp.1929,
	and	x1, x1, -8	// D.23548, D.23547,
	str	x1, [sp, 40]	// D.23548, argv.__stack
	b	.L3131		//
.L3130:
	add	w2, w1, 16	// D.23550, D.23542,
	str	w2, [sp, 64]	// D.23550, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.23552, argv.__gr_offs
	cmp	w2, 0	// D.23552,
	ble	.L3132		//,
	add	x1, x0, 23	// D.23555, iftmp.1929,
	and	x1, x1, -8	// D.23556, D.23555,
	str	x1, [sp, 40]	// D.23556, argv.__stack
	b	.L3131		//
.L3132:
	ldr	x2, [sp, 48]	// D.23558, argv.__gr_top
	sxtw	x0, w1	// D.23559, D.23542
	add	x0, x2, x0	// iftmp.1929, D.23558, D.23559
.L3131:
	ldp	x0, x1, [x0]	// D.6630, *iftmp.1928_16
// varargs-dll.c:1355:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp124, D.6630
	asr	x0, x0, 32	// tmp125, tmp124,
	str	w0, [sp, 36]	// tmp126, b
// varargs-dll.c:1357:   return a + b;
	ldr	w1, [sp, 32]	// tmp127, a
	ldr	w0, [sp, 36]	// tmp128, b
	add	w0, w1, w0	// _8, tmp127, tmp128
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:1358: }
	adrp	x0, :got:__stack_chk_guard	// tmp131,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp130, tmp131,
	ldr	x3, [sp, 72]	// tmp133, D.23560
	ldr	x2, [x0]	// tmp134,
	subs	x3, x3, x2	// tmp133, tmp134
	mov	x2, 0	// tmp134
	beq	.L3135		//,
	bl	__stack_chk_fail		//
.L3135:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 272	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE86:
	.size	use_va_args_few_hva_2_short_vector_8_bytes, .-use_va_args_few_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_list_few_hva_2_short_vector_8_bytes
	.type	use_va_list_few_hva_2_short_vector_8_bytes, %function
use_va_list_few_hva_2_short_vector_8_bytes:
.LFB87:
	.cfi_startproc
	str	x19, [sp, -48]!	//,
	.cfi_def_cfa_offset 48
	.cfi_offset 19, -48
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:1363:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23564, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1931, argv.__stack
	cmp	w1, 0	// D.23564,
	blt	.L3137		//,
	add	x1, x0, 23	// D.23569, iftmp.1931,
	and	x1, x1, -8	// D.23570, D.23569,
	str	x1, [x19]	// D.23570, argv.__stack
	b	.L3138		//
.L3137:
	add	w2, w1, 16	// D.23572, D.23564,
	str	w2, [x19, 24]	// D.23572, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23574, argv.__gr_offs
	cmp	w2, 0	// D.23574,
	ble	.L3139		//,
	add	x1, x0, 23	// D.23577, iftmp.1931,
	and	x1, x1, -8	// D.23578, D.23577,
	str	x1, [x19]	// D.23578, argv.__stack
	b	.L3138		//
.L3139:
	ldr	x2, [x19, 8]	// D.23580, argv.__gr_top
	sxtw	x0, w1	// D.23581, D.23564
	add	x0, x2, x0	// iftmp.1931, D.23580, D.23581
.L3138:
	ldp	x0, x1, [x0]	// D.6634, *iftmp.1930_11
// varargs-dll.c:1363:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 40]	// tmp117, a
// varargs-dll.c:1364:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.23582, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1933, argv.__stack
	cmp	w1, 0	// D.23582,
	blt	.L3141		//,
	add	x1, x0, 23	// D.23587, iftmp.1933,
	and	x1, x1, -8	// D.23588, D.23587,
	str	x1, [x19]	// D.23588, argv.__stack
	b	.L3142		//
.L3141:
	add	w2, w1, 16	// D.23590, D.23582,
	str	w2, [x19, 24]	// D.23590, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23592, argv.__gr_offs
	cmp	w2, 0	// D.23592,
	ble	.L3143		//,
	add	x1, x0, 23	// D.23595, iftmp.1933,
	and	x1, x1, -8	// D.23596, D.23595,
	str	x1, [x19]	// D.23596, argv.__stack
	b	.L3142		//
.L3143:
	ldr	x2, [x19, 8]	// D.23598, argv.__gr_top
	sxtw	x0, w1	// D.23599, D.23582
	add	x0, x2, x0	// iftmp.1933, D.23598, D.23599
.L3142:
	ldp	x0, x1, [x0]	// D.6635, *iftmp.1932_13
// varargs-dll.c:1364:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp119, D.6635
	asr	x0, x0, 32	// tmp120, tmp119,
	str	w0, [sp, 44]	// tmp121, b
// varargs-dll.c:1365:   return a + b;
	ldr	w1, [sp, 40]	// tmp122, a
	ldr	w0, [sp, 44]	// tmp123, b
	add	w0, w1, w0	// _6, tmp122, tmp123
// varargs-dll.c:1366: }
	ldr	x19, [sp], 48	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE87:
	.size	use_va_list_few_hva_2_short_vector_8_bytes, .-use_va_list_few_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_args_several_hva_2_short_vector_8_bytes
	.type	use_va_args_several_hva_2_short_vector_8_bytes, %function
use_va_args_several_hva_2_short_vector_8_bytes:
.LFB88:
	.cfi_startproc
	stp	x29, x30, [sp, -304]!	//,,,
	.cfi_def_cfa_offset 304
	.cfi_offset 29, -304
	.cfi_offset 30, -296
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 248]	//,
	str	x2, [sp, 256]	//,
	str	x3, [sp, 264]	//,
	str	x4, [sp, 272]	//,
	str	x5, [sp, 280]	//,
	str	x6, [sp, 288]	//,
	str	x7, [sp, 296]	//,
	str	q0, [sp, 112]	//,
	str	q1, [sp, 128]	//,
	str	q2, [sp, 144]	//,
	str	q3, [sp, 160]	//,
	str	q4, [sp, 176]	//,
	str	q5, [sp, 192]	//,
	str	q6, [sp, 208]	//,
	str	q7, [sp, 224]	//,
// varargs-dll.c:1370: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp239,
	str	x1, [sp, 104]	// tmp239, D.23762
	mov	x1, 0	// tmp239
// varargs-dll.c:1372:   va_start (argv, format);
	add	x0, sp, 304	// tmp244,,
	str	x0, [sp, 72]	// tmp244, MEM[(struct  *)&argv].__stack
	add	x0, sp, 304	// tmp245,,
	str	x0, [sp, 80]	// tmp245, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 240	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1373:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.23600, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1935, argv.__stack
	cmp	w1, 0	// D.23600,
	blt	.L3147		//,
	add	x1, x0, 23	// D.23605, iftmp.1935,
	and	x1, x1, -8	// D.23606, D.23605,
	str	x1, [sp, 72]	// D.23606, argv.__stack
	b	.L3148		//
.L3147:
	add	w2, w1, 16	// D.23608, D.23600,
	str	w2, [sp, 96]	// D.23608, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23610, argv.__gr_offs
	cmp	w2, 0	// D.23610,
	ble	.L3149		//,
	add	x1, x0, 23	// D.23613, iftmp.1935,
	and	x1, x1, -8	// D.23614, D.23613,
	str	x1, [sp, 72]	// D.23614, argv.__stack
	b	.L3148		//
.L3149:
	ldr	x2, [sp, 80]	// D.23616, argv.__gr_top
	sxtw	x0, w1	// D.23617, D.23600
	add	x0, x2, x0	// iftmp.1935, D.23616, D.23617
.L3148:
	ldp	x0, x1, [x0]	// D.6638, *iftmp.1934_49
// varargs-dll.c:1373:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 36]	// tmp206, a
// varargs-dll.c:1374:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.23618, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1937, argv.__stack
	cmp	w1, 0	// D.23618,
	blt	.L3151		//,
	add	x1, x0, 23	// D.23623, iftmp.1937,
	and	x1, x1, -8	// D.23624, D.23623,
	str	x1, [sp, 72]	// D.23624, argv.__stack
	b	.L3152		//
.L3151:
	add	w2, w1, 16	// D.23626, D.23618,
	str	w2, [sp, 96]	// D.23626, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23628, argv.__gr_offs
	cmp	w2, 0	// D.23628,
	ble	.L3153		//,
	add	x1, x0, 23	// D.23631, iftmp.1937,
	and	x1, x1, -8	// D.23632, D.23631,
	str	x1, [sp, 72]	// D.23632, argv.__stack
	b	.L3152		//
.L3153:
	ldr	x2, [sp, 80]	// D.23634, argv.__gr_top
	sxtw	x0, w1	// D.23635, D.23618
	add	x0, x2, x0	// iftmp.1937, D.23634, D.23635
.L3152:
	ldp	x0, x1, [x0]	// D.6639, *iftmp.1936_51
// varargs-dll.c:1374:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp208, D.6639
	asr	x0, x0, 32	// tmp209, tmp208,
	str	w0, [sp, 40]	// tmp210, b
// varargs-dll.c:1375:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.23636, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1939, argv.__stack
	cmp	w1, 0	// D.23636,
	blt	.L3155		//,
	add	x1, x0, 23	// D.23641, iftmp.1939,
	and	x1, x1, -8	// D.23642, D.23641,
	str	x1, [sp, 72]	// D.23642, argv.__stack
	b	.L3156		//
.L3155:
	add	w2, w1, 16	// D.23644, D.23636,
	str	w2, [sp, 96]	// D.23644, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23646, argv.__gr_offs
	cmp	w2, 0	// D.23646,
	ble	.L3157		//,
	add	x1, x0, 23	// D.23649, iftmp.1939,
	and	x1, x1, -8	// D.23650, D.23649,
	str	x1, [sp, 72]	// D.23650, argv.__stack
	b	.L3156		//
.L3157:
	ldr	x2, [sp, 80]	// D.23652, argv.__gr_top
	sxtw	x0, w1	// D.23653, D.23636
	add	x0, x2, x0	// iftmp.1939, D.23652, D.23653
.L3156:
	ldp	x0, x1, [x0]	// D.6640, *iftmp.1938_53
// varargs-dll.c:1375:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 44]	// tmp211, c
// varargs-dll.c:1376:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.23654, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1941, argv.__stack
	cmp	w1, 0	// D.23654,
	blt	.L3159		//,
	add	x1, x0, 23	// D.23659, iftmp.1941,
	and	x1, x1, -8	// D.23660, D.23659,
	str	x1, [sp, 72]	// D.23660, argv.__stack
	b	.L3160		//
.L3159:
	add	w2, w1, 16	// D.23662, D.23654,
	str	w2, [sp, 96]	// D.23662, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23664, argv.__gr_offs
	cmp	w2, 0	// D.23664,
	ble	.L3161		//,
	add	x1, x0, 23	// D.23667, iftmp.1941,
	and	x1, x1, -8	// D.23668, D.23667,
	str	x1, [sp, 72]	// D.23668, argv.__stack
	b	.L3160		//
.L3161:
	ldr	x2, [sp, 80]	// D.23670, argv.__gr_top
	sxtw	x0, w1	// D.23671, D.23654
	add	x0, x2, x0	// iftmp.1941, D.23670, D.23671
.L3160:
	ldp	x0, x1, [x0]	// D.6641, *iftmp.1940_55
// varargs-dll.c:1376:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp213, D.6641
	asr	x0, x0, 32	// tmp214, tmp213,
	str	w0, [sp, 48]	// tmp215, d
// varargs-dll.c:1377:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.23672, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1943, argv.__stack
	cmp	w1, 0	// D.23672,
	blt	.L3163		//,
	add	x1, x0, 23	// D.23677, iftmp.1943,
	and	x1, x1, -8	// D.23678, D.23677,
	str	x1, [sp, 72]	// D.23678, argv.__stack
	b	.L3164		//
.L3163:
	add	w2, w1, 16	// D.23680, D.23672,
	str	w2, [sp, 96]	// D.23680, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23682, argv.__gr_offs
	cmp	w2, 0	// D.23682,
	ble	.L3165		//,
	add	x1, x0, 23	// D.23685, iftmp.1943,
	and	x1, x1, -8	// D.23686, D.23685,
	str	x1, [sp, 72]	// D.23686, argv.__stack
	b	.L3164		//
.L3165:
	ldr	x2, [sp, 80]	// D.23688, argv.__gr_top
	sxtw	x0, w1	// D.23689, D.23672
	add	x0, x2, x0	// iftmp.1943, D.23688, D.23689
.L3164:
	ldp	x0, x1, [x0]	// D.6642, *iftmp.1942_57
// varargs-dll.c:1377:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 52]	// tmp216, e
// varargs-dll.c:1378:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.23690, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1945, argv.__stack
	cmp	w1, 0	// D.23690,
	blt	.L3167		//,
	add	x1, x0, 23	// D.23695, iftmp.1945,
	and	x1, x1, -8	// D.23696, D.23695,
	str	x1, [sp, 72]	// D.23696, argv.__stack
	b	.L3168		//
.L3167:
	add	w2, w1, 16	// D.23698, D.23690,
	str	w2, [sp, 96]	// D.23698, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23700, argv.__gr_offs
	cmp	w2, 0	// D.23700,
	ble	.L3169		//,
	add	x1, x0, 23	// D.23703, iftmp.1945,
	and	x1, x1, -8	// D.23704, D.23703,
	str	x1, [sp, 72]	// D.23704, argv.__stack
	b	.L3168		//
.L3169:
	ldr	x2, [sp, 80]	// D.23706, argv.__gr_top
	sxtw	x0, w1	// D.23707, D.23690
	add	x0, x2, x0	// iftmp.1945, D.23706, D.23707
.L3168:
	ldp	x0, x1, [x0]	// D.6643, *iftmp.1944_59
// varargs-dll.c:1378:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp218, D.6643
	asr	x0, x0, 32	// tmp219, tmp218,
	str	w0, [sp, 56]	// tmp220, f
// varargs-dll.c:1379:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.23708, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1947, argv.__stack
	cmp	w1, 0	// D.23708,
	blt	.L3171		//,
	add	x1, x0, 23	// D.23713, iftmp.1947,
	and	x1, x1, -8	// D.23714, D.23713,
	str	x1, [sp, 72]	// D.23714, argv.__stack
	b	.L3172		//
.L3171:
	add	w2, w1, 16	// D.23716, D.23708,
	str	w2, [sp, 96]	// D.23716, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23718, argv.__gr_offs
	cmp	w2, 0	// D.23718,
	ble	.L3173		//,
	add	x1, x0, 23	// D.23721, iftmp.1947,
	and	x1, x1, -8	// D.23722, D.23721,
	str	x1, [sp, 72]	// D.23722, argv.__stack
	b	.L3172		//
.L3173:
	ldr	x2, [sp, 80]	// D.23724, argv.__gr_top
	sxtw	x0, w1	// D.23725, D.23708
	add	x0, x2, x0	// iftmp.1947, D.23724, D.23725
.L3172:
	ldp	x0, x1, [x0]	// D.6644, *iftmp.1946_61
// varargs-dll.c:1379:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 60]	// tmp221, g
// varargs-dll.c:1380:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.23726, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1949, argv.__stack
	cmp	w1, 0	// D.23726,
	blt	.L3175		//,
	add	x1, x0, 23	// D.23731, iftmp.1949,
	and	x1, x1, -8	// D.23732, D.23731,
	str	x1, [sp, 72]	// D.23732, argv.__stack
	b	.L3176		//
.L3175:
	add	w2, w1, 16	// D.23734, D.23726,
	str	w2, [sp, 96]	// D.23734, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23736, argv.__gr_offs
	cmp	w2, 0	// D.23736,
	ble	.L3177		//,
	add	x1, x0, 23	// D.23739, iftmp.1949,
	and	x1, x1, -8	// D.23740, D.23739,
	str	x1, [sp, 72]	// D.23740, argv.__stack
	b	.L3176		//
.L3177:
	ldr	x2, [sp, 80]	// D.23742, argv.__gr_top
	sxtw	x0, w1	// D.23743, D.23726
	add	x0, x2, x0	// iftmp.1949, D.23742, D.23743
.L3176:
	ldp	x0, x1, [x0]	// D.6645, *iftmp.1948_63
// varargs-dll.c:1380:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp223, D.6645
	asr	x0, x0, 32	// tmp224, tmp223,
	str	w0, [sp, 64]	// tmp225, h
// varargs-dll.c:1381:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.23744, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.1951, argv.__stack
	cmp	w1, 0	// D.23744,
	blt	.L3179		//,
	add	x1, x0, 23	// D.23749, iftmp.1951,
	and	x1, x1, -8	// D.23750, D.23749,
	str	x1, [sp, 72]	// D.23750, argv.__stack
	b	.L3180		//
.L3179:
	add	w2, w1, 16	// D.23752, D.23744,
	str	w2, [sp, 96]	// D.23752, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.23754, argv.__gr_offs
	cmp	w2, 0	// D.23754,
	ble	.L3181		//,
	add	x1, x0, 23	// D.23757, iftmp.1951,
	and	x1, x1, -8	// D.23758, D.23757,
	str	x1, [sp, 72]	// D.23758, argv.__stack
	b	.L3180		//
.L3181:
	ldr	x2, [sp, 80]	// D.23760, argv.__gr_top
	sxtw	x0, w1	// D.23761, D.23744
	add	x0, x2, x0	// iftmp.1951, D.23760, D.23761
.L3180:
	ldp	x0, x1, [x0]	// D.6646, *iftmp.1950_65
// varargs-dll.c:1381:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 68]	// tmp226, i
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp227, a
	ldr	w0, [sp, 40]	// tmp228, b
	add	w1, w1, w0	// _1, tmp227, tmp228
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp229, c
	add	w1, w1, w0	// _2, _1, tmp229
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp230, d
	add	w1, w1, w0	// _3, _2, tmp230
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp231, e
	add	w1, w1, w0	// _4, _3, tmp231
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp232, f
	add	w1, w1, w0	// _5, _4, tmp232
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp233, g
	add	w1, w1, w0	// _6, _5, tmp233
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp234, h
	add	w1, w1, w0	// _7, _6, tmp234
// varargs-dll.c:1383:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp235, i
	add	w0, w1, w0	// _29, _7, tmp235
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:1384: }
	adrp	x0, :got:__stack_chk_guard	// tmp238,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp237, tmp238,
	ldr	x3, [sp, 104]	// tmp240, D.23762
	ldr	x2, [x0]	// tmp241,
	subs	x3, x3, x2	// tmp240, tmp241
	mov	x2, 0	// tmp241
	beq	.L3184		//,
	bl	__stack_chk_fail		//
.L3184:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 304	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE88:
	.size	use_va_args_several_hva_2_short_vector_8_bytes, .-use_va_args_several_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_list_several_hva_2_short_vector_8_bytes
	.type	use_va_list_several_hva_2_short_vector_8_bytes, %function
use_va_list_several_hva_2_short_vector_8_bytes:
.LFB89:
	.cfi_startproc
	str	x19, [sp, -80]!	//,
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -80
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:1390:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23766, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1953, argv.__stack
	cmp	w1, 0	// D.23766,
	blt	.L3186		//,
	add	x1, x0, 23	// D.23771, iftmp.1953,
	and	x1, x1, -8	// D.23772, D.23771,
	str	x1, [x19]	// D.23772, argv.__stack
	b	.L3187		//
.L3186:
	add	w2, w1, 16	// D.23774, D.23766,
	str	w2, [x19, 24]	// D.23774, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23776, argv.__gr_offs
	cmp	w2, 0	// D.23776,
	ble	.L3188		//,
	add	x1, x0, 23	// D.23779, iftmp.1953,
	and	x1, x1, -8	// D.23780, D.23779,
	str	x1, [x19]	// D.23780, argv.__stack
	b	.L3187		//
.L3188:
	ldr	x2, [x19, 8]	// D.23782, argv.__gr_top
	sxtw	x0, w1	// D.23783, D.23766
	add	x0, x2, x0	// iftmp.1953, D.23782, D.23783
.L3187:
	ldp	x0, x1, [x0]	// D.6650, *iftmp.1952_46
// varargs-dll.c:1390:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 44]	// tmp201, a
// varargs-dll.c:1391:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.23784, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1955, argv.__stack
	cmp	w1, 0	// D.23784,
	blt	.L3190		//,
	add	x1, x0, 23	// D.23789, iftmp.1955,
	and	x1, x1, -8	// D.23790, D.23789,
	str	x1, [x19]	// D.23790, argv.__stack
	b	.L3191		//
.L3190:
	add	w2, w1, 16	// D.23792, D.23784,
	str	w2, [x19, 24]	// D.23792, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23794, argv.__gr_offs
	cmp	w2, 0	// D.23794,
	ble	.L3192		//,
	add	x1, x0, 23	// D.23797, iftmp.1955,
	and	x1, x1, -8	// D.23798, D.23797,
	str	x1, [x19]	// D.23798, argv.__stack
	b	.L3191		//
.L3192:
	ldr	x2, [x19, 8]	// D.23800, argv.__gr_top
	sxtw	x0, w1	// D.23801, D.23784
	add	x0, x2, x0	// iftmp.1955, D.23800, D.23801
.L3191:
	ldp	x0, x1, [x0]	// D.6651, *iftmp.1954_48
// varargs-dll.c:1391:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp203, D.6651
	asr	x0, x0, 32	// tmp204, tmp203,
	str	w0, [sp, 48]	// tmp205, b
// varargs-dll.c:1392:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23802, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1957, argv.__stack
	cmp	w1, 0	// D.23802,
	blt	.L3194		//,
	add	x1, x0, 23	// D.23807, iftmp.1957,
	and	x1, x1, -8	// D.23808, D.23807,
	str	x1, [x19]	// D.23808, argv.__stack
	b	.L3195		//
.L3194:
	add	w2, w1, 16	// D.23810, D.23802,
	str	w2, [x19, 24]	// D.23810, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23812, argv.__gr_offs
	cmp	w2, 0	// D.23812,
	ble	.L3196		//,
	add	x1, x0, 23	// D.23815, iftmp.1957,
	and	x1, x1, -8	// D.23816, D.23815,
	str	x1, [x19]	// D.23816, argv.__stack
	b	.L3195		//
.L3196:
	ldr	x2, [x19, 8]	// D.23818, argv.__gr_top
	sxtw	x0, w1	// D.23819, D.23802
	add	x0, x2, x0	// iftmp.1957, D.23818, D.23819
.L3195:
	ldp	x0, x1, [x0]	// D.6652, *iftmp.1956_50
// varargs-dll.c:1392:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 52]	// tmp206, c
// varargs-dll.c:1393:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.23820, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1959, argv.__stack
	cmp	w1, 0	// D.23820,
	blt	.L3198		//,
	add	x1, x0, 23	// D.23825, iftmp.1959,
	and	x1, x1, -8	// D.23826, D.23825,
	str	x1, [x19]	// D.23826, argv.__stack
	b	.L3199		//
.L3198:
	add	w2, w1, 16	// D.23828, D.23820,
	str	w2, [x19, 24]	// D.23828, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23830, argv.__gr_offs
	cmp	w2, 0	// D.23830,
	ble	.L3200		//,
	add	x1, x0, 23	// D.23833, iftmp.1959,
	and	x1, x1, -8	// D.23834, D.23833,
	str	x1, [x19]	// D.23834, argv.__stack
	b	.L3199		//
.L3200:
	ldr	x2, [x19, 8]	// D.23836, argv.__gr_top
	sxtw	x0, w1	// D.23837, D.23820
	add	x0, x2, x0	// iftmp.1959, D.23836, D.23837
.L3199:
	ldp	x0, x1, [x0]	// D.6653, *iftmp.1958_52
// varargs-dll.c:1393:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp208, D.6653
	asr	x0, x0, 32	// tmp209, tmp208,
	str	w0, [sp, 56]	// tmp210, d
// varargs-dll.c:1394:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23838, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1961, argv.__stack
	cmp	w1, 0	// D.23838,
	blt	.L3202		//,
	add	x1, x0, 23	// D.23843, iftmp.1961,
	and	x1, x1, -8	// D.23844, D.23843,
	str	x1, [x19]	// D.23844, argv.__stack
	b	.L3203		//
.L3202:
	add	w2, w1, 16	// D.23846, D.23838,
	str	w2, [x19, 24]	// D.23846, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23848, argv.__gr_offs
	cmp	w2, 0	// D.23848,
	ble	.L3204		//,
	add	x1, x0, 23	// D.23851, iftmp.1961,
	and	x1, x1, -8	// D.23852, D.23851,
	str	x1, [x19]	// D.23852, argv.__stack
	b	.L3203		//
.L3204:
	ldr	x2, [x19, 8]	// D.23854, argv.__gr_top
	sxtw	x0, w1	// D.23855, D.23838
	add	x0, x2, x0	// iftmp.1961, D.23854, D.23855
.L3203:
	ldp	x0, x1, [x0]	// D.6654, *iftmp.1960_54
// varargs-dll.c:1394:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 60]	// tmp211, e
// varargs-dll.c:1395:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.23856, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1963, argv.__stack
	cmp	w1, 0	// D.23856,
	blt	.L3206		//,
	add	x1, x0, 23	// D.23861, iftmp.1963,
	and	x1, x1, -8	// D.23862, D.23861,
	str	x1, [x19]	// D.23862, argv.__stack
	b	.L3207		//
.L3206:
	add	w2, w1, 16	// D.23864, D.23856,
	str	w2, [x19, 24]	// D.23864, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23866, argv.__gr_offs
	cmp	w2, 0	// D.23866,
	ble	.L3208		//,
	add	x1, x0, 23	// D.23869, iftmp.1963,
	and	x1, x1, -8	// D.23870, D.23869,
	str	x1, [x19]	// D.23870, argv.__stack
	b	.L3207		//
.L3208:
	ldr	x2, [x19, 8]	// D.23872, argv.__gr_top
	sxtw	x0, w1	// D.23873, D.23856
	add	x0, x2, x0	// iftmp.1963, D.23872, D.23873
.L3207:
	ldp	x0, x1, [x0]	// D.6655, *iftmp.1962_56
// varargs-dll.c:1395:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp213, D.6655
	asr	x0, x0, 32	// tmp214, tmp213,
	str	w0, [sp, 64]	// tmp215, f
// varargs-dll.c:1396:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23874, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1965, argv.__stack
	cmp	w1, 0	// D.23874,
	blt	.L3210		//,
	add	x1, x0, 23	// D.23879, iftmp.1965,
	and	x1, x1, -8	// D.23880, D.23879,
	str	x1, [x19]	// D.23880, argv.__stack
	b	.L3211		//
.L3210:
	add	w2, w1, 16	// D.23882, D.23874,
	str	w2, [x19, 24]	// D.23882, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23884, argv.__gr_offs
	cmp	w2, 0	// D.23884,
	ble	.L3212		//,
	add	x1, x0, 23	// D.23887, iftmp.1965,
	and	x1, x1, -8	// D.23888, D.23887,
	str	x1, [x19]	// D.23888, argv.__stack
	b	.L3211		//
.L3212:
	ldr	x2, [x19, 8]	// D.23890, argv.__gr_top
	sxtw	x0, w1	// D.23891, D.23874
	add	x0, x2, x0	// iftmp.1965, D.23890, D.23891
.L3211:
	ldp	x0, x1, [x0]	// D.6656, *iftmp.1964_58
// varargs-dll.c:1396:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 68]	// tmp216, g
// varargs-dll.c:1397:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.23892, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1967, argv.__stack
	cmp	w1, 0	// D.23892,
	blt	.L3214		//,
	add	x1, x0, 23	// D.23897, iftmp.1967,
	and	x1, x1, -8	// D.23898, D.23897,
	str	x1, [x19]	// D.23898, argv.__stack
	b	.L3215		//
.L3214:
	add	w2, w1, 16	// D.23900, D.23892,
	str	w2, [x19, 24]	// D.23900, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23902, argv.__gr_offs
	cmp	w2, 0	// D.23902,
	ble	.L3216		//,
	add	x1, x0, 23	// D.23905, iftmp.1967,
	and	x1, x1, -8	// D.23906, D.23905,
	str	x1, [x19]	// D.23906, argv.__stack
	b	.L3215		//
.L3216:
	ldr	x2, [x19, 8]	// D.23908, argv.__gr_top
	sxtw	x0, w1	// D.23909, D.23892
	add	x0, x2, x0	// iftmp.1967, D.23908, D.23909
.L3215:
	ldp	x0, x1, [x0]	// D.6657, *iftmp.1966_60
// varargs-dll.c:1397:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp218, D.6657
	asr	x0, x0, 32	// tmp219, tmp218,
	str	w0, [sp, 72]	// tmp220, h
// varargs-dll.c:1398:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.23910, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.1969, argv.__stack
	cmp	w1, 0	// D.23910,
	blt	.L3218		//,
	add	x1, x0, 23	// D.23915, iftmp.1969,
	and	x1, x1, -8	// D.23916, D.23915,
	str	x1, [x19]	// D.23916, argv.__stack
	b	.L3219		//
.L3218:
	add	w2, w1, 16	// D.23918, D.23910,
	str	w2, [x19, 24]	// D.23918, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.23920, argv.__gr_offs
	cmp	w2, 0	// D.23920,
	ble	.L3220		//,
	add	x1, x0, 23	// D.23923, iftmp.1969,
	and	x1, x1, -8	// D.23924, D.23923,
	str	x1, [x19]	// D.23924, argv.__stack
	b	.L3219		//
.L3220:
	ldr	x2, [x19, 8]	// D.23926, argv.__gr_top
	sxtw	x0, w1	// D.23927, D.23910
	add	x0, x2, x0	// iftmp.1969, D.23926, D.23927
.L3219:
	ldp	x0, x1, [x0]	// D.6658, *iftmp.1968_62
// varargs-dll.c:1398:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 76]	// tmp221, i
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp222, a
	ldr	w0, [sp, 48]	// tmp223, b
	add	w1, w1, w0	// _1, tmp222, tmp223
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp224, c
	add	w1, w1, w0	// _2, _1, tmp224
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp225, d
	add	w1, w1, w0	// _3, _2, tmp225
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp226, e
	add	w1, w1, w0	// _4, _3, tmp226
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp227, f
	add	w1, w1, w0	// _5, _4, tmp227
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp228, g
	add	w1, w1, w0	// _6, _5, tmp228
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp229, h
	add	w1, w1, w0	// _7, _6, tmp229
// varargs-dll.c:1399:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp230, i
	add	w0, w1, w0	// _27, _7, tmp230
// varargs-dll.c:1400: }
	ldr	x19, [sp], 80	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE89:
	.size	use_va_list_several_hva_2_short_vector_8_bytes, .-use_va_list_several_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_args_many_hva_2_short_vector_8_bytes
	.type	use_va_args_many_hva_2_short_vector_8_bytes, %function
use_va_args_many_hva_2_short_vector_8_bytes:
.LFB90:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:1404: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp363,
	str	x1, [sp, 136]	// tmp363, D.24234
	mov	x1, 0	// tmp363
// varargs-dll.c:1406:   va_start (argv, format);
	add	x0, sp, 336	// tmp368,,
	str	x0, [sp, 104]	// tmp368, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp369,,
	str	x0, [sp, 112]	// tmp369, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1407:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.23928, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1971, argv.__stack
	cmp	w1, 0	// D.23928,
	blt	.L3224		//,
	add	x1, x0, 23	// D.23933, iftmp.1971,
	and	x1, x1, -8	// D.23934, D.23933,
	str	x1, [sp, 104]	// D.23934, argv.__stack
	b	.L3225		//
.L3224:
	add	w2, w1, 16	// D.23936, D.23928,
	str	w2, [sp, 128]	// D.23936, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.23938, argv.__gr_offs
	cmp	w2, 0	// D.23938,
	ble	.L3226		//,
	add	x1, x0, 23	// D.23941, iftmp.1971,
	and	x1, x1, -8	// D.23942, D.23941,
	str	x1, [sp, 104]	// D.23942, argv.__stack
	b	.L3225		//
.L3226:
	ldr	x2, [sp, 112]	// D.23944, argv.__gr_top
	sxtw	x0, w1	// D.23945, D.23928
	add	x0, x2, x0	// iftmp.1971, D.23944, D.23945
.L3225:
	ldp	x0, x1, [x0]	// D.6661, *iftmp.1970_89
// varargs-dll.c:1407:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 36]	// tmp302, a
// varargs-dll.c:1408:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.23946, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1973, argv.__stack
	cmp	w1, 0	// D.23946,
	blt	.L3228		//,
	add	x1, x0, 23	// D.23951, iftmp.1973,
	and	x1, x1, -8	// D.23952, D.23951,
	str	x1, [sp, 104]	// D.23952, argv.__stack
	b	.L3229		//
.L3228:
	add	w2, w1, 16	// D.23954, D.23946,
	str	w2, [sp, 128]	// D.23954, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.23956, argv.__gr_offs
	cmp	w2, 0	// D.23956,
	ble	.L3230		//,
	add	x1, x0, 23	// D.23959, iftmp.1973,
	and	x1, x1, -8	// D.23960, D.23959,
	str	x1, [sp, 104]	// D.23960, argv.__stack
	b	.L3229		//
.L3230:
	ldr	x2, [sp, 112]	// D.23962, argv.__gr_top
	sxtw	x0, w1	// D.23963, D.23946
	add	x0, x2, x0	// iftmp.1973, D.23962, D.23963
.L3229:
	ldp	x0, x1, [x0]	// D.6662, *iftmp.1972_91
// varargs-dll.c:1408:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp304, D.6662
	asr	x0, x0, 32	// tmp305, tmp304,
	str	w0, [sp, 40]	// tmp306, b
// varargs-dll.c:1409:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.23964, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1975, argv.__stack
	cmp	w1, 0	// D.23964,
	blt	.L3232		//,
	add	x1, x0, 23	// D.23969, iftmp.1975,
	and	x1, x1, -8	// D.23970, D.23969,
	str	x1, [sp, 104]	// D.23970, argv.__stack
	b	.L3233		//
.L3232:
	add	w2, w1, 16	// D.23972, D.23964,
	str	w2, [sp, 128]	// D.23972, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.23974, argv.__gr_offs
	cmp	w2, 0	// D.23974,
	ble	.L3234		//,
	add	x1, x0, 23	// D.23977, iftmp.1975,
	and	x1, x1, -8	// D.23978, D.23977,
	str	x1, [sp, 104]	// D.23978, argv.__stack
	b	.L3233		//
.L3234:
	ldr	x2, [sp, 112]	// D.23980, argv.__gr_top
	sxtw	x0, w1	// D.23981, D.23964
	add	x0, x2, x0	// iftmp.1975, D.23980, D.23981
.L3233:
	ldp	x0, x1, [x0]	// D.6663, *iftmp.1974_93
// varargs-dll.c:1409:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 44]	// tmp307, c
// varargs-dll.c:1410:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.23982, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1977, argv.__stack
	cmp	w1, 0	// D.23982,
	blt	.L3236		//,
	add	x1, x0, 23	// D.23987, iftmp.1977,
	and	x1, x1, -8	// D.23988, D.23987,
	str	x1, [sp, 104]	// D.23988, argv.__stack
	b	.L3237		//
.L3236:
	add	w2, w1, 16	// D.23990, D.23982,
	str	w2, [sp, 128]	// D.23990, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.23992, argv.__gr_offs
	cmp	w2, 0	// D.23992,
	ble	.L3238		//,
	add	x1, x0, 23	// D.23995, iftmp.1977,
	and	x1, x1, -8	// D.23996, D.23995,
	str	x1, [sp, 104]	// D.23996, argv.__stack
	b	.L3237		//
.L3238:
	ldr	x2, [sp, 112]	// D.23998, argv.__gr_top
	sxtw	x0, w1	// D.23999, D.23982
	add	x0, x2, x0	// iftmp.1977, D.23998, D.23999
.L3237:
	ldp	x0, x1, [x0]	// D.6664, *iftmp.1976_95
// varargs-dll.c:1410:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp309, D.6664
	asr	x0, x0, 32	// tmp310, tmp309,
	str	w0, [sp, 48]	// tmp311, d
// varargs-dll.c:1411:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24000, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1979, argv.__stack
	cmp	w1, 0	// D.24000,
	blt	.L3240		//,
	add	x1, x0, 23	// D.24005, iftmp.1979,
	and	x1, x1, -8	// D.24006, D.24005,
	str	x1, [sp, 104]	// D.24006, argv.__stack
	b	.L3241		//
.L3240:
	add	w2, w1, 16	// D.24008, D.24000,
	str	w2, [sp, 128]	// D.24008, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24010, argv.__gr_offs
	cmp	w2, 0	// D.24010,
	ble	.L3242		//,
	add	x1, x0, 23	// D.24013, iftmp.1979,
	and	x1, x1, -8	// D.24014, D.24013,
	str	x1, [sp, 104]	// D.24014, argv.__stack
	b	.L3241		//
.L3242:
	ldr	x2, [sp, 112]	// D.24016, argv.__gr_top
	sxtw	x0, w1	// D.24017, D.24000
	add	x0, x2, x0	// iftmp.1979, D.24016, D.24017
.L3241:
	ldp	x0, x1, [x0]	// D.6665, *iftmp.1978_97
// varargs-dll.c:1411:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 52]	// tmp312, e
// varargs-dll.c:1412:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24018, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1981, argv.__stack
	cmp	w1, 0	// D.24018,
	blt	.L3244		//,
	add	x1, x0, 23	// D.24023, iftmp.1981,
	and	x1, x1, -8	// D.24024, D.24023,
	str	x1, [sp, 104]	// D.24024, argv.__stack
	b	.L3245		//
.L3244:
	add	w2, w1, 16	// D.24026, D.24018,
	str	w2, [sp, 128]	// D.24026, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24028, argv.__gr_offs
	cmp	w2, 0	// D.24028,
	ble	.L3246		//,
	add	x1, x0, 23	// D.24031, iftmp.1981,
	and	x1, x1, -8	// D.24032, D.24031,
	str	x1, [sp, 104]	// D.24032, argv.__stack
	b	.L3245		//
.L3246:
	ldr	x2, [sp, 112]	// D.24034, argv.__gr_top
	sxtw	x0, w1	// D.24035, D.24018
	add	x0, x2, x0	// iftmp.1981, D.24034, D.24035
.L3245:
	ldp	x0, x1, [x0]	// D.6666, *iftmp.1980_99
// varargs-dll.c:1412:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp314, D.6666
	asr	x0, x0, 32	// tmp315, tmp314,
	str	w0, [sp, 56]	// tmp316, f
// varargs-dll.c:1413:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24036, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1983, argv.__stack
	cmp	w1, 0	// D.24036,
	blt	.L3248		//,
	add	x1, x0, 23	// D.24041, iftmp.1983,
	and	x1, x1, -8	// D.24042, D.24041,
	str	x1, [sp, 104]	// D.24042, argv.__stack
	b	.L3249		//
.L3248:
	add	w2, w1, 16	// D.24044, D.24036,
	str	w2, [sp, 128]	// D.24044, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24046, argv.__gr_offs
	cmp	w2, 0	// D.24046,
	ble	.L3250		//,
	add	x1, x0, 23	// D.24049, iftmp.1983,
	and	x1, x1, -8	// D.24050, D.24049,
	str	x1, [sp, 104]	// D.24050, argv.__stack
	b	.L3249		//
.L3250:
	ldr	x2, [sp, 112]	// D.24052, argv.__gr_top
	sxtw	x0, w1	// D.24053, D.24036
	add	x0, x2, x0	// iftmp.1983, D.24052, D.24053
.L3249:
	ldp	x0, x1, [x0]	// D.6667, *iftmp.1982_101
// varargs-dll.c:1413:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 60]	// tmp317, g
// varargs-dll.c:1414:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24054, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1985, argv.__stack
	cmp	w1, 0	// D.24054,
	blt	.L3252		//,
	add	x1, x0, 23	// D.24059, iftmp.1985,
	and	x1, x1, -8	// D.24060, D.24059,
	str	x1, [sp, 104]	// D.24060, argv.__stack
	b	.L3253		//
.L3252:
	add	w2, w1, 16	// D.24062, D.24054,
	str	w2, [sp, 128]	// D.24062, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24064, argv.__gr_offs
	cmp	w2, 0	// D.24064,
	ble	.L3254		//,
	add	x1, x0, 23	// D.24067, iftmp.1985,
	and	x1, x1, -8	// D.24068, D.24067,
	str	x1, [sp, 104]	// D.24068, argv.__stack
	b	.L3253		//
.L3254:
	ldr	x2, [sp, 112]	// D.24070, argv.__gr_top
	sxtw	x0, w1	// D.24071, D.24054
	add	x0, x2, x0	// iftmp.1985, D.24070, D.24071
.L3253:
	ldp	x0, x1, [x0]	// D.6668, *iftmp.1984_103
// varargs-dll.c:1414:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp319, D.6668
	asr	x0, x0, 32	// tmp320, tmp319,
	str	w0, [sp, 64]	// tmp321, h
// varargs-dll.c:1415:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24072, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1987, argv.__stack
	cmp	w1, 0	// D.24072,
	blt	.L3256		//,
	add	x1, x0, 23	// D.24077, iftmp.1987,
	and	x1, x1, -8	// D.24078, D.24077,
	str	x1, [sp, 104]	// D.24078, argv.__stack
	b	.L3257		//
.L3256:
	add	w2, w1, 16	// D.24080, D.24072,
	str	w2, [sp, 128]	// D.24080, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24082, argv.__gr_offs
	cmp	w2, 0	// D.24082,
	ble	.L3258		//,
	add	x1, x0, 23	// D.24085, iftmp.1987,
	and	x1, x1, -8	// D.24086, D.24085,
	str	x1, [sp, 104]	// D.24086, argv.__stack
	b	.L3257		//
.L3258:
	ldr	x2, [sp, 112]	// D.24088, argv.__gr_top
	sxtw	x0, w1	// D.24089, D.24072
	add	x0, x2, x0	// iftmp.1987, D.24088, D.24089
.L3257:
	ldp	x0, x1, [x0]	// D.6669, *iftmp.1986_105
// varargs-dll.c:1415:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 68]	// tmp322, i
// varargs-dll.c:1416:   int j = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24090, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1989, argv.__stack
	cmp	w1, 0	// D.24090,
	blt	.L3260		//,
	add	x1, x0, 23	// D.24095, iftmp.1989,
	and	x1, x1, -8	// D.24096, D.24095,
	str	x1, [sp, 104]	// D.24096, argv.__stack
	b	.L3261		//
.L3260:
	add	w2, w1, 16	// D.24098, D.24090,
	str	w2, [sp, 128]	// D.24098, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24100, argv.__gr_offs
	cmp	w2, 0	// D.24100,
	ble	.L3262		//,
	add	x1, x0, 23	// D.24103, iftmp.1989,
	and	x1, x1, -8	// D.24104, D.24103,
	str	x1, [sp, 104]	// D.24104, argv.__stack
	b	.L3261		//
.L3262:
	ldr	x2, [sp, 112]	// D.24106, argv.__gr_top
	sxtw	x0, w1	// D.24107, D.24090
	add	x0, x2, x0	// iftmp.1989, D.24106, D.24107
.L3261:
	ldp	x0, x1, [x0]	// D.6670, *iftmp.1988_107
// varargs-dll.c:1416:   int j = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp324, D.6670
	asr	x0, x0, 32	// tmp325, tmp324,
	str	w0, [sp, 72]	// tmp326, j
// varargs-dll.c:1417:   int k = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24108, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1991, argv.__stack
	cmp	w1, 0	// D.24108,
	blt	.L3264		//,
	add	x1, x0, 23	// D.24113, iftmp.1991,
	and	x1, x1, -8	// D.24114, D.24113,
	str	x1, [sp, 104]	// D.24114, argv.__stack
	b	.L3265		//
.L3264:
	add	w2, w1, 16	// D.24116, D.24108,
	str	w2, [sp, 128]	// D.24116, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24118, argv.__gr_offs
	cmp	w2, 0	// D.24118,
	ble	.L3266		//,
	add	x1, x0, 23	// D.24121, iftmp.1991,
	and	x1, x1, -8	// D.24122, D.24121,
	str	x1, [sp, 104]	// D.24122, argv.__stack
	b	.L3265		//
.L3266:
	ldr	x2, [sp, 112]	// D.24124, argv.__gr_top
	sxtw	x0, w1	// D.24125, D.24108
	add	x0, x2, x0	// iftmp.1991, D.24124, D.24125
.L3265:
	ldp	x0, x1, [x0]	// D.6671, *iftmp.1990_109
// varargs-dll.c:1417:   int k = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 76]	// tmp327, k
// varargs-dll.c:1418:   int l = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24126, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1993, argv.__stack
	cmp	w1, 0	// D.24126,
	blt	.L3268		//,
	add	x1, x0, 23	// D.24131, iftmp.1993,
	and	x1, x1, -8	// D.24132, D.24131,
	str	x1, [sp, 104]	// D.24132, argv.__stack
	b	.L3269		//
.L3268:
	add	w2, w1, 16	// D.24134, D.24126,
	str	w2, [sp, 128]	// D.24134, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24136, argv.__gr_offs
	cmp	w2, 0	// D.24136,
	ble	.L3270		//,
	add	x1, x0, 23	// D.24139, iftmp.1993,
	and	x1, x1, -8	// D.24140, D.24139,
	str	x1, [sp, 104]	// D.24140, argv.__stack
	b	.L3269		//
.L3270:
	ldr	x2, [sp, 112]	// D.24142, argv.__gr_top
	sxtw	x0, w1	// D.24143, D.24126
	add	x0, x2, x0	// iftmp.1993, D.24142, D.24143
.L3269:
	ldp	x0, x1, [x0]	// D.6672, *iftmp.1992_111
// varargs-dll.c:1418:   int l = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp329, D.6672
	asr	x0, x0, 32	// tmp330, tmp329,
	str	w0, [sp, 80]	// tmp331, l
// varargs-dll.c:1419:   int m = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24144, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1995, argv.__stack
	cmp	w1, 0	// D.24144,
	blt	.L3272		//,
	add	x1, x0, 23	// D.24149, iftmp.1995,
	and	x1, x1, -8	// D.24150, D.24149,
	str	x1, [sp, 104]	// D.24150, argv.__stack
	b	.L3273		//
.L3272:
	add	w2, w1, 16	// D.24152, D.24144,
	str	w2, [sp, 128]	// D.24152, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24154, argv.__gr_offs
	cmp	w2, 0	// D.24154,
	ble	.L3274		//,
	add	x1, x0, 23	// D.24157, iftmp.1995,
	and	x1, x1, -8	// D.24158, D.24157,
	str	x1, [sp, 104]	// D.24158, argv.__stack
	b	.L3273		//
.L3274:
	ldr	x2, [sp, 112]	// D.24160, argv.__gr_top
	sxtw	x0, w1	// D.24161, D.24144
	add	x0, x2, x0	// iftmp.1995, D.24160, D.24161
.L3273:
	ldp	x0, x1, [x0]	// D.6673, *iftmp.1994_113
// varargs-dll.c:1419:   int m = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 84]	// tmp332, m
// varargs-dll.c:1420:   int n = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24162, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1997, argv.__stack
	cmp	w1, 0	// D.24162,
	blt	.L3276		//,
	add	x1, x0, 23	// D.24167, iftmp.1997,
	and	x1, x1, -8	// D.24168, D.24167,
	str	x1, [sp, 104]	// D.24168, argv.__stack
	b	.L3277		//
.L3276:
	add	w2, w1, 16	// D.24170, D.24162,
	str	w2, [sp, 128]	// D.24170, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24172, argv.__gr_offs
	cmp	w2, 0	// D.24172,
	ble	.L3278		//,
	add	x1, x0, 23	// D.24175, iftmp.1997,
	and	x1, x1, -8	// D.24176, D.24175,
	str	x1, [sp, 104]	// D.24176, argv.__stack
	b	.L3277		//
.L3278:
	ldr	x2, [sp, 112]	// D.24178, argv.__gr_top
	sxtw	x0, w1	// D.24179, D.24162
	add	x0, x2, x0	// iftmp.1997, D.24178, D.24179
.L3277:
	ldp	x0, x1, [x0]	// D.6674, *iftmp.1996_115
// varargs-dll.c:1420:   int n = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp334, D.6674
	asr	x0, x0, 32	// tmp335, tmp334,
	str	w0, [sp, 88]	// tmp336, n
// varargs-dll.c:1421:   int o = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24180, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.1999, argv.__stack
	cmp	w1, 0	// D.24180,
	blt	.L3280		//,
	add	x1, x0, 23	// D.24185, iftmp.1999,
	and	x1, x1, -8	// D.24186, D.24185,
	str	x1, [sp, 104]	// D.24186, argv.__stack
	b	.L3281		//
.L3280:
	add	w2, w1, 16	// D.24188, D.24180,
	str	w2, [sp, 128]	// D.24188, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24190, argv.__gr_offs
	cmp	w2, 0	// D.24190,
	ble	.L3282		//,
	add	x1, x0, 23	// D.24193, iftmp.1999,
	and	x1, x1, -8	// D.24194, D.24193,
	str	x1, [sp, 104]	// D.24194, argv.__stack
	b	.L3281		//
.L3282:
	ldr	x2, [sp, 112]	// D.24196, argv.__gr_top
	sxtw	x0, w1	// D.24197, D.24180
	add	x0, x2, x0	// iftmp.1999, D.24196, D.24197
.L3281:
	ldp	x0, x1, [x0]	// D.6675, *iftmp.1998_117
// varargs-dll.c:1421:   int o = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 92]	// tmp337, o
// varargs-dll.c:1422:   int p = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24198, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2001, argv.__stack
	cmp	w1, 0	// D.24198,
	blt	.L3284		//,
	add	x1, x0, 23	// D.24203, iftmp.2001,
	and	x1, x1, -8	// D.24204, D.24203,
	str	x1, [sp, 104]	// D.24204, argv.__stack
	b	.L3285		//
.L3284:
	add	w2, w1, 16	// D.24206, D.24198,
	str	w2, [sp, 128]	// D.24206, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24208, argv.__gr_offs
	cmp	w2, 0	// D.24208,
	ble	.L3286		//,
	add	x1, x0, 23	// D.24211, iftmp.2001,
	and	x1, x1, -8	// D.24212, D.24211,
	str	x1, [sp, 104]	// D.24212, argv.__stack
	b	.L3285		//
.L3286:
	ldr	x2, [sp, 112]	// D.24214, argv.__gr_top
	sxtw	x0, w1	// D.24215, D.24198
	add	x0, x2, x0	// iftmp.2001, D.24214, D.24215
.L3285:
	ldp	x0, x1, [x0]	// D.6676, *iftmp.2000_119
// varargs-dll.c:1422:   int p = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp339, D.6676
	asr	x0, x0, 32	// tmp340, tmp339,
	str	w0, [sp, 96]	// tmp341, p
// varargs-dll.c:1423:   int q = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24216, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2003, argv.__stack
	cmp	w1, 0	// D.24216,
	blt	.L3288		//,
	add	x1, x0, 23	// D.24221, iftmp.2003,
	and	x1, x1, -8	// D.24222, D.24221,
	str	x1, [sp, 104]	// D.24222, argv.__stack
	b	.L3289		//
.L3288:
	add	w2, w1, 16	// D.24224, D.24216,
	str	w2, [sp, 128]	// D.24224, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24226, argv.__gr_offs
	cmp	w2, 0	// D.24226,
	ble	.L3290		//,
	add	x1, x0, 23	// D.24229, iftmp.2003,
	and	x1, x1, -8	// D.24230, D.24229,
	str	x1, [sp, 104]	// D.24230, argv.__stack
	b	.L3289		//
.L3290:
	ldr	x2, [sp, 112]	// D.24232, argv.__gr_top
	sxtw	x0, w1	// D.24233, D.24216
	add	x0, x2, x0	// iftmp.2003, D.24232, D.24233
.L3289:
	ldp	x0, x1, [x0]	// D.6677, *iftmp.2002_121
// varargs-dll.c:1423:   int q = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 100]	// tmp342, q
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp343, a
	ldr	w0, [sp, 40]	// tmp344, b
	add	w1, w1, w0	// _1, tmp343, tmp344
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp345, c
	add	w1, w1, w0	// _2, _1, tmp345
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp346, d
	add	w1, w1, w0	// _3, _2, tmp346
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp347, e
	add	w1, w1, w0	// _4, _3, tmp347
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp348, f
	add	w1, w1, w0	// _5, _4, tmp348
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp349, g
	add	w1, w1, w0	// _6, _5, tmp349
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp350, h
	add	w1, w1, w0	// _7, _6, tmp350
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp351, i
	add	w1, w1, w0	// _8, _7, tmp351
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp352, j
	add	w1, w1, w0	// _9, _8, tmp352
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp353, k
	add	w1, w1, w0	// _10, _9, tmp353
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp354, l
	add	w1, w1, w0	// _11, _10, tmp354
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp355, m
	add	w1, w1, w0	// _12, _11, tmp355
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp356, n
	add	w1, w1, w0	// _13, _12, tmp356
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp357, o
	add	w1, w1, w0	// _14, _13, tmp357
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp358, p
	add	w1, w1, w0	// _15, _14, tmp358
// varargs-dll.c:1425:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp359, q
	add	w0, w1, w0	// _53, _15, tmp359
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:1426: }
	adrp	x0, :got:__stack_chk_guard	// tmp362,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp361, tmp362,
	ldr	x3, [sp, 136]	// tmp364, D.24234
	ldr	x2, [x0]	// tmp365,
	subs	x3, x3, x2	// tmp364, tmp365
	mov	x2, 0	// tmp365
	beq	.L3293		//,
	bl	__stack_chk_fail		//
.L3293:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE90:
	.size	use_va_args_many_hva_2_short_vector_8_bytes, .-use_va_args_many_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_list_many_hva_2_short_vector_8_bytes
	.type	use_va_list_many_hva_2_short_vector_8_bytes, %function
use_va_list_many_hva_2_short_vector_8_bytes:
.LFB91:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:1431:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24238, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2005, argv.__stack
	cmp	w1, 0	// D.24238,
	blt	.L3295		//,
	add	x1, x0, 23	// D.24243, iftmp.2005,
	and	x1, x1, -8	// D.24244, D.24243,
	str	x1, [x19]	// D.24244, argv.__stack
	b	.L3296		//
.L3295:
	add	w2, w1, 16	// D.24246, D.24238,
	str	w2, [x19, 24]	// D.24246, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24248, argv.__gr_offs
	cmp	w2, 0	// D.24248,
	ble	.L3297		//,
	add	x1, x0, 23	// D.24251, iftmp.2005,
	and	x1, x1, -8	// D.24252, D.24251,
	str	x1, [x19]	// D.24252, argv.__stack
	b	.L3296		//
.L3297:
	ldr	x2, [x19, 8]	// D.24254, argv.__gr_top
	sxtw	x0, w1	// D.24255, D.24238
	add	x0, x2, x0	// iftmp.2005, D.24254, D.24255
.L3296:
	ldp	x0, x1, [x0]	// D.6681, *iftmp.2004_86
// varargs-dll.c:1431:   int a = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 44]	// tmp297, a
// varargs-dll.c:1432:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24256, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2007, argv.__stack
	cmp	w1, 0	// D.24256,
	blt	.L3299		//,
	add	x1, x0, 23	// D.24261, iftmp.2007,
	and	x1, x1, -8	// D.24262, D.24261,
	str	x1, [x19]	// D.24262, argv.__stack
	b	.L3300		//
.L3299:
	add	w2, w1, 16	// D.24264, D.24256,
	str	w2, [x19, 24]	// D.24264, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24266, argv.__gr_offs
	cmp	w2, 0	// D.24266,
	ble	.L3301		//,
	add	x1, x0, 23	// D.24269, iftmp.2007,
	and	x1, x1, -8	// D.24270, D.24269,
	str	x1, [x19]	// D.24270, argv.__stack
	b	.L3300		//
.L3301:
	ldr	x2, [x19, 8]	// D.24272, argv.__gr_top
	sxtw	x0, w1	// D.24273, D.24256
	add	x0, x2, x0	// iftmp.2007, D.24272, D.24273
.L3300:
	ldp	x0, x1, [x0]	// D.6682, *iftmp.2006_88
// varargs-dll.c:1432:   int b = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp299, D.6682
	asr	x0, x0, 32	// tmp300, tmp299,
	str	w0, [sp, 48]	// tmp301, b
// varargs-dll.c:1433:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24274, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2009, argv.__stack
	cmp	w1, 0	// D.24274,
	blt	.L3303		//,
	add	x1, x0, 23	// D.24279, iftmp.2009,
	and	x1, x1, -8	// D.24280, D.24279,
	str	x1, [x19]	// D.24280, argv.__stack
	b	.L3304		//
.L3303:
	add	w2, w1, 16	// D.24282, D.24274,
	str	w2, [x19, 24]	// D.24282, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24284, argv.__gr_offs
	cmp	w2, 0	// D.24284,
	ble	.L3305		//,
	add	x1, x0, 23	// D.24287, iftmp.2009,
	and	x1, x1, -8	// D.24288, D.24287,
	str	x1, [x19]	// D.24288, argv.__stack
	b	.L3304		//
.L3305:
	ldr	x2, [x19, 8]	// D.24290, argv.__gr_top
	sxtw	x0, w1	// D.24291, D.24274
	add	x0, x2, x0	// iftmp.2009, D.24290, D.24291
.L3304:
	ldp	x0, x1, [x0]	// D.6683, *iftmp.2008_90
// varargs-dll.c:1433:   int c = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 52]	// tmp302, c
// varargs-dll.c:1434:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24292, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2011, argv.__stack
	cmp	w1, 0	// D.24292,
	blt	.L3307		//,
	add	x1, x0, 23	// D.24297, iftmp.2011,
	and	x1, x1, -8	// D.24298, D.24297,
	str	x1, [x19]	// D.24298, argv.__stack
	b	.L3308		//
.L3307:
	add	w2, w1, 16	// D.24300, D.24292,
	str	w2, [x19, 24]	// D.24300, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24302, argv.__gr_offs
	cmp	w2, 0	// D.24302,
	ble	.L3309		//,
	add	x1, x0, 23	// D.24305, iftmp.2011,
	and	x1, x1, -8	// D.24306, D.24305,
	str	x1, [x19]	// D.24306, argv.__stack
	b	.L3308		//
.L3309:
	ldr	x2, [x19, 8]	// D.24308, argv.__gr_top
	sxtw	x0, w1	// D.24309, D.24292
	add	x0, x2, x0	// iftmp.2011, D.24308, D.24309
.L3308:
	ldp	x0, x1, [x0]	// D.6684, *iftmp.2010_92
// varargs-dll.c:1434:   int d = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp304, D.6684
	asr	x0, x0, 32	// tmp305, tmp304,
	str	w0, [sp, 56]	// tmp306, d
// varargs-dll.c:1435:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24310, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2013, argv.__stack
	cmp	w1, 0	// D.24310,
	blt	.L3311		//,
	add	x1, x0, 23	// D.24315, iftmp.2013,
	and	x1, x1, -8	// D.24316, D.24315,
	str	x1, [x19]	// D.24316, argv.__stack
	b	.L3312		//
.L3311:
	add	w2, w1, 16	// D.24318, D.24310,
	str	w2, [x19, 24]	// D.24318, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24320, argv.__gr_offs
	cmp	w2, 0	// D.24320,
	ble	.L3313		//,
	add	x1, x0, 23	// D.24323, iftmp.2013,
	and	x1, x1, -8	// D.24324, D.24323,
	str	x1, [x19]	// D.24324, argv.__stack
	b	.L3312		//
.L3313:
	ldr	x2, [x19, 8]	// D.24326, argv.__gr_top
	sxtw	x0, w1	// D.24327, D.24310
	add	x0, x2, x0	// iftmp.2013, D.24326, D.24327
.L3312:
	ldp	x0, x1, [x0]	// D.6685, *iftmp.2012_94
// varargs-dll.c:1435:   int e = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 60]	// tmp307, e
// varargs-dll.c:1436:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24328, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2015, argv.__stack
	cmp	w1, 0	// D.24328,
	blt	.L3315		//,
	add	x1, x0, 23	// D.24333, iftmp.2015,
	and	x1, x1, -8	// D.24334, D.24333,
	str	x1, [x19]	// D.24334, argv.__stack
	b	.L3316		//
.L3315:
	add	w2, w1, 16	// D.24336, D.24328,
	str	w2, [x19, 24]	// D.24336, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24338, argv.__gr_offs
	cmp	w2, 0	// D.24338,
	ble	.L3317		//,
	add	x1, x0, 23	// D.24341, iftmp.2015,
	and	x1, x1, -8	// D.24342, D.24341,
	str	x1, [x19]	// D.24342, argv.__stack
	b	.L3316		//
.L3317:
	ldr	x2, [x19, 8]	// D.24344, argv.__gr_top
	sxtw	x0, w1	// D.24345, D.24328
	add	x0, x2, x0	// iftmp.2015, D.24344, D.24345
.L3316:
	ldp	x0, x1, [x0]	// D.6686, *iftmp.2014_96
// varargs-dll.c:1436:   int f = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp309, D.6686
	asr	x0, x0, 32	// tmp310, tmp309,
	str	w0, [sp, 64]	// tmp311, f
// varargs-dll.c:1437:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24346, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2017, argv.__stack
	cmp	w1, 0	// D.24346,
	blt	.L3319		//,
	add	x1, x0, 23	// D.24351, iftmp.2017,
	and	x1, x1, -8	// D.24352, D.24351,
	str	x1, [x19]	// D.24352, argv.__stack
	b	.L3320		//
.L3319:
	add	w2, w1, 16	// D.24354, D.24346,
	str	w2, [x19, 24]	// D.24354, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24356, argv.__gr_offs
	cmp	w2, 0	// D.24356,
	ble	.L3321		//,
	add	x1, x0, 23	// D.24359, iftmp.2017,
	and	x1, x1, -8	// D.24360, D.24359,
	str	x1, [x19]	// D.24360, argv.__stack
	b	.L3320		//
.L3321:
	ldr	x2, [x19, 8]	// D.24362, argv.__gr_top
	sxtw	x0, w1	// D.24363, D.24346
	add	x0, x2, x0	// iftmp.2017, D.24362, D.24363
.L3320:
	ldp	x0, x1, [x0]	// D.6687, *iftmp.2016_98
// varargs-dll.c:1437:   int g = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 68]	// tmp312, g
// varargs-dll.c:1438:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24364, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2019, argv.__stack
	cmp	w1, 0	// D.24364,
	blt	.L3323		//,
	add	x1, x0, 23	// D.24369, iftmp.2019,
	and	x1, x1, -8	// D.24370, D.24369,
	str	x1, [x19]	// D.24370, argv.__stack
	b	.L3324		//
.L3323:
	add	w2, w1, 16	// D.24372, D.24364,
	str	w2, [x19, 24]	// D.24372, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24374, argv.__gr_offs
	cmp	w2, 0	// D.24374,
	ble	.L3325		//,
	add	x1, x0, 23	// D.24377, iftmp.2019,
	and	x1, x1, -8	// D.24378, D.24377,
	str	x1, [x19]	// D.24378, argv.__stack
	b	.L3324		//
.L3325:
	ldr	x2, [x19, 8]	// D.24380, argv.__gr_top
	sxtw	x0, w1	// D.24381, D.24364
	add	x0, x2, x0	// iftmp.2019, D.24380, D.24381
.L3324:
	ldp	x0, x1, [x0]	// D.6688, *iftmp.2018_100
// varargs-dll.c:1438:   int h = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp314, D.6688
	asr	x0, x0, 32	// tmp315, tmp314,
	str	w0, [sp, 72]	// tmp316, h
// varargs-dll.c:1439:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24382, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2021, argv.__stack
	cmp	w1, 0	// D.24382,
	blt	.L3327		//,
	add	x1, x0, 23	// D.24387, iftmp.2021,
	and	x1, x1, -8	// D.24388, D.24387,
	str	x1, [x19]	// D.24388, argv.__stack
	b	.L3328		//
.L3327:
	add	w2, w1, 16	// D.24390, D.24382,
	str	w2, [x19, 24]	// D.24390, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24392, argv.__gr_offs
	cmp	w2, 0	// D.24392,
	ble	.L3329		//,
	add	x1, x0, 23	// D.24395, iftmp.2021,
	and	x1, x1, -8	// D.24396, D.24395,
	str	x1, [x19]	// D.24396, argv.__stack
	b	.L3328		//
.L3329:
	ldr	x2, [x19, 8]	// D.24398, argv.__gr_top
	sxtw	x0, w1	// D.24399, D.24382
	add	x0, x2, x0	// iftmp.2021, D.24398, D.24399
.L3328:
	ldp	x0, x1, [x0]	// D.6689, *iftmp.2020_102
// varargs-dll.c:1439:   int i = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 76]	// tmp317, i
// varargs-dll.c:1440:   int j = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24400, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2023, argv.__stack
	cmp	w1, 0	// D.24400,
	blt	.L3331		//,
	add	x1, x0, 23	// D.24405, iftmp.2023,
	and	x1, x1, -8	// D.24406, D.24405,
	str	x1, [x19]	// D.24406, argv.__stack
	b	.L3332		//
.L3331:
	add	w2, w1, 16	// D.24408, D.24400,
	str	w2, [x19, 24]	// D.24408, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24410, argv.__gr_offs
	cmp	w2, 0	// D.24410,
	ble	.L3333		//,
	add	x1, x0, 23	// D.24413, iftmp.2023,
	and	x1, x1, -8	// D.24414, D.24413,
	str	x1, [x19]	// D.24414, argv.__stack
	b	.L3332		//
.L3333:
	ldr	x2, [x19, 8]	// D.24416, argv.__gr_top
	sxtw	x0, w1	// D.24417, D.24400
	add	x0, x2, x0	// iftmp.2023, D.24416, D.24417
.L3332:
	ldp	x0, x1, [x0]	// D.6690, *iftmp.2022_104
// varargs-dll.c:1440:   int j = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp319, D.6690
	asr	x0, x0, 32	// tmp320, tmp319,
	str	w0, [sp, 80]	// tmp321, j
// varargs-dll.c:1441:   int k = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24418, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2025, argv.__stack
	cmp	w1, 0	// D.24418,
	blt	.L3335		//,
	add	x1, x0, 23	// D.24423, iftmp.2025,
	and	x1, x1, -8	// D.24424, D.24423,
	str	x1, [x19]	// D.24424, argv.__stack
	b	.L3336		//
.L3335:
	add	w2, w1, 16	// D.24426, D.24418,
	str	w2, [x19, 24]	// D.24426, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24428, argv.__gr_offs
	cmp	w2, 0	// D.24428,
	ble	.L3337		//,
	add	x1, x0, 23	// D.24431, iftmp.2025,
	and	x1, x1, -8	// D.24432, D.24431,
	str	x1, [x19]	// D.24432, argv.__stack
	b	.L3336		//
.L3337:
	ldr	x2, [x19, 8]	// D.24434, argv.__gr_top
	sxtw	x0, w1	// D.24435, D.24418
	add	x0, x2, x0	// iftmp.2025, D.24434, D.24435
.L3336:
	ldp	x0, x1, [x0]	// D.6691, *iftmp.2024_106
// varargs-dll.c:1441:   int k = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 84]	// tmp322, k
// varargs-dll.c:1442:   int l = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24436, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2027, argv.__stack
	cmp	w1, 0	// D.24436,
	blt	.L3339		//,
	add	x1, x0, 23	// D.24441, iftmp.2027,
	and	x1, x1, -8	// D.24442, D.24441,
	str	x1, [x19]	// D.24442, argv.__stack
	b	.L3340		//
.L3339:
	add	w2, w1, 16	// D.24444, D.24436,
	str	w2, [x19, 24]	// D.24444, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24446, argv.__gr_offs
	cmp	w2, 0	// D.24446,
	ble	.L3341		//,
	add	x1, x0, 23	// D.24449, iftmp.2027,
	and	x1, x1, -8	// D.24450, D.24449,
	str	x1, [x19]	// D.24450, argv.__stack
	b	.L3340		//
.L3341:
	ldr	x2, [x19, 8]	// D.24452, argv.__gr_top
	sxtw	x0, w1	// D.24453, D.24436
	add	x0, x2, x0	// iftmp.2027, D.24452, D.24453
.L3340:
	ldp	x0, x1, [x0]	// D.6692, *iftmp.2026_108
// varargs-dll.c:1442:   int l = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp324, D.6692
	asr	x0, x0, 32	// tmp325, tmp324,
	str	w0, [sp, 88]	// tmp326, l
// varargs-dll.c:1443:   int m = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24454, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2029, argv.__stack
	cmp	w1, 0	// D.24454,
	blt	.L3343		//,
	add	x1, x0, 23	// D.24459, iftmp.2029,
	and	x1, x1, -8	// D.24460, D.24459,
	str	x1, [x19]	// D.24460, argv.__stack
	b	.L3344		//
.L3343:
	add	w2, w1, 16	// D.24462, D.24454,
	str	w2, [x19, 24]	// D.24462, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24464, argv.__gr_offs
	cmp	w2, 0	// D.24464,
	ble	.L3345		//,
	add	x1, x0, 23	// D.24467, iftmp.2029,
	and	x1, x1, -8	// D.24468, D.24467,
	str	x1, [x19]	// D.24468, argv.__stack
	b	.L3344		//
.L3345:
	ldr	x2, [x19, 8]	// D.24470, argv.__gr_top
	sxtw	x0, w1	// D.24471, D.24454
	add	x0, x2, x0	// iftmp.2029, D.24470, D.24471
.L3344:
	ldp	x0, x1, [x0]	// D.6693, *iftmp.2028_110
// varargs-dll.c:1443:   int m = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 92]	// tmp327, m
// varargs-dll.c:1444:   int n = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24472, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2031, argv.__stack
	cmp	w1, 0	// D.24472,
	blt	.L3347		//,
	add	x1, x0, 23	// D.24477, iftmp.2031,
	and	x1, x1, -8	// D.24478, D.24477,
	str	x1, [x19]	// D.24478, argv.__stack
	b	.L3348		//
.L3347:
	add	w2, w1, 16	// D.24480, D.24472,
	str	w2, [x19, 24]	// D.24480, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24482, argv.__gr_offs
	cmp	w2, 0	// D.24482,
	ble	.L3349		//,
	add	x1, x0, 23	// D.24485, iftmp.2031,
	and	x1, x1, -8	// D.24486, D.24485,
	str	x1, [x19]	// D.24486, argv.__stack
	b	.L3348		//
.L3349:
	ldr	x2, [x19, 8]	// D.24488, argv.__gr_top
	sxtw	x0, w1	// D.24489, D.24472
	add	x0, x2, x0	// iftmp.2031, D.24488, D.24489
.L3348:
	ldp	x0, x1, [x0]	// D.6694, *iftmp.2030_112
// varargs-dll.c:1444:   int n = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp329, D.6694
	asr	x0, x0, 32	// tmp330, tmp329,
	str	w0, [sp, 96]	// tmp331, n
// varargs-dll.c:1445:   int o = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24490, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2033, argv.__stack
	cmp	w1, 0	// D.24490,
	blt	.L3351		//,
	add	x1, x0, 23	// D.24495, iftmp.2033,
	and	x1, x1, -8	// D.24496, D.24495,
	str	x1, [x19]	// D.24496, argv.__stack
	b	.L3352		//
.L3351:
	add	w2, w1, 16	// D.24498, D.24490,
	str	w2, [x19, 24]	// D.24498, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24500, argv.__gr_offs
	cmp	w2, 0	// D.24500,
	ble	.L3353		//,
	add	x1, x0, 23	// D.24503, iftmp.2033,
	and	x1, x1, -8	// D.24504, D.24503,
	str	x1, [x19]	// D.24504, argv.__stack
	b	.L3352		//
.L3353:
	ldr	x2, [x19, 8]	// D.24506, argv.__gr_top
	sxtw	x0, w1	// D.24507, D.24490
	add	x0, x2, x0	// iftmp.2033, D.24506, D.24507
.L3352:
	ldp	x0, x1, [x0]	// D.6695, *iftmp.2032_114
// varargs-dll.c:1445:   int o = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 100]	// tmp332, o
// varargs-dll.c:1446:   int p = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24508, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2035, argv.__stack
	cmp	w1, 0	// D.24508,
	blt	.L3355		//,
	add	x1, x0, 23	// D.24513, iftmp.2035,
	and	x1, x1, -8	// D.24514, D.24513,
	str	x1, [x19]	// D.24514, argv.__stack
	b	.L3356		//
.L3355:
	add	w2, w1, 16	// D.24516, D.24508,
	str	w2, [x19, 24]	// D.24516, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24518, argv.__gr_offs
	cmp	w2, 0	// D.24518,
	ble	.L3357		//,
	add	x1, x0, 23	// D.24521, iftmp.2035,
	and	x1, x1, -8	// D.24522, D.24521,
	str	x1, [x19]	// D.24522, argv.__stack
	b	.L3356		//
.L3357:
	ldr	x2, [x19, 8]	// D.24524, argv.__gr_top
	sxtw	x0, w1	// D.24525, D.24508
	add	x0, x2, x0	// iftmp.2035, D.24524, D.24525
.L3356:
	ldp	x0, x1, [x0]	// D.6696, *iftmp.2034_116
// varargs-dll.c:1446:   int p = va_arg (argv, struct hva_2_short_vector_8_bytes).b.b;
	mov	x0, x1	// tmp334, D.6696
	asr	x0, x0, 32	// tmp335, tmp334,
	str	w0, [sp, 104]	// tmp336, p
// varargs-dll.c:1447:   int q = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24526, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2037, argv.__stack
	cmp	w1, 0	// D.24526,
	blt	.L3359		//,
	add	x1, x0, 23	// D.24531, iftmp.2037,
	and	x1, x1, -8	// D.24532, D.24531,
	str	x1, [x19]	// D.24532, argv.__stack
	b	.L3360		//
.L3359:
	add	w2, w1, 16	// D.24534, D.24526,
	str	w2, [x19, 24]	// D.24534, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24536, argv.__gr_offs
	cmp	w2, 0	// D.24536,
	ble	.L3361		//,
	add	x1, x0, 23	// D.24539, iftmp.2037,
	and	x1, x1, -8	// D.24540, D.24539,
	str	x1, [x19]	// D.24540, argv.__stack
	b	.L3360		//
.L3361:
	ldr	x2, [x19, 8]	// D.24542, argv.__gr_top
	sxtw	x0, w1	// D.24543, D.24526
	add	x0, x2, x0	// iftmp.2037, D.24542, D.24543
.L3360:
	ldp	x0, x1, [x0]	// D.6697, *iftmp.2036_118
// varargs-dll.c:1447:   int q = va_arg (argv, struct hva_2_short_vector_8_bytes).a.a;
	str	w0, [sp, 108]	// tmp337, q
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp338, a
	ldr	w0, [sp, 48]	// tmp339, b
	add	w1, w1, w0	// _1, tmp338, tmp339
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp340, c
	add	w1, w1, w0	// _2, _1, tmp340
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp341, d
	add	w1, w1, w0	// _3, _2, tmp341
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp342, e
	add	w1, w1, w0	// _4, _3, tmp342
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp343, f
	add	w1, w1, w0	// _5, _4, tmp343
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp344, g
	add	w1, w1, w0	// _6, _5, tmp344
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp345, h
	add	w1, w1, w0	// _7, _6, tmp345
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp346, i
	add	w1, w1, w0	// _8, _7, tmp346
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp347, j
	add	w1, w1, w0	// _9, _8, tmp347
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp348, k
	add	w1, w1, w0	// _10, _9, tmp348
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp349, l
	add	w1, w1, w0	// _11, _10, tmp349
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp350, m
	add	w1, w1, w0	// _12, _11, tmp350
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp351, n
	add	w1, w1, w0	// _13, _12, tmp351
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp352, o
	add	w1, w1, w0	// _14, _13, tmp352
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp353, p
	add	w1, w1, w0	// _15, _14, tmp353
// varargs-dll.c:1448:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp354, q
	add	w0, w1, w0	// _51, _15, tmp354
// varargs-dll.c:1449: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE91:
	.size	use_va_list_many_hva_2_short_vector_8_bytes, .-use_va_list_many_hva_2_short_vector_8_bytes
	.align	2
	.global	use_va_args_few_hva_4_short_vector_8_bytes
	.type	use_va_args_few_hva_4_short_vector_8_bytes, %function
use_va_args_few_hva_4_short_vector_8_bytes:
.LFB92:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:1453: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp137,
	str	x1, [sp, 136]	// tmp137, D.24582
	mov	x1, 0	// tmp137
// varargs-dll.c:1455:   va_start (argv, format);
	add	x0, sp, 336	// tmp142,,
	str	x0, [sp, 40]	// tmp142, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp143,,
	str	x0, [sp, 48]	// tmp143, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1456:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 64]	// D.24544, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2039, argv.__stack
	cmp	w1, 0	// D.24544,
	blt	.L3365		//,
	add	x1, x0, 15	// D.24549, iftmp.2039,
	and	x1, x1, -8	// D.24550, D.24549,
	str	x1, [sp, 40]	// D.24550, argv.__stack
	b	.L3366		//
.L3365:
	add	w2, w1, 8	// D.24552, D.24544,
	str	w2, [sp, 64]	// D.24552, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.24554, argv.__gr_offs
	cmp	w2, 0	// D.24554,
	ble	.L3367		//,
	add	x1, x0, 15	// D.24557, iftmp.2039,
	and	x1, x1, -8	// D.24558, D.24557,
	str	x1, [sp, 40]	// D.24558, argv.__stack
	b	.L3366		//
.L3367:
	ldr	x2, [sp, 48]	// D.24560, argv.__gr_top
	sxtw	x0, w1	// D.24561, D.24544
	add	x0, x2, x0	// iftmp.2039, D.24560, D.24561
.L3366:
	ldr	x1, [x0]	// D.24562, *iftmp.2038_14
	add	x0, sp, 72	// tmp122,,
	ldp	q0, q1, [x1]	// tmp124, tmp125, *_35
	stp	q0, q1, [x0]	// tmp124, tmp125, D.6700
// varargs-dll.c:1456:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 72]	// tmp126, D.6700.a.a
	str	w0, [sp, 32]	// tmp126, a
// varargs-dll.c:1457:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 64]	// D.24563, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2041, argv.__stack
	cmp	w1, 0	// D.24563,
	blt	.L3369		//,
	add	x1, x0, 15	// D.24568, iftmp.2041,
	and	x1, x1, -8	// D.24569, D.24568,
	str	x1, [sp, 40]	// D.24569, argv.__stack
	b	.L3370		//
.L3369:
	add	w2, w1, 8	// D.24571, D.24563,
	str	w2, [sp, 64]	// D.24571, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.24573, argv.__gr_offs
	cmp	w2, 0	// D.24573,
	ble	.L3371		//,
	add	x1, x0, 15	// D.24576, iftmp.2041,
	and	x1, x1, -8	// D.24577, D.24576,
	str	x1, [sp, 40]	// D.24577, argv.__stack
	b	.L3370		//
.L3371:
	ldr	x2, [sp, 48]	// D.24579, argv.__gr_top
	sxtw	x0, w1	// D.24580, D.24563
	add	x0, x2, x0	// iftmp.2041, D.24579, D.24580
.L3370:
	ldr	x1, [x0]	// D.24581, *iftmp.2040_16
	add	x0, sp, 104	// tmp127,,
	ldp	q0, q1, [x1]	// tmp129, tmp130, *_54
	stp	q0, q1, [x0]	// tmp129, tmp130, D.6701
// varargs-dll.c:1457:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 116]	// tmp131, D.6701.b.b
	str	w0, [sp, 36]	// tmp131, b
// varargs-dll.c:1459:   return a + b;
	ldr	w1, [sp, 32]	// tmp132, a
	ldr	w0, [sp, 36]	// tmp133, b
	add	w0, w1, w0	// _8, tmp132, tmp133
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:1460: }
	adrp	x0, :got:__stack_chk_guard	// tmp136,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp135, tmp136,
	ldr	x3, [sp, 136]	// tmp138, D.24582
	ldr	x2, [x0]	// tmp139,
	subs	x3, x3, x2	// tmp138, tmp139
	mov	x2, 0	// tmp139
	beq	.L3374		//,
	bl	__stack_chk_fail		//
.L3374:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE92:
	.size	use_va_args_few_hva_4_short_vector_8_bytes, .-use_va_args_few_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_list_few_hva_4_short_vector_8_bytes
	.type	use_va_list_few_hva_4_short_vector_8_bytes, %function
use_va_list_few_hva_4_short_vector_8_bytes:
.LFB93:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:1465:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24586, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2043, argv.__stack
	cmp	w1, 0	// D.24586,
	blt	.L3376		//,
	add	x1, x0, 15	// D.24591, iftmp.2043,
	and	x1, x1, -8	// D.24592, D.24591,
	str	x1, [x19]	// D.24592, argv.__stack
	b	.L3377		//
.L3376:
	add	w2, w1, 8	// D.24594, D.24586,
	str	w2, [x19, 24]	// D.24594, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24596, argv.__gr_offs
	cmp	w2, 0	// D.24596,
	ble	.L3378		//,
	add	x1, x0, 15	// D.24599, iftmp.2043,
	and	x1, x1, -8	// D.24600, D.24599,
	str	x1, [x19]	// D.24600, argv.__stack
	b	.L3377		//
.L3378:
	ldr	x2, [x19, 8]	// D.24602, argv.__gr_top
	sxtw	x0, w1	// D.24603, D.24586
	add	x0, x2, x0	// iftmp.2043, D.24602, D.24603
.L3377:
	ldr	x1, [x0]	// D.24604, *iftmp.2042_11
	add	x0, sp, 48	// tmp117,,
	ldp	q0, q1, [x1]	// tmp119, tmp120, *_32
	stp	q0, q1, [x0]	// tmp119, tmp120, D.6705
// varargs-dll.c:1465:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 48]	// tmp121, D.6705.a.a
	str	w0, [sp, 40]	// tmp121, a
// varargs-dll.c:1466:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24605, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2045, argv.__stack
	cmp	w1, 0	// D.24605,
	blt	.L3380		//,
	add	x1, x0, 15	// D.24610, iftmp.2045,
	and	x1, x1, -8	// D.24611, D.24610,
	str	x1, [x19]	// D.24611, argv.__stack
	b	.L3381		//
.L3380:
	add	w2, w1, 8	// D.24613, D.24605,
	str	w2, [x19, 24]	// D.24613, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24615, argv.__gr_offs
	cmp	w2, 0	// D.24615,
	ble	.L3382		//,
	add	x1, x0, 15	// D.24618, iftmp.2045,
	and	x1, x1, -8	// D.24619, D.24618,
	str	x1, [x19]	// D.24619, argv.__stack
	b	.L3381		//
.L3382:
	ldr	x2, [x19, 8]	// D.24621, argv.__gr_top
	sxtw	x0, w1	// D.24622, D.24605
	add	x0, x2, x0	// iftmp.2045, D.24621, D.24622
.L3381:
	ldr	x1, [x0]	// D.24623, *iftmp.2044_13
	add	x0, sp, 80	// tmp122,,
	ldp	q0, q1, [x1]	// tmp124, tmp125, *_51
	stp	q0, q1, [x0]	// tmp124, tmp125, D.6706
// varargs-dll.c:1466:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 92]	// tmp126, D.6706.b.b
	str	w0, [sp, 44]	// tmp126, b
// varargs-dll.c:1467:   return a + b;
	ldr	w1, [sp, 40]	// tmp127, a
	ldr	w0, [sp, 44]	// tmp128, b
	add	w0, w1, w0	// _6, tmp127, tmp128
// varargs-dll.c:1468: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE93:
	.size	use_va_list_few_hva_4_short_vector_8_bytes, .-use_va_list_few_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_args_several_hva_4_short_vector_8_bytes
	.type	use_va_args_several_hva_4_short_vector_8_bytes, %function
use_va_args_several_hva_4_short_vector_8_bytes:
.LFB94:
	.cfi_startproc
	sub	sp, sp, #592	//,,
	.cfi_def_cfa_offset 592
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -592
	.cfi_offset 30, -584
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 536]	//,
	str	x2, [sp, 544]	//,
	str	x3, [sp, 552]	//,
	str	x4, [sp, 560]	//,
	str	x5, [sp, 568]	//,
	str	x6, [sp, 576]	//,
	str	x7, [sp, 584]	//,
	str	q0, [sp, 400]	//,
	str	q1, [sp, 416]	//,
	str	q2, [sp, 432]	//,
	str	q3, [sp, 448]	//,
	str	q4, [sp, 464]	//,
	str	q5, [sp, 480]	//,
	str	q6, [sp, 496]	//,
	add	x0, sp, 512	// tmp268,,
	str	q7, [x0]	//,
// varargs-dll.c:1472: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp263,
	str	x1, [sp, 392]	// tmp263, D.24795
	mov	x1, 0	// tmp263
// varargs-dll.c:1474:   va_start (argv, format);
	add	x0, sp, 592	// tmp270,,
	str	x0, [sp, 72]	// tmp270, MEM[(struct  *)&argv].__stack
	add	x0, sp, 592	// tmp271,,
	str	x0, [sp, 80]	// tmp271, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 528	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1475:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.24624, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2047, argv.__stack
	cmp	w1, 0	// D.24624,
	blt	.L3386		//,
	add	x1, x0, 15	// D.24629, iftmp.2047,
	and	x1, x1, -8	// D.24630, D.24629,
	str	x1, [sp, 72]	// D.24630, argv.__stack
	b	.L3387		//
.L3386:
	add	w2, w1, 8	// D.24632, D.24624,
	str	w2, [sp, 96]	// D.24632, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24634, argv.__gr_offs
	cmp	w2, 0	// D.24634,
	ble	.L3388		//,
	add	x1, x0, 15	// D.24637, iftmp.2047,
	and	x1, x1, -8	// D.24638, D.24637,
	str	x1, [sp, 72]	// D.24638, argv.__stack
	b	.L3387		//
.L3388:
	ldr	x2, [sp, 80]	// D.24640, argv.__gr_top
	sxtw	x0, w1	// D.24641, D.24624
	add	x0, x2, x0	// iftmp.2047, D.24640, D.24641
.L3387:
	ldr	x1, [x0]	// D.24642, *iftmp.2046_49
	add	x0, sp, 104	// tmp206,,
	ldp	q0, q1, [x1]	// tmp208, tmp209, *_84
	stp	q0, q1, [x0]	// tmp208, tmp209, D.6709
// varargs-dll.c:1475:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 104]	// tmp210, D.6709.a.a
	str	w0, [sp, 36]	// tmp210, a
// varargs-dll.c:1476:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.24643, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2049, argv.__stack
	cmp	w1, 0	// D.24643,
	blt	.L3390		//,
	add	x1, x0, 15	// D.24648, iftmp.2049,
	and	x1, x1, -8	// D.24649, D.24648,
	str	x1, [sp, 72]	// D.24649, argv.__stack
	b	.L3391		//
.L3390:
	add	w2, w1, 8	// D.24651, D.24643,
	str	w2, [sp, 96]	// D.24651, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24653, argv.__gr_offs
	cmp	w2, 0	// D.24653,
	ble	.L3392		//,
	add	x1, x0, 15	// D.24656, iftmp.2049,
	and	x1, x1, -8	// D.24657, D.24656,
	str	x1, [sp, 72]	// D.24657, argv.__stack
	b	.L3391		//
.L3392:
	ldr	x2, [sp, 80]	// D.24659, argv.__gr_top
	sxtw	x0, w1	// D.24660, D.24643
	add	x0, x2, x0	// iftmp.2049, D.24659, D.24660
.L3391:
	ldr	x1, [x0]	// D.24661, *iftmp.2048_51
	add	x0, sp, 136	// tmp211,,
	ldp	q0, q1, [x1]	// tmp213, tmp214, *_103
	stp	q0, q1, [x0]	// tmp213, tmp214, D.6710
// varargs-dll.c:1476:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 148]	// tmp215, D.6710.b.b
	str	w0, [sp, 40]	// tmp215, b
// varargs-dll.c:1477:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 96]	// D.24662, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2051, argv.__stack
	cmp	w1, 0	// D.24662,
	blt	.L3394		//,
	add	x1, x0, 15	// D.24667, iftmp.2051,
	and	x1, x1, -8	// D.24668, D.24667,
	str	x1, [sp, 72]	// D.24668, argv.__stack
	b	.L3395		//
.L3394:
	add	w2, w1, 8	// D.24670, D.24662,
	str	w2, [sp, 96]	// D.24670, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24672, argv.__gr_offs
	cmp	w2, 0	// D.24672,
	ble	.L3396		//,
	add	x1, x0, 15	// D.24675, iftmp.2051,
	and	x1, x1, -8	// D.24676, D.24675,
	str	x1, [sp, 72]	// D.24676, argv.__stack
	b	.L3395		//
.L3396:
	ldr	x2, [sp, 80]	// D.24678, argv.__gr_top
	sxtw	x0, w1	// D.24679, D.24662
	add	x0, x2, x0	// iftmp.2051, D.24678, D.24679
.L3395:
	ldr	x1, [x0]	// D.24680, *iftmp.2050_53
	add	x0, sp, 168	// tmp216,,
	ldp	q0, q1, [x1]	// tmp218, tmp219, *_122
	stp	q0, q1, [x0]	// tmp218, tmp219, D.6711
// varargs-dll.c:1477:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 184]	// tmp220, D.6711.c.a
	str	w0, [sp, 44]	// tmp220, c
// varargs-dll.c:1478:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 96]	// D.24681, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2053, argv.__stack
	cmp	w1, 0	// D.24681,
	blt	.L3398		//,
	add	x1, x0, 15	// D.24686, iftmp.2053,
	and	x1, x1, -8	// D.24687, D.24686,
	str	x1, [sp, 72]	// D.24687, argv.__stack
	b	.L3399		//
.L3398:
	add	w2, w1, 8	// D.24689, D.24681,
	str	w2, [sp, 96]	// D.24689, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24691, argv.__gr_offs
	cmp	w2, 0	// D.24691,
	ble	.L3400		//,
	add	x1, x0, 15	// D.24694, iftmp.2053,
	and	x1, x1, -8	// D.24695, D.24694,
	str	x1, [sp, 72]	// D.24695, argv.__stack
	b	.L3399		//
.L3400:
	ldr	x2, [sp, 80]	// D.24697, argv.__gr_top
	sxtw	x0, w1	// D.24698, D.24681
	add	x0, x2, x0	// iftmp.2053, D.24697, D.24698
.L3399:
	ldr	x1, [x0]	// D.24699, *iftmp.2052_55
	add	x0, sp, 200	// tmp221,,
	ldp	q0, q1, [x1]	// tmp223, tmp224, *_141
	stp	q0, q1, [x0]	// tmp223, tmp224, D.6712
// varargs-dll.c:1478:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 228]	// tmp225, D.6712.d.b
	str	w0, [sp, 48]	// tmp225, d
// varargs-dll.c:1479:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.24700, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2055, argv.__stack
	cmp	w1, 0	// D.24700,
	blt	.L3402		//,
	add	x1, x0, 15	// D.24705, iftmp.2055,
	and	x1, x1, -8	// D.24706, D.24705,
	str	x1, [sp, 72]	// D.24706, argv.__stack
	b	.L3403		//
.L3402:
	add	w2, w1, 8	// D.24708, D.24700,
	str	w2, [sp, 96]	// D.24708, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24710, argv.__gr_offs
	cmp	w2, 0	// D.24710,
	ble	.L3404		//,
	add	x1, x0, 15	// D.24713, iftmp.2055,
	and	x1, x1, -8	// D.24714, D.24713,
	str	x1, [sp, 72]	// D.24714, argv.__stack
	b	.L3403		//
.L3404:
	ldr	x2, [sp, 80]	// D.24716, argv.__gr_top
	sxtw	x0, w1	// D.24717, D.24700
	add	x0, x2, x0	// iftmp.2055, D.24716, D.24717
.L3403:
	ldr	x1, [x0]	// D.24718, *iftmp.2054_57
	add	x0, sp, 232	// tmp226,,
	ldp	q0, q1, [x1]	// tmp228, tmp229, *_160
	stp	q0, q1, [x0]	// tmp228, tmp229, D.6713
// varargs-dll.c:1479:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 232]	// tmp230, D.6713.a.a
	str	w0, [sp, 52]	// tmp230, e
// varargs-dll.c:1480:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 96]	// D.24719, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2057, argv.__stack
	cmp	w1, 0	// D.24719,
	blt	.L3406		//,
	add	x1, x0, 15	// D.24724, iftmp.2057,
	and	x1, x1, -8	// D.24725, D.24724,
	str	x1, [sp, 72]	// D.24725, argv.__stack
	b	.L3407		//
.L3406:
	add	w2, w1, 8	// D.24727, D.24719,
	str	w2, [sp, 96]	// D.24727, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24729, argv.__gr_offs
	cmp	w2, 0	// D.24729,
	ble	.L3408		//,
	add	x1, x0, 15	// D.24732, iftmp.2057,
	and	x1, x1, -8	// D.24733, D.24732,
	str	x1, [sp, 72]	// D.24733, argv.__stack
	b	.L3407		//
.L3408:
	ldr	x2, [sp, 80]	// D.24735, argv.__gr_top
	sxtw	x0, w1	// D.24736, D.24719
	add	x0, x2, x0	// iftmp.2057, D.24735, D.24736
.L3407:
	ldr	x1, [x0]	// D.24737, *iftmp.2056_59
	add	x0, sp, 264	// tmp231,,
	ldp	q0, q1, [x1]	// tmp233, tmp234, *_179
	stp	q0, q1, [x0]	// tmp233, tmp234, D.6714
// varargs-dll.c:1480:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 276]	// tmp235, D.6714.b.b
	str	w0, [sp, 56]	// tmp235, f
// varargs-dll.c:1481:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 96]	// D.24738, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2059, argv.__stack
	cmp	w1, 0	// D.24738,
	blt	.L3410		//,
	add	x1, x0, 15	// D.24743, iftmp.2059,
	and	x1, x1, -8	// D.24744, D.24743,
	str	x1, [sp, 72]	// D.24744, argv.__stack
	b	.L3411		//
.L3410:
	add	w2, w1, 8	// D.24746, D.24738,
	str	w2, [sp, 96]	// D.24746, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24748, argv.__gr_offs
	cmp	w2, 0	// D.24748,
	ble	.L3412		//,
	add	x1, x0, 15	// D.24751, iftmp.2059,
	and	x1, x1, -8	// D.24752, D.24751,
	str	x1, [sp, 72]	// D.24752, argv.__stack
	b	.L3411		//
.L3412:
	ldr	x2, [sp, 80]	// D.24754, argv.__gr_top
	sxtw	x0, w1	// D.24755, D.24738
	add	x0, x2, x0	// iftmp.2059, D.24754, D.24755
.L3411:
	ldr	x1, [x0]	// D.24756, *iftmp.2058_61
	add	x0, sp, 296	// tmp236,,
	ldp	q0, q1, [x1]	// tmp238, tmp239, *_198
	stp	q0, q1, [x0]	// tmp238, tmp239, D.6715
// varargs-dll.c:1481:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 312]	// tmp240, D.6715.c.a
	str	w0, [sp, 60]	// tmp240, g
// varargs-dll.c:1482:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 96]	// D.24757, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2061, argv.__stack
	cmp	w1, 0	// D.24757,
	blt	.L3414		//,
	add	x1, x0, 15	// D.24762, iftmp.2061,
	and	x1, x1, -8	// D.24763, D.24762,
	str	x1, [sp, 72]	// D.24763, argv.__stack
	b	.L3415		//
.L3414:
	add	w2, w1, 8	// D.24765, D.24757,
	str	w2, [sp, 96]	// D.24765, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24767, argv.__gr_offs
	cmp	w2, 0	// D.24767,
	ble	.L3416		//,
	add	x1, x0, 15	// D.24770, iftmp.2061,
	and	x1, x1, -8	// D.24771, D.24770,
	str	x1, [sp, 72]	// D.24771, argv.__stack
	b	.L3415		//
.L3416:
	ldr	x2, [sp, 80]	// D.24773, argv.__gr_top
	sxtw	x0, w1	// D.24774, D.24757
	add	x0, x2, x0	// iftmp.2061, D.24773, D.24774
.L3415:
	ldr	x1, [x0]	// D.24775, *iftmp.2060_63
	add	x0, sp, 328	// tmp241,,
	ldp	q0, q1, [x1]	// tmp243, tmp244, *_217
	stp	q0, q1, [x0]	// tmp243, tmp244, D.6716
// varargs-dll.c:1482:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 356]	// tmp245, D.6716.d.b
	str	w0, [sp, 64]	// tmp245, h
// varargs-dll.c:1483:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 96]	// D.24776, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2063, argv.__stack
	cmp	w1, 0	// D.24776,
	blt	.L3418		//,
	add	x1, x0, 15	// D.24781, iftmp.2063,
	and	x1, x1, -8	// D.24782, D.24781,
	str	x1, [sp, 72]	// D.24782, argv.__stack
	b	.L3419		//
.L3418:
	add	w2, w1, 8	// D.24784, D.24776,
	str	w2, [sp, 96]	// D.24784, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.24786, argv.__gr_offs
	cmp	w2, 0	// D.24786,
	ble	.L3420		//,
	add	x1, x0, 15	// D.24789, iftmp.2063,
	and	x1, x1, -8	// D.24790, D.24789,
	str	x1, [sp, 72]	// D.24790, argv.__stack
	b	.L3419		//
.L3420:
	ldr	x2, [sp, 80]	// D.24792, argv.__gr_top
	sxtw	x0, w1	// D.24793, D.24776
	add	x0, x2, x0	// iftmp.2063, D.24792, D.24793
.L3419:
	ldr	x1, [x0]	// D.24794, *iftmp.2062_65
	add	x0, sp, 360	// tmp246,,
	ldp	q0, q1, [x1]	// tmp248, tmp249, *_236
	stp	q0, q1, [x0]	// tmp248, tmp249, D.6717
// varargs-dll.c:1483:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 360]	// tmp250, D.6717.a.a
	str	w0, [sp, 68]	// tmp250, i
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp251, a
	ldr	w0, [sp, 40]	// tmp252, b
	add	w1, w1, w0	// _1, tmp251, tmp252
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp253, c
	add	w1, w1, w0	// _2, _1, tmp253
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp254, d
	add	w1, w1, w0	// _3, _2, tmp254
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp255, e
	add	w1, w1, w0	// _4, _3, tmp255
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp256, f
	add	w1, w1, w0	// _5, _4, tmp256
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp257, g
	add	w1, w1, w0	// _6, _5, tmp257
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp258, h
	add	w1, w1, w0	// _7, _6, tmp258
// varargs-dll.c:1485:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp259, i
	add	w0, w1, w0	// _29, _7, tmp259
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:1486: }
	adrp	x0, :got:__stack_chk_guard	// tmp262,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp261, tmp262,
	ldr	x3, [sp, 392]	// tmp264, D.24795
	ldr	x2, [x0]	// tmp265,
	subs	x3, x3, x2	// tmp264, tmp265
	mov	x2, 0	// tmp265
	beq	.L3423		//,
	bl	__stack_chk_fail		//
.L3423:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 592	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE94:
	.size	use_va_args_several_hva_4_short_vector_8_bytes, .-use_va_args_several_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_list_several_hva_4_short_vector_8_bytes
	.type	use_va_list_several_hva_4_short_vector_8_bytes, %function
use_va_list_several_hva_4_short_vector_8_bytes:
.LFB95:
	.cfi_startproc
	sub	sp, sp, #368	//,,
	.cfi_def_cfa_offset 368
	str	x19, [sp]	//,
	.cfi_offset 19, -368
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:1492:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24799, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2065, argv.__stack
	cmp	w1, 0	// D.24799,
	blt	.L3425		//,
	add	x1, x0, 15	// D.24804, iftmp.2065,
	and	x1, x1, -8	// D.24805, D.24804,
	str	x1, [x19]	// D.24805, argv.__stack
	b	.L3426		//
.L3425:
	add	w2, w1, 8	// D.24807, D.24799,
	str	w2, [x19, 24]	// D.24807, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24809, argv.__gr_offs
	cmp	w2, 0	// D.24809,
	ble	.L3427		//,
	add	x1, x0, 15	// D.24812, iftmp.2065,
	and	x1, x1, -8	// D.24813, D.24812,
	str	x1, [x19]	// D.24813, argv.__stack
	b	.L3426		//
.L3427:
	ldr	x2, [x19, 8]	// D.24815, argv.__gr_top
	sxtw	x0, w1	// D.24816, D.24799
	add	x0, x2, x0	// iftmp.2065, D.24815, D.24816
.L3426:
	ldr	x1, [x0]	// D.24817, *iftmp.2064_46
	add	x0, sp, 80	// tmp201,,
	ldp	q0, q1, [x1]	// tmp203, tmp204, *_81
	stp	q0, q1, [x0]	// tmp203, tmp204, D.6721
// varargs-dll.c:1492:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 80]	// tmp205, D.6721.a.a
	str	w0, [sp, 44]	// tmp205, a
// varargs-dll.c:1493:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24818, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2067, argv.__stack
	cmp	w1, 0	// D.24818,
	blt	.L3429		//,
	add	x1, x0, 15	// D.24823, iftmp.2067,
	and	x1, x1, -8	// D.24824, D.24823,
	str	x1, [x19]	// D.24824, argv.__stack
	b	.L3430		//
.L3429:
	add	w2, w1, 8	// D.24826, D.24818,
	str	w2, [x19, 24]	// D.24826, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24828, argv.__gr_offs
	cmp	w2, 0	// D.24828,
	ble	.L3431		//,
	add	x1, x0, 15	// D.24831, iftmp.2067,
	and	x1, x1, -8	// D.24832, D.24831,
	str	x1, [x19]	// D.24832, argv.__stack
	b	.L3430		//
.L3431:
	ldr	x2, [x19, 8]	// D.24834, argv.__gr_top
	sxtw	x0, w1	// D.24835, D.24818
	add	x0, x2, x0	// iftmp.2067, D.24834, D.24835
.L3430:
	ldr	x1, [x0]	// D.24836, *iftmp.2066_48
	add	x0, sp, 112	// tmp206,,
	ldp	q0, q1, [x1]	// tmp208, tmp209, *_100
	stp	q0, q1, [x0]	// tmp208, tmp209, D.6722
// varargs-dll.c:1493:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 124]	// tmp210, D.6722.b.b
	str	w0, [sp, 48]	// tmp210, b
// varargs-dll.c:1494:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.24837, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2069, argv.__stack
	cmp	w1, 0	// D.24837,
	blt	.L3433		//,
	add	x1, x0, 15	// D.24842, iftmp.2069,
	and	x1, x1, -8	// D.24843, D.24842,
	str	x1, [x19]	// D.24843, argv.__stack
	b	.L3434		//
.L3433:
	add	w2, w1, 8	// D.24845, D.24837,
	str	w2, [x19, 24]	// D.24845, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24847, argv.__gr_offs
	cmp	w2, 0	// D.24847,
	ble	.L3435		//,
	add	x1, x0, 15	// D.24850, iftmp.2069,
	and	x1, x1, -8	// D.24851, D.24850,
	str	x1, [x19]	// D.24851, argv.__stack
	b	.L3434		//
.L3435:
	ldr	x2, [x19, 8]	// D.24853, argv.__gr_top
	sxtw	x0, w1	// D.24854, D.24837
	add	x0, x2, x0	// iftmp.2069, D.24853, D.24854
.L3434:
	ldr	x1, [x0]	// D.24855, *iftmp.2068_50
	add	x0, sp, 144	// tmp211,,
	ldp	q0, q1, [x1]	// tmp213, tmp214, *_119
	stp	q0, q1, [x0]	// tmp213, tmp214, D.6723
// varargs-dll.c:1494:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 160]	// tmp215, D.6723.c.a
	str	w0, [sp, 52]	// tmp215, c
// varargs-dll.c:1495:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.24856, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2071, argv.__stack
	cmp	w1, 0	// D.24856,
	blt	.L3437		//,
	add	x1, x0, 15	// D.24861, iftmp.2071,
	and	x1, x1, -8	// D.24862, D.24861,
	str	x1, [x19]	// D.24862, argv.__stack
	b	.L3438		//
.L3437:
	add	w2, w1, 8	// D.24864, D.24856,
	str	w2, [x19, 24]	// D.24864, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24866, argv.__gr_offs
	cmp	w2, 0	// D.24866,
	ble	.L3439		//,
	add	x1, x0, 15	// D.24869, iftmp.2071,
	and	x1, x1, -8	// D.24870, D.24869,
	str	x1, [x19]	// D.24870, argv.__stack
	b	.L3438		//
.L3439:
	ldr	x2, [x19, 8]	// D.24872, argv.__gr_top
	sxtw	x0, w1	// D.24873, D.24856
	add	x0, x2, x0	// iftmp.2071, D.24872, D.24873
.L3438:
	ldr	x1, [x0]	// D.24874, *iftmp.2070_52
	add	x0, sp, 176	// tmp216,,
	ldp	q0, q1, [x1]	// tmp218, tmp219, *_138
	stp	q0, q1, [x0]	// tmp218, tmp219, D.6724
// varargs-dll.c:1495:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 204]	// tmp220, D.6724.d.b
	str	w0, [sp, 56]	// tmp220, d
// varargs-dll.c:1496:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24875, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2073, argv.__stack
	cmp	w1, 0	// D.24875,
	blt	.L3441		//,
	add	x1, x0, 15	// D.24880, iftmp.2073,
	and	x1, x1, -8	// D.24881, D.24880,
	str	x1, [x19]	// D.24881, argv.__stack
	b	.L3442		//
.L3441:
	add	w2, w1, 8	// D.24883, D.24875,
	str	w2, [x19, 24]	// D.24883, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24885, argv.__gr_offs
	cmp	w2, 0	// D.24885,
	ble	.L3443		//,
	add	x1, x0, 15	// D.24888, iftmp.2073,
	and	x1, x1, -8	// D.24889, D.24888,
	str	x1, [x19]	// D.24889, argv.__stack
	b	.L3442		//
.L3443:
	ldr	x2, [x19, 8]	// D.24891, argv.__gr_top
	sxtw	x0, w1	// D.24892, D.24875
	add	x0, x2, x0	// iftmp.2073, D.24891, D.24892
.L3442:
	ldr	x1, [x0]	// D.24893, *iftmp.2072_54
	add	x0, sp, 208	// tmp221,,
	ldp	q0, q1, [x1]	// tmp223, tmp224, *_157
	stp	q0, q1, [x0]	// tmp223, tmp224, D.6725
// varargs-dll.c:1496:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 208]	// tmp225, D.6725.a.a
	str	w0, [sp, 60]	// tmp225, e
// varargs-dll.c:1497:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.24894, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2075, argv.__stack
	cmp	w1, 0	// D.24894,
	blt	.L3445		//,
	add	x1, x0, 15	// D.24899, iftmp.2075,
	and	x1, x1, -8	// D.24900, D.24899,
	str	x1, [x19]	// D.24900, argv.__stack
	b	.L3446		//
.L3445:
	add	w2, w1, 8	// D.24902, D.24894,
	str	w2, [x19, 24]	// D.24902, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24904, argv.__gr_offs
	cmp	w2, 0	// D.24904,
	ble	.L3447		//,
	add	x1, x0, 15	// D.24907, iftmp.2075,
	and	x1, x1, -8	// D.24908, D.24907,
	str	x1, [x19]	// D.24908, argv.__stack
	b	.L3446		//
.L3447:
	ldr	x2, [x19, 8]	// D.24910, argv.__gr_top
	sxtw	x0, w1	// D.24911, D.24894
	add	x0, x2, x0	// iftmp.2075, D.24910, D.24911
.L3446:
	ldr	x1, [x0]	// D.24912, *iftmp.2074_56
	add	x0, sp, 240	// tmp226,,
	ldp	q0, q1, [x1]	// tmp228, tmp229, *_176
	stp	q0, q1, [x0]	// tmp228, tmp229, D.6726
// varargs-dll.c:1497:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 252]	// tmp230, D.6726.b.b
	str	w0, [sp, 64]	// tmp230, f
// varargs-dll.c:1498:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.24913, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2077, argv.__stack
	cmp	w1, 0	// D.24913,
	blt	.L3449		//,
	add	x1, x0, 15	// D.24918, iftmp.2077,
	and	x1, x1, -8	// D.24919, D.24918,
	str	x1, [x19]	// D.24919, argv.__stack
	b	.L3450		//
.L3449:
	add	w2, w1, 8	// D.24921, D.24913,
	str	w2, [x19, 24]	// D.24921, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24923, argv.__gr_offs
	cmp	w2, 0	// D.24923,
	ble	.L3451		//,
	add	x1, x0, 15	// D.24926, iftmp.2077,
	and	x1, x1, -8	// D.24927, D.24926,
	str	x1, [x19]	// D.24927, argv.__stack
	b	.L3450		//
.L3451:
	ldr	x2, [x19, 8]	// D.24929, argv.__gr_top
	sxtw	x0, w1	// D.24930, D.24913
	add	x0, x2, x0	// iftmp.2077, D.24929, D.24930
.L3450:
	ldr	x1, [x0]	// D.24931, *iftmp.2076_58
	add	x0, sp, 272	// tmp231,,
	ldp	q0, q1, [x1]	// tmp233, tmp234, *_195
	stp	q0, q1, [x0]	// tmp233, tmp234, D.6727
// varargs-dll.c:1498:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 288]	// tmp235, D.6727.c.a
	str	w0, [sp, 68]	// tmp235, g
// varargs-dll.c:1499:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.24932, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2079, argv.__stack
	cmp	w1, 0	// D.24932,
	blt	.L3453		//,
	add	x1, x0, 15	// D.24937, iftmp.2079,
	and	x1, x1, -8	// D.24938, D.24937,
	str	x1, [x19]	// D.24938, argv.__stack
	b	.L3454		//
.L3453:
	add	w2, w1, 8	// D.24940, D.24932,
	str	w2, [x19, 24]	// D.24940, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24942, argv.__gr_offs
	cmp	w2, 0	// D.24942,
	ble	.L3455		//,
	add	x1, x0, 15	// D.24945, iftmp.2079,
	and	x1, x1, -8	// D.24946, D.24945,
	str	x1, [x19]	// D.24946, argv.__stack
	b	.L3454		//
.L3455:
	ldr	x2, [x19, 8]	// D.24948, argv.__gr_top
	sxtw	x0, w1	// D.24949, D.24932
	add	x0, x2, x0	// iftmp.2079, D.24948, D.24949
.L3454:
	ldr	x1, [x0]	// D.24950, *iftmp.2078_60
	add	x0, sp, 304	// tmp236,,
	ldp	q0, q1, [x1]	// tmp238, tmp239, *_214
	stp	q0, q1, [x0]	// tmp238, tmp239, D.6728
// varargs-dll.c:1499:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 332]	// tmp240, D.6728.d.b
	str	w0, [sp, 72]	// tmp240, h
// varargs-dll.c:1500:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.24951, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2081, argv.__stack
	cmp	w1, 0	// D.24951,
	blt	.L3457		//,
	add	x1, x0, 15	// D.24956, iftmp.2081,
	and	x1, x1, -8	// D.24957, D.24956,
	str	x1, [x19]	// D.24957, argv.__stack
	b	.L3458		//
.L3457:
	add	w2, w1, 8	// D.24959, D.24951,
	str	w2, [x19, 24]	// D.24959, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.24961, argv.__gr_offs
	cmp	w2, 0	// D.24961,
	ble	.L3459		//,
	add	x1, x0, 15	// D.24964, iftmp.2081,
	and	x1, x1, -8	// D.24965, D.24964,
	str	x1, [x19]	// D.24965, argv.__stack
	b	.L3458		//
.L3459:
	ldr	x2, [x19, 8]	// D.24967, argv.__gr_top
	sxtw	x0, w1	// D.24968, D.24951
	add	x0, x2, x0	// iftmp.2081, D.24967, D.24968
.L3458:
	ldr	x1, [x0]	// D.24969, *iftmp.2080_62
	add	x0, sp, 336	// tmp241,,
	ldp	q0, q1, [x1]	// tmp243, tmp244, *_233
	stp	q0, q1, [x0]	// tmp243, tmp244, D.6729
// varargs-dll.c:1500:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 336]	// tmp245, D.6729.a.a
	str	w0, [sp, 76]	// tmp245, i
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp246, a
	ldr	w0, [sp, 48]	// tmp247, b
	add	w1, w1, w0	// _1, tmp246, tmp247
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp248, c
	add	w1, w1, w0	// _2, _1, tmp248
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp249, d
	add	w1, w1, w0	// _3, _2, tmp249
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp250, e
	add	w1, w1, w0	// _4, _3, tmp250
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp251, f
	add	w1, w1, w0	// _5, _4, tmp251
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp252, g
	add	w1, w1, w0	// _6, _5, tmp252
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp253, h
	add	w1, w1, w0	// _7, _6, tmp253
// varargs-dll.c:1501:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp254, i
	add	w0, w1, w0	// _27, _7, tmp254
// varargs-dll.c:1502: }
	ldr	x19, [sp]	//,
	add	sp, sp, 368	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE95:
	.size	use_va_list_several_hva_4_short_vector_8_bytes, .-use_va_list_several_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_args_many_hva_4_short_vector_8_bytes
	.type	use_va_args_many_hva_4_short_vector_8_bytes, %function
use_va_args_many_hva_4_short_vector_8_bytes:
.LFB96:
	.cfi_startproc
	sub	sp, sp, #880	//,,
	.cfi_def_cfa_offset 880
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -880
	.cfi_offset 30, -872
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 824]	//,
	str	x2, [sp, 832]	//,
	str	x3, [sp, 840]	//,
	str	x4, [sp, 848]	//,
	str	x5, [sp, 856]	//,
	str	x6, [sp, 864]	//,
	str	x7, [sp, 872]	//,
	add	x0, sp, 512	// tmp412,,
	str	q0, [x0, 176]	//,
	add	x0, sp, 512	// tmp414,,
	str	q1, [x0, 192]	//,
	add	x0, sp, 512	// tmp416,,
	str	q2, [x0, 208]	//,
	add	x0, sp, 512	// tmp418,,
	str	q3, [x0, 224]	//,
	add	x0, sp, 512	// tmp420,,
	str	q4, [x0, 240]	//,
	add	x0, sp, 1024	// tmp422,,
	str	q5, [x0, -256]	//,
	add	x0, sp, 1024	// tmp424,,
	str	q6, [x0, -240]	//,
	add	x0, sp, 1024	// tmp426,,
	str	q7, [x0, -224]	//,
// varargs-dll.c:1506: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp407,
	str	x1, [sp, 680]	// tmp407, D.25293
	mov	x1, 0	// tmp407
// varargs-dll.c:1508:   va_start (argv, format);
	add	x0, sp, 880	// tmp428,,
	str	x0, [sp, 104]	// tmp428, MEM[(struct  *)&argv].__stack
	add	x0, sp, 880	// tmp429,,
	str	x0, [sp, 112]	// tmp429, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 816	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1509:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.24970, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2083, argv.__stack
	cmp	w1, 0	// D.24970,
	blt	.L3463		//,
	add	x1, x0, 15	// D.24975, iftmp.2083,
	and	x1, x1, -8	// D.24976, D.24975,
	str	x1, [sp, 104]	// D.24976, argv.__stack
	b	.L3464		//
.L3463:
	add	w2, w1, 8	// D.24978, D.24970,
	str	w2, [sp, 128]	// D.24978, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24980, argv.__gr_offs
	cmp	w2, 0	// D.24980,
	ble	.L3465		//,
	add	x1, x0, 15	// D.24983, iftmp.2083,
	and	x1, x1, -8	// D.24984, D.24983,
	str	x1, [sp, 104]	// D.24984, argv.__stack
	b	.L3464		//
.L3465:
	ldr	x2, [sp, 112]	// D.24986, argv.__gr_top
	sxtw	x0, w1	// D.24987, D.24970
	add	x0, x2, x0	// iftmp.2083, D.24986, D.24987
.L3464:
	ldr	x1, [x0]	// D.24988, *iftmp.2082_89
	add	x0, sp, 136	// tmp302,,
	ldp	q0, q1, [x1]	// tmp304, tmp305, *_140
	stp	q0, q1, [x0]	// tmp304, tmp305, D.6732
// varargs-dll.c:1509:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 136]	// tmp306, D.6732.a.a
	str	w0, [sp, 36]	// tmp306, a
// varargs-dll.c:1510:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.24989, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2085, argv.__stack
	cmp	w1, 0	// D.24989,
	blt	.L3467		//,
	add	x1, x0, 15	// D.24994, iftmp.2085,
	and	x1, x1, -8	// D.24995, D.24994,
	str	x1, [sp, 104]	// D.24995, argv.__stack
	b	.L3468		//
.L3467:
	add	w2, w1, 8	// D.24997, D.24989,
	str	w2, [sp, 128]	// D.24997, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.24999, argv.__gr_offs
	cmp	w2, 0	// D.24999,
	ble	.L3469		//,
	add	x1, x0, 15	// D.25002, iftmp.2085,
	and	x1, x1, -8	// D.25003, D.25002,
	str	x1, [sp, 104]	// D.25003, argv.__stack
	b	.L3468		//
.L3469:
	ldr	x2, [sp, 112]	// D.25005, argv.__gr_top
	sxtw	x0, w1	// D.25006, D.24989
	add	x0, x2, x0	// iftmp.2085, D.25005, D.25006
.L3468:
	ldr	x1, [x0]	// D.25007, *iftmp.2084_91
	add	x0, sp, 168	// tmp307,,
	ldp	q0, q1, [x1]	// tmp309, tmp310, *_159
	stp	q0, q1, [x0]	// tmp309, tmp310, D.6733
// varargs-dll.c:1510:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 180]	// tmp311, D.6733.b.b
	str	w0, [sp, 40]	// tmp311, b
// varargs-dll.c:1511:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 128]	// D.25008, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2087, argv.__stack
	cmp	w1, 0	// D.25008,
	blt	.L3471		//,
	add	x1, x0, 15	// D.25013, iftmp.2087,
	and	x1, x1, -8	// D.25014, D.25013,
	str	x1, [sp, 104]	// D.25014, argv.__stack
	b	.L3472		//
.L3471:
	add	w2, w1, 8	// D.25016, D.25008,
	str	w2, [sp, 128]	// D.25016, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25018, argv.__gr_offs
	cmp	w2, 0	// D.25018,
	ble	.L3473		//,
	add	x1, x0, 15	// D.25021, iftmp.2087,
	and	x1, x1, -8	// D.25022, D.25021,
	str	x1, [sp, 104]	// D.25022, argv.__stack
	b	.L3472		//
.L3473:
	ldr	x2, [sp, 112]	// D.25024, argv.__gr_top
	sxtw	x0, w1	// D.25025, D.25008
	add	x0, x2, x0	// iftmp.2087, D.25024, D.25025
.L3472:
	ldr	x1, [x0]	// D.25026, *iftmp.2086_93
	add	x0, sp, 200	// tmp312,,
	ldp	q0, q1, [x1]	// tmp314, tmp315, *_178
	stp	q0, q1, [x0]	// tmp314, tmp315, D.6734
// varargs-dll.c:1511:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 216]	// tmp316, D.6734.c.a
	str	w0, [sp, 44]	// tmp316, c
// varargs-dll.c:1512:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 128]	// D.25027, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2089, argv.__stack
	cmp	w1, 0	// D.25027,
	blt	.L3475		//,
	add	x1, x0, 15	// D.25032, iftmp.2089,
	and	x1, x1, -8	// D.25033, D.25032,
	str	x1, [sp, 104]	// D.25033, argv.__stack
	b	.L3476		//
.L3475:
	add	w2, w1, 8	// D.25035, D.25027,
	str	w2, [sp, 128]	// D.25035, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25037, argv.__gr_offs
	cmp	w2, 0	// D.25037,
	ble	.L3477		//,
	add	x1, x0, 15	// D.25040, iftmp.2089,
	and	x1, x1, -8	// D.25041, D.25040,
	str	x1, [sp, 104]	// D.25041, argv.__stack
	b	.L3476		//
.L3477:
	ldr	x2, [sp, 112]	// D.25043, argv.__gr_top
	sxtw	x0, w1	// D.25044, D.25027
	add	x0, x2, x0	// iftmp.2089, D.25043, D.25044
.L3476:
	ldr	x1, [x0]	// D.25045, *iftmp.2088_95
	add	x0, sp, 232	// tmp317,,
	ldp	q0, q1, [x1]	// tmp319, tmp320, *_197
	stp	q0, q1, [x0]	// tmp319, tmp320, D.6735
// varargs-dll.c:1512:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 260]	// tmp321, D.6735.d.b
	str	w0, [sp, 48]	// tmp321, d
// varargs-dll.c:1513:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.25046, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2091, argv.__stack
	cmp	w1, 0	// D.25046,
	blt	.L3479		//,
	add	x1, x0, 15	// D.25051, iftmp.2091,
	and	x1, x1, -8	// D.25052, D.25051,
	str	x1, [sp, 104]	// D.25052, argv.__stack
	b	.L3480		//
.L3479:
	add	w2, w1, 8	// D.25054, D.25046,
	str	w2, [sp, 128]	// D.25054, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25056, argv.__gr_offs
	cmp	w2, 0	// D.25056,
	ble	.L3481		//,
	add	x1, x0, 15	// D.25059, iftmp.2091,
	and	x1, x1, -8	// D.25060, D.25059,
	str	x1, [sp, 104]	// D.25060, argv.__stack
	b	.L3480		//
.L3481:
	ldr	x2, [sp, 112]	// D.25062, argv.__gr_top
	sxtw	x0, w1	// D.25063, D.25046
	add	x0, x2, x0	// iftmp.2091, D.25062, D.25063
.L3480:
	ldr	x1, [x0]	// D.25064, *iftmp.2090_97
	add	x0, sp, 264	// tmp322,,
	ldp	q0, q1, [x1]	// tmp324, tmp325, *_216
	stp	q0, q1, [x0]	// tmp324, tmp325, D.6736
// varargs-dll.c:1513:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 264]	// tmp326, D.6736.a.a
	str	w0, [sp, 52]	// tmp326, e
// varargs-dll.c:1514:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.25065, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2093, argv.__stack
	cmp	w1, 0	// D.25065,
	blt	.L3483		//,
	add	x1, x0, 15	// D.25070, iftmp.2093,
	and	x1, x1, -8	// D.25071, D.25070,
	str	x1, [sp, 104]	// D.25071, argv.__stack
	b	.L3484		//
.L3483:
	add	w2, w1, 8	// D.25073, D.25065,
	str	w2, [sp, 128]	// D.25073, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25075, argv.__gr_offs
	cmp	w2, 0	// D.25075,
	ble	.L3485		//,
	add	x1, x0, 15	// D.25078, iftmp.2093,
	and	x1, x1, -8	// D.25079, D.25078,
	str	x1, [sp, 104]	// D.25079, argv.__stack
	b	.L3484		//
.L3485:
	ldr	x2, [sp, 112]	// D.25081, argv.__gr_top
	sxtw	x0, w1	// D.25082, D.25065
	add	x0, x2, x0	// iftmp.2093, D.25081, D.25082
.L3484:
	ldr	x1, [x0]	// D.25083, *iftmp.2092_99
	add	x0, sp, 296	// tmp327,,
	ldp	q0, q1, [x1]	// tmp329, tmp330, *_235
	stp	q0, q1, [x0]	// tmp329, tmp330, D.6737
// varargs-dll.c:1514:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 308]	// tmp331, D.6737.b.b
	str	w0, [sp, 56]	// tmp331, f
// varargs-dll.c:1515:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 128]	// D.25084, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2095, argv.__stack
	cmp	w1, 0	// D.25084,
	blt	.L3487		//,
	add	x1, x0, 15	// D.25089, iftmp.2095,
	and	x1, x1, -8	// D.25090, D.25089,
	str	x1, [sp, 104]	// D.25090, argv.__stack
	b	.L3488		//
.L3487:
	add	w2, w1, 8	// D.25092, D.25084,
	str	w2, [sp, 128]	// D.25092, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25094, argv.__gr_offs
	cmp	w2, 0	// D.25094,
	ble	.L3489		//,
	add	x1, x0, 15	// D.25097, iftmp.2095,
	and	x1, x1, -8	// D.25098, D.25097,
	str	x1, [sp, 104]	// D.25098, argv.__stack
	b	.L3488		//
.L3489:
	ldr	x2, [sp, 112]	// D.25100, argv.__gr_top
	sxtw	x0, w1	// D.25101, D.25084
	add	x0, x2, x0	// iftmp.2095, D.25100, D.25101
.L3488:
	ldr	x1, [x0]	// D.25102, *iftmp.2094_101
	add	x0, sp, 328	// tmp332,,
	ldp	q0, q1, [x1]	// tmp334, tmp335, *_254
	stp	q0, q1, [x0]	// tmp334, tmp335, D.6738
// varargs-dll.c:1515:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 344]	// tmp336, D.6738.c.a
	str	w0, [sp, 60]	// tmp336, g
// varargs-dll.c:1516:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 128]	// D.25103, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2097, argv.__stack
	cmp	w1, 0	// D.25103,
	blt	.L3491		//,
	add	x1, x0, 15	// D.25108, iftmp.2097,
	and	x1, x1, -8	// D.25109, D.25108,
	str	x1, [sp, 104]	// D.25109, argv.__stack
	b	.L3492		//
.L3491:
	add	w2, w1, 8	// D.25111, D.25103,
	str	w2, [sp, 128]	// D.25111, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25113, argv.__gr_offs
	cmp	w2, 0	// D.25113,
	ble	.L3493		//,
	add	x1, x0, 15	// D.25116, iftmp.2097,
	and	x1, x1, -8	// D.25117, D.25116,
	str	x1, [sp, 104]	// D.25117, argv.__stack
	b	.L3492		//
.L3493:
	ldr	x2, [sp, 112]	// D.25119, argv.__gr_top
	sxtw	x0, w1	// D.25120, D.25103
	add	x0, x2, x0	// iftmp.2097, D.25119, D.25120
.L3492:
	ldr	x1, [x0]	// D.25121, *iftmp.2096_103
	add	x0, sp, 360	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_273
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6739
// varargs-dll.c:1516:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 388]	// tmp341, D.6739.d.b
	str	w0, [sp, 64]	// tmp341, h
// varargs-dll.c:1517:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.25122, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2099, argv.__stack
	cmp	w1, 0	// D.25122,
	blt	.L3495		//,
	add	x1, x0, 15	// D.25127, iftmp.2099,
	and	x1, x1, -8	// D.25128, D.25127,
	str	x1, [sp, 104]	// D.25128, argv.__stack
	b	.L3496		//
.L3495:
	add	w2, w1, 8	// D.25130, D.25122,
	str	w2, [sp, 128]	// D.25130, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25132, argv.__gr_offs
	cmp	w2, 0	// D.25132,
	ble	.L3497		//,
	add	x1, x0, 15	// D.25135, iftmp.2099,
	and	x1, x1, -8	// D.25136, D.25135,
	str	x1, [sp, 104]	// D.25136, argv.__stack
	b	.L3496		//
.L3497:
	ldr	x2, [sp, 112]	// D.25138, argv.__gr_top
	sxtw	x0, w1	// D.25139, D.25122
	add	x0, x2, x0	// iftmp.2099, D.25138, D.25139
.L3496:
	ldr	x1, [x0]	// D.25140, *iftmp.2098_105
	add	x0, sp, 392	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_292
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6740
// varargs-dll.c:1517:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 392]	// tmp346, D.6740.a.a
	str	w0, [sp, 68]	// tmp346, i
// varargs-dll.c:1518:   int j = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.25141, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2101, argv.__stack
	cmp	w1, 0	// D.25141,
	blt	.L3499		//,
	add	x1, x0, 15	// D.25146, iftmp.2101,
	and	x1, x1, -8	// D.25147, D.25146,
	str	x1, [sp, 104]	// D.25147, argv.__stack
	b	.L3500		//
.L3499:
	add	w2, w1, 8	// D.25149, D.25141,
	str	w2, [sp, 128]	// D.25149, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25151, argv.__gr_offs
	cmp	w2, 0	// D.25151,
	ble	.L3501		//,
	add	x1, x0, 15	// D.25154, iftmp.2101,
	and	x1, x1, -8	// D.25155, D.25154,
	str	x1, [sp, 104]	// D.25155, argv.__stack
	b	.L3500		//
.L3501:
	ldr	x2, [sp, 112]	// D.25157, argv.__gr_top
	sxtw	x0, w1	// D.25158, D.25141
	add	x0, x2, x0	// iftmp.2101, D.25157, D.25158
.L3500:
	ldr	x1, [x0]	// D.25159, *iftmp.2100_107
	add	x0, sp, 424	// tmp347,,
	ldp	q0, q1, [x1]	// tmp349, tmp350, *_311
	stp	q0, q1, [x0]	// tmp349, tmp350, D.6741
// varargs-dll.c:1518:   int j = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 436]	// tmp351, D.6741.b.b
	str	w0, [sp, 72]	// tmp351, j
// varargs-dll.c:1519:   int k = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 128]	// D.25160, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2103, argv.__stack
	cmp	w1, 0	// D.25160,
	blt	.L3503		//,
	add	x1, x0, 15	// D.25165, iftmp.2103,
	and	x1, x1, -8	// D.25166, D.25165,
	str	x1, [sp, 104]	// D.25166, argv.__stack
	b	.L3504		//
.L3503:
	add	w2, w1, 8	// D.25168, D.25160,
	str	w2, [sp, 128]	// D.25168, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25170, argv.__gr_offs
	cmp	w2, 0	// D.25170,
	ble	.L3505		//,
	add	x1, x0, 15	// D.25173, iftmp.2103,
	and	x1, x1, -8	// D.25174, D.25173,
	str	x1, [sp, 104]	// D.25174, argv.__stack
	b	.L3504		//
.L3505:
	ldr	x2, [sp, 112]	// D.25176, argv.__gr_top
	sxtw	x0, w1	// D.25177, D.25160
	add	x0, x2, x0	// iftmp.2103, D.25176, D.25177
.L3504:
	ldr	x1, [x0]	// D.25178, *iftmp.2102_109
	add	x0, sp, 456	// tmp352,,
	ldp	q0, q1, [x1]	// tmp354, tmp355, *_330
	stp	q0, q1, [x0]	// tmp354, tmp355, D.6742
// varargs-dll.c:1519:   int k = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 472]	// tmp356, D.6742.c.a
	str	w0, [sp, 76]	// tmp356, k
// varargs-dll.c:1520:   int l = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 128]	// D.25179, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2105, argv.__stack
	cmp	w1, 0	// D.25179,
	blt	.L3507		//,
	add	x1, x0, 15	// D.25184, iftmp.2105,
	and	x1, x1, -8	// D.25185, D.25184,
	str	x1, [sp, 104]	// D.25185, argv.__stack
	b	.L3508		//
.L3507:
	add	w2, w1, 8	// D.25187, D.25179,
	str	w2, [sp, 128]	// D.25187, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25189, argv.__gr_offs
	cmp	w2, 0	// D.25189,
	ble	.L3509		//,
	add	x1, x0, 15	// D.25192, iftmp.2105,
	and	x1, x1, -8	// D.25193, D.25192,
	str	x1, [sp, 104]	// D.25193, argv.__stack
	b	.L3508		//
.L3509:
	ldr	x2, [sp, 112]	// D.25195, argv.__gr_top
	sxtw	x0, w1	// D.25196, D.25179
	add	x0, x2, x0	// iftmp.2105, D.25195, D.25196
.L3508:
	ldr	x1, [x0]	// D.25197, *iftmp.2104_111
	add	x0, sp, 488	// tmp357,,
	ldp	q0, q1, [x1]	// tmp359, tmp360, *_349
	stp	q0, q1, [x0]	// tmp359, tmp360, D.6743
// varargs-dll.c:1520:   int l = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 516]	// tmp361, D.6743.d.b
	str	w0, [sp, 80]	// tmp361, l
// varargs-dll.c:1521:   int m = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.25198, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2107, argv.__stack
	cmp	w1, 0	// D.25198,
	blt	.L3511		//,
	add	x1, x0, 15	// D.25203, iftmp.2107,
	and	x1, x1, -8	// D.25204, D.25203,
	str	x1, [sp, 104]	// D.25204, argv.__stack
	b	.L3512		//
.L3511:
	add	w2, w1, 8	// D.25206, D.25198,
	str	w2, [sp, 128]	// D.25206, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25208, argv.__gr_offs
	cmp	w2, 0	// D.25208,
	ble	.L3513		//,
	add	x1, x0, 15	// D.25211, iftmp.2107,
	and	x1, x1, -8	// D.25212, D.25211,
	str	x1, [sp, 104]	// D.25212, argv.__stack
	b	.L3512		//
.L3513:
	ldr	x2, [sp, 112]	// D.25214, argv.__gr_top
	sxtw	x0, w1	// D.25215, D.25198
	add	x0, x2, x0	// iftmp.2107, D.25214, D.25215
.L3512:
	ldr	x1, [x0]	// D.25216, *iftmp.2106_113
	add	x0, sp, 520	// tmp362,,
	ldp	q0, q1, [x1]	// tmp364, tmp365, *_368
	stp	q0, q1, [x0]	// tmp364, tmp365, D.6744
// varargs-dll.c:1521:   int m = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 520]	// tmp366, D.6744.a.a
	str	w0, [sp, 84]	// tmp366, m
// varargs-dll.c:1522:   int n = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [sp, 128]	// D.25217, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2109, argv.__stack
	cmp	w1, 0	// D.25217,
	blt	.L3515		//,
	add	x1, x0, 15	// D.25222, iftmp.2109,
	and	x1, x1, -8	// D.25223, D.25222,
	str	x1, [sp, 104]	// D.25223, argv.__stack
	b	.L3516		//
.L3515:
	add	w2, w1, 8	// D.25225, D.25217,
	str	w2, [sp, 128]	// D.25225, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25227, argv.__gr_offs
	cmp	w2, 0	// D.25227,
	ble	.L3517		//,
	add	x1, x0, 15	// D.25230, iftmp.2109,
	and	x1, x1, -8	// D.25231, D.25230,
	str	x1, [sp, 104]	// D.25231, argv.__stack
	b	.L3516		//
.L3517:
	ldr	x2, [sp, 112]	// D.25233, argv.__gr_top
	sxtw	x0, w1	// D.25234, D.25217
	add	x0, x2, x0	// iftmp.2109, D.25233, D.25234
.L3516:
	ldr	x1, [x0]	// D.25235, *iftmp.2108_115
	add	x0, sp, 552	// tmp367,,
	ldp	q0, q1, [x1]	// tmp369, tmp370, *_387
	stp	q0, q1, [x0]	// tmp369, tmp370, D.6745
// varargs-dll.c:1522:   int n = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 564]	// tmp371, D.6745.b.b
	str	w0, [sp, 88]	// tmp371, n
// varargs-dll.c:1523:   int o = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [sp, 128]	// D.25236, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2111, argv.__stack
	cmp	w1, 0	// D.25236,
	blt	.L3519		//,
	add	x1, x0, 15	// D.25241, iftmp.2111,
	and	x1, x1, -8	// D.25242, D.25241,
	str	x1, [sp, 104]	// D.25242, argv.__stack
	b	.L3520		//
.L3519:
	add	w2, w1, 8	// D.25244, D.25236,
	str	w2, [sp, 128]	// D.25244, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25246, argv.__gr_offs
	cmp	w2, 0	// D.25246,
	ble	.L3521		//,
	add	x1, x0, 15	// D.25249, iftmp.2111,
	and	x1, x1, -8	// D.25250, D.25249,
	str	x1, [sp, 104]	// D.25250, argv.__stack
	b	.L3520		//
.L3521:
	ldr	x2, [sp, 112]	// D.25252, argv.__gr_top
	sxtw	x0, w1	// D.25253, D.25236
	add	x0, x2, x0	// iftmp.2111, D.25252, D.25253
.L3520:
	ldr	x1, [x0]	// D.25254, *iftmp.2110_117
	add	x0, sp, 584	// tmp372,,
	ldp	q0, q1, [x1]	// tmp374, tmp375, *_406
	stp	q0, q1, [x0]	// tmp374, tmp375, D.6746
// varargs-dll.c:1523:   int o = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 600]	// tmp376, D.6746.c.a
	str	w0, [sp, 92]	// tmp376, o
// varargs-dll.c:1524:   int p = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [sp, 128]	// D.25255, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2113, argv.__stack
	cmp	w1, 0	// D.25255,
	blt	.L3523		//,
	add	x1, x0, 15	// D.25260, iftmp.2113,
	and	x1, x1, -8	// D.25261, D.25260,
	str	x1, [sp, 104]	// D.25261, argv.__stack
	b	.L3524		//
.L3523:
	add	w2, w1, 8	// D.25263, D.25255,
	str	w2, [sp, 128]	// D.25263, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25265, argv.__gr_offs
	cmp	w2, 0	// D.25265,
	ble	.L3525		//,
	add	x1, x0, 15	// D.25268, iftmp.2113,
	and	x1, x1, -8	// D.25269, D.25268,
	str	x1, [sp, 104]	// D.25269, argv.__stack
	b	.L3524		//
.L3525:
	ldr	x2, [sp, 112]	// D.25271, argv.__gr_top
	sxtw	x0, w1	// D.25272, D.25255
	add	x0, x2, x0	// iftmp.2113, D.25271, D.25272
.L3524:
	ldr	x1, [x0]	// D.25273, *iftmp.2112_119
	add	x0, sp, 616	// tmp377,,
	ldp	q0, q1, [x1]	// tmp379, tmp380, *_425
	stp	q0, q1, [x0]	// tmp379, tmp380, D.6747
// varargs-dll.c:1524:   int p = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 644]	// tmp381, D.6747.d.b
	str	w0, [sp, 96]	// tmp381, p
// varargs-dll.c:1525:   int q = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [sp, 128]	// D.25274, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2115, argv.__stack
	cmp	w1, 0	// D.25274,
	blt	.L3527		//,
	add	x1, x0, 15	// D.25279, iftmp.2115,
	and	x1, x1, -8	// D.25280, D.25279,
	str	x1, [sp, 104]	// D.25280, argv.__stack
	b	.L3528		//
.L3527:
	add	w2, w1, 8	// D.25282, D.25274,
	str	w2, [sp, 128]	// D.25282, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.25284, argv.__gr_offs
	cmp	w2, 0	// D.25284,
	ble	.L3529		//,
	add	x1, x0, 15	// D.25287, iftmp.2115,
	and	x1, x1, -8	// D.25288, D.25287,
	str	x1, [sp, 104]	// D.25288, argv.__stack
	b	.L3528		//
.L3529:
	ldr	x2, [sp, 112]	// D.25290, argv.__gr_top
	sxtw	x0, w1	// D.25291, D.25274
	add	x0, x2, x0	// iftmp.2115, D.25290, D.25291
.L3528:
	ldr	x1, [x0]	// D.25292, *iftmp.2114_121
	add	x0, sp, 648	// tmp382,,
	ldp	q0, q1, [x1]	// tmp384, tmp385, *_444
	stp	q0, q1, [x0]	// tmp384, tmp385, D.6748
// varargs-dll.c:1525:   int q = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 648]	// tmp386, D.6748.a.a
	str	w0, [sp, 100]	// tmp386, q
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp387, a
	ldr	w0, [sp, 40]	// tmp388, b
	add	w1, w1, w0	// _1, tmp387, tmp388
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp389, c
	add	w1, w1, w0	// _2, _1, tmp389
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp390, d
	add	w1, w1, w0	// _3, _2, tmp390
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp391, e
	add	w1, w1, w0	// _4, _3, tmp391
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp392, f
	add	w1, w1, w0	// _5, _4, tmp392
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp393, g
	add	w1, w1, w0	// _6, _5, tmp393
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp394, h
	add	w1, w1, w0	// _7, _6, tmp394
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp395, i
	add	w1, w1, w0	// _8, _7, tmp395
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp396, j
	add	w1, w1, w0	// _9, _8, tmp396
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp397, k
	add	w1, w1, w0	// _10, _9, tmp397
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp398, l
	add	w1, w1, w0	// _11, _10, tmp398
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp399, m
	add	w1, w1, w0	// _12, _11, tmp399
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp400, n
	add	w1, w1, w0	// _13, _12, tmp400
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp401, o
	add	w1, w1, w0	// _14, _13, tmp401
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp402, p
	add	w1, w1, w0	// _15, _14, tmp402
// varargs-dll.c:1527:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp403, q
	add	w0, w1, w0	// _53, _15, tmp403
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:1528: }
	adrp	x0, :got:__stack_chk_guard	// tmp406,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp405, tmp406,
	ldr	x3, [sp, 680]	// tmp408, D.25293
	ldr	x2, [x0]	// tmp409,
	subs	x3, x3, x2	// tmp408, tmp409
	mov	x2, 0	// tmp409
	beq	.L3532		//,
	bl	__stack_chk_fail		//
.L3532:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 880	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE96:
	.size	use_va_args_many_hva_4_short_vector_8_bytes, .-use_va_args_many_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_list_many_hva_4_short_vector_8_bytes
	.type	use_va_list_many_hva_4_short_vector_8_bytes, %function
use_va_list_many_hva_4_short_vector_8_bytes:
.LFB97:
	.cfi_startproc
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
	str	x19, [sp]	//,
	.cfi_offset 19, -656
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:1533:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25297, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2117, argv.__stack
	cmp	w1, 0	// D.25297,
	blt	.L3534		//,
	add	x1, x0, 15	// D.25302, iftmp.2117,
	and	x1, x1, -8	// D.25303, D.25302,
	str	x1, [x19]	// D.25303, argv.__stack
	b	.L3535		//
.L3534:
	add	w2, w1, 8	// D.25305, D.25297,
	str	w2, [x19, 24]	// D.25305, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25307, argv.__gr_offs
	cmp	w2, 0	// D.25307,
	ble	.L3536		//,
	add	x1, x0, 15	// D.25310, iftmp.2117,
	and	x1, x1, -8	// D.25311, D.25310,
	str	x1, [x19]	// D.25311, argv.__stack
	b	.L3535		//
.L3536:
	ldr	x2, [x19, 8]	// D.25313, argv.__gr_top
	sxtw	x0, w1	// D.25314, D.25297
	add	x0, x2, x0	// iftmp.2117, D.25313, D.25314
.L3535:
	ldr	x1, [x0]	// D.25315, *iftmp.2116_86
	add	x0, sp, 112	// tmp297,,
	ldp	q0, q1, [x1]	// tmp299, tmp300, *_137
	stp	q0, q1, [x0]	// tmp299, tmp300, D.6752
// varargs-dll.c:1533:   int a = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 112]	// tmp301, D.6752.a.a
	str	w0, [sp, 44]	// tmp301, a
// varargs-dll.c:1534:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25316, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2119, argv.__stack
	cmp	w1, 0	// D.25316,
	blt	.L3538		//,
	add	x1, x0, 15	// D.25321, iftmp.2119,
	and	x1, x1, -8	// D.25322, D.25321,
	str	x1, [x19]	// D.25322, argv.__stack
	b	.L3539		//
.L3538:
	add	w2, w1, 8	// D.25324, D.25316,
	str	w2, [x19, 24]	// D.25324, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25326, argv.__gr_offs
	cmp	w2, 0	// D.25326,
	ble	.L3540		//,
	add	x1, x0, 15	// D.25329, iftmp.2119,
	and	x1, x1, -8	// D.25330, D.25329,
	str	x1, [x19]	// D.25330, argv.__stack
	b	.L3539		//
.L3540:
	ldr	x2, [x19, 8]	// D.25332, argv.__gr_top
	sxtw	x0, w1	// D.25333, D.25316
	add	x0, x2, x0	// iftmp.2119, D.25332, D.25333
.L3539:
	ldr	x1, [x0]	// D.25334, *iftmp.2118_88
	add	x0, sp, 144	// tmp302,,
	ldp	q0, q1, [x1]	// tmp304, tmp305, *_156
	stp	q0, q1, [x0]	// tmp304, tmp305, D.6753
// varargs-dll.c:1534:   int b = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 156]	// tmp306, D.6753.b.b
	str	w0, [sp, 48]	// tmp306, b
// varargs-dll.c:1535:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.25335, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2121, argv.__stack
	cmp	w1, 0	// D.25335,
	blt	.L3542		//,
	add	x1, x0, 15	// D.25340, iftmp.2121,
	and	x1, x1, -8	// D.25341, D.25340,
	str	x1, [x19]	// D.25341, argv.__stack
	b	.L3543		//
.L3542:
	add	w2, w1, 8	// D.25343, D.25335,
	str	w2, [x19, 24]	// D.25343, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25345, argv.__gr_offs
	cmp	w2, 0	// D.25345,
	ble	.L3544		//,
	add	x1, x0, 15	// D.25348, iftmp.2121,
	and	x1, x1, -8	// D.25349, D.25348,
	str	x1, [x19]	// D.25349, argv.__stack
	b	.L3543		//
.L3544:
	ldr	x2, [x19, 8]	// D.25351, argv.__gr_top
	sxtw	x0, w1	// D.25352, D.25335
	add	x0, x2, x0	// iftmp.2121, D.25351, D.25352
.L3543:
	ldr	x1, [x0]	// D.25353, *iftmp.2120_90
	add	x0, sp, 176	// tmp307,,
	ldp	q0, q1, [x1]	// tmp309, tmp310, *_175
	stp	q0, q1, [x0]	// tmp309, tmp310, D.6754
// varargs-dll.c:1535:   int c = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 192]	// tmp311, D.6754.c.a
	str	w0, [sp, 52]	// tmp311, c
// varargs-dll.c:1536:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.25354, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2123, argv.__stack
	cmp	w1, 0	// D.25354,
	blt	.L3546		//,
	add	x1, x0, 15	// D.25359, iftmp.2123,
	and	x1, x1, -8	// D.25360, D.25359,
	str	x1, [x19]	// D.25360, argv.__stack
	b	.L3547		//
.L3546:
	add	w2, w1, 8	// D.25362, D.25354,
	str	w2, [x19, 24]	// D.25362, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25364, argv.__gr_offs
	cmp	w2, 0	// D.25364,
	ble	.L3548		//,
	add	x1, x0, 15	// D.25367, iftmp.2123,
	and	x1, x1, -8	// D.25368, D.25367,
	str	x1, [x19]	// D.25368, argv.__stack
	b	.L3547		//
.L3548:
	ldr	x2, [x19, 8]	// D.25370, argv.__gr_top
	sxtw	x0, w1	// D.25371, D.25354
	add	x0, x2, x0	// iftmp.2123, D.25370, D.25371
.L3547:
	ldr	x1, [x0]	// D.25372, *iftmp.2122_92
	add	x0, sp, 208	// tmp312,,
	ldp	q0, q1, [x1]	// tmp314, tmp315, *_194
	stp	q0, q1, [x0]	// tmp314, tmp315, D.6755
// varargs-dll.c:1536:   int d = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 236]	// tmp316, D.6755.d.b
	str	w0, [sp, 56]	// tmp316, d
// varargs-dll.c:1537:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25373, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2125, argv.__stack
	cmp	w1, 0	// D.25373,
	blt	.L3550		//,
	add	x1, x0, 15	// D.25378, iftmp.2125,
	and	x1, x1, -8	// D.25379, D.25378,
	str	x1, [x19]	// D.25379, argv.__stack
	b	.L3551		//
.L3550:
	add	w2, w1, 8	// D.25381, D.25373,
	str	w2, [x19, 24]	// D.25381, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25383, argv.__gr_offs
	cmp	w2, 0	// D.25383,
	ble	.L3552		//,
	add	x1, x0, 15	// D.25386, iftmp.2125,
	and	x1, x1, -8	// D.25387, D.25386,
	str	x1, [x19]	// D.25387, argv.__stack
	b	.L3551		//
.L3552:
	ldr	x2, [x19, 8]	// D.25389, argv.__gr_top
	sxtw	x0, w1	// D.25390, D.25373
	add	x0, x2, x0	// iftmp.2125, D.25389, D.25390
.L3551:
	ldr	x1, [x0]	// D.25391, *iftmp.2124_94
	add	x0, sp, 240	// tmp317,,
	ldp	q0, q1, [x1]	// tmp319, tmp320, *_213
	stp	q0, q1, [x0]	// tmp319, tmp320, D.6756
// varargs-dll.c:1537:   int e = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 240]	// tmp321, D.6756.a.a
	str	w0, [sp, 60]	// tmp321, e
// varargs-dll.c:1538:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25392, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2127, argv.__stack
	cmp	w1, 0	// D.25392,
	blt	.L3554		//,
	add	x1, x0, 15	// D.25397, iftmp.2127,
	and	x1, x1, -8	// D.25398, D.25397,
	str	x1, [x19]	// D.25398, argv.__stack
	b	.L3555		//
.L3554:
	add	w2, w1, 8	// D.25400, D.25392,
	str	w2, [x19, 24]	// D.25400, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25402, argv.__gr_offs
	cmp	w2, 0	// D.25402,
	ble	.L3556		//,
	add	x1, x0, 15	// D.25405, iftmp.2127,
	and	x1, x1, -8	// D.25406, D.25405,
	str	x1, [x19]	// D.25406, argv.__stack
	b	.L3555		//
.L3556:
	ldr	x2, [x19, 8]	// D.25408, argv.__gr_top
	sxtw	x0, w1	// D.25409, D.25392
	add	x0, x2, x0	// iftmp.2127, D.25408, D.25409
.L3555:
	ldr	x1, [x0]	// D.25410, *iftmp.2126_96
	add	x0, sp, 272	// tmp322,,
	ldp	q0, q1, [x1]	// tmp324, tmp325, *_232
	stp	q0, q1, [x0]	// tmp324, tmp325, D.6757
// varargs-dll.c:1538:   int f = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 284]	// tmp326, D.6757.b.b
	str	w0, [sp, 64]	// tmp326, f
// varargs-dll.c:1539:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.25411, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2129, argv.__stack
	cmp	w1, 0	// D.25411,
	blt	.L3558		//,
	add	x1, x0, 15	// D.25416, iftmp.2129,
	and	x1, x1, -8	// D.25417, D.25416,
	str	x1, [x19]	// D.25417, argv.__stack
	b	.L3559		//
.L3558:
	add	w2, w1, 8	// D.25419, D.25411,
	str	w2, [x19, 24]	// D.25419, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25421, argv.__gr_offs
	cmp	w2, 0	// D.25421,
	ble	.L3560		//,
	add	x1, x0, 15	// D.25424, iftmp.2129,
	and	x1, x1, -8	// D.25425, D.25424,
	str	x1, [x19]	// D.25425, argv.__stack
	b	.L3559		//
.L3560:
	ldr	x2, [x19, 8]	// D.25427, argv.__gr_top
	sxtw	x0, w1	// D.25428, D.25411
	add	x0, x2, x0	// iftmp.2129, D.25427, D.25428
.L3559:
	ldr	x1, [x0]	// D.25429, *iftmp.2128_98
	add	x0, sp, 304	// tmp327,,
	ldp	q0, q1, [x1]	// tmp329, tmp330, *_251
	stp	q0, q1, [x0]	// tmp329, tmp330, D.6758
// varargs-dll.c:1539:   int g = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 320]	// tmp331, D.6758.c.a
	str	w0, [sp, 68]	// tmp331, g
// varargs-dll.c:1540:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.25430, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2131, argv.__stack
	cmp	w1, 0	// D.25430,
	blt	.L3562		//,
	add	x1, x0, 15	// D.25435, iftmp.2131,
	and	x1, x1, -8	// D.25436, D.25435,
	str	x1, [x19]	// D.25436, argv.__stack
	b	.L3563		//
.L3562:
	add	w2, w1, 8	// D.25438, D.25430,
	str	w2, [x19, 24]	// D.25438, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25440, argv.__gr_offs
	cmp	w2, 0	// D.25440,
	ble	.L3564		//,
	add	x1, x0, 15	// D.25443, iftmp.2131,
	and	x1, x1, -8	// D.25444, D.25443,
	str	x1, [x19]	// D.25444, argv.__stack
	b	.L3563		//
.L3564:
	ldr	x2, [x19, 8]	// D.25446, argv.__gr_top
	sxtw	x0, w1	// D.25447, D.25430
	add	x0, x2, x0	// iftmp.2131, D.25446, D.25447
.L3563:
	ldr	x1, [x0]	// D.25448, *iftmp.2130_100
	add	x0, sp, 336	// tmp332,,
	ldp	q0, q1, [x1]	// tmp334, tmp335, *_270
	stp	q0, q1, [x0]	// tmp334, tmp335, D.6759
// varargs-dll.c:1540:   int h = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 364]	// tmp336, D.6759.d.b
	str	w0, [sp, 72]	// tmp336, h
// varargs-dll.c:1541:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25449, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2133, argv.__stack
	cmp	w1, 0	// D.25449,
	blt	.L3566		//,
	add	x1, x0, 15	// D.25454, iftmp.2133,
	and	x1, x1, -8	// D.25455, D.25454,
	str	x1, [x19]	// D.25455, argv.__stack
	b	.L3567		//
.L3566:
	add	w2, w1, 8	// D.25457, D.25449,
	str	w2, [x19, 24]	// D.25457, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25459, argv.__gr_offs
	cmp	w2, 0	// D.25459,
	ble	.L3568		//,
	add	x1, x0, 15	// D.25462, iftmp.2133,
	and	x1, x1, -8	// D.25463, D.25462,
	str	x1, [x19]	// D.25463, argv.__stack
	b	.L3567		//
.L3568:
	ldr	x2, [x19, 8]	// D.25465, argv.__gr_top
	sxtw	x0, w1	// D.25466, D.25449
	add	x0, x2, x0	// iftmp.2133, D.25465, D.25466
.L3567:
	ldr	x1, [x0]	// D.25467, *iftmp.2132_102
	add	x0, sp, 368	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_289
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6760
// varargs-dll.c:1541:   int i = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 368]	// tmp341, D.6760.a.a
	str	w0, [sp, 76]	// tmp341, i
// varargs-dll.c:1542:   int j = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25468, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2135, argv.__stack
	cmp	w1, 0	// D.25468,
	blt	.L3570		//,
	add	x1, x0, 15	// D.25473, iftmp.2135,
	and	x1, x1, -8	// D.25474, D.25473,
	str	x1, [x19]	// D.25474, argv.__stack
	b	.L3571		//
.L3570:
	add	w2, w1, 8	// D.25476, D.25468,
	str	w2, [x19, 24]	// D.25476, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25478, argv.__gr_offs
	cmp	w2, 0	// D.25478,
	ble	.L3572		//,
	add	x1, x0, 15	// D.25481, iftmp.2135,
	and	x1, x1, -8	// D.25482, D.25481,
	str	x1, [x19]	// D.25482, argv.__stack
	b	.L3571		//
.L3572:
	ldr	x2, [x19, 8]	// D.25484, argv.__gr_top
	sxtw	x0, w1	// D.25485, D.25468
	add	x0, x2, x0	// iftmp.2135, D.25484, D.25485
.L3571:
	ldr	x1, [x0]	// D.25486, *iftmp.2134_104
	add	x0, sp, 400	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_308
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6761
// varargs-dll.c:1542:   int j = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 412]	// tmp346, D.6761.b.b
	str	w0, [sp, 80]	// tmp346, j
// varargs-dll.c:1543:   int k = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.25487, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2137, argv.__stack
	cmp	w1, 0	// D.25487,
	blt	.L3574		//,
	add	x1, x0, 15	// D.25492, iftmp.2137,
	and	x1, x1, -8	// D.25493, D.25492,
	str	x1, [x19]	// D.25493, argv.__stack
	b	.L3575		//
.L3574:
	add	w2, w1, 8	// D.25495, D.25487,
	str	w2, [x19, 24]	// D.25495, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25497, argv.__gr_offs
	cmp	w2, 0	// D.25497,
	ble	.L3576		//,
	add	x1, x0, 15	// D.25500, iftmp.2137,
	and	x1, x1, -8	// D.25501, D.25500,
	str	x1, [x19]	// D.25501, argv.__stack
	b	.L3575		//
.L3576:
	ldr	x2, [x19, 8]	// D.25503, argv.__gr_top
	sxtw	x0, w1	// D.25504, D.25487
	add	x0, x2, x0	// iftmp.2137, D.25503, D.25504
.L3575:
	ldr	x1, [x0]	// D.25505, *iftmp.2136_106
	add	x0, sp, 432	// tmp347,,
	ldp	q0, q1, [x1]	// tmp349, tmp350, *_327
	stp	q0, q1, [x0]	// tmp349, tmp350, D.6762
// varargs-dll.c:1543:   int k = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 448]	// tmp351, D.6762.c.a
	str	w0, [sp, 84]	// tmp351, k
// varargs-dll.c:1544:   int l = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.25506, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2139, argv.__stack
	cmp	w1, 0	// D.25506,
	blt	.L3578		//,
	add	x1, x0, 15	// D.25511, iftmp.2139,
	and	x1, x1, -8	// D.25512, D.25511,
	str	x1, [x19]	// D.25512, argv.__stack
	b	.L3579		//
.L3578:
	add	w2, w1, 8	// D.25514, D.25506,
	str	w2, [x19, 24]	// D.25514, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25516, argv.__gr_offs
	cmp	w2, 0	// D.25516,
	ble	.L3580		//,
	add	x1, x0, 15	// D.25519, iftmp.2139,
	and	x1, x1, -8	// D.25520, D.25519,
	str	x1, [x19]	// D.25520, argv.__stack
	b	.L3579		//
.L3580:
	ldr	x2, [x19, 8]	// D.25522, argv.__gr_top
	sxtw	x0, w1	// D.25523, D.25506
	add	x0, x2, x0	// iftmp.2139, D.25522, D.25523
.L3579:
	ldr	x1, [x0]	// D.25524, *iftmp.2138_108
	add	x0, sp, 464	// tmp352,,
	ldp	q0, q1, [x1]	// tmp354, tmp355, *_346
	stp	q0, q1, [x0]	// tmp354, tmp355, D.6763
// varargs-dll.c:1544:   int l = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 492]	// tmp356, D.6763.d.b
	str	w0, [sp, 88]	// tmp356, l
// varargs-dll.c:1545:   int m = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25525, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2141, argv.__stack
	cmp	w1, 0	// D.25525,
	blt	.L3582		//,
	add	x1, x0, 15	// D.25530, iftmp.2141,
	and	x1, x1, -8	// D.25531, D.25530,
	str	x1, [x19]	// D.25531, argv.__stack
	b	.L3583		//
.L3582:
	add	w2, w1, 8	// D.25533, D.25525,
	str	w2, [x19, 24]	// D.25533, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25535, argv.__gr_offs
	cmp	w2, 0	// D.25535,
	ble	.L3584		//,
	add	x1, x0, 15	// D.25538, iftmp.2141,
	and	x1, x1, -8	// D.25539, D.25538,
	str	x1, [x19]	// D.25539, argv.__stack
	b	.L3583		//
.L3584:
	ldr	x2, [x19, 8]	// D.25541, argv.__gr_top
	sxtw	x0, w1	// D.25542, D.25525
	add	x0, x2, x0	// iftmp.2141, D.25541, D.25542
.L3583:
	ldr	x1, [x0]	// D.25543, *iftmp.2140_110
	add	x0, sp, 496	// tmp357,,
	ldp	q0, q1, [x1]	// tmp359, tmp360, *_365
	stp	q0, q1, [x0]	// tmp359, tmp360, D.6764
// varargs-dll.c:1545:   int m = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 496]	// tmp361, D.6764.a.a
	str	w0, [sp, 92]	// tmp361, m
// varargs-dll.c:1546:   int n = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25544, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2143, argv.__stack
	cmp	w1, 0	// D.25544,
	blt	.L3586		//,
	add	x1, x0, 15	// D.25549, iftmp.2143,
	and	x1, x1, -8	// D.25550, D.25549,
	str	x1, [x19]	// D.25550, argv.__stack
	b	.L3587		//
.L3586:
	add	w2, w1, 8	// D.25552, D.25544,
	str	w2, [x19, 24]	// D.25552, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25554, argv.__gr_offs
	cmp	w2, 0	// D.25554,
	ble	.L3588		//,
	add	x1, x0, 15	// D.25557, iftmp.2143,
	and	x1, x1, -8	// D.25558, D.25557,
	str	x1, [x19]	// D.25558, argv.__stack
	b	.L3587		//
.L3588:
	ldr	x2, [x19, 8]	// D.25560, argv.__gr_top
	sxtw	x0, w1	// D.25561, D.25544
	add	x0, x2, x0	// iftmp.2143, D.25560, D.25561
.L3587:
	ldr	x1, [x0]	// D.25562, *iftmp.2142_112
	add	x0, sp, 528	// tmp362,,
	ldp	q0, q1, [x1]	// tmp364, tmp365, *_384
	stp	q0, q1, [x0]	// tmp364, tmp365, D.6765
// varargs-dll.c:1546:   int n = va_arg (argv, struct hva_4_short_vector_8_bytes).b.b;
	ldr	w0, [sp, 540]	// tmp366, D.6765.b.b
	str	w0, [sp, 96]	// tmp366, n
// varargs-dll.c:1547:   int o = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w1, [x19, 24]	// D.25563, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2145, argv.__stack
	cmp	w1, 0	// D.25563,
	blt	.L3590		//,
	add	x1, x0, 15	// D.25568, iftmp.2145,
	and	x1, x1, -8	// D.25569, D.25568,
	str	x1, [x19]	// D.25569, argv.__stack
	b	.L3591		//
.L3590:
	add	w2, w1, 8	// D.25571, D.25563,
	str	w2, [x19, 24]	// D.25571, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25573, argv.__gr_offs
	cmp	w2, 0	// D.25573,
	ble	.L3592		//,
	add	x1, x0, 15	// D.25576, iftmp.2145,
	and	x1, x1, -8	// D.25577, D.25576,
	str	x1, [x19]	// D.25577, argv.__stack
	b	.L3591		//
.L3592:
	ldr	x2, [x19, 8]	// D.25579, argv.__gr_top
	sxtw	x0, w1	// D.25580, D.25563
	add	x0, x2, x0	// iftmp.2145, D.25579, D.25580
.L3591:
	ldr	x1, [x0]	// D.25581, *iftmp.2144_114
	add	x0, sp, 560	// tmp367,,
	ldp	q0, q1, [x1]	// tmp369, tmp370, *_403
	stp	q0, q1, [x0]	// tmp369, tmp370, D.6766
// varargs-dll.c:1547:   int o = va_arg (argv, struct hva_4_short_vector_8_bytes).c.a;
	ldr	w0, [sp, 576]	// tmp371, D.6766.c.a
	str	w0, [sp, 100]	// tmp371, o
// varargs-dll.c:1548:   int p = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w1, [x19, 24]	// D.25582, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2147, argv.__stack
	cmp	w1, 0	// D.25582,
	blt	.L3594		//,
	add	x1, x0, 15	// D.25587, iftmp.2147,
	and	x1, x1, -8	// D.25588, D.25587,
	str	x1, [x19]	// D.25588, argv.__stack
	b	.L3595		//
.L3594:
	add	w2, w1, 8	// D.25590, D.25582,
	str	w2, [x19, 24]	// D.25590, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25592, argv.__gr_offs
	cmp	w2, 0	// D.25592,
	ble	.L3596		//,
	add	x1, x0, 15	// D.25595, iftmp.2147,
	and	x1, x1, -8	// D.25596, D.25595,
	str	x1, [x19]	// D.25596, argv.__stack
	b	.L3595		//
.L3596:
	ldr	x2, [x19, 8]	// D.25598, argv.__gr_top
	sxtw	x0, w1	// D.25599, D.25582
	add	x0, x2, x0	// iftmp.2147, D.25598, D.25599
.L3595:
	ldr	x1, [x0]	// D.25600, *iftmp.2146_116
	add	x0, sp, 592	// tmp372,,
	ldp	q0, q1, [x1]	// tmp374, tmp375, *_422
	stp	q0, q1, [x0]	// tmp374, tmp375, D.6767
// varargs-dll.c:1548:   int p = va_arg (argv, struct hva_4_short_vector_8_bytes).d.b;
	ldr	w0, [sp, 620]	// tmp376, D.6767.d.b
	str	w0, [sp, 104]	// tmp376, p
// varargs-dll.c:1549:   int q = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25601, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2149, argv.__stack
	cmp	w1, 0	// D.25601,
	blt	.L3598		//,
	add	x1, x0, 15	// D.25606, iftmp.2149,
	and	x1, x1, -8	// D.25607, D.25606,
	str	x1, [x19]	// D.25607, argv.__stack
	b	.L3599		//
.L3598:
	add	w2, w1, 8	// D.25609, D.25601,
	str	w2, [x19, 24]	// D.25609, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25611, argv.__gr_offs
	cmp	w2, 0	// D.25611,
	ble	.L3600		//,
	add	x1, x0, 15	// D.25614, iftmp.2149,
	and	x1, x1, -8	// D.25615, D.25614,
	str	x1, [x19]	// D.25615, argv.__stack
	b	.L3599		//
.L3600:
	ldr	x2, [x19, 8]	// D.25617, argv.__gr_top
	sxtw	x0, w1	// D.25618, D.25601
	add	x0, x2, x0	// iftmp.2149, D.25617, D.25618
.L3599:
	ldr	x1, [x0]	// D.25619, *iftmp.2148_118
	add	x0, sp, 624	// tmp377,,
	ldp	q0, q1, [x1]	// tmp379, tmp380, *_441
	stp	q0, q1, [x0]	// tmp379, tmp380, D.6768
// varargs-dll.c:1549:   int q = va_arg (argv, struct hva_4_short_vector_8_bytes).a.a;
	ldr	w0, [sp, 624]	// tmp381, D.6768.a.a
	str	w0, [sp, 108]	// tmp381, q
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp382, a
	ldr	w0, [sp, 48]	// tmp383, b
	add	w1, w1, w0	// _1, tmp382, tmp383
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp384, c
	add	w1, w1, w0	// _2, _1, tmp384
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp385, d
	add	w1, w1, w0	// _3, _2, tmp385
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp386, e
	add	w1, w1, w0	// _4, _3, tmp386
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp387, f
	add	w1, w1, w0	// _5, _4, tmp387
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp388, g
	add	w1, w1, w0	// _6, _5, tmp388
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp389, h
	add	w1, w1, w0	// _7, _6, tmp389
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp390, i
	add	w1, w1, w0	// _8, _7, tmp390
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp391, j
	add	w1, w1, w0	// _9, _8, tmp391
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp392, k
	add	w1, w1, w0	// _10, _9, tmp392
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp393, l
	add	w1, w1, w0	// _11, _10, tmp393
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp394, m
	add	w1, w1, w0	// _12, _11, tmp394
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp395, n
	add	w1, w1, w0	// _13, _12, tmp395
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp396, o
	add	w1, w1, w0	// _14, _13, tmp396
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp397, p
	add	w1, w1, w0	// _15, _14, tmp397
// varargs-dll.c:1550:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp398, q
	add	w0, w1, w0	// _51, _15, tmp398
// varargs-dll.c:1551: }
	ldr	x19, [sp]	//,
	add	sp, sp, 656	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE97:
	.size	use_va_list_many_hva_4_short_vector_8_bytes, .-use_va_list_many_hva_4_short_vector_8_bytes
	.align	2
	.global	use_va_args_few_hva_2_short_vector_16_bytes
	.type	use_va_args_few_hva_2_short_vector_16_bytes, %function
use_va_args_few_hva_2_short_vector_16_bytes:
.LFB98:
	.cfi_startproc
	stp	x29, x30, [sp, -336]!	//,,,
	.cfi_def_cfa_offset 336
	.cfi_offset 29, -336
	.cfi_offset 30, -328
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 280]	//,
	str	x2, [sp, 288]	//,
	str	x3, [sp, 296]	//,
	str	x4, [sp, 304]	//,
	str	x5, [sp, 312]	//,
	str	x6, [sp, 320]	//,
	str	x7, [sp, 328]	//,
	str	q0, [sp, 144]	//,
	str	q1, [sp, 160]	//,
	str	q2, [sp, 176]	//,
	str	q3, [sp, 192]	//,
	str	q4, [sp, 208]	//,
	str	q5, [sp, 224]	//,
	str	q6, [sp, 240]	//,
	str	q7, [sp, 256]	//,
// varargs-dll.c:1555: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp137,
	str	x1, [sp, 136]	// tmp137, D.25658
	mov	x1, 0	// tmp137
// varargs-dll.c:1557:   va_start (argv, format);
	add	x0, sp, 336	// tmp142,,
	str	x0, [sp, 40]	// tmp142, MEM[(struct  *)&argv].__stack
	add	x0, sp, 336	// tmp143,,
	str	x0, [sp, 48]	// tmp143, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 272	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1558:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 64]	// D.25620, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2151, argv.__stack
	cmp	w1, 0	// D.25620,
	blt	.L3604		//,
	add	x1, x0, 15	// D.25625, iftmp.2151,
	and	x1, x1, -8	// D.25626, D.25625,
	str	x1, [sp, 40]	// D.25626, argv.__stack
	b	.L3605		//
.L3604:
	add	w2, w1, 8	// D.25628, D.25620,
	str	w2, [sp, 64]	// D.25628, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.25630, argv.__gr_offs
	cmp	w2, 0	// D.25630,
	ble	.L3606		//,
	add	x1, x0, 15	// D.25633, iftmp.2151,
	and	x1, x1, -8	// D.25634, D.25633,
	str	x1, [sp, 40]	// D.25634, argv.__stack
	b	.L3605		//
.L3606:
	ldr	x2, [sp, 48]	// D.25636, argv.__gr_top
	sxtw	x0, w1	// D.25637, D.25620
	add	x0, x2, x0	// iftmp.2151, D.25636, D.25637
.L3605:
	ldr	x1, [x0]	// D.25638, *iftmp.2150_14
	add	x0, sp, 72	// tmp122,,
	ldp	q0, q1, [x1]	// tmp124, tmp125, *_35
	stp	q0, q1, [x0]	// tmp124, tmp125, D.6771
// varargs-dll.c:1558:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 72]	// tmp126, D.6771.a.a
	str	w0, [sp, 32]	// tmp126, a
// varargs-dll.c:1559:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 64]	// D.25639, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2153, argv.__stack
	cmp	w1, 0	// D.25639,
	blt	.L3608		//,
	add	x1, x0, 15	// D.25644, iftmp.2153,
	and	x1, x1, -8	// D.25645, D.25644,
	str	x1, [sp, 40]	// D.25645, argv.__stack
	b	.L3609		//
.L3608:
	add	w2, w1, 8	// D.25647, D.25639,
	str	w2, [sp, 64]	// D.25647, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.25649, argv.__gr_offs
	cmp	w2, 0	// D.25649,
	ble	.L3610		//,
	add	x1, x0, 15	// D.25652, iftmp.2153,
	and	x1, x1, -8	// D.25653, D.25652,
	str	x1, [sp, 40]	// D.25653, argv.__stack
	b	.L3609		//
.L3610:
	ldr	x2, [sp, 48]	// D.25655, argv.__gr_top
	sxtw	x0, w1	// D.25656, D.25639
	add	x0, x2, x0	// iftmp.2153, D.25655, D.25656
.L3609:
	ldr	x1, [x0]	// D.25657, *iftmp.2152_16
	add	x0, sp, 104	// tmp127,,
	ldp	q0, q1, [x1]	// tmp129, tmp130, *_54
	stp	q0, q1, [x0]	// tmp129, tmp130, D.6772
// varargs-dll.c:1559:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 124]	// tmp131, D.6772.b.b
	str	w0, [sp, 36]	// tmp131, b
// varargs-dll.c:1561:   return a + b;
	ldr	w1, [sp, 32]	// tmp132, a
	ldr	w0, [sp, 36]	// tmp133, b
	add	w0, w1, w0	// _8, tmp132, tmp133
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:1562: }
	adrp	x0, :got:__stack_chk_guard	// tmp136,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp135, tmp136,
	ldr	x3, [sp, 136]	// tmp138, D.25658
	ldr	x2, [x0]	// tmp139,
	subs	x3, x3, x2	// tmp138, tmp139
	mov	x2, 0	// tmp139
	beq	.L3613		//,
	bl	__stack_chk_fail		//
.L3613:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 336	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE98:
	.size	use_va_args_few_hva_2_short_vector_16_bytes, .-use_va_args_few_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_list_few_hva_2_short_vector_16_bytes
	.type	use_va_list_few_hva_2_short_vector_16_bytes, %function
use_va_list_few_hva_2_short_vector_16_bytes:
.LFB99:
	.cfi_startproc
	str	x19, [sp, -112]!	//,
	.cfi_def_cfa_offset 112
	.cfi_offset 19, -112
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:1567:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25662, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2155, argv.__stack
	cmp	w1, 0	// D.25662,
	blt	.L3615		//,
	add	x1, x0, 15	// D.25667, iftmp.2155,
	and	x1, x1, -8	// D.25668, D.25667,
	str	x1, [x19]	// D.25668, argv.__stack
	b	.L3616		//
.L3615:
	add	w2, w1, 8	// D.25670, D.25662,
	str	w2, [x19, 24]	// D.25670, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25672, argv.__gr_offs
	cmp	w2, 0	// D.25672,
	ble	.L3617		//,
	add	x1, x0, 15	// D.25675, iftmp.2155,
	and	x1, x1, -8	// D.25676, D.25675,
	str	x1, [x19]	// D.25676, argv.__stack
	b	.L3616		//
.L3617:
	ldr	x2, [x19, 8]	// D.25678, argv.__gr_top
	sxtw	x0, w1	// D.25679, D.25662
	add	x0, x2, x0	// iftmp.2155, D.25678, D.25679
.L3616:
	ldr	x1, [x0]	// D.25680, *iftmp.2154_11
	add	x0, sp, 48	// tmp117,,
	ldp	q0, q1, [x1]	// tmp119, tmp120, *_32
	stp	q0, q1, [x0]	// tmp119, tmp120, D.6776
// varargs-dll.c:1567:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 48]	// tmp121, D.6776.a.a
	str	w0, [sp, 40]	// tmp121, a
// varargs-dll.c:1568:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25681, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2157, argv.__stack
	cmp	w1, 0	// D.25681,
	blt	.L3619		//,
	add	x1, x0, 15	// D.25686, iftmp.2157,
	and	x1, x1, -8	// D.25687, D.25686,
	str	x1, [x19]	// D.25687, argv.__stack
	b	.L3620		//
.L3619:
	add	w2, w1, 8	// D.25689, D.25681,
	str	w2, [x19, 24]	// D.25689, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25691, argv.__gr_offs
	cmp	w2, 0	// D.25691,
	ble	.L3621		//,
	add	x1, x0, 15	// D.25694, iftmp.2157,
	and	x1, x1, -8	// D.25695, D.25694,
	str	x1, [x19]	// D.25695, argv.__stack
	b	.L3620		//
.L3621:
	ldr	x2, [x19, 8]	// D.25697, argv.__gr_top
	sxtw	x0, w1	// D.25698, D.25681
	add	x0, x2, x0	// iftmp.2157, D.25697, D.25698
.L3620:
	ldr	x1, [x0]	// D.25699, *iftmp.2156_13
	add	x0, sp, 80	// tmp122,,
	ldp	q0, q1, [x1]	// tmp124, tmp125, *_51
	stp	q0, q1, [x0]	// tmp124, tmp125, D.6777
// varargs-dll.c:1568:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 100]	// tmp126, D.6777.b.b
	str	w0, [sp, 44]	// tmp126, b
// varargs-dll.c:1569:   return a + b;
	ldr	w1, [sp, 40]	// tmp127, a
	ldr	w0, [sp, 44]	// tmp128, b
	add	w0, w1, w0	// _6, tmp127, tmp128
// varargs-dll.c:1570: }
	ldr	x19, [sp], 112	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE99:
	.size	use_va_list_few_hva_2_short_vector_16_bytes, .-use_va_list_few_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_args_several_hva_2_short_vector_16_bytes
	.type	use_va_args_several_hva_2_short_vector_16_bytes, %function
use_va_args_several_hva_2_short_vector_16_bytes:
.LFB100:
	.cfi_startproc
	sub	sp, sp, #592	//,,
	.cfi_def_cfa_offset 592
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -592
	.cfi_offset 30, -584
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 536]	//,
	str	x2, [sp, 544]	//,
	str	x3, [sp, 552]	//,
	str	x4, [sp, 560]	//,
	str	x5, [sp, 568]	//,
	str	x6, [sp, 576]	//,
	str	x7, [sp, 584]	//,
	str	q0, [sp, 400]	//,
	str	q1, [sp, 416]	//,
	str	q2, [sp, 432]	//,
	str	q3, [sp, 448]	//,
	str	q4, [sp, 464]	//,
	str	q5, [sp, 480]	//,
	str	q6, [sp, 496]	//,
	add	x0, sp, 512	// tmp268,,
	str	q7, [x0]	//,
// varargs-dll.c:1574: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp263,
	str	x1, [sp, 392]	// tmp263, D.25871
	mov	x1, 0	// tmp263
// varargs-dll.c:1576:   va_start (argv, format);
	add	x0, sp, 592	// tmp270,,
	str	x0, [sp, 72]	// tmp270, MEM[(struct  *)&argv].__stack
	add	x0, sp, 592	// tmp271,,
	str	x0, [sp, 80]	// tmp271, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 528	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1577:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.25700, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2159, argv.__stack
	cmp	w1, 0	// D.25700,
	blt	.L3625		//,
	add	x1, x0, 15	// D.25705, iftmp.2159,
	and	x1, x1, -8	// D.25706, D.25705,
	str	x1, [sp, 72]	// D.25706, argv.__stack
	b	.L3626		//
.L3625:
	add	w2, w1, 8	// D.25708, D.25700,
	str	w2, [sp, 96]	// D.25708, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25710, argv.__gr_offs
	cmp	w2, 0	// D.25710,
	ble	.L3627		//,
	add	x1, x0, 15	// D.25713, iftmp.2159,
	and	x1, x1, -8	// D.25714, D.25713,
	str	x1, [sp, 72]	// D.25714, argv.__stack
	b	.L3626		//
.L3627:
	ldr	x2, [sp, 80]	// D.25716, argv.__gr_top
	sxtw	x0, w1	// D.25717, D.25700
	add	x0, x2, x0	// iftmp.2159, D.25716, D.25717
.L3626:
	ldr	x1, [x0]	// D.25718, *iftmp.2158_49
	add	x0, sp, 104	// tmp206,,
	ldp	q0, q1, [x1]	// tmp208, tmp209, *_84
	stp	q0, q1, [x0]	// tmp208, tmp209, D.6780
// varargs-dll.c:1577:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 104]	// tmp210, D.6780.a.a
	str	w0, [sp, 36]	// tmp210, a
// varargs-dll.c:1578:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.25719, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2161, argv.__stack
	cmp	w1, 0	// D.25719,
	blt	.L3629		//,
	add	x1, x0, 15	// D.25724, iftmp.2161,
	and	x1, x1, -8	// D.25725, D.25724,
	str	x1, [sp, 72]	// D.25725, argv.__stack
	b	.L3630		//
.L3629:
	add	w2, w1, 8	// D.25727, D.25719,
	str	w2, [sp, 96]	// D.25727, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25729, argv.__gr_offs
	cmp	w2, 0	// D.25729,
	ble	.L3631		//,
	add	x1, x0, 15	// D.25732, iftmp.2161,
	and	x1, x1, -8	// D.25733, D.25732,
	str	x1, [sp, 72]	// D.25733, argv.__stack
	b	.L3630		//
.L3631:
	ldr	x2, [sp, 80]	// D.25735, argv.__gr_top
	sxtw	x0, w1	// D.25736, D.25719
	add	x0, x2, x0	// iftmp.2161, D.25735, D.25736
.L3630:
	ldr	x1, [x0]	// D.25737, *iftmp.2160_51
	add	x0, sp, 136	// tmp211,,
	ldp	q0, q1, [x1]	// tmp213, tmp214, *_103
	stp	q0, q1, [x0]	// tmp213, tmp214, D.6781
// varargs-dll.c:1578:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 156]	// tmp215, D.6781.b.b
	str	w0, [sp, 40]	// tmp215, b
// varargs-dll.c:1579:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.25738, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2163, argv.__stack
	cmp	w1, 0	// D.25738,
	blt	.L3633		//,
	add	x1, x0, 15	// D.25743, iftmp.2163,
	and	x1, x1, -8	// D.25744, D.25743,
	str	x1, [sp, 72]	// D.25744, argv.__stack
	b	.L3634		//
.L3633:
	add	w2, w1, 8	// D.25746, D.25738,
	str	w2, [sp, 96]	// D.25746, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25748, argv.__gr_offs
	cmp	w2, 0	// D.25748,
	ble	.L3635		//,
	add	x1, x0, 15	// D.25751, iftmp.2163,
	and	x1, x1, -8	// D.25752, D.25751,
	str	x1, [sp, 72]	// D.25752, argv.__stack
	b	.L3634		//
.L3635:
	ldr	x2, [sp, 80]	// D.25754, argv.__gr_top
	sxtw	x0, w1	// D.25755, D.25738
	add	x0, x2, x0	// iftmp.2163, D.25754, D.25755
.L3634:
	ldr	x1, [x0]	// D.25756, *iftmp.2162_53
	add	x0, sp, 168	// tmp216,,
	ldp	q0, q1, [x1]	// tmp218, tmp219, *_122
	stp	q0, q1, [x0]	// tmp218, tmp219, D.6782
// varargs-dll.c:1579:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 168]	// tmp220, D.6782.a.a
	str	w0, [sp, 44]	// tmp220, c
// varargs-dll.c:1580:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.25757, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2165, argv.__stack
	cmp	w1, 0	// D.25757,
	blt	.L3637		//,
	add	x1, x0, 15	// D.25762, iftmp.2165,
	and	x1, x1, -8	// D.25763, D.25762,
	str	x1, [sp, 72]	// D.25763, argv.__stack
	b	.L3638		//
.L3637:
	add	w2, w1, 8	// D.25765, D.25757,
	str	w2, [sp, 96]	// D.25765, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25767, argv.__gr_offs
	cmp	w2, 0	// D.25767,
	ble	.L3639		//,
	add	x1, x0, 15	// D.25770, iftmp.2165,
	and	x1, x1, -8	// D.25771, D.25770,
	str	x1, [sp, 72]	// D.25771, argv.__stack
	b	.L3638		//
.L3639:
	ldr	x2, [sp, 80]	// D.25773, argv.__gr_top
	sxtw	x0, w1	// D.25774, D.25757
	add	x0, x2, x0	// iftmp.2165, D.25773, D.25774
.L3638:
	ldr	x1, [x0]	// D.25775, *iftmp.2164_55
	add	x0, sp, 200	// tmp221,,
	ldp	q0, q1, [x1]	// tmp223, tmp224, *_141
	stp	q0, q1, [x0]	// tmp223, tmp224, D.6783
// varargs-dll.c:1580:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 220]	// tmp225, D.6783.b.b
	str	w0, [sp, 48]	// tmp225, d
// varargs-dll.c:1581:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.25776, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2167, argv.__stack
	cmp	w1, 0	// D.25776,
	blt	.L3641		//,
	add	x1, x0, 15	// D.25781, iftmp.2167,
	and	x1, x1, -8	// D.25782, D.25781,
	str	x1, [sp, 72]	// D.25782, argv.__stack
	b	.L3642		//
.L3641:
	add	w2, w1, 8	// D.25784, D.25776,
	str	w2, [sp, 96]	// D.25784, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25786, argv.__gr_offs
	cmp	w2, 0	// D.25786,
	ble	.L3643		//,
	add	x1, x0, 15	// D.25789, iftmp.2167,
	and	x1, x1, -8	// D.25790, D.25789,
	str	x1, [sp, 72]	// D.25790, argv.__stack
	b	.L3642		//
.L3643:
	ldr	x2, [sp, 80]	// D.25792, argv.__gr_top
	sxtw	x0, w1	// D.25793, D.25776
	add	x0, x2, x0	// iftmp.2167, D.25792, D.25793
.L3642:
	ldr	x1, [x0]	// D.25794, *iftmp.2166_57
	add	x0, sp, 232	// tmp226,,
	ldp	q0, q1, [x1]	// tmp228, tmp229, *_160
	stp	q0, q1, [x0]	// tmp228, tmp229, D.6784
// varargs-dll.c:1581:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 232]	// tmp230, D.6784.a.a
	str	w0, [sp, 52]	// tmp230, e
// varargs-dll.c:1582:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.25795, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2169, argv.__stack
	cmp	w1, 0	// D.25795,
	blt	.L3645		//,
	add	x1, x0, 15	// D.25800, iftmp.2169,
	and	x1, x1, -8	// D.25801, D.25800,
	str	x1, [sp, 72]	// D.25801, argv.__stack
	b	.L3646		//
.L3645:
	add	w2, w1, 8	// D.25803, D.25795,
	str	w2, [sp, 96]	// D.25803, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25805, argv.__gr_offs
	cmp	w2, 0	// D.25805,
	ble	.L3647		//,
	add	x1, x0, 15	// D.25808, iftmp.2169,
	and	x1, x1, -8	// D.25809, D.25808,
	str	x1, [sp, 72]	// D.25809, argv.__stack
	b	.L3646		//
.L3647:
	ldr	x2, [sp, 80]	// D.25811, argv.__gr_top
	sxtw	x0, w1	// D.25812, D.25795
	add	x0, x2, x0	// iftmp.2169, D.25811, D.25812
.L3646:
	ldr	x1, [x0]	// D.25813, *iftmp.2168_59
	add	x0, sp, 264	// tmp231,,
	ldp	q0, q1, [x1]	// tmp233, tmp234, *_179
	stp	q0, q1, [x0]	// tmp233, tmp234, D.6785
// varargs-dll.c:1582:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 284]	// tmp235, D.6785.b.b
	str	w0, [sp, 56]	// tmp235, f
// varargs-dll.c:1583:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.25814, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2171, argv.__stack
	cmp	w1, 0	// D.25814,
	blt	.L3649		//,
	add	x1, x0, 15	// D.25819, iftmp.2171,
	and	x1, x1, -8	// D.25820, D.25819,
	str	x1, [sp, 72]	// D.25820, argv.__stack
	b	.L3650		//
.L3649:
	add	w2, w1, 8	// D.25822, D.25814,
	str	w2, [sp, 96]	// D.25822, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25824, argv.__gr_offs
	cmp	w2, 0	// D.25824,
	ble	.L3651		//,
	add	x1, x0, 15	// D.25827, iftmp.2171,
	and	x1, x1, -8	// D.25828, D.25827,
	str	x1, [sp, 72]	// D.25828, argv.__stack
	b	.L3650		//
.L3651:
	ldr	x2, [sp, 80]	// D.25830, argv.__gr_top
	sxtw	x0, w1	// D.25831, D.25814
	add	x0, x2, x0	// iftmp.2171, D.25830, D.25831
.L3650:
	ldr	x1, [x0]	// D.25832, *iftmp.2170_61
	add	x0, sp, 296	// tmp236,,
	ldp	q0, q1, [x1]	// tmp238, tmp239, *_198
	stp	q0, q1, [x0]	// tmp238, tmp239, D.6786
// varargs-dll.c:1583:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 296]	// tmp240, D.6786.a.a
	str	w0, [sp, 60]	// tmp240, g
// varargs-dll.c:1584:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.25833, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2173, argv.__stack
	cmp	w1, 0	// D.25833,
	blt	.L3653		//,
	add	x1, x0, 15	// D.25838, iftmp.2173,
	and	x1, x1, -8	// D.25839, D.25838,
	str	x1, [sp, 72]	// D.25839, argv.__stack
	b	.L3654		//
.L3653:
	add	w2, w1, 8	// D.25841, D.25833,
	str	w2, [sp, 96]	// D.25841, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25843, argv.__gr_offs
	cmp	w2, 0	// D.25843,
	ble	.L3655		//,
	add	x1, x0, 15	// D.25846, iftmp.2173,
	and	x1, x1, -8	// D.25847, D.25846,
	str	x1, [sp, 72]	// D.25847, argv.__stack
	b	.L3654		//
.L3655:
	ldr	x2, [sp, 80]	// D.25849, argv.__gr_top
	sxtw	x0, w1	// D.25850, D.25833
	add	x0, x2, x0	// iftmp.2173, D.25849, D.25850
.L3654:
	ldr	x1, [x0]	// D.25851, *iftmp.2172_63
	add	x0, sp, 328	// tmp241,,
	ldp	q0, q1, [x1]	// tmp243, tmp244, *_217
	stp	q0, q1, [x0]	// tmp243, tmp244, D.6787
// varargs-dll.c:1584:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 348]	// tmp245, D.6787.b.b
	str	w0, [sp, 64]	// tmp245, h
// varargs-dll.c:1585:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.25852, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2175, argv.__stack
	cmp	w1, 0	// D.25852,
	blt	.L3657		//,
	add	x1, x0, 15	// D.25857, iftmp.2175,
	and	x1, x1, -8	// D.25858, D.25857,
	str	x1, [sp, 72]	// D.25858, argv.__stack
	b	.L3658		//
.L3657:
	add	w2, w1, 8	// D.25860, D.25852,
	str	w2, [sp, 96]	// D.25860, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.25862, argv.__gr_offs
	cmp	w2, 0	// D.25862,
	ble	.L3659		//,
	add	x1, x0, 15	// D.25865, iftmp.2175,
	and	x1, x1, -8	// D.25866, D.25865,
	str	x1, [sp, 72]	// D.25866, argv.__stack
	b	.L3658		//
.L3659:
	ldr	x2, [sp, 80]	// D.25868, argv.__gr_top
	sxtw	x0, w1	// D.25869, D.25852
	add	x0, x2, x0	// iftmp.2175, D.25868, D.25869
.L3658:
	ldr	x1, [x0]	// D.25870, *iftmp.2174_65
	add	x0, sp, 360	// tmp246,,
	ldp	q0, q1, [x1]	// tmp248, tmp249, *_236
	stp	q0, q1, [x0]	// tmp248, tmp249, D.6788
// varargs-dll.c:1585:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 360]	// tmp250, D.6788.a.a
	str	w0, [sp, 68]	// tmp250, i
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp251, a
	ldr	w0, [sp, 40]	// tmp252, b
	add	w1, w1, w0	// _1, tmp251, tmp252
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp253, c
	add	w1, w1, w0	// _2, _1, tmp253
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp254, d
	add	w1, w1, w0	// _3, _2, tmp254
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp255, e
	add	w1, w1, w0	// _4, _3, tmp255
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp256, f
	add	w1, w1, w0	// _5, _4, tmp256
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp257, g
	add	w1, w1, w0	// _6, _5, tmp257
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp258, h
	add	w1, w1, w0	// _7, _6, tmp258
// varargs-dll.c:1587:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp259, i
	add	w0, w1, w0	// _29, _7, tmp259
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:1588: }
	adrp	x0, :got:__stack_chk_guard	// tmp262,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp261, tmp262,
	ldr	x3, [sp, 392]	// tmp264, D.25871
	ldr	x2, [x0]	// tmp265,
	subs	x3, x3, x2	// tmp264, tmp265
	mov	x2, 0	// tmp265
	beq	.L3662		//,
	bl	__stack_chk_fail		//
.L3662:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 592	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE100:
	.size	use_va_args_several_hva_2_short_vector_16_bytes, .-use_va_args_several_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_list_several_hva_2_short_vector_16_bytes
	.type	use_va_list_several_hva_2_short_vector_16_bytes, %function
use_va_list_several_hva_2_short_vector_16_bytes:
.LFB101:
	.cfi_startproc
	sub	sp, sp, #368	//,,
	.cfi_def_cfa_offset 368
	str	x19, [sp]	//,
	.cfi_offset 19, -368
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:1594:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25875, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2177, argv.__stack
	cmp	w1, 0	// D.25875,
	blt	.L3664		//,
	add	x1, x0, 15	// D.25880, iftmp.2177,
	and	x1, x1, -8	// D.25881, D.25880,
	str	x1, [x19]	// D.25881, argv.__stack
	b	.L3665		//
.L3664:
	add	w2, w1, 8	// D.25883, D.25875,
	str	w2, [x19, 24]	// D.25883, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25885, argv.__gr_offs
	cmp	w2, 0	// D.25885,
	ble	.L3666		//,
	add	x1, x0, 15	// D.25888, iftmp.2177,
	and	x1, x1, -8	// D.25889, D.25888,
	str	x1, [x19]	// D.25889, argv.__stack
	b	.L3665		//
.L3666:
	ldr	x2, [x19, 8]	// D.25891, argv.__gr_top
	sxtw	x0, w1	// D.25892, D.25875
	add	x0, x2, x0	// iftmp.2177, D.25891, D.25892
.L3665:
	ldr	x1, [x0]	// D.25893, *iftmp.2176_46
	add	x0, sp, 80	// tmp201,,
	ldp	q0, q1, [x1]	// tmp203, tmp204, *_81
	stp	q0, q1, [x0]	// tmp203, tmp204, D.6792
// varargs-dll.c:1594:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 80]	// tmp205, D.6792.a.a
	str	w0, [sp, 44]	// tmp205, a
// varargs-dll.c:1595:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25894, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2179, argv.__stack
	cmp	w1, 0	// D.25894,
	blt	.L3668		//,
	add	x1, x0, 15	// D.25899, iftmp.2179,
	and	x1, x1, -8	// D.25900, D.25899,
	str	x1, [x19]	// D.25900, argv.__stack
	b	.L3669		//
.L3668:
	add	w2, w1, 8	// D.25902, D.25894,
	str	w2, [x19, 24]	// D.25902, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25904, argv.__gr_offs
	cmp	w2, 0	// D.25904,
	ble	.L3670		//,
	add	x1, x0, 15	// D.25907, iftmp.2179,
	and	x1, x1, -8	// D.25908, D.25907,
	str	x1, [x19]	// D.25908, argv.__stack
	b	.L3669		//
.L3670:
	ldr	x2, [x19, 8]	// D.25910, argv.__gr_top
	sxtw	x0, w1	// D.25911, D.25894
	add	x0, x2, x0	// iftmp.2179, D.25910, D.25911
.L3669:
	ldr	x1, [x0]	// D.25912, *iftmp.2178_48
	add	x0, sp, 112	// tmp206,,
	ldp	q0, q1, [x1]	// tmp208, tmp209, *_100
	stp	q0, q1, [x0]	// tmp208, tmp209, D.6793
// varargs-dll.c:1595:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 132]	// tmp210, D.6793.b.b
	str	w0, [sp, 48]	// tmp210, b
// varargs-dll.c:1596:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25913, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2181, argv.__stack
	cmp	w1, 0	// D.25913,
	blt	.L3672		//,
	add	x1, x0, 15	// D.25918, iftmp.2181,
	and	x1, x1, -8	// D.25919, D.25918,
	str	x1, [x19]	// D.25919, argv.__stack
	b	.L3673		//
.L3672:
	add	w2, w1, 8	// D.25921, D.25913,
	str	w2, [x19, 24]	// D.25921, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25923, argv.__gr_offs
	cmp	w2, 0	// D.25923,
	ble	.L3674		//,
	add	x1, x0, 15	// D.25926, iftmp.2181,
	and	x1, x1, -8	// D.25927, D.25926,
	str	x1, [x19]	// D.25927, argv.__stack
	b	.L3673		//
.L3674:
	ldr	x2, [x19, 8]	// D.25929, argv.__gr_top
	sxtw	x0, w1	// D.25930, D.25913
	add	x0, x2, x0	// iftmp.2181, D.25929, D.25930
.L3673:
	ldr	x1, [x0]	// D.25931, *iftmp.2180_50
	add	x0, sp, 144	// tmp211,,
	ldp	q0, q1, [x1]	// tmp213, tmp214, *_119
	stp	q0, q1, [x0]	// tmp213, tmp214, D.6794
// varargs-dll.c:1596:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 144]	// tmp215, D.6794.a.a
	str	w0, [sp, 52]	// tmp215, c
// varargs-dll.c:1597:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25932, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2183, argv.__stack
	cmp	w1, 0	// D.25932,
	blt	.L3676		//,
	add	x1, x0, 15	// D.25937, iftmp.2183,
	and	x1, x1, -8	// D.25938, D.25937,
	str	x1, [x19]	// D.25938, argv.__stack
	b	.L3677		//
.L3676:
	add	w2, w1, 8	// D.25940, D.25932,
	str	w2, [x19, 24]	// D.25940, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25942, argv.__gr_offs
	cmp	w2, 0	// D.25942,
	ble	.L3678		//,
	add	x1, x0, 15	// D.25945, iftmp.2183,
	and	x1, x1, -8	// D.25946, D.25945,
	str	x1, [x19]	// D.25946, argv.__stack
	b	.L3677		//
.L3678:
	ldr	x2, [x19, 8]	// D.25948, argv.__gr_top
	sxtw	x0, w1	// D.25949, D.25932
	add	x0, x2, x0	// iftmp.2183, D.25948, D.25949
.L3677:
	ldr	x1, [x0]	// D.25950, *iftmp.2182_52
	add	x0, sp, 176	// tmp216,,
	ldp	q0, q1, [x1]	// tmp218, tmp219, *_138
	stp	q0, q1, [x0]	// tmp218, tmp219, D.6795
// varargs-dll.c:1597:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 196]	// tmp220, D.6795.b.b
	str	w0, [sp, 56]	// tmp220, d
// varargs-dll.c:1598:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25951, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2185, argv.__stack
	cmp	w1, 0	// D.25951,
	blt	.L3680		//,
	add	x1, x0, 15	// D.25956, iftmp.2185,
	and	x1, x1, -8	// D.25957, D.25956,
	str	x1, [x19]	// D.25957, argv.__stack
	b	.L3681		//
.L3680:
	add	w2, w1, 8	// D.25959, D.25951,
	str	w2, [x19, 24]	// D.25959, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25961, argv.__gr_offs
	cmp	w2, 0	// D.25961,
	ble	.L3682		//,
	add	x1, x0, 15	// D.25964, iftmp.2185,
	and	x1, x1, -8	// D.25965, D.25964,
	str	x1, [x19]	// D.25965, argv.__stack
	b	.L3681		//
.L3682:
	ldr	x2, [x19, 8]	// D.25967, argv.__gr_top
	sxtw	x0, w1	// D.25968, D.25951
	add	x0, x2, x0	// iftmp.2185, D.25967, D.25968
.L3681:
	ldr	x1, [x0]	// D.25969, *iftmp.2184_54
	add	x0, sp, 208	// tmp221,,
	ldp	q0, q1, [x1]	// tmp223, tmp224, *_157
	stp	q0, q1, [x0]	// tmp223, tmp224, D.6796
// varargs-dll.c:1598:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 208]	// tmp225, D.6796.a.a
	str	w0, [sp, 60]	// tmp225, e
// varargs-dll.c:1599:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.25970, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2187, argv.__stack
	cmp	w1, 0	// D.25970,
	blt	.L3684		//,
	add	x1, x0, 15	// D.25975, iftmp.2187,
	and	x1, x1, -8	// D.25976, D.25975,
	str	x1, [x19]	// D.25976, argv.__stack
	b	.L3685		//
.L3684:
	add	w2, w1, 8	// D.25978, D.25970,
	str	w2, [x19, 24]	// D.25978, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25980, argv.__gr_offs
	cmp	w2, 0	// D.25980,
	ble	.L3686		//,
	add	x1, x0, 15	// D.25983, iftmp.2187,
	and	x1, x1, -8	// D.25984, D.25983,
	str	x1, [x19]	// D.25984, argv.__stack
	b	.L3685		//
.L3686:
	ldr	x2, [x19, 8]	// D.25986, argv.__gr_top
	sxtw	x0, w1	// D.25987, D.25970
	add	x0, x2, x0	// iftmp.2187, D.25986, D.25987
.L3685:
	ldr	x1, [x0]	// D.25988, *iftmp.2186_56
	add	x0, sp, 240	// tmp226,,
	ldp	q0, q1, [x1]	// tmp228, tmp229, *_176
	stp	q0, q1, [x0]	// tmp228, tmp229, D.6797
// varargs-dll.c:1599:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 260]	// tmp230, D.6797.b.b
	str	w0, [sp, 64]	// tmp230, f
// varargs-dll.c:1600:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.25989, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2189, argv.__stack
	cmp	w1, 0	// D.25989,
	blt	.L3688		//,
	add	x1, x0, 15	// D.25994, iftmp.2189,
	and	x1, x1, -8	// D.25995, D.25994,
	str	x1, [x19]	// D.25995, argv.__stack
	b	.L3689		//
.L3688:
	add	w2, w1, 8	// D.25997, D.25989,
	str	w2, [x19, 24]	// D.25997, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.25999, argv.__gr_offs
	cmp	w2, 0	// D.25999,
	ble	.L3690		//,
	add	x1, x0, 15	// D.26002, iftmp.2189,
	and	x1, x1, -8	// D.26003, D.26002,
	str	x1, [x19]	// D.26003, argv.__stack
	b	.L3689		//
.L3690:
	ldr	x2, [x19, 8]	// D.26005, argv.__gr_top
	sxtw	x0, w1	// D.26006, D.25989
	add	x0, x2, x0	// iftmp.2189, D.26005, D.26006
.L3689:
	ldr	x1, [x0]	// D.26007, *iftmp.2188_58
	add	x0, sp, 272	// tmp231,,
	ldp	q0, q1, [x1]	// tmp233, tmp234, *_195
	stp	q0, q1, [x0]	// tmp233, tmp234, D.6798
// varargs-dll.c:1600:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 272]	// tmp235, D.6798.a.a
	str	w0, [sp, 68]	// tmp235, g
// varargs-dll.c:1601:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26008, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2191, argv.__stack
	cmp	w1, 0	// D.26008,
	blt	.L3692		//,
	add	x1, x0, 15	// D.26013, iftmp.2191,
	and	x1, x1, -8	// D.26014, D.26013,
	str	x1, [x19]	// D.26014, argv.__stack
	b	.L3693		//
.L3692:
	add	w2, w1, 8	// D.26016, D.26008,
	str	w2, [x19, 24]	// D.26016, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26018, argv.__gr_offs
	cmp	w2, 0	// D.26018,
	ble	.L3694		//,
	add	x1, x0, 15	// D.26021, iftmp.2191,
	and	x1, x1, -8	// D.26022, D.26021,
	str	x1, [x19]	// D.26022, argv.__stack
	b	.L3693		//
.L3694:
	ldr	x2, [x19, 8]	// D.26024, argv.__gr_top
	sxtw	x0, w1	// D.26025, D.26008
	add	x0, x2, x0	// iftmp.2191, D.26024, D.26025
.L3693:
	ldr	x1, [x0]	// D.26026, *iftmp.2190_60
	add	x0, sp, 304	// tmp236,,
	ldp	q0, q1, [x1]	// tmp238, tmp239, *_214
	stp	q0, q1, [x0]	// tmp238, tmp239, D.6799
// varargs-dll.c:1601:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 324]	// tmp240, D.6799.b.b
	str	w0, [sp, 72]	// tmp240, h
// varargs-dll.c:1602:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26027, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2193, argv.__stack
	cmp	w1, 0	// D.26027,
	blt	.L3696		//,
	add	x1, x0, 15	// D.26032, iftmp.2193,
	and	x1, x1, -8	// D.26033, D.26032,
	str	x1, [x19]	// D.26033, argv.__stack
	b	.L3697		//
.L3696:
	add	w2, w1, 8	// D.26035, D.26027,
	str	w2, [x19, 24]	// D.26035, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26037, argv.__gr_offs
	cmp	w2, 0	// D.26037,
	ble	.L3698		//,
	add	x1, x0, 15	// D.26040, iftmp.2193,
	and	x1, x1, -8	// D.26041, D.26040,
	str	x1, [x19]	// D.26041, argv.__stack
	b	.L3697		//
.L3698:
	ldr	x2, [x19, 8]	// D.26043, argv.__gr_top
	sxtw	x0, w1	// D.26044, D.26027
	add	x0, x2, x0	// iftmp.2193, D.26043, D.26044
.L3697:
	ldr	x1, [x0]	// D.26045, *iftmp.2192_62
	add	x0, sp, 336	// tmp241,,
	ldp	q0, q1, [x1]	// tmp243, tmp244, *_233
	stp	q0, q1, [x0]	// tmp243, tmp244, D.6800
// varargs-dll.c:1602:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 336]	// tmp245, D.6800.a.a
	str	w0, [sp, 76]	// tmp245, i
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp246, a
	ldr	w0, [sp, 48]	// tmp247, b
	add	w1, w1, w0	// _1, tmp246, tmp247
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp248, c
	add	w1, w1, w0	// _2, _1, tmp248
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp249, d
	add	w1, w1, w0	// _3, _2, tmp249
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp250, e
	add	w1, w1, w0	// _4, _3, tmp250
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp251, f
	add	w1, w1, w0	// _5, _4, tmp251
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp252, g
	add	w1, w1, w0	// _6, _5, tmp252
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp253, h
	add	w1, w1, w0	// _7, _6, tmp253
// varargs-dll.c:1603:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp254, i
	add	w0, w1, w0	// _27, _7, tmp254
// varargs-dll.c:1604: }
	ldr	x19, [sp]	//,
	add	sp, sp, 368	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE101:
	.size	use_va_list_several_hva_2_short_vector_16_bytes, .-use_va_list_several_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_args_many_hva_2_short_vector_16_bytes
	.type	use_va_args_many_hva_2_short_vector_16_bytes, %function
use_va_args_many_hva_2_short_vector_16_bytes:
.LFB102:
	.cfi_startproc
	sub	sp, sp, #880	//,,
	.cfi_def_cfa_offset 880
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -880
	.cfi_offset 30, -872
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 824]	//,
	str	x2, [sp, 832]	//,
	str	x3, [sp, 840]	//,
	str	x4, [sp, 848]	//,
	str	x5, [sp, 856]	//,
	str	x6, [sp, 864]	//,
	str	x7, [sp, 872]	//,
	add	x0, sp, 512	// tmp412,,
	str	q0, [x0, 176]	//,
	add	x0, sp, 512	// tmp414,,
	str	q1, [x0, 192]	//,
	add	x0, sp, 512	// tmp416,,
	str	q2, [x0, 208]	//,
	add	x0, sp, 512	// tmp418,,
	str	q3, [x0, 224]	//,
	add	x0, sp, 512	// tmp420,,
	str	q4, [x0, 240]	//,
	add	x0, sp, 1024	// tmp422,,
	str	q5, [x0, -256]	//,
	add	x0, sp, 1024	// tmp424,,
	str	q6, [x0, -240]	//,
	add	x0, sp, 1024	// tmp426,,
	str	q7, [x0, -224]	//,
// varargs-dll.c:1608: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp407,
	str	x1, [sp, 680]	// tmp407, D.26369
	mov	x1, 0	// tmp407
// varargs-dll.c:1610:   va_start (argv, format);
	add	x0, sp, 880	// tmp428,,
	str	x0, [sp, 104]	// tmp428, MEM[(struct  *)&argv].__stack
	add	x0, sp, 880	// tmp429,,
	str	x0, [sp, 112]	// tmp429, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 816	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1611:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26046, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2195, argv.__stack
	cmp	w1, 0	// D.26046,
	blt	.L3702		//,
	add	x1, x0, 15	// D.26051, iftmp.2195,
	and	x1, x1, -8	// D.26052, D.26051,
	str	x1, [sp, 104]	// D.26052, argv.__stack
	b	.L3703		//
.L3702:
	add	w2, w1, 8	// D.26054, D.26046,
	str	w2, [sp, 128]	// D.26054, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26056, argv.__gr_offs
	cmp	w2, 0	// D.26056,
	ble	.L3704		//,
	add	x1, x0, 15	// D.26059, iftmp.2195,
	and	x1, x1, -8	// D.26060, D.26059,
	str	x1, [sp, 104]	// D.26060, argv.__stack
	b	.L3703		//
.L3704:
	ldr	x2, [sp, 112]	// D.26062, argv.__gr_top
	sxtw	x0, w1	// D.26063, D.26046
	add	x0, x2, x0	// iftmp.2195, D.26062, D.26063
.L3703:
	ldr	x1, [x0]	// D.26064, *iftmp.2194_89
	add	x0, sp, 136	// tmp302,,
	ldp	q0, q1, [x1]	// tmp304, tmp305, *_140
	stp	q0, q1, [x0]	// tmp304, tmp305, D.6803
// varargs-dll.c:1611:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 136]	// tmp306, D.6803.a.a
	str	w0, [sp, 36]	// tmp306, a
// varargs-dll.c:1612:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26065, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2197, argv.__stack
	cmp	w1, 0	// D.26065,
	blt	.L3706		//,
	add	x1, x0, 15	// D.26070, iftmp.2197,
	and	x1, x1, -8	// D.26071, D.26070,
	str	x1, [sp, 104]	// D.26071, argv.__stack
	b	.L3707		//
.L3706:
	add	w2, w1, 8	// D.26073, D.26065,
	str	w2, [sp, 128]	// D.26073, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26075, argv.__gr_offs
	cmp	w2, 0	// D.26075,
	ble	.L3708		//,
	add	x1, x0, 15	// D.26078, iftmp.2197,
	and	x1, x1, -8	// D.26079, D.26078,
	str	x1, [sp, 104]	// D.26079, argv.__stack
	b	.L3707		//
.L3708:
	ldr	x2, [sp, 112]	// D.26081, argv.__gr_top
	sxtw	x0, w1	// D.26082, D.26065
	add	x0, x2, x0	// iftmp.2197, D.26081, D.26082
.L3707:
	ldr	x1, [x0]	// D.26083, *iftmp.2196_91
	add	x0, sp, 168	// tmp307,,
	ldp	q0, q1, [x1]	// tmp309, tmp310, *_159
	stp	q0, q1, [x0]	// tmp309, tmp310, D.6804
// varargs-dll.c:1612:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 188]	// tmp311, D.6804.b.b
	str	w0, [sp, 40]	// tmp311, b
// varargs-dll.c:1613:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26084, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2199, argv.__stack
	cmp	w1, 0	// D.26084,
	blt	.L3710		//,
	add	x1, x0, 15	// D.26089, iftmp.2199,
	and	x1, x1, -8	// D.26090, D.26089,
	str	x1, [sp, 104]	// D.26090, argv.__stack
	b	.L3711		//
.L3710:
	add	w2, w1, 8	// D.26092, D.26084,
	str	w2, [sp, 128]	// D.26092, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26094, argv.__gr_offs
	cmp	w2, 0	// D.26094,
	ble	.L3712		//,
	add	x1, x0, 15	// D.26097, iftmp.2199,
	and	x1, x1, -8	// D.26098, D.26097,
	str	x1, [sp, 104]	// D.26098, argv.__stack
	b	.L3711		//
.L3712:
	ldr	x2, [sp, 112]	// D.26100, argv.__gr_top
	sxtw	x0, w1	// D.26101, D.26084
	add	x0, x2, x0	// iftmp.2199, D.26100, D.26101
.L3711:
	ldr	x1, [x0]	// D.26102, *iftmp.2198_93
	add	x0, sp, 200	// tmp312,,
	ldp	q0, q1, [x1]	// tmp314, tmp315, *_178
	stp	q0, q1, [x0]	// tmp314, tmp315, D.6805
// varargs-dll.c:1613:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 200]	// tmp316, D.6805.a.a
	str	w0, [sp, 44]	// tmp316, c
// varargs-dll.c:1614:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26103, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2201, argv.__stack
	cmp	w1, 0	// D.26103,
	blt	.L3714		//,
	add	x1, x0, 15	// D.26108, iftmp.2201,
	and	x1, x1, -8	// D.26109, D.26108,
	str	x1, [sp, 104]	// D.26109, argv.__stack
	b	.L3715		//
.L3714:
	add	w2, w1, 8	// D.26111, D.26103,
	str	w2, [sp, 128]	// D.26111, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26113, argv.__gr_offs
	cmp	w2, 0	// D.26113,
	ble	.L3716		//,
	add	x1, x0, 15	// D.26116, iftmp.2201,
	and	x1, x1, -8	// D.26117, D.26116,
	str	x1, [sp, 104]	// D.26117, argv.__stack
	b	.L3715		//
.L3716:
	ldr	x2, [sp, 112]	// D.26119, argv.__gr_top
	sxtw	x0, w1	// D.26120, D.26103
	add	x0, x2, x0	// iftmp.2201, D.26119, D.26120
.L3715:
	ldr	x1, [x0]	// D.26121, *iftmp.2200_95
	add	x0, sp, 232	// tmp317,,
	ldp	q0, q1, [x1]	// tmp319, tmp320, *_197
	stp	q0, q1, [x0]	// tmp319, tmp320, D.6806
// varargs-dll.c:1614:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 252]	// tmp321, D.6806.b.b
	str	w0, [sp, 48]	// tmp321, d
// varargs-dll.c:1615:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26122, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2203, argv.__stack
	cmp	w1, 0	// D.26122,
	blt	.L3718		//,
	add	x1, x0, 15	// D.26127, iftmp.2203,
	and	x1, x1, -8	// D.26128, D.26127,
	str	x1, [sp, 104]	// D.26128, argv.__stack
	b	.L3719		//
.L3718:
	add	w2, w1, 8	// D.26130, D.26122,
	str	w2, [sp, 128]	// D.26130, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26132, argv.__gr_offs
	cmp	w2, 0	// D.26132,
	ble	.L3720		//,
	add	x1, x0, 15	// D.26135, iftmp.2203,
	and	x1, x1, -8	// D.26136, D.26135,
	str	x1, [sp, 104]	// D.26136, argv.__stack
	b	.L3719		//
.L3720:
	ldr	x2, [sp, 112]	// D.26138, argv.__gr_top
	sxtw	x0, w1	// D.26139, D.26122
	add	x0, x2, x0	// iftmp.2203, D.26138, D.26139
.L3719:
	ldr	x1, [x0]	// D.26140, *iftmp.2202_97
	add	x0, sp, 264	// tmp322,,
	ldp	q0, q1, [x1]	// tmp324, tmp325, *_216
	stp	q0, q1, [x0]	// tmp324, tmp325, D.6807
// varargs-dll.c:1615:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 264]	// tmp326, D.6807.a.a
	str	w0, [sp, 52]	// tmp326, e
// varargs-dll.c:1616:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26141, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2205, argv.__stack
	cmp	w1, 0	// D.26141,
	blt	.L3722		//,
	add	x1, x0, 15	// D.26146, iftmp.2205,
	and	x1, x1, -8	// D.26147, D.26146,
	str	x1, [sp, 104]	// D.26147, argv.__stack
	b	.L3723		//
.L3722:
	add	w2, w1, 8	// D.26149, D.26141,
	str	w2, [sp, 128]	// D.26149, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26151, argv.__gr_offs
	cmp	w2, 0	// D.26151,
	ble	.L3724		//,
	add	x1, x0, 15	// D.26154, iftmp.2205,
	and	x1, x1, -8	// D.26155, D.26154,
	str	x1, [sp, 104]	// D.26155, argv.__stack
	b	.L3723		//
.L3724:
	ldr	x2, [sp, 112]	// D.26157, argv.__gr_top
	sxtw	x0, w1	// D.26158, D.26141
	add	x0, x2, x0	// iftmp.2205, D.26157, D.26158
.L3723:
	ldr	x1, [x0]	// D.26159, *iftmp.2204_99
	add	x0, sp, 296	// tmp327,,
	ldp	q0, q1, [x1]	// tmp329, tmp330, *_235
	stp	q0, q1, [x0]	// tmp329, tmp330, D.6808
// varargs-dll.c:1616:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 316]	// tmp331, D.6808.b.b
	str	w0, [sp, 56]	// tmp331, f
// varargs-dll.c:1617:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26160, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2207, argv.__stack
	cmp	w1, 0	// D.26160,
	blt	.L3726		//,
	add	x1, x0, 15	// D.26165, iftmp.2207,
	and	x1, x1, -8	// D.26166, D.26165,
	str	x1, [sp, 104]	// D.26166, argv.__stack
	b	.L3727		//
.L3726:
	add	w2, w1, 8	// D.26168, D.26160,
	str	w2, [sp, 128]	// D.26168, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26170, argv.__gr_offs
	cmp	w2, 0	// D.26170,
	ble	.L3728		//,
	add	x1, x0, 15	// D.26173, iftmp.2207,
	and	x1, x1, -8	// D.26174, D.26173,
	str	x1, [sp, 104]	// D.26174, argv.__stack
	b	.L3727		//
.L3728:
	ldr	x2, [sp, 112]	// D.26176, argv.__gr_top
	sxtw	x0, w1	// D.26177, D.26160
	add	x0, x2, x0	// iftmp.2207, D.26176, D.26177
.L3727:
	ldr	x1, [x0]	// D.26178, *iftmp.2206_101
	add	x0, sp, 328	// tmp332,,
	ldp	q0, q1, [x1]	// tmp334, tmp335, *_254
	stp	q0, q1, [x0]	// tmp334, tmp335, D.6809
// varargs-dll.c:1617:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 328]	// tmp336, D.6809.a.a
	str	w0, [sp, 60]	// tmp336, g
// varargs-dll.c:1618:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26179, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2209, argv.__stack
	cmp	w1, 0	// D.26179,
	blt	.L3730		//,
	add	x1, x0, 15	// D.26184, iftmp.2209,
	and	x1, x1, -8	// D.26185, D.26184,
	str	x1, [sp, 104]	// D.26185, argv.__stack
	b	.L3731		//
.L3730:
	add	w2, w1, 8	// D.26187, D.26179,
	str	w2, [sp, 128]	// D.26187, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26189, argv.__gr_offs
	cmp	w2, 0	// D.26189,
	ble	.L3732		//,
	add	x1, x0, 15	// D.26192, iftmp.2209,
	and	x1, x1, -8	// D.26193, D.26192,
	str	x1, [sp, 104]	// D.26193, argv.__stack
	b	.L3731		//
.L3732:
	ldr	x2, [sp, 112]	// D.26195, argv.__gr_top
	sxtw	x0, w1	// D.26196, D.26179
	add	x0, x2, x0	// iftmp.2209, D.26195, D.26196
.L3731:
	ldr	x1, [x0]	// D.26197, *iftmp.2208_103
	add	x0, sp, 360	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_273
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6810
// varargs-dll.c:1618:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 380]	// tmp341, D.6810.b.b
	str	w0, [sp, 64]	// tmp341, h
// varargs-dll.c:1619:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26198, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2211, argv.__stack
	cmp	w1, 0	// D.26198,
	blt	.L3734		//,
	add	x1, x0, 15	// D.26203, iftmp.2211,
	and	x1, x1, -8	// D.26204, D.26203,
	str	x1, [sp, 104]	// D.26204, argv.__stack
	b	.L3735		//
.L3734:
	add	w2, w1, 8	// D.26206, D.26198,
	str	w2, [sp, 128]	// D.26206, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26208, argv.__gr_offs
	cmp	w2, 0	// D.26208,
	ble	.L3736		//,
	add	x1, x0, 15	// D.26211, iftmp.2211,
	and	x1, x1, -8	// D.26212, D.26211,
	str	x1, [sp, 104]	// D.26212, argv.__stack
	b	.L3735		//
.L3736:
	ldr	x2, [sp, 112]	// D.26214, argv.__gr_top
	sxtw	x0, w1	// D.26215, D.26198
	add	x0, x2, x0	// iftmp.2211, D.26214, D.26215
.L3735:
	ldr	x1, [x0]	// D.26216, *iftmp.2210_105
	add	x0, sp, 392	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_292
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6811
// varargs-dll.c:1619:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 392]	// tmp346, D.6811.a.a
	str	w0, [sp, 68]	// tmp346, i
// varargs-dll.c:1620:   int j = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26217, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2213, argv.__stack
	cmp	w1, 0	// D.26217,
	blt	.L3738		//,
	add	x1, x0, 15	// D.26222, iftmp.2213,
	and	x1, x1, -8	// D.26223, D.26222,
	str	x1, [sp, 104]	// D.26223, argv.__stack
	b	.L3739		//
.L3738:
	add	w2, w1, 8	// D.26225, D.26217,
	str	w2, [sp, 128]	// D.26225, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26227, argv.__gr_offs
	cmp	w2, 0	// D.26227,
	ble	.L3740		//,
	add	x1, x0, 15	// D.26230, iftmp.2213,
	and	x1, x1, -8	// D.26231, D.26230,
	str	x1, [sp, 104]	// D.26231, argv.__stack
	b	.L3739		//
.L3740:
	ldr	x2, [sp, 112]	// D.26233, argv.__gr_top
	sxtw	x0, w1	// D.26234, D.26217
	add	x0, x2, x0	// iftmp.2213, D.26233, D.26234
.L3739:
	ldr	x1, [x0]	// D.26235, *iftmp.2212_107
	add	x0, sp, 424	// tmp347,,
	ldp	q0, q1, [x1]	// tmp349, tmp350, *_311
	stp	q0, q1, [x0]	// tmp349, tmp350, D.6812
// varargs-dll.c:1620:   int j = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 444]	// tmp351, D.6812.b.b
	str	w0, [sp, 72]	// tmp351, j
// varargs-dll.c:1621:   int k = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26236, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2215, argv.__stack
	cmp	w1, 0	// D.26236,
	blt	.L3742		//,
	add	x1, x0, 15	// D.26241, iftmp.2215,
	and	x1, x1, -8	// D.26242, D.26241,
	str	x1, [sp, 104]	// D.26242, argv.__stack
	b	.L3743		//
.L3742:
	add	w2, w1, 8	// D.26244, D.26236,
	str	w2, [sp, 128]	// D.26244, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26246, argv.__gr_offs
	cmp	w2, 0	// D.26246,
	ble	.L3744		//,
	add	x1, x0, 15	// D.26249, iftmp.2215,
	and	x1, x1, -8	// D.26250, D.26249,
	str	x1, [sp, 104]	// D.26250, argv.__stack
	b	.L3743		//
.L3744:
	ldr	x2, [sp, 112]	// D.26252, argv.__gr_top
	sxtw	x0, w1	// D.26253, D.26236
	add	x0, x2, x0	// iftmp.2215, D.26252, D.26253
.L3743:
	ldr	x1, [x0]	// D.26254, *iftmp.2214_109
	add	x0, sp, 456	// tmp352,,
	ldp	q0, q1, [x1]	// tmp354, tmp355, *_330
	stp	q0, q1, [x0]	// tmp354, tmp355, D.6813
// varargs-dll.c:1621:   int k = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 456]	// tmp356, D.6813.a.a
	str	w0, [sp, 76]	// tmp356, k
// varargs-dll.c:1622:   int l = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26255, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2217, argv.__stack
	cmp	w1, 0	// D.26255,
	blt	.L3746		//,
	add	x1, x0, 15	// D.26260, iftmp.2217,
	and	x1, x1, -8	// D.26261, D.26260,
	str	x1, [sp, 104]	// D.26261, argv.__stack
	b	.L3747		//
.L3746:
	add	w2, w1, 8	// D.26263, D.26255,
	str	w2, [sp, 128]	// D.26263, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26265, argv.__gr_offs
	cmp	w2, 0	// D.26265,
	ble	.L3748		//,
	add	x1, x0, 15	// D.26268, iftmp.2217,
	and	x1, x1, -8	// D.26269, D.26268,
	str	x1, [sp, 104]	// D.26269, argv.__stack
	b	.L3747		//
.L3748:
	ldr	x2, [sp, 112]	// D.26271, argv.__gr_top
	sxtw	x0, w1	// D.26272, D.26255
	add	x0, x2, x0	// iftmp.2217, D.26271, D.26272
.L3747:
	ldr	x1, [x0]	// D.26273, *iftmp.2216_111
	add	x0, sp, 488	// tmp357,,
	ldp	q0, q1, [x1]	// tmp359, tmp360, *_349
	stp	q0, q1, [x0]	// tmp359, tmp360, D.6814
// varargs-dll.c:1622:   int l = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 508]	// tmp361, D.6814.b.b
	str	w0, [sp, 80]	// tmp361, l
// varargs-dll.c:1623:   int m = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26274, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2219, argv.__stack
	cmp	w1, 0	// D.26274,
	blt	.L3750		//,
	add	x1, x0, 15	// D.26279, iftmp.2219,
	and	x1, x1, -8	// D.26280, D.26279,
	str	x1, [sp, 104]	// D.26280, argv.__stack
	b	.L3751		//
.L3750:
	add	w2, w1, 8	// D.26282, D.26274,
	str	w2, [sp, 128]	// D.26282, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26284, argv.__gr_offs
	cmp	w2, 0	// D.26284,
	ble	.L3752		//,
	add	x1, x0, 15	// D.26287, iftmp.2219,
	and	x1, x1, -8	// D.26288, D.26287,
	str	x1, [sp, 104]	// D.26288, argv.__stack
	b	.L3751		//
.L3752:
	ldr	x2, [sp, 112]	// D.26290, argv.__gr_top
	sxtw	x0, w1	// D.26291, D.26274
	add	x0, x2, x0	// iftmp.2219, D.26290, D.26291
.L3751:
	ldr	x1, [x0]	// D.26292, *iftmp.2218_113
	add	x0, sp, 520	// tmp362,,
	ldp	q0, q1, [x1]	// tmp364, tmp365, *_368
	stp	q0, q1, [x0]	// tmp364, tmp365, D.6815
// varargs-dll.c:1623:   int m = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 520]	// tmp366, D.6815.a.a
	str	w0, [sp, 84]	// tmp366, m
// varargs-dll.c:1624:   int n = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26293, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2221, argv.__stack
	cmp	w1, 0	// D.26293,
	blt	.L3754		//,
	add	x1, x0, 15	// D.26298, iftmp.2221,
	and	x1, x1, -8	// D.26299, D.26298,
	str	x1, [sp, 104]	// D.26299, argv.__stack
	b	.L3755		//
.L3754:
	add	w2, w1, 8	// D.26301, D.26293,
	str	w2, [sp, 128]	// D.26301, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26303, argv.__gr_offs
	cmp	w2, 0	// D.26303,
	ble	.L3756		//,
	add	x1, x0, 15	// D.26306, iftmp.2221,
	and	x1, x1, -8	// D.26307, D.26306,
	str	x1, [sp, 104]	// D.26307, argv.__stack
	b	.L3755		//
.L3756:
	ldr	x2, [sp, 112]	// D.26309, argv.__gr_top
	sxtw	x0, w1	// D.26310, D.26293
	add	x0, x2, x0	// iftmp.2221, D.26309, D.26310
.L3755:
	ldr	x1, [x0]	// D.26311, *iftmp.2220_115
	add	x0, sp, 552	// tmp367,,
	ldp	q0, q1, [x1]	// tmp369, tmp370, *_387
	stp	q0, q1, [x0]	// tmp369, tmp370, D.6816
// varargs-dll.c:1624:   int n = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 572]	// tmp371, D.6816.b.b
	str	w0, [sp, 88]	// tmp371, n
// varargs-dll.c:1625:   int o = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26312, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2223, argv.__stack
	cmp	w1, 0	// D.26312,
	blt	.L3758		//,
	add	x1, x0, 15	// D.26317, iftmp.2223,
	and	x1, x1, -8	// D.26318, D.26317,
	str	x1, [sp, 104]	// D.26318, argv.__stack
	b	.L3759		//
.L3758:
	add	w2, w1, 8	// D.26320, D.26312,
	str	w2, [sp, 128]	// D.26320, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26322, argv.__gr_offs
	cmp	w2, 0	// D.26322,
	ble	.L3760		//,
	add	x1, x0, 15	// D.26325, iftmp.2223,
	and	x1, x1, -8	// D.26326, D.26325,
	str	x1, [sp, 104]	// D.26326, argv.__stack
	b	.L3759		//
.L3760:
	ldr	x2, [sp, 112]	// D.26328, argv.__gr_top
	sxtw	x0, w1	// D.26329, D.26312
	add	x0, x2, x0	// iftmp.2223, D.26328, D.26329
.L3759:
	ldr	x1, [x0]	// D.26330, *iftmp.2222_117
	add	x0, sp, 584	// tmp372,,
	ldp	q0, q1, [x1]	// tmp374, tmp375, *_406
	stp	q0, q1, [x0]	// tmp374, tmp375, D.6817
// varargs-dll.c:1625:   int o = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 584]	// tmp376, D.6817.a.a
	str	w0, [sp, 92]	// tmp376, o
// varargs-dll.c:1626:   int p = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.26331, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2225, argv.__stack
	cmp	w1, 0	// D.26331,
	blt	.L3762		//,
	add	x1, x0, 15	// D.26336, iftmp.2225,
	and	x1, x1, -8	// D.26337, D.26336,
	str	x1, [sp, 104]	// D.26337, argv.__stack
	b	.L3763		//
.L3762:
	add	w2, w1, 8	// D.26339, D.26331,
	str	w2, [sp, 128]	// D.26339, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26341, argv.__gr_offs
	cmp	w2, 0	// D.26341,
	ble	.L3764		//,
	add	x1, x0, 15	// D.26344, iftmp.2225,
	and	x1, x1, -8	// D.26345, D.26344,
	str	x1, [sp, 104]	// D.26345, argv.__stack
	b	.L3763		//
.L3764:
	ldr	x2, [sp, 112]	// D.26347, argv.__gr_top
	sxtw	x0, w1	// D.26348, D.26331
	add	x0, x2, x0	// iftmp.2225, D.26347, D.26348
.L3763:
	ldr	x1, [x0]	// D.26349, *iftmp.2224_119
	add	x0, sp, 616	// tmp377,,
	ldp	q0, q1, [x1]	// tmp379, tmp380, *_425
	stp	q0, q1, [x0]	// tmp379, tmp380, D.6818
// varargs-dll.c:1626:   int p = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 636]	// tmp381, D.6818.b.b
	str	w0, [sp, 96]	// tmp381, p
// varargs-dll.c:1627:   int q = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.26350, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2227, argv.__stack
	cmp	w1, 0	// D.26350,
	blt	.L3766		//,
	add	x1, x0, 15	// D.26355, iftmp.2227,
	and	x1, x1, -8	// D.26356, D.26355,
	str	x1, [sp, 104]	// D.26356, argv.__stack
	b	.L3767		//
.L3766:
	add	w2, w1, 8	// D.26358, D.26350,
	str	w2, [sp, 128]	// D.26358, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.26360, argv.__gr_offs
	cmp	w2, 0	// D.26360,
	ble	.L3768		//,
	add	x1, x0, 15	// D.26363, iftmp.2227,
	and	x1, x1, -8	// D.26364, D.26363,
	str	x1, [sp, 104]	// D.26364, argv.__stack
	b	.L3767		//
.L3768:
	ldr	x2, [sp, 112]	// D.26366, argv.__gr_top
	sxtw	x0, w1	// D.26367, D.26350
	add	x0, x2, x0	// iftmp.2227, D.26366, D.26367
.L3767:
	ldr	x1, [x0]	// D.26368, *iftmp.2226_121
	add	x0, sp, 648	// tmp382,,
	ldp	q0, q1, [x1]	// tmp384, tmp385, *_444
	stp	q0, q1, [x0]	// tmp384, tmp385, D.6819
// varargs-dll.c:1627:   int q = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 648]	// tmp386, D.6819.a.a
	str	w0, [sp, 100]	// tmp386, q
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp387, a
	ldr	w0, [sp, 40]	// tmp388, b
	add	w1, w1, w0	// _1, tmp387, tmp388
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp389, c
	add	w1, w1, w0	// _2, _1, tmp389
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp390, d
	add	w1, w1, w0	// _3, _2, tmp390
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp391, e
	add	w1, w1, w0	// _4, _3, tmp391
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp392, f
	add	w1, w1, w0	// _5, _4, tmp392
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp393, g
	add	w1, w1, w0	// _6, _5, tmp393
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp394, h
	add	w1, w1, w0	// _7, _6, tmp394
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp395, i
	add	w1, w1, w0	// _8, _7, tmp395
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp396, j
	add	w1, w1, w0	// _9, _8, tmp396
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp397, k
	add	w1, w1, w0	// _10, _9, tmp397
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp398, l
	add	w1, w1, w0	// _11, _10, tmp398
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp399, m
	add	w1, w1, w0	// _12, _11, tmp399
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp400, n
	add	w1, w1, w0	// _13, _12, tmp400
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp401, o
	add	w1, w1, w0	// _14, _13, tmp401
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp402, p
	add	w1, w1, w0	// _15, _14, tmp402
// varargs-dll.c:1629:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp403, q
	add	w0, w1, w0	// _53, _15, tmp403
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:1630: }
	adrp	x0, :got:__stack_chk_guard	// tmp406,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp405, tmp406,
	ldr	x3, [sp, 680]	// tmp408, D.26369
	ldr	x2, [x0]	// tmp409,
	subs	x3, x3, x2	// tmp408, tmp409
	mov	x2, 0	// tmp409
	beq	.L3771		//,
	bl	__stack_chk_fail		//
.L3771:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 880	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE102:
	.size	use_va_args_many_hva_2_short_vector_16_bytes, .-use_va_args_many_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_list_many_hva_2_short_vector_16_bytes
	.type	use_va_list_many_hva_2_short_vector_16_bytes, %function
use_va_list_many_hva_2_short_vector_16_bytes:
.LFB103:
	.cfi_startproc
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
	str	x19, [sp]	//,
	.cfi_offset 19, -656
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:1635:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26373, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2229, argv.__stack
	cmp	w1, 0	// D.26373,
	blt	.L3773		//,
	add	x1, x0, 15	// D.26378, iftmp.2229,
	and	x1, x1, -8	// D.26379, D.26378,
	str	x1, [x19]	// D.26379, argv.__stack
	b	.L3774		//
.L3773:
	add	w2, w1, 8	// D.26381, D.26373,
	str	w2, [x19, 24]	// D.26381, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26383, argv.__gr_offs
	cmp	w2, 0	// D.26383,
	ble	.L3775		//,
	add	x1, x0, 15	// D.26386, iftmp.2229,
	and	x1, x1, -8	// D.26387, D.26386,
	str	x1, [x19]	// D.26387, argv.__stack
	b	.L3774		//
.L3775:
	ldr	x2, [x19, 8]	// D.26389, argv.__gr_top
	sxtw	x0, w1	// D.26390, D.26373
	add	x0, x2, x0	// iftmp.2229, D.26389, D.26390
.L3774:
	ldr	x1, [x0]	// D.26391, *iftmp.2228_86
	add	x0, sp, 112	// tmp297,,
	ldp	q0, q1, [x1]	// tmp299, tmp300, *_137
	stp	q0, q1, [x0]	// tmp299, tmp300, D.6823
// varargs-dll.c:1635:   int a = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 112]	// tmp301, D.6823.a.a
	str	w0, [sp, 44]	// tmp301, a
// varargs-dll.c:1636:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26392, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2231, argv.__stack
	cmp	w1, 0	// D.26392,
	blt	.L3777		//,
	add	x1, x0, 15	// D.26397, iftmp.2231,
	and	x1, x1, -8	// D.26398, D.26397,
	str	x1, [x19]	// D.26398, argv.__stack
	b	.L3778		//
.L3777:
	add	w2, w1, 8	// D.26400, D.26392,
	str	w2, [x19, 24]	// D.26400, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26402, argv.__gr_offs
	cmp	w2, 0	// D.26402,
	ble	.L3779		//,
	add	x1, x0, 15	// D.26405, iftmp.2231,
	and	x1, x1, -8	// D.26406, D.26405,
	str	x1, [x19]	// D.26406, argv.__stack
	b	.L3778		//
.L3779:
	ldr	x2, [x19, 8]	// D.26408, argv.__gr_top
	sxtw	x0, w1	// D.26409, D.26392
	add	x0, x2, x0	// iftmp.2231, D.26408, D.26409
.L3778:
	ldr	x1, [x0]	// D.26410, *iftmp.2230_88
	add	x0, sp, 144	// tmp302,,
	ldp	q0, q1, [x1]	// tmp304, tmp305, *_156
	stp	q0, q1, [x0]	// tmp304, tmp305, D.6824
// varargs-dll.c:1636:   int b = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 164]	// tmp306, D.6824.b.b
	str	w0, [sp, 48]	// tmp306, b
// varargs-dll.c:1637:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26411, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2233, argv.__stack
	cmp	w1, 0	// D.26411,
	blt	.L3781		//,
	add	x1, x0, 15	// D.26416, iftmp.2233,
	and	x1, x1, -8	// D.26417, D.26416,
	str	x1, [x19]	// D.26417, argv.__stack
	b	.L3782		//
.L3781:
	add	w2, w1, 8	// D.26419, D.26411,
	str	w2, [x19, 24]	// D.26419, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26421, argv.__gr_offs
	cmp	w2, 0	// D.26421,
	ble	.L3783		//,
	add	x1, x0, 15	// D.26424, iftmp.2233,
	and	x1, x1, -8	// D.26425, D.26424,
	str	x1, [x19]	// D.26425, argv.__stack
	b	.L3782		//
.L3783:
	ldr	x2, [x19, 8]	// D.26427, argv.__gr_top
	sxtw	x0, w1	// D.26428, D.26411
	add	x0, x2, x0	// iftmp.2233, D.26427, D.26428
.L3782:
	ldr	x1, [x0]	// D.26429, *iftmp.2232_90
	add	x0, sp, 176	// tmp307,,
	ldp	q0, q1, [x1]	// tmp309, tmp310, *_175
	stp	q0, q1, [x0]	// tmp309, tmp310, D.6825
// varargs-dll.c:1637:   int c = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 176]	// tmp311, D.6825.a.a
	str	w0, [sp, 52]	// tmp311, c
// varargs-dll.c:1638:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26430, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2235, argv.__stack
	cmp	w1, 0	// D.26430,
	blt	.L3785		//,
	add	x1, x0, 15	// D.26435, iftmp.2235,
	and	x1, x1, -8	// D.26436, D.26435,
	str	x1, [x19]	// D.26436, argv.__stack
	b	.L3786		//
.L3785:
	add	w2, w1, 8	// D.26438, D.26430,
	str	w2, [x19, 24]	// D.26438, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26440, argv.__gr_offs
	cmp	w2, 0	// D.26440,
	ble	.L3787		//,
	add	x1, x0, 15	// D.26443, iftmp.2235,
	and	x1, x1, -8	// D.26444, D.26443,
	str	x1, [x19]	// D.26444, argv.__stack
	b	.L3786		//
.L3787:
	ldr	x2, [x19, 8]	// D.26446, argv.__gr_top
	sxtw	x0, w1	// D.26447, D.26430
	add	x0, x2, x0	// iftmp.2235, D.26446, D.26447
.L3786:
	ldr	x1, [x0]	// D.26448, *iftmp.2234_92
	add	x0, sp, 208	// tmp312,,
	ldp	q0, q1, [x1]	// tmp314, tmp315, *_194
	stp	q0, q1, [x0]	// tmp314, tmp315, D.6826
// varargs-dll.c:1638:   int d = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 228]	// tmp316, D.6826.b.b
	str	w0, [sp, 56]	// tmp316, d
// varargs-dll.c:1639:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26449, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2237, argv.__stack
	cmp	w1, 0	// D.26449,
	blt	.L3789		//,
	add	x1, x0, 15	// D.26454, iftmp.2237,
	and	x1, x1, -8	// D.26455, D.26454,
	str	x1, [x19]	// D.26455, argv.__stack
	b	.L3790		//
.L3789:
	add	w2, w1, 8	// D.26457, D.26449,
	str	w2, [x19, 24]	// D.26457, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26459, argv.__gr_offs
	cmp	w2, 0	// D.26459,
	ble	.L3791		//,
	add	x1, x0, 15	// D.26462, iftmp.2237,
	and	x1, x1, -8	// D.26463, D.26462,
	str	x1, [x19]	// D.26463, argv.__stack
	b	.L3790		//
.L3791:
	ldr	x2, [x19, 8]	// D.26465, argv.__gr_top
	sxtw	x0, w1	// D.26466, D.26449
	add	x0, x2, x0	// iftmp.2237, D.26465, D.26466
.L3790:
	ldr	x1, [x0]	// D.26467, *iftmp.2236_94
	add	x0, sp, 240	// tmp317,,
	ldp	q0, q1, [x1]	// tmp319, tmp320, *_213
	stp	q0, q1, [x0]	// tmp319, tmp320, D.6827
// varargs-dll.c:1639:   int e = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 240]	// tmp321, D.6827.a.a
	str	w0, [sp, 60]	// tmp321, e
// varargs-dll.c:1640:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26468, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2239, argv.__stack
	cmp	w1, 0	// D.26468,
	blt	.L3793		//,
	add	x1, x0, 15	// D.26473, iftmp.2239,
	and	x1, x1, -8	// D.26474, D.26473,
	str	x1, [x19]	// D.26474, argv.__stack
	b	.L3794		//
.L3793:
	add	w2, w1, 8	// D.26476, D.26468,
	str	w2, [x19, 24]	// D.26476, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26478, argv.__gr_offs
	cmp	w2, 0	// D.26478,
	ble	.L3795		//,
	add	x1, x0, 15	// D.26481, iftmp.2239,
	and	x1, x1, -8	// D.26482, D.26481,
	str	x1, [x19]	// D.26482, argv.__stack
	b	.L3794		//
.L3795:
	ldr	x2, [x19, 8]	// D.26484, argv.__gr_top
	sxtw	x0, w1	// D.26485, D.26468
	add	x0, x2, x0	// iftmp.2239, D.26484, D.26485
.L3794:
	ldr	x1, [x0]	// D.26486, *iftmp.2238_96
	add	x0, sp, 272	// tmp322,,
	ldp	q0, q1, [x1]	// tmp324, tmp325, *_232
	stp	q0, q1, [x0]	// tmp324, tmp325, D.6828
// varargs-dll.c:1640:   int f = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 292]	// tmp326, D.6828.b.b
	str	w0, [sp, 64]	// tmp326, f
// varargs-dll.c:1641:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26487, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2241, argv.__stack
	cmp	w1, 0	// D.26487,
	blt	.L3797		//,
	add	x1, x0, 15	// D.26492, iftmp.2241,
	and	x1, x1, -8	// D.26493, D.26492,
	str	x1, [x19]	// D.26493, argv.__stack
	b	.L3798		//
.L3797:
	add	w2, w1, 8	// D.26495, D.26487,
	str	w2, [x19, 24]	// D.26495, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26497, argv.__gr_offs
	cmp	w2, 0	// D.26497,
	ble	.L3799		//,
	add	x1, x0, 15	// D.26500, iftmp.2241,
	and	x1, x1, -8	// D.26501, D.26500,
	str	x1, [x19]	// D.26501, argv.__stack
	b	.L3798		//
.L3799:
	ldr	x2, [x19, 8]	// D.26503, argv.__gr_top
	sxtw	x0, w1	// D.26504, D.26487
	add	x0, x2, x0	// iftmp.2241, D.26503, D.26504
.L3798:
	ldr	x1, [x0]	// D.26505, *iftmp.2240_98
	add	x0, sp, 304	// tmp327,,
	ldp	q0, q1, [x1]	// tmp329, tmp330, *_251
	stp	q0, q1, [x0]	// tmp329, tmp330, D.6829
// varargs-dll.c:1641:   int g = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 304]	// tmp331, D.6829.a.a
	str	w0, [sp, 68]	// tmp331, g
// varargs-dll.c:1642:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26506, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2243, argv.__stack
	cmp	w1, 0	// D.26506,
	blt	.L3801		//,
	add	x1, x0, 15	// D.26511, iftmp.2243,
	and	x1, x1, -8	// D.26512, D.26511,
	str	x1, [x19]	// D.26512, argv.__stack
	b	.L3802		//
.L3801:
	add	w2, w1, 8	// D.26514, D.26506,
	str	w2, [x19, 24]	// D.26514, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26516, argv.__gr_offs
	cmp	w2, 0	// D.26516,
	ble	.L3803		//,
	add	x1, x0, 15	// D.26519, iftmp.2243,
	and	x1, x1, -8	// D.26520, D.26519,
	str	x1, [x19]	// D.26520, argv.__stack
	b	.L3802		//
.L3803:
	ldr	x2, [x19, 8]	// D.26522, argv.__gr_top
	sxtw	x0, w1	// D.26523, D.26506
	add	x0, x2, x0	// iftmp.2243, D.26522, D.26523
.L3802:
	ldr	x1, [x0]	// D.26524, *iftmp.2242_100
	add	x0, sp, 336	// tmp332,,
	ldp	q0, q1, [x1]	// tmp334, tmp335, *_270
	stp	q0, q1, [x0]	// tmp334, tmp335, D.6830
// varargs-dll.c:1642:   int h = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 356]	// tmp336, D.6830.b.b
	str	w0, [sp, 72]	// tmp336, h
// varargs-dll.c:1643:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26525, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2245, argv.__stack
	cmp	w1, 0	// D.26525,
	blt	.L3805		//,
	add	x1, x0, 15	// D.26530, iftmp.2245,
	and	x1, x1, -8	// D.26531, D.26530,
	str	x1, [x19]	// D.26531, argv.__stack
	b	.L3806		//
.L3805:
	add	w2, w1, 8	// D.26533, D.26525,
	str	w2, [x19, 24]	// D.26533, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26535, argv.__gr_offs
	cmp	w2, 0	// D.26535,
	ble	.L3807		//,
	add	x1, x0, 15	// D.26538, iftmp.2245,
	and	x1, x1, -8	// D.26539, D.26538,
	str	x1, [x19]	// D.26539, argv.__stack
	b	.L3806		//
.L3807:
	ldr	x2, [x19, 8]	// D.26541, argv.__gr_top
	sxtw	x0, w1	// D.26542, D.26525
	add	x0, x2, x0	// iftmp.2245, D.26541, D.26542
.L3806:
	ldr	x1, [x0]	// D.26543, *iftmp.2244_102
	add	x0, sp, 368	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_289
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6831
// varargs-dll.c:1643:   int i = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 368]	// tmp341, D.6831.a.a
	str	w0, [sp, 76]	// tmp341, i
// varargs-dll.c:1644:   int j = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26544, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2247, argv.__stack
	cmp	w1, 0	// D.26544,
	blt	.L3809		//,
	add	x1, x0, 15	// D.26549, iftmp.2247,
	and	x1, x1, -8	// D.26550, D.26549,
	str	x1, [x19]	// D.26550, argv.__stack
	b	.L3810		//
.L3809:
	add	w2, w1, 8	// D.26552, D.26544,
	str	w2, [x19, 24]	// D.26552, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26554, argv.__gr_offs
	cmp	w2, 0	// D.26554,
	ble	.L3811		//,
	add	x1, x0, 15	// D.26557, iftmp.2247,
	and	x1, x1, -8	// D.26558, D.26557,
	str	x1, [x19]	// D.26558, argv.__stack
	b	.L3810		//
.L3811:
	ldr	x2, [x19, 8]	// D.26560, argv.__gr_top
	sxtw	x0, w1	// D.26561, D.26544
	add	x0, x2, x0	// iftmp.2247, D.26560, D.26561
.L3810:
	ldr	x1, [x0]	// D.26562, *iftmp.2246_104
	add	x0, sp, 400	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_308
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6832
// varargs-dll.c:1644:   int j = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 420]	// tmp346, D.6832.b.b
	str	w0, [sp, 80]	// tmp346, j
// varargs-dll.c:1645:   int k = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26563, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2249, argv.__stack
	cmp	w1, 0	// D.26563,
	blt	.L3813		//,
	add	x1, x0, 15	// D.26568, iftmp.2249,
	and	x1, x1, -8	// D.26569, D.26568,
	str	x1, [x19]	// D.26569, argv.__stack
	b	.L3814		//
.L3813:
	add	w2, w1, 8	// D.26571, D.26563,
	str	w2, [x19, 24]	// D.26571, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26573, argv.__gr_offs
	cmp	w2, 0	// D.26573,
	ble	.L3815		//,
	add	x1, x0, 15	// D.26576, iftmp.2249,
	and	x1, x1, -8	// D.26577, D.26576,
	str	x1, [x19]	// D.26577, argv.__stack
	b	.L3814		//
.L3815:
	ldr	x2, [x19, 8]	// D.26579, argv.__gr_top
	sxtw	x0, w1	// D.26580, D.26563
	add	x0, x2, x0	// iftmp.2249, D.26579, D.26580
.L3814:
	ldr	x1, [x0]	// D.26581, *iftmp.2248_106
	add	x0, sp, 432	// tmp347,,
	ldp	q0, q1, [x1]	// tmp349, tmp350, *_327
	stp	q0, q1, [x0]	// tmp349, tmp350, D.6833
// varargs-dll.c:1645:   int k = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 432]	// tmp351, D.6833.a.a
	str	w0, [sp, 84]	// tmp351, k
// varargs-dll.c:1646:   int l = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26582, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2251, argv.__stack
	cmp	w1, 0	// D.26582,
	blt	.L3817		//,
	add	x1, x0, 15	// D.26587, iftmp.2251,
	and	x1, x1, -8	// D.26588, D.26587,
	str	x1, [x19]	// D.26588, argv.__stack
	b	.L3818		//
.L3817:
	add	w2, w1, 8	// D.26590, D.26582,
	str	w2, [x19, 24]	// D.26590, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26592, argv.__gr_offs
	cmp	w2, 0	// D.26592,
	ble	.L3819		//,
	add	x1, x0, 15	// D.26595, iftmp.2251,
	and	x1, x1, -8	// D.26596, D.26595,
	str	x1, [x19]	// D.26596, argv.__stack
	b	.L3818		//
.L3819:
	ldr	x2, [x19, 8]	// D.26598, argv.__gr_top
	sxtw	x0, w1	// D.26599, D.26582
	add	x0, x2, x0	// iftmp.2251, D.26598, D.26599
.L3818:
	ldr	x1, [x0]	// D.26600, *iftmp.2250_108
	add	x0, sp, 464	// tmp352,,
	ldp	q0, q1, [x1]	// tmp354, tmp355, *_346
	stp	q0, q1, [x0]	// tmp354, tmp355, D.6834
// varargs-dll.c:1646:   int l = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 484]	// tmp356, D.6834.b.b
	str	w0, [sp, 88]	// tmp356, l
// varargs-dll.c:1647:   int m = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26601, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2253, argv.__stack
	cmp	w1, 0	// D.26601,
	blt	.L3821		//,
	add	x1, x0, 15	// D.26606, iftmp.2253,
	and	x1, x1, -8	// D.26607, D.26606,
	str	x1, [x19]	// D.26607, argv.__stack
	b	.L3822		//
.L3821:
	add	w2, w1, 8	// D.26609, D.26601,
	str	w2, [x19, 24]	// D.26609, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26611, argv.__gr_offs
	cmp	w2, 0	// D.26611,
	ble	.L3823		//,
	add	x1, x0, 15	// D.26614, iftmp.2253,
	and	x1, x1, -8	// D.26615, D.26614,
	str	x1, [x19]	// D.26615, argv.__stack
	b	.L3822		//
.L3823:
	ldr	x2, [x19, 8]	// D.26617, argv.__gr_top
	sxtw	x0, w1	// D.26618, D.26601
	add	x0, x2, x0	// iftmp.2253, D.26617, D.26618
.L3822:
	ldr	x1, [x0]	// D.26619, *iftmp.2252_110
	add	x0, sp, 496	// tmp357,,
	ldp	q0, q1, [x1]	// tmp359, tmp360, *_365
	stp	q0, q1, [x0]	// tmp359, tmp360, D.6835
// varargs-dll.c:1647:   int m = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 496]	// tmp361, D.6835.a.a
	str	w0, [sp, 92]	// tmp361, m
// varargs-dll.c:1648:   int n = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26620, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2255, argv.__stack
	cmp	w1, 0	// D.26620,
	blt	.L3825		//,
	add	x1, x0, 15	// D.26625, iftmp.2255,
	and	x1, x1, -8	// D.26626, D.26625,
	str	x1, [x19]	// D.26626, argv.__stack
	b	.L3826		//
.L3825:
	add	w2, w1, 8	// D.26628, D.26620,
	str	w2, [x19, 24]	// D.26628, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26630, argv.__gr_offs
	cmp	w2, 0	// D.26630,
	ble	.L3827		//,
	add	x1, x0, 15	// D.26633, iftmp.2255,
	and	x1, x1, -8	// D.26634, D.26633,
	str	x1, [x19]	// D.26634, argv.__stack
	b	.L3826		//
.L3827:
	ldr	x2, [x19, 8]	// D.26636, argv.__gr_top
	sxtw	x0, w1	// D.26637, D.26620
	add	x0, x2, x0	// iftmp.2255, D.26636, D.26637
.L3826:
	ldr	x1, [x0]	// D.26638, *iftmp.2254_112
	add	x0, sp, 528	// tmp362,,
	ldp	q0, q1, [x1]	// tmp364, tmp365, *_384
	stp	q0, q1, [x0]	// tmp364, tmp365, D.6836
// varargs-dll.c:1648:   int n = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 548]	// tmp366, D.6836.b.b
	str	w0, [sp, 96]	// tmp366, n
// varargs-dll.c:1649:   int o = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26639, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2257, argv.__stack
	cmp	w1, 0	// D.26639,
	blt	.L3829		//,
	add	x1, x0, 15	// D.26644, iftmp.2257,
	and	x1, x1, -8	// D.26645, D.26644,
	str	x1, [x19]	// D.26645, argv.__stack
	b	.L3830		//
.L3829:
	add	w2, w1, 8	// D.26647, D.26639,
	str	w2, [x19, 24]	// D.26647, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26649, argv.__gr_offs
	cmp	w2, 0	// D.26649,
	ble	.L3831		//,
	add	x1, x0, 15	// D.26652, iftmp.2257,
	and	x1, x1, -8	// D.26653, D.26652,
	str	x1, [x19]	// D.26653, argv.__stack
	b	.L3830		//
.L3831:
	ldr	x2, [x19, 8]	// D.26655, argv.__gr_top
	sxtw	x0, w1	// D.26656, D.26639
	add	x0, x2, x0	// iftmp.2257, D.26655, D.26656
.L3830:
	ldr	x1, [x0]	// D.26657, *iftmp.2256_114
	add	x0, sp, 560	// tmp367,,
	ldp	q0, q1, [x1]	// tmp369, tmp370, *_403
	stp	q0, q1, [x0]	// tmp369, tmp370, D.6837
// varargs-dll.c:1649:   int o = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 560]	// tmp371, D.6837.a.a
	str	w0, [sp, 100]	// tmp371, o
// varargs-dll.c:1650:   int p = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26658, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2259, argv.__stack
	cmp	w1, 0	// D.26658,
	blt	.L3833		//,
	add	x1, x0, 15	// D.26663, iftmp.2259,
	and	x1, x1, -8	// D.26664, D.26663,
	str	x1, [x19]	// D.26664, argv.__stack
	b	.L3834		//
.L3833:
	add	w2, w1, 8	// D.26666, D.26658,
	str	w2, [x19, 24]	// D.26666, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26668, argv.__gr_offs
	cmp	w2, 0	// D.26668,
	ble	.L3835		//,
	add	x1, x0, 15	// D.26671, iftmp.2259,
	and	x1, x1, -8	// D.26672, D.26671,
	str	x1, [x19]	// D.26672, argv.__stack
	b	.L3834		//
.L3835:
	ldr	x2, [x19, 8]	// D.26674, argv.__gr_top
	sxtw	x0, w1	// D.26675, D.26658
	add	x0, x2, x0	// iftmp.2259, D.26674, D.26675
.L3834:
	ldr	x1, [x0]	// D.26676, *iftmp.2258_116
	add	x0, sp, 592	// tmp372,,
	ldp	q0, q1, [x1]	// tmp374, tmp375, *_422
	stp	q0, q1, [x0]	// tmp374, tmp375, D.6838
// varargs-dll.c:1650:   int p = va_arg (argv, struct hva_2_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 612]	// tmp376, D.6838.b.b
	str	w0, [sp, 104]	// tmp376, p
// varargs-dll.c:1651:   int q = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26677, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2261, argv.__stack
	cmp	w1, 0	// D.26677,
	blt	.L3837		//,
	add	x1, x0, 15	// D.26682, iftmp.2261,
	and	x1, x1, -8	// D.26683, D.26682,
	str	x1, [x19]	// D.26683, argv.__stack
	b	.L3838		//
.L3837:
	add	w2, w1, 8	// D.26685, D.26677,
	str	w2, [x19, 24]	// D.26685, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26687, argv.__gr_offs
	cmp	w2, 0	// D.26687,
	ble	.L3839		//,
	add	x1, x0, 15	// D.26690, iftmp.2261,
	and	x1, x1, -8	// D.26691, D.26690,
	str	x1, [x19]	// D.26691, argv.__stack
	b	.L3838		//
.L3839:
	ldr	x2, [x19, 8]	// D.26693, argv.__gr_top
	sxtw	x0, w1	// D.26694, D.26677
	add	x0, x2, x0	// iftmp.2261, D.26693, D.26694
.L3838:
	ldr	x1, [x0]	// D.26695, *iftmp.2260_118
	add	x0, sp, 624	// tmp377,,
	ldp	q0, q1, [x1]	// tmp379, tmp380, *_441
	stp	q0, q1, [x0]	// tmp379, tmp380, D.6839
// varargs-dll.c:1651:   int q = va_arg (argv, struct hva_2_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 624]	// tmp381, D.6839.a.a
	str	w0, [sp, 108]	// tmp381, q
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp382, a
	ldr	w0, [sp, 48]	// tmp383, b
	add	w1, w1, w0	// _1, tmp382, tmp383
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp384, c
	add	w1, w1, w0	// _2, _1, tmp384
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp385, d
	add	w1, w1, w0	// _3, _2, tmp385
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp386, e
	add	w1, w1, w0	// _4, _3, tmp386
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp387, f
	add	w1, w1, w0	// _5, _4, tmp387
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp388, g
	add	w1, w1, w0	// _6, _5, tmp388
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp389, h
	add	w1, w1, w0	// _7, _6, tmp389
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp390, i
	add	w1, w1, w0	// _8, _7, tmp390
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp391, j
	add	w1, w1, w0	// _9, _8, tmp391
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp392, k
	add	w1, w1, w0	// _10, _9, tmp392
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp393, l
	add	w1, w1, w0	// _11, _10, tmp393
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp394, m
	add	w1, w1, w0	// _12, _11, tmp394
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp395, n
	add	w1, w1, w0	// _13, _12, tmp395
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp396, o
	add	w1, w1, w0	// _14, _13, tmp396
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp397, p
	add	w1, w1, w0	// _15, _14, tmp397
// varargs-dll.c:1652:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp398, q
	add	w0, w1, w0	// _51, _15, tmp398
// varargs-dll.c:1653: }
	ldr	x19, [sp]	//,
	add	sp, sp, 656	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE103:
	.size	use_va_list_many_hva_2_short_vector_16_bytes, .-use_va_list_many_hva_2_short_vector_16_bytes
	.align	2
	.global	use_va_args_few_hva_4_short_vector_16_bytes
	.type	use_va_args_few_hva_4_short_vector_16_bytes, %function
use_va_args_few_hva_4_short_vector_16_bytes:
.LFB104:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 344]	//,
	str	x2, [sp, 352]	//,
	str	x3, [sp, 360]	//,
	str	x4, [sp, 368]	//,
	str	x5, [sp, 376]	//,
	str	x6, [sp, 384]	//,
	str	x7, [sp, 392]	//,
	str	q0, [sp, 208]	//,
	str	q1, [sp, 224]	//,
	str	q2, [sp, 240]	//,
	str	q3, [sp, 256]	//,
	str	q4, [sp, 272]	//,
	str	q5, [sp, 288]	//,
	str	q6, [sp, 304]	//,
	str	q7, [sp, 320]	//,
// varargs-dll.c:1657: {
	adrp	x0, :got:__stack_chk_guard	// tmp117,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp116, tmp117,
	ldr	x1, [x0]	// tmp141,
	str	x1, [sp, 200]	// tmp141, D.26734
	mov	x1, 0	// tmp141
// varargs-dll.c:1659:   va_start (argv, format);
	add	x0, sp, 400	// tmp146,,
	str	x0, [sp, 40]	// tmp146, MEM[(struct  *)&argv].__stack
	add	x0, sp, 400	// tmp147,,
	str	x0, [sp, 48]	// tmp147, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 336	// tmp119,,
	str	x0, [sp, 56]	// tmp119, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp120,
	str	w0, [sp, 64]	// tmp120, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp121,
	str	w0, [sp, 68]	// tmp121, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1660:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 64]	// D.26696, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2263, argv.__stack
	cmp	w1, 0	// D.26696,
	blt	.L3843		//,
	add	x1, x0, 15	// D.26701, iftmp.2263,
	and	x1, x1, -8	// D.26702, D.26701,
	str	x1, [sp, 40]	// D.26702, argv.__stack
	b	.L3844		//
.L3843:
	add	w2, w1, 8	// D.26704, D.26696,
	str	w2, [sp, 64]	// D.26704, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.26706, argv.__gr_offs
	cmp	w2, 0	// D.26706,
	ble	.L3845		//,
	add	x1, x0, 15	// D.26709, iftmp.2263,
	and	x1, x1, -8	// D.26710, D.26709,
	str	x1, [sp, 40]	// D.26710, argv.__stack
	b	.L3844		//
.L3845:
	ldr	x2, [sp, 48]	// D.26712, argv.__gr_top
	sxtw	x0, w1	// D.26713, D.26696
	add	x0, x2, x0	// iftmp.2263, D.26712, D.26713
.L3844:
	ldr	x1, [x0]	// D.26714, *iftmp.2262_14
	add	x0, sp, 72	// tmp122,,
	ldp	q0, q1, [x1]	// tmp124, tmp125, *_35
	stp	q0, q1, [x0]	// tmp124, tmp125, D.6842
	ldp	q0, q1, [x1, 32]	// tmp126, tmp127, *_35
	stp	q0, q1, [x0, 32]	// tmp126, tmp127, D.6842
// varargs-dll.c:1660:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 72]	// tmp128, D.6842.a.a
	str	w0, [sp, 32]	// tmp128, a
// varargs-dll.c:1661:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 64]	// D.26715, argv.__gr_offs
	ldr	x0, [sp, 40]	// iftmp.2265, argv.__stack
	cmp	w1, 0	// D.26715,
	blt	.L3847		//,
	add	x1, x0, 15	// D.26720, iftmp.2265,
	and	x1, x1, -8	// D.26721, D.26720,
	str	x1, [sp, 40]	// D.26721, argv.__stack
	b	.L3848		//
.L3847:
	add	w2, w1, 8	// D.26723, D.26715,
	str	w2, [sp, 64]	// D.26723, argv.__gr_offs
	ldr	w2, [sp, 64]	// D.26725, argv.__gr_offs
	cmp	w2, 0	// D.26725,
	ble	.L3849		//,
	add	x1, x0, 15	// D.26728, iftmp.2265,
	and	x1, x1, -8	// D.26729, D.26728,
	str	x1, [sp, 40]	// D.26729, argv.__stack
	b	.L3848		//
.L3849:
	ldr	x2, [sp, 48]	// D.26731, argv.__gr_top
	sxtw	x0, w1	// D.26732, D.26715
	add	x0, x2, x0	// iftmp.2265, D.26731, D.26732
.L3848:
	ldr	x1, [x0]	// D.26733, *iftmp.2264_16
	add	x0, sp, 136	// tmp129,,
	ldp	q0, q1, [x1]	// tmp131, tmp132, *_54
	stp	q0, q1, [x0]	// tmp131, tmp132, D.6843
	ldp	q0, q1, [x1, 32]	// tmp133, tmp134, *_54
	stp	q0, q1, [x0, 32]	// tmp133, tmp134, D.6843
// varargs-dll.c:1661:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 156]	// tmp135, D.6843.b.b
	str	w0, [sp, 36]	// tmp135, b
// varargs-dll.c:1663:   return a + b;
	ldr	w1, [sp, 32]	// tmp136, a
	ldr	w0, [sp, 36]	// tmp137, b
	add	w0, w1, w0	// _8, tmp136, tmp137
	mov	w1, w0	// <retval>, _8
// varargs-dll.c:1664: }
	adrp	x0, :got:__stack_chk_guard	// tmp140,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp139, tmp140,
	ldr	x3, [sp, 200]	// tmp142, D.26734
	ldr	x2, [x0]	// tmp143,
	subs	x3, x3, x2	// tmp142, tmp143
	mov	x2, 0	// tmp143
	beq	.L3852		//,
	bl	__stack_chk_fail		//
.L3852:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE104:
	.size	use_va_args_few_hva_4_short_vector_16_bytes, .-use_va_args_few_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_list_few_hva_4_short_vector_16_bytes
	.type	use_va_list_few_hva_4_short_vector_16_bytes, %function
use_va_list_few_hva_4_short_vector_16_bytes:
.LFB105:
	.cfi_startproc
	str	x19, [sp, -176]!	//,
	.cfi_def_cfa_offset 176
	.cfi_offset 19, -176
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp116,
// varargs-dll.c:1669:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26738, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2267, argv.__stack
	cmp	w1, 0	// D.26738,
	blt	.L3854		//,
	add	x1, x0, 15	// D.26743, iftmp.2267,
	and	x1, x1, -8	// D.26744, D.26743,
	str	x1, [x19]	// D.26744, argv.__stack
	b	.L3855		//
.L3854:
	add	w2, w1, 8	// D.26746, D.26738,
	str	w2, [x19, 24]	// D.26746, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26748, argv.__gr_offs
	cmp	w2, 0	// D.26748,
	ble	.L3856		//,
	add	x1, x0, 15	// D.26751, iftmp.2267,
	and	x1, x1, -8	// D.26752, D.26751,
	str	x1, [x19]	// D.26752, argv.__stack
	b	.L3855		//
.L3856:
	ldr	x2, [x19, 8]	// D.26754, argv.__gr_top
	sxtw	x0, w1	// D.26755, D.26738
	add	x0, x2, x0	// iftmp.2267, D.26754, D.26755
.L3855:
	ldr	x1, [x0]	// D.26756, *iftmp.2266_11
	add	x0, sp, 48	// tmp117,,
	ldp	q0, q1, [x1]	// tmp119, tmp120, *_32
	stp	q0, q1, [x0]	// tmp119, tmp120, D.6847
	ldp	q0, q1, [x1, 32]	// tmp121, tmp122, *_32
	stp	q0, q1, [x0, 32]	// tmp121, tmp122, D.6847
// varargs-dll.c:1669:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 48]	// tmp123, D.6847.a.a
	str	w0, [sp, 40]	// tmp123, a
// varargs-dll.c:1670:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26757, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2269, argv.__stack
	cmp	w1, 0	// D.26757,
	blt	.L3858		//,
	add	x1, x0, 15	// D.26762, iftmp.2269,
	and	x1, x1, -8	// D.26763, D.26762,
	str	x1, [x19]	// D.26763, argv.__stack
	b	.L3859		//
.L3858:
	add	w2, w1, 8	// D.26765, D.26757,
	str	w2, [x19, 24]	// D.26765, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26767, argv.__gr_offs
	cmp	w2, 0	// D.26767,
	ble	.L3860		//,
	add	x1, x0, 15	// D.26770, iftmp.2269,
	and	x1, x1, -8	// D.26771, D.26770,
	str	x1, [x19]	// D.26771, argv.__stack
	b	.L3859		//
.L3860:
	ldr	x2, [x19, 8]	// D.26773, argv.__gr_top
	sxtw	x0, w1	// D.26774, D.26757
	add	x0, x2, x0	// iftmp.2269, D.26773, D.26774
.L3859:
	ldr	x1, [x0]	// D.26775, *iftmp.2268_13
	add	x0, sp, 112	// tmp124,,
	ldp	q0, q1, [x1]	// tmp126, tmp127, *_51
	stp	q0, q1, [x0]	// tmp126, tmp127, D.6848
	ldp	q0, q1, [x1, 32]	// tmp128, tmp129, *_51
	stp	q0, q1, [x0, 32]	// tmp128, tmp129, D.6848
// varargs-dll.c:1670:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 132]	// tmp130, D.6848.b.b
	str	w0, [sp, 44]	// tmp130, b
// varargs-dll.c:1671:   return a + b;
	ldr	w1, [sp, 40]	// tmp131, a
	ldr	w0, [sp, 44]	// tmp132, b
	add	w0, w1, w0	// _6, tmp131, tmp132
// varargs-dll.c:1672: }
	ldr	x19, [sp], 176	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE105:
	.size	use_va_list_few_hva_4_short_vector_16_bytes, .-use_va_list_few_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_args_several_hva_4_short_vector_16_bytes
	.type	use_va_args_several_hva_4_short_vector_16_bytes, %function
use_va_args_several_hva_4_short_vector_16_bytes:
.LFB106:
	.cfi_startproc
	sub	sp, sp, #880	//,,
	.cfi_def_cfa_offset 880
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -880
	.cfi_offset 30, -872
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 824]	//,
	str	x2, [sp, 832]	//,
	str	x3, [sp, 840]	//,
	str	x4, [sp, 848]	//,
	str	x5, [sp, 856]	//,
	str	x6, [sp, 864]	//,
	str	x7, [sp, 872]	//,
	add	x0, sp, 512	// tmp286,,
	str	q0, [x0, 176]	//,
	add	x0, sp, 512	// tmp288,,
	str	q1, [x0, 192]	//,
	add	x0, sp, 512	// tmp290,,
	str	q2, [x0, 208]	//,
	add	x0, sp, 512	// tmp292,,
	str	q3, [x0, 224]	//,
	add	x0, sp, 512	// tmp294,,
	str	q4, [x0, 240]	//,
	add	x0, sp, 1024	// tmp296,,
	str	q5, [x0, -256]	//,
	add	x0, sp, 1024	// tmp298,,
	str	q6, [x0, -240]	//,
	add	x0, sp, 1024	// tmp300,,
	str	q7, [x0, -224]	//,
// varargs-dll.c:1676: {
	adrp	x0, :got:__stack_chk_guard	// tmp201,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp200, tmp201,
	ldr	x1, [x0]	// tmp281,
	str	x1, [sp, 680]	// tmp281, D.26947
	mov	x1, 0	// tmp281
// varargs-dll.c:1678:   va_start (argv, format);
	add	x0, sp, 880	// tmp302,,
	str	x0, [sp, 72]	// tmp302, MEM[(struct  *)&argv].__stack
	add	x0, sp, 880	// tmp303,,
	str	x0, [sp, 80]	// tmp303, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 816	// tmp203,,
	str	x0, [sp, 88]	// tmp203, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp204,
	str	w0, [sp, 96]	// tmp204, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp205,
	str	w0, [sp, 100]	// tmp205, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1679:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.26776, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2271, argv.__stack
	cmp	w1, 0	// D.26776,
	blt	.L3864		//,
	add	x1, x0, 15	// D.26781, iftmp.2271,
	and	x1, x1, -8	// D.26782, D.26781,
	str	x1, [sp, 72]	// D.26782, argv.__stack
	b	.L3865		//
.L3864:
	add	w2, w1, 8	// D.26784, D.26776,
	str	w2, [sp, 96]	// D.26784, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26786, argv.__gr_offs
	cmp	w2, 0	// D.26786,
	ble	.L3866		//,
	add	x1, x0, 15	// D.26789, iftmp.2271,
	and	x1, x1, -8	// D.26790, D.26789,
	str	x1, [sp, 72]	// D.26790, argv.__stack
	b	.L3865		//
.L3866:
	ldr	x2, [sp, 80]	// D.26792, argv.__gr_top
	sxtw	x0, w1	// D.26793, D.26776
	add	x0, x2, x0	// iftmp.2271, D.26792, D.26793
.L3865:
	ldr	x1, [x0]	// D.26794, *iftmp.2270_49
	add	x0, sp, 104	// tmp206,,
	ldp	q0, q1, [x1]	// tmp208, tmp209, *_84
	stp	q0, q1, [x0]	// tmp208, tmp209, D.6851
	ldp	q0, q1, [x1, 32]	// tmp210, tmp211, *_84
	stp	q0, q1, [x0, 32]	// tmp210, tmp211, D.6851
// varargs-dll.c:1679:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 104]	// tmp212, D.6851.a.a
	str	w0, [sp, 36]	// tmp212, a
// varargs-dll.c:1680:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.26795, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2273, argv.__stack
	cmp	w1, 0	// D.26795,
	blt	.L3868		//,
	add	x1, x0, 15	// D.26800, iftmp.2273,
	and	x1, x1, -8	// D.26801, D.26800,
	str	x1, [sp, 72]	// D.26801, argv.__stack
	b	.L3869		//
.L3868:
	add	w2, w1, 8	// D.26803, D.26795,
	str	w2, [sp, 96]	// D.26803, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26805, argv.__gr_offs
	cmp	w2, 0	// D.26805,
	ble	.L3870		//,
	add	x1, x0, 15	// D.26808, iftmp.2273,
	and	x1, x1, -8	// D.26809, D.26808,
	str	x1, [sp, 72]	// D.26809, argv.__stack
	b	.L3869		//
.L3870:
	ldr	x2, [sp, 80]	// D.26811, argv.__gr_top
	sxtw	x0, w1	// D.26812, D.26795
	add	x0, x2, x0	// iftmp.2273, D.26811, D.26812
.L3869:
	ldr	x1, [x0]	// D.26813, *iftmp.2272_51
	add	x0, sp, 168	// tmp213,,
	ldp	q0, q1, [x1]	// tmp215, tmp216, *_103
	stp	q0, q1, [x0]	// tmp215, tmp216, D.6852
	ldp	q0, q1, [x1, 32]	// tmp217, tmp218, *_103
	stp	q0, q1, [x0, 32]	// tmp217, tmp218, D.6852
// varargs-dll.c:1680:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 188]	// tmp219, D.6852.b.b
	str	w0, [sp, 40]	// tmp219, b
// varargs-dll.c:1681:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 96]	// D.26814, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2275, argv.__stack
	cmp	w1, 0	// D.26814,
	blt	.L3872		//,
	add	x1, x0, 15	// D.26819, iftmp.2275,
	and	x1, x1, -8	// D.26820, D.26819,
	str	x1, [sp, 72]	// D.26820, argv.__stack
	b	.L3873		//
.L3872:
	add	w2, w1, 8	// D.26822, D.26814,
	str	w2, [sp, 96]	// D.26822, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26824, argv.__gr_offs
	cmp	w2, 0	// D.26824,
	ble	.L3874		//,
	add	x1, x0, 15	// D.26827, iftmp.2275,
	and	x1, x1, -8	// D.26828, D.26827,
	str	x1, [sp, 72]	// D.26828, argv.__stack
	b	.L3873		//
.L3874:
	ldr	x2, [sp, 80]	// D.26830, argv.__gr_top
	sxtw	x0, w1	// D.26831, D.26814
	add	x0, x2, x0	// iftmp.2275, D.26830, D.26831
.L3873:
	ldr	x1, [x0]	// D.26832, *iftmp.2274_53
	add	x0, sp, 232	// tmp220,,
	ldp	q0, q1, [x1]	// tmp222, tmp223, *_122
	stp	q0, q1, [x0]	// tmp222, tmp223, D.6853
	ldp	q0, q1, [x1, 32]	// tmp224, tmp225, *_122
	stp	q0, q1, [x0, 32]	// tmp224, tmp225, D.6853
// varargs-dll.c:1681:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 272]	// tmp226, D.6853.c.c
	str	w0, [sp, 44]	// tmp226, c
// varargs-dll.c:1682:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 96]	// D.26833, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2277, argv.__stack
	cmp	w1, 0	// D.26833,
	blt	.L3876		//,
	add	x1, x0, 15	// D.26838, iftmp.2277,
	and	x1, x1, -8	// D.26839, D.26838,
	str	x1, [sp, 72]	// D.26839, argv.__stack
	b	.L3877		//
.L3876:
	add	w2, w1, 8	// D.26841, D.26833,
	str	w2, [sp, 96]	// D.26841, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26843, argv.__gr_offs
	cmp	w2, 0	// D.26843,
	ble	.L3878		//,
	add	x1, x0, 15	// D.26846, iftmp.2277,
	and	x1, x1, -8	// D.26847, D.26846,
	str	x1, [sp, 72]	// D.26847, argv.__stack
	b	.L3877		//
.L3878:
	ldr	x2, [sp, 80]	// D.26849, argv.__gr_top
	sxtw	x0, w1	// D.26850, D.26833
	add	x0, x2, x0	// iftmp.2277, D.26849, D.26850
.L3877:
	ldr	x1, [x0]	// D.26851, *iftmp.2276_55
	add	x0, sp, 296	// tmp227,,
	ldp	q0, q1, [x1]	// tmp229, tmp230, *_141
	stp	q0, q1, [x0]	// tmp229, tmp230, D.6854
	ldp	q0, q1, [x1, 32]	// tmp231, tmp232, *_141
	stp	q0, q1, [x0, 32]	// tmp231, tmp232, D.6854
// varargs-dll.c:1682:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 356]	// tmp233, D.6854.d.d
	str	w0, [sp, 48]	// tmp233, d
// varargs-dll.c:1683:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.26852, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2279, argv.__stack
	cmp	w1, 0	// D.26852,
	blt	.L3880		//,
	add	x1, x0, 15	// D.26857, iftmp.2279,
	and	x1, x1, -8	// D.26858, D.26857,
	str	x1, [sp, 72]	// D.26858, argv.__stack
	b	.L3881		//
.L3880:
	add	w2, w1, 8	// D.26860, D.26852,
	str	w2, [sp, 96]	// D.26860, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26862, argv.__gr_offs
	cmp	w2, 0	// D.26862,
	ble	.L3882		//,
	add	x1, x0, 15	// D.26865, iftmp.2279,
	and	x1, x1, -8	// D.26866, D.26865,
	str	x1, [sp, 72]	// D.26866, argv.__stack
	b	.L3881		//
.L3882:
	ldr	x2, [sp, 80]	// D.26868, argv.__gr_top
	sxtw	x0, w1	// D.26869, D.26852
	add	x0, x2, x0	// iftmp.2279, D.26868, D.26869
.L3881:
	ldr	x1, [x0]	// D.26870, *iftmp.2278_57
	add	x0, sp, 360	// tmp234,,
	ldp	q0, q1, [x1]	// tmp236, tmp237, *_160
	stp	q0, q1, [x0]	// tmp236, tmp237, D.6855
	ldp	q0, q1, [x1, 32]	// tmp238, tmp239, *_160
	stp	q0, q1, [x0, 32]	// tmp238, tmp239, D.6855
// varargs-dll.c:1683:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 360]	// tmp240, D.6855.a.a
	str	w0, [sp, 52]	// tmp240, e
// varargs-dll.c:1684:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 96]	// D.26871, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2281, argv.__stack
	cmp	w1, 0	// D.26871,
	blt	.L3884		//,
	add	x1, x0, 15	// D.26876, iftmp.2281,
	and	x1, x1, -8	// D.26877, D.26876,
	str	x1, [sp, 72]	// D.26877, argv.__stack
	b	.L3885		//
.L3884:
	add	w2, w1, 8	// D.26879, D.26871,
	str	w2, [sp, 96]	// D.26879, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26881, argv.__gr_offs
	cmp	w2, 0	// D.26881,
	ble	.L3886		//,
	add	x1, x0, 15	// D.26884, iftmp.2281,
	and	x1, x1, -8	// D.26885, D.26884,
	str	x1, [sp, 72]	// D.26885, argv.__stack
	b	.L3885		//
.L3886:
	ldr	x2, [sp, 80]	// D.26887, argv.__gr_top
	sxtw	x0, w1	// D.26888, D.26871
	add	x0, x2, x0	// iftmp.2281, D.26887, D.26888
.L3885:
	ldr	x1, [x0]	// D.26889, *iftmp.2280_59
	add	x0, sp, 424	// tmp241,,
	ldp	q0, q1, [x1]	// tmp243, tmp244, *_179
	stp	q0, q1, [x0]	// tmp243, tmp244, D.6856
	ldp	q0, q1, [x1, 32]	// tmp245, tmp246, *_179
	stp	q0, q1, [x0, 32]	// tmp245, tmp246, D.6856
// varargs-dll.c:1684:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 444]	// tmp247, D.6856.b.b
	str	w0, [sp, 56]	// tmp247, f
// varargs-dll.c:1685:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 96]	// D.26890, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2283, argv.__stack
	cmp	w1, 0	// D.26890,
	blt	.L3888		//,
	add	x1, x0, 15	// D.26895, iftmp.2283,
	and	x1, x1, -8	// D.26896, D.26895,
	str	x1, [sp, 72]	// D.26896, argv.__stack
	b	.L3889		//
.L3888:
	add	w2, w1, 8	// D.26898, D.26890,
	str	w2, [sp, 96]	// D.26898, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26900, argv.__gr_offs
	cmp	w2, 0	// D.26900,
	ble	.L3890		//,
	add	x1, x0, 15	// D.26903, iftmp.2283,
	and	x1, x1, -8	// D.26904, D.26903,
	str	x1, [sp, 72]	// D.26904, argv.__stack
	b	.L3889		//
.L3890:
	ldr	x2, [sp, 80]	// D.26906, argv.__gr_top
	sxtw	x0, w1	// D.26907, D.26890
	add	x0, x2, x0	// iftmp.2283, D.26906, D.26907
.L3889:
	ldr	x1, [x0]	// D.26908, *iftmp.2282_61
	add	x0, sp, 488	// tmp248,,
	ldp	q0, q1, [x1]	// tmp250, tmp251, *_198
	stp	q0, q1, [x0]	// tmp250, tmp251, D.6857
	ldp	q0, q1, [x1, 32]	// tmp252, tmp253, *_198
	stp	q0, q1, [x0, 32]	// tmp252, tmp253, D.6857
// varargs-dll.c:1685:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 528]	// tmp254, D.6857.c.c
	str	w0, [sp, 60]	// tmp254, g
// varargs-dll.c:1686:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 96]	// D.26909, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2285, argv.__stack
	cmp	w1, 0	// D.26909,
	blt	.L3892		//,
	add	x1, x0, 15	// D.26914, iftmp.2285,
	and	x1, x1, -8	// D.26915, D.26914,
	str	x1, [sp, 72]	// D.26915, argv.__stack
	b	.L3893		//
.L3892:
	add	w2, w1, 8	// D.26917, D.26909,
	str	w2, [sp, 96]	// D.26917, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26919, argv.__gr_offs
	cmp	w2, 0	// D.26919,
	ble	.L3894		//,
	add	x1, x0, 15	// D.26922, iftmp.2285,
	and	x1, x1, -8	// D.26923, D.26922,
	str	x1, [sp, 72]	// D.26923, argv.__stack
	b	.L3893		//
.L3894:
	ldr	x2, [sp, 80]	// D.26925, argv.__gr_top
	sxtw	x0, w1	// D.26926, D.26909
	add	x0, x2, x0	// iftmp.2285, D.26925, D.26926
.L3893:
	ldr	x1, [x0]	// D.26927, *iftmp.2284_63
	add	x0, sp, 552	// tmp255,,
	ldp	q0, q1, [x1]	// tmp257, tmp258, *_217
	stp	q0, q1, [x0]	// tmp257, tmp258, D.6858
	ldp	q0, q1, [x1, 32]	// tmp259, tmp260, *_217
	stp	q0, q1, [x0, 32]	// tmp259, tmp260, D.6858
// varargs-dll.c:1686:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 612]	// tmp261, D.6858.d.d
	str	w0, [sp, 64]	// tmp261, h
// varargs-dll.c:1687:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 96]	// D.26928, argv.__gr_offs
	ldr	x0, [sp, 72]	// iftmp.2287, argv.__stack
	cmp	w1, 0	// D.26928,
	blt	.L3896		//,
	add	x1, x0, 15	// D.26933, iftmp.2287,
	and	x1, x1, -8	// D.26934, D.26933,
	str	x1, [sp, 72]	// D.26934, argv.__stack
	b	.L3897		//
.L3896:
	add	w2, w1, 8	// D.26936, D.26928,
	str	w2, [sp, 96]	// D.26936, argv.__gr_offs
	ldr	w2, [sp, 96]	// D.26938, argv.__gr_offs
	cmp	w2, 0	// D.26938,
	ble	.L3898		//,
	add	x1, x0, 15	// D.26941, iftmp.2287,
	and	x1, x1, -8	// D.26942, D.26941,
	str	x1, [sp, 72]	// D.26942, argv.__stack
	b	.L3897		//
.L3898:
	ldr	x2, [sp, 80]	// D.26944, argv.__gr_top
	sxtw	x0, w1	// D.26945, D.26928
	add	x0, x2, x0	// iftmp.2287, D.26944, D.26945
.L3897:
	ldr	x1, [x0]	// D.26946, *iftmp.2286_65
	add	x0, sp, 616	// tmp262,,
	ldp	q0, q1, [x1]	// tmp264, tmp265, *_236
	stp	q0, q1, [x0]	// tmp264, tmp265, D.6859
	ldp	q0, q1, [x1, 32]	// tmp266, tmp267, *_236
	stp	q0, q1, [x0, 32]	// tmp266, tmp267, D.6859
// varargs-dll.c:1687:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 616]	// tmp268, D.6859.a.a
	str	w0, [sp, 68]	// tmp268, i
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 36]	// tmp269, a
	ldr	w0, [sp, 40]	// tmp270, b
	add	w1, w1, w0	// _1, tmp269, tmp270
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 44]	// tmp271, c
	add	w1, w1, w0	// _2, _1, tmp271
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 48]	// tmp272, d
	add	w1, w1, w0	// _3, _2, tmp272
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp273, e
	add	w1, w1, w0	// _4, _3, tmp273
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp274, f
	add	w1, w1, w0	// _5, _4, tmp274
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp275, g
	add	w1, w1, w0	// _6, _5, tmp275
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp276, h
	add	w1, w1, w0	// _7, _6, tmp276
// varargs-dll.c:1689:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp277, i
	add	w0, w1, w0	// _29, _7, tmp277
	mov	w1, w0	// <retval>, _29
// varargs-dll.c:1690: }
	adrp	x0, :got:__stack_chk_guard	// tmp280,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp279, tmp280,
	ldr	x3, [sp, 680]	// tmp282, D.26947
	ldr	x2, [x0]	// tmp283,
	subs	x3, x3, x2	// tmp282, tmp283
	mov	x2, 0	// tmp283
	beq	.L3901		//,
	bl	__stack_chk_fail		//
.L3901:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 880	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE106:
	.size	use_va_args_several_hva_4_short_vector_16_bytes, .-use_va_args_several_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_list_several_hva_4_short_vector_16_bytes
	.type	use_va_list_several_hva_4_short_vector_16_bytes, %function
use_va_list_several_hva_4_short_vector_16_bytes:
.LFB107:
	.cfi_startproc
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
	str	x19, [sp]	//,
	.cfi_offset 19, -656
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp200,
// varargs-dll.c:1696:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.26951, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2289, argv.__stack
	cmp	w1, 0	// D.26951,
	blt	.L3903		//,
	add	x1, x0, 15	// D.26956, iftmp.2289,
	and	x1, x1, -8	// D.26957, D.26956,
	str	x1, [x19]	// D.26957, argv.__stack
	b	.L3904		//
.L3903:
	add	w2, w1, 8	// D.26959, D.26951,
	str	w2, [x19, 24]	// D.26959, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26961, argv.__gr_offs
	cmp	w2, 0	// D.26961,
	ble	.L3905		//,
	add	x1, x0, 15	// D.26964, iftmp.2289,
	and	x1, x1, -8	// D.26965, D.26964,
	str	x1, [x19]	// D.26965, argv.__stack
	b	.L3904		//
.L3905:
	ldr	x2, [x19, 8]	// D.26967, argv.__gr_top
	sxtw	x0, w1	// D.26968, D.26951
	add	x0, x2, x0	// iftmp.2289, D.26967, D.26968
.L3904:
	ldr	x1, [x0]	// D.26969, *iftmp.2288_46
	add	x0, sp, 80	// tmp201,,
	ldp	q0, q1, [x1]	// tmp203, tmp204, *_81
	stp	q0, q1, [x0]	// tmp203, tmp204, D.6863
	ldp	q0, q1, [x1, 32]	// tmp205, tmp206, *_81
	stp	q0, q1, [x0, 32]	// tmp205, tmp206, D.6863
// varargs-dll.c:1696:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 80]	// tmp207, D.6863.a.a
	str	w0, [sp, 44]	// tmp207, a
// varargs-dll.c:1697:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.26970, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2291, argv.__stack
	cmp	w1, 0	// D.26970,
	blt	.L3907		//,
	add	x1, x0, 15	// D.26975, iftmp.2291,
	and	x1, x1, -8	// D.26976, D.26975,
	str	x1, [x19]	// D.26976, argv.__stack
	b	.L3908		//
.L3907:
	add	w2, w1, 8	// D.26978, D.26970,
	str	w2, [x19, 24]	// D.26978, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26980, argv.__gr_offs
	cmp	w2, 0	// D.26980,
	ble	.L3909		//,
	add	x1, x0, 15	// D.26983, iftmp.2291,
	and	x1, x1, -8	// D.26984, D.26983,
	str	x1, [x19]	// D.26984, argv.__stack
	b	.L3908		//
.L3909:
	ldr	x2, [x19, 8]	// D.26986, argv.__gr_top
	sxtw	x0, w1	// D.26987, D.26970
	add	x0, x2, x0	// iftmp.2291, D.26986, D.26987
.L3908:
	ldr	x1, [x0]	// D.26988, *iftmp.2290_48
	add	x0, sp, 144	// tmp208,,
	ldp	q0, q1, [x1]	// tmp210, tmp211, *_100
	stp	q0, q1, [x0]	// tmp210, tmp211, D.6864
	ldp	q0, q1, [x1, 32]	// tmp212, tmp213, *_100
	stp	q0, q1, [x0, 32]	// tmp212, tmp213, D.6864
// varargs-dll.c:1697:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 164]	// tmp214, D.6864.b.b
	str	w0, [sp, 48]	// tmp214, b
// varargs-dll.c:1698:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.26989, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2293, argv.__stack
	cmp	w1, 0	// D.26989,
	blt	.L3911		//,
	add	x1, x0, 15	// D.26994, iftmp.2293,
	and	x1, x1, -8	// D.26995, D.26994,
	str	x1, [x19]	// D.26995, argv.__stack
	b	.L3912		//
.L3911:
	add	w2, w1, 8	// D.26997, D.26989,
	str	w2, [x19, 24]	// D.26997, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.26999, argv.__gr_offs
	cmp	w2, 0	// D.26999,
	ble	.L3913		//,
	add	x1, x0, 15	// D.27002, iftmp.2293,
	and	x1, x1, -8	// D.27003, D.27002,
	str	x1, [x19]	// D.27003, argv.__stack
	b	.L3912		//
.L3913:
	ldr	x2, [x19, 8]	// D.27005, argv.__gr_top
	sxtw	x0, w1	// D.27006, D.26989
	add	x0, x2, x0	// iftmp.2293, D.27005, D.27006
.L3912:
	ldr	x1, [x0]	// D.27007, *iftmp.2292_50
	add	x0, sp, 208	// tmp215,,
	ldp	q0, q1, [x1]	// tmp217, tmp218, *_119
	stp	q0, q1, [x0]	// tmp217, tmp218, D.6865
	ldp	q0, q1, [x1, 32]	// tmp219, tmp220, *_119
	stp	q0, q1, [x0, 32]	// tmp219, tmp220, D.6865
// varargs-dll.c:1698:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 248]	// tmp221, D.6865.c.c
	str	w0, [sp, 52]	// tmp221, c
// varargs-dll.c:1699:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27008, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2295, argv.__stack
	cmp	w1, 0	// D.27008,
	blt	.L3915		//,
	add	x1, x0, 15	// D.27013, iftmp.2295,
	and	x1, x1, -8	// D.27014, D.27013,
	str	x1, [x19]	// D.27014, argv.__stack
	b	.L3916		//
.L3915:
	add	w2, w1, 8	// D.27016, D.27008,
	str	w2, [x19, 24]	// D.27016, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27018, argv.__gr_offs
	cmp	w2, 0	// D.27018,
	ble	.L3917		//,
	add	x1, x0, 15	// D.27021, iftmp.2295,
	and	x1, x1, -8	// D.27022, D.27021,
	str	x1, [x19]	// D.27022, argv.__stack
	b	.L3916		//
.L3917:
	ldr	x2, [x19, 8]	// D.27024, argv.__gr_top
	sxtw	x0, w1	// D.27025, D.27008
	add	x0, x2, x0	// iftmp.2295, D.27024, D.27025
.L3916:
	ldr	x1, [x0]	// D.27026, *iftmp.2294_52
	add	x0, sp, 272	// tmp222,,
	ldp	q0, q1, [x1]	// tmp224, tmp225, *_138
	stp	q0, q1, [x0]	// tmp224, tmp225, D.6866
	ldp	q0, q1, [x1, 32]	// tmp226, tmp227, *_138
	stp	q0, q1, [x0, 32]	// tmp226, tmp227, D.6866
// varargs-dll.c:1699:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 332]	// tmp228, D.6866.d.d
	str	w0, [sp, 56]	// tmp228, d
// varargs-dll.c:1700:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27027, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2297, argv.__stack
	cmp	w1, 0	// D.27027,
	blt	.L3919		//,
	add	x1, x0, 15	// D.27032, iftmp.2297,
	and	x1, x1, -8	// D.27033, D.27032,
	str	x1, [x19]	// D.27033, argv.__stack
	b	.L3920		//
.L3919:
	add	w2, w1, 8	// D.27035, D.27027,
	str	w2, [x19, 24]	// D.27035, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27037, argv.__gr_offs
	cmp	w2, 0	// D.27037,
	ble	.L3921		//,
	add	x1, x0, 15	// D.27040, iftmp.2297,
	and	x1, x1, -8	// D.27041, D.27040,
	str	x1, [x19]	// D.27041, argv.__stack
	b	.L3920		//
.L3921:
	ldr	x2, [x19, 8]	// D.27043, argv.__gr_top
	sxtw	x0, w1	// D.27044, D.27027
	add	x0, x2, x0	// iftmp.2297, D.27043, D.27044
.L3920:
	ldr	x1, [x0]	// D.27045, *iftmp.2296_54
	add	x0, sp, 336	// tmp229,,
	ldp	q0, q1, [x1]	// tmp231, tmp232, *_157
	stp	q0, q1, [x0]	// tmp231, tmp232, D.6867
	ldp	q0, q1, [x1, 32]	// tmp233, tmp234, *_157
	stp	q0, q1, [x0, 32]	// tmp233, tmp234, D.6867
// varargs-dll.c:1700:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 336]	// tmp235, D.6867.a.a
	str	w0, [sp, 60]	// tmp235, e
// varargs-dll.c:1701:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.27046, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2299, argv.__stack
	cmp	w1, 0	// D.27046,
	blt	.L3923		//,
	add	x1, x0, 15	// D.27051, iftmp.2299,
	and	x1, x1, -8	// D.27052, D.27051,
	str	x1, [x19]	// D.27052, argv.__stack
	b	.L3924		//
.L3923:
	add	w2, w1, 8	// D.27054, D.27046,
	str	w2, [x19, 24]	// D.27054, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27056, argv.__gr_offs
	cmp	w2, 0	// D.27056,
	ble	.L3925		//,
	add	x1, x0, 15	// D.27059, iftmp.2299,
	and	x1, x1, -8	// D.27060, D.27059,
	str	x1, [x19]	// D.27060, argv.__stack
	b	.L3924		//
.L3925:
	ldr	x2, [x19, 8]	// D.27062, argv.__gr_top
	sxtw	x0, w1	// D.27063, D.27046
	add	x0, x2, x0	// iftmp.2299, D.27062, D.27063
.L3924:
	ldr	x1, [x0]	// D.27064, *iftmp.2298_56
	add	x0, sp, 400	// tmp236,,
	ldp	q0, q1, [x1]	// tmp238, tmp239, *_176
	stp	q0, q1, [x0]	// tmp238, tmp239, D.6868
	ldp	q0, q1, [x1, 32]	// tmp240, tmp241, *_176
	stp	q0, q1, [x0, 32]	// tmp240, tmp241, D.6868
// varargs-dll.c:1701:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 420]	// tmp242, D.6868.b.b
	str	w0, [sp, 64]	// tmp242, f
// varargs-dll.c:1702:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.27065, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2301, argv.__stack
	cmp	w1, 0	// D.27065,
	blt	.L3927		//,
	add	x1, x0, 15	// D.27070, iftmp.2301,
	and	x1, x1, -8	// D.27071, D.27070,
	str	x1, [x19]	// D.27071, argv.__stack
	b	.L3928		//
.L3927:
	add	w2, w1, 8	// D.27073, D.27065,
	str	w2, [x19, 24]	// D.27073, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27075, argv.__gr_offs
	cmp	w2, 0	// D.27075,
	ble	.L3929		//,
	add	x1, x0, 15	// D.27078, iftmp.2301,
	and	x1, x1, -8	// D.27079, D.27078,
	str	x1, [x19]	// D.27079, argv.__stack
	b	.L3928		//
.L3929:
	ldr	x2, [x19, 8]	// D.27081, argv.__gr_top
	sxtw	x0, w1	// D.27082, D.27065
	add	x0, x2, x0	// iftmp.2301, D.27081, D.27082
.L3928:
	ldr	x1, [x0]	// D.27083, *iftmp.2300_58
	add	x0, sp, 464	// tmp243,,
	ldp	q0, q1, [x1]	// tmp245, tmp246, *_195
	stp	q0, q1, [x0]	// tmp245, tmp246, D.6869
	ldp	q0, q1, [x1, 32]	// tmp247, tmp248, *_195
	stp	q0, q1, [x0, 32]	// tmp247, tmp248, D.6869
// varargs-dll.c:1702:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 504]	// tmp249, D.6869.c.c
	str	w0, [sp, 68]	// tmp249, g
// varargs-dll.c:1703:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27084, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2303, argv.__stack
	cmp	w1, 0	// D.27084,
	blt	.L3931		//,
	add	x1, x0, 15	// D.27089, iftmp.2303,
	and	x1, x1, -8	// D.27090, D.27089,
	str	x1, [x19]	// D.27090, argv.__stack
	b	.L3932		//
.L3931:
	add	w2, w1, 8	// D.27092, D.27084,
	str	w2, [x19, 24]	// D.27092, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27094, argv.__gr_offs
	cmp	w2, 0	// D.27094,
	ble	.L3933		//,
	add	x1, x0, 15	// D.27097, iftmp.2303,
	and	x1, x1, -8	// D.27098, D.27097,
	str	x1, [x19]	// D.27098, argv.__stack
	b	.L3932		//
.L3933:
	ldr	x2, [x19, 8]	// D.27100, argv.__gr_top
	sxtw	x0, w1	// D.27101, D.27084
	add	x0, x2, x0	// iftmp.2303, D.27100, D.27101
.L3932:
	ldr	x1, [x0]	// D.27102, *iftmp.2302_60
	add	x0, sp, 528	// tmp250,,
	ldp	q0, q1, [x1]	// tmp252, tmp253, *_214
	stp	q0, q1, [x0]	// tmp252, tmp253, D.6870
	ldp	q0, q1, [x1, 32]	// tmp254, tmp255, *_214
	stp	q0, q1, [x0, 32]	// tmp254, tmp255, D.6870
// varargs-dll.c:1703:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 588]	// tmp256, D.6870.d.d
	str	w0, [sp, 72]	// tmp256, h
// varargs-dll.c:1704:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27103, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2305, argv.__stack
	cmp	w1, 0	// D.27103,
	blt	.L3935		//,
	add	x1, x0, 15	// D.27108, iftmp.2305,
	and	x1, x1, -8	// D.27109, D.27108,
	str	x1, [x19]	// D.27109, argv.__stack
	b	.L3936		//
.L3935:
	add	w2, w1, 8	// D.27111, D.27103,
	str	w2, [x19, 24]	// D.27111, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27113, argv.__gr_offs
	cmp	w2, 0	// D.27113,
	ble	.L3937		//,
	add	x1, x0, 15	// D.27116, iftmp.2305,
	and	x1, x1, -8	// D.27117, D.27116,
	str	x1, [x19]	// D.27117, argv.__stack
	b	.L3936		//
.L3937:
	ldr	x2, [x19, 8]	// D.27119, argv.__gr_top
	sxtw	x0, w1	// D.27120, D.27103
	add	x0, x2, x0	// iftmp.2305, D.27119, D.27120
.L3936:
	ldr	x1, [x0]	// D.27121, *iftmp.2304_62
	add	x0, sp, 592	// tmp257,,
	ldp	q0, q1, [x1]	// tmp259, tmp260, *_233
	stp	q0, q1, [x0]	// tmp259, tmp260, D.6871
	ldp	q0, q1, [x1, 32]	// tmp261, tmp262, *_233
	stp	q0, q1, [x0, 32]	// tmp261, tmp262, D.6871
// varargs-dll.c:1704:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 592]	// tmp263, D.6871.a.a
	str	w0, [sp, 76]	// tmp263, i
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w1, [sp, 44]	// tmp264, a
	ldr	w0, [sp, 48]	// tmp265, b
	add	w1, w1, w0	// _1, tmp264, tmp265
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 52]	// tmp266, c
	add	w1, w1, w0	// _2, _1, tmp266
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 56]	// tmp267, d
	add	w1, w1, w0	// _3, _2, tmp267
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 60]	// tmp268, e
	add	w1, w1, w0	// _4, _3, tmp268
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 64]	// tmp269, f
	add	w1, w1, w0	// _5, _4, tmp269
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 68]	// tmp270, g
	add	w1, w1, w0	// _6, _5, tmp270
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 72]	// tmp271, h
	add	w1, w1, w0	// _7, _6, tmp271
// varargs-dll.c:1705:   return a + b + c + d + e + f + g + h + i;
	ldr	w0, [sp, 76]	// tmp272, i
	add	w0, w1, w0	// _27, _7, tmp272
// varargs-dll.c:1706: }
	ldr	x19, [sp]	//,
	add	sp, sp, 656	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE107:
	.size	use_va_list_several_hva_4_short_vector_16_bytes, .-use_va_list_several_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_args_many_hva_4_short_vector_16_bytes
	.type	use_va_args_many_hva_4_short_vector_16_bytes, %function
use_va_args_many_hva_4_short_vector_16_bytes:
.LFB108:
	.cfi_startproc
	sub	sp, sp, #1424	//,,
	.cfi_def_cfa_offset 1424
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -1424
	.cfi_offset 30, -1416
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 1368]	//,
	str	x2, [sp, 1376]	//,
	str	x3, [sp, 1384]	//,
	str	x4, [sp, 1392]	//,
	str	x5, [sp, 1400]	//,
	str	x6, [sp, 1408]	//,
	str	x7, [sp, 1416]	//,
	add	x0, sp, 1024	// tmp446,,
	str	q0, [x0, 208]	//,
	add	x0, sp, 1024	// tmp448,,
	str	q1, [x0, 224]	//,
	add	x0, sp, 1024	// tmp450,,
	str	q2, [x0, 240]	//,
	add	x0, sp, 1536	// tmp452,,
	str	q3, [x0, -256]	//,
	add	x0, sp, 1536	// tmp454,,
	str	q4, [x0, -240]	//,
	add	x0, sp, 1536	// tmp456,,
	str	q5, [x0, -224]	//,
	add	x0, sp, 1536	// tmp458,,
	str	q6, [x0, -208]	//,
	add	x0, sp, 1536	// tmp460,,
	str	q7, [x0, -192]	//,
// varargs-dll.c:1710: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp441,
	str	x1, [sp, 1224]	// tmp441, D.27445
	mov	x1, 0	// tmp441
// varargs-dll.c:1712:   va_start (argv, format);
	add	x0, sp, 1424	// tmp462,,
	str	x0, [sp, 104]	// tmp462, MEM[(struct  *)&argv].__stack
	add	x0, sp, 1424	// tmp463,,
	str	x0, [sp, 112]	// tmp463, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 1360	// tmp299,,
	str	x0, [sp, 120]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 128]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 132]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1713:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.27122, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2307, argv.__stack
	cmp	w1, 0	// D.27122,
	blt	.L3941		//,
	add	x1, x0, 15	// D.27127, iftmp.2307,
	and	x1, x1, -8	// D.27128, D.27127,
	str	x1, [sp, 104]	// D.27128, argv.__stack
	b	.L3942		//
.L3941:
	add	w2, w1, 8	// D.27130, D.27122,
	str	w2, [sp, 128]	// D.27130, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27132, argv.__gr_offs
	cmp	w2, 0	// D.27132,
	ble	.L3943		//,
	add	x1, x0, 15	// D.27135, iftmp.2307,
	and	x1, x1, -8	// D.27136, D.27135,
	str	x1, [sp, 104]	// D.27136, argv.__stack
	b	.L3942		//
.L3943:
	ldr	x2, [sp, 112]	// D.27138, argv.__gr_top
	sxtw	x0, w1	// D.27139, D.27122
	add	x0, x2, x0	// iftmp.2307, D.27138, D.27139
.L3942:
	ldr	x1, [x0]	// D.27140, *iftmp.2306_89
	add	x0, sp, 136	// tmp302,,
	ldp	q0, q1, [x1]	// tmp304, tmp305, *_140
	stp	q0, q1, [x0]	// tmp304, tmp305, D.6874
	ldp	q0, q1, [x1, 32]	// tmp306, tmp307, *_140
	stp	q0, q1, [x0, 32]	// tmp306, tmp307, D.6874
// varargs-dll.c:1713:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 136]	// tmp308, D.6874.a.a
	str	w0, [sp, 36]	// tmp308, a
// varargs-dll.c:1714:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.27141, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2309, argv.__stack
	cmp	w1, 0	// D.27141,
	blt	.L3945		//,
	add	x1, x0, 15	// D.27146, iftmp.2309,
	and	x1, x1, -8	// D.27147, D.27146,
	str	x1, [sp, 104]	// D.27147, argv.__stack
	b	.L3946		//
.L3945:
	add	w2, w1, 8	// D.27149, D.27141,
	str	w2, [sp, 128]	// D.27149, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27151, argv.__gr_offs
	cmp	w2, 0	// D.27151,
	ble	.L3947		//,
	add	x1, x0, 15	// D.27154, iftmp.2309,
	and	x1, x1, -8	// D.27155, D.27154,
	str	x1, [sp, 104]	// D.27155, argv.__stack
	b	.L3946		//
.L3947:
	ldr	x2, [sp, 112]	// D.27157, argv.__gr_top
	sxtw	x0, w1	// D.27158, D.27141
	add	x0, x2, x0	// iftmp.2309, D.27157, D.27158
.L3946:
	ldr	x1, [x0]	// D.27159, *iftmp.2308_91
	add	x0, sp, 200	// tmp309,,
	ldp	q0, q1, [x1]	// tmp311, tmp312, *_159
	stp	q0, q1, [x0]	// tmp311, tmp312, D.6875
	ldp	q0, q1, [x1, 32]	// tmp313, tmp314, *_159
	stp	q0, q1, [x0, 32]	// tmp313, tmp314, D.6875
// varargs-dll.c:1714:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 220]	// tmp315, D.6875.b.b
	str	w0, [sp, 40]	// tmp315, b
// varargs-dll.c:1715:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 128]	// D.27160, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2311, argv.__stack
	cmp	w1, 0	// D.27160,
	blt	.L3949		//,
	add	x1, x0, 15	// D.27165, iftmp.2311,
	and	x1, x1, -8	// D.27166, D.27165,
	str	x1, [sp, 104]	// D.27166, argv.__stack
	b	.L3950		//
.L3949:
	add	w2, w1, 8	// D.27168, D.27160,
	str	w2, [sp, 128]	// D.27168, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27170, argv.__gr_offs
	cmp	w2, 0	// D.27170,
	ble	.L3951		//,
	add	x1, x0, 15	// D.27173, iftmp.2311,
	and	x1, x1, -8	// D.27174, D.27173,
	str	x1, [sp, 104]	// D.27174, argv.__stack
	b	.L3950		//
.L3951:
	ldr	x2, [sp, 112]	// D.27176, argv.__gr_top
	sxtw	x0, w1	// D.27177, D.27160
	add	x0, x2, x0	// iftmp.2311, D.27176, D.27177
.L3950:
	ldr	x1, [x0]	// D.27178, *iftmp.2310_93
	add	x0, sp, 264	// tmp316,,
	ldp	q0, q1, [x1]	// tmp318, tmp319, *_178
	stp	q0, q1, [x0]	// tmp318, tmp319, D.6876
	ldp	q0, q1, [x1, 32]	// tmp320, tmp321, *_178
	stp	q0, q1, [x0, 32]	// tmp320, tmp321, D.6876
// varargs-dll.c:1715:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 304]	// tmp322, D.6876.c.c
	str	w0, [sp, 44]	// tmp322, c
// varargs-dll.c:1716:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 128]	// D.27179, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2313, argv.__stack
	cmp	w1, 0	// D.27179,
	blt	.L3953		//,
	add	x1, x0, 15	// D.27184, iftmp.2313,
	and	x1, x1, -8	// D.27185, D.27184,
	str	x1, [sp, 104]	// D.27185, argv.__stack
	b	.L3954		//
.L3953:
	add	w2, w1, 8	// D.27187, D.27179,
	str	w2, [sp, 128]	// D.27187, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27189, argv.__gr_offs
	cmp	w2, 0	// D.27189,
	ble	.L3955		//,
	add	x1, x0, 15	// D.27192, iftmp.2313,
	and	x1, x1, -8	// D.27193, D.27192,
	str	x1, [sp, 104]	// D.27193, argv.__stack
	b	.L3954		//
.L3955:
	ldr	x2, [sp, 112]	// D.27195, argv.__gr_top
	sxtw	x0, w1	// D.27196, D.27179
	add	x0, x2, x0	// iftmp.2313, D.27195, D.27196
.L3954:
	ldr	x1, [x0]	// D.27197, *iftmp.2312_95
	add	x0, sp, 328	// tmp323,,
	ldp	q0, q1, [x1]	// tmp325, tmp326, *_197
	stp	q0, q1, [x0]	// tmp325, tmp326, D.6877
	ldp	q0, q1, [x1, 32]	// tmp327, tmp328, *_197
	stp	q0, q1, [x0, 32]	// tmp327, tmp328, D.6877
// varargs-dll.c:1716:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 388]	// tmp329, D.6877.d.d
	str	w0, [sp, 48]	// tmp329, d
// varargs-dll.c:1717:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.27198, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2315, argv.__stack
	cmp	w1, 0	// D.27198,
	blt	.L3957		//,
	add	x1, x0, 15	// D.27203, iftmp.2315,
	and	x1, x1, -8	// D.27204, D.27203,
	str	x1, [sp, 104]	// D.27204, argv.__stack
	b	.L3958		//
.L3957:
	add	w2, w1, 8	// D.27206, D.27198,
	str	w2, [sp, 128]	// D.27206, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27208, argv.__gr_offs
	cmp	w2, 0	// D.27208,
	ble	.L3959		//,
	add	x1, x0, 15	// D.27211, iftmp.2315,
	and	x1, x1, -8	// D.27212, D.27211,
	str	x1, [sp, 104]	// D.27212, argv.__stack
	b	.L3958		//
.L3959:
	ldr	x2, [sp, 112]	// D.27214, argv.__gr_top
	sxtw	x0, w1	// D.27215, D.27198
	add	x0, x2, x0	// iftmp.2315, D.27214, D.27215
.L3958:
	ldr	x1, [x0]	// D.27216, *iftmp.2314_97
	add	x0, sp, 392	// tmp330,,
	ldp	q0, q1, [x1]	// tmp332, tmp333, *_216
	stp	q0, q1, [x0]	// tmp332, tmp333, D.6878
	ldp	q0, q1, [x1, 32]	// tmp334, tmp335, *_216
	stp	q0, q1, [x0, 32]	// tmp334, tmp335, D.6878
// varargs-dll.c:1717:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 392]	// tmp336, D.6878.a.a
	str	w0, [sp, 52]	// tmp336, e
// varargs-dll.c:1718:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.27217, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2317, argv.__stack
	cmp	w1, 0	// D.27217,
	blt	.L3961		//,
	add	x1, x0, 15	// D.27222, iftmp.2317,
	and	x1, x1, -8	// D.27223, D.27222,
	str	x1, [sp, 104]	// D.27223, argv.__stack
	b	.L3962		//
.L3961:
	add	w2, w1, 8	// D.27225, D.27217,
	str	w2, [sp, 128]	// D.27225, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27227, argv.__gr_offs
	cmp	w2, 0	// D.27227,
	ble	.L3963		//,
	add	x1, x0, 15	// D.27230, iftmp.2317,
	and	x1, x1, -8	// D.27231, D.27230,
	str	x1, [sp, 104]	// D.27231, argv.__stack
	b	.L3962		//
.L3963:
	ldr	x2, [sp, 112]	// D.27233, argv.__gr_top
	sxtw	x0, w1	// D.27234, D.27217
	add	x0, x2, x0	// iftmp.2317, D.27233, D.27234
.L3962:
	ldr	x1, [x0]	// D.27235, *iftmp.2316_99
	add	x0, sp, 456	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_235
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6879
	ldp	q0, q1, [x1, 32]	// tmp341, tmp342, *_235
	stp	q0, q1, [x0, 32]	// tmp341, tmp342, D.6879
// varargs-dll.c:1718:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 476]	// tmp343, D.6879.b.b
	str	w0, [sp, 56]	// tmp343, f
// varargs-dll.c:1719:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 128]	// D.27236, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2319, argv.__stack
	cmp	w1, 0	// D.27236,
	blt	.L3965		//,
	add	x1, x0, 15	// D.27241, iftmp.2319,
	and	x1, x1, -8	// D.27242, D.27241,
	str	x1, [sp, 104]	// D.27242, argv.__stack
	b	.L3966		//
.L3965:
	add	w2, w1, 8	// D.27244, D.27236,
	str	w2, [sp, 128]	// D.27244, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27246, argv.__gr_offs
	cmp	w2, 0	// D.27246,
	ble	.L3967		//,
	add	x1, x0, 15	// D.27249, iftmp.2319,
	and	x1, x1, -8	// D.27250, D.27249,
	str	x1, [sp, 104]	// D.27250, argv.__stack
	b	.L3966		//
.L3967:
	ldr	x2, [sp, 112]	// D.27252, argv.__gr_top
	sxtw	x0, w1	// D.27253, D.27236
	add	x0, x2, x0	// iftmp.2319, D.27252, D.27253
.L3966:
	ldr	x1, [x0]	// D.27254, *iftmp.2318_101
	add	x0, sp, 520	// tmp344,,
	ldp	q0, q1, [x1]	// tmp346, tmp347, *_254
	stp	q0, q1, [x0]	// tmp346, tmp347, D.6880
	ldp	q0, q1, [x1, 32]	// tmp348, tmp349, *_254
	stp	q0, q1, [x0, 32]	// tmp348, tmp349, D.6880
// varargs-dll.c:1719:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 560]	// tmp350, D.6880.c.c
	str	w0, [sp, 60]	// tmp350, g
// varargs-dll.c:1720:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 128]	// D.27255, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2321, argv.__stack
	cmp	w1, 0	// D.27255,
	blt	.L3969		//,
	add	x1, x0, 15	// D.27260, iftmp.2321,
	and	x1, x1, -8	// D.27261, D.27260,
	str	x1, [sp, 104]	// D.27261, argv.__stack
	b	.L3970		//
.L3969:
	add	w2, w1, 8	// D.27263, D.27255,
	str	w2, [sp, 128]	// D.27263, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27265, argv.__gr_offs
	cmp	w2, 0	// D.27265,
	ble	.L3971		//,
	add	x1, x0, 15	// D.27268, iftmp.2321,
	and	x1, x1, -8	// D.27269, D.27268,
	str	x1, [sp, 104]	// D.27269, argv.__stack
	b	.L3970		//
.L3971:
	ldr	x2, [sp, 112]	// D.27271, argv.__gr_top
	sxtw	x0, w1	// D.27272, D.27255
	add	x0, x2, x0	// iftmp.2321, D.27271, D.27272
.L3970:
	ldr	x1, [x0]	// D.27273, *iftmp.2320_103
	add	x0, sp, 584	// tmp351,,
	ldp	q0, q1, [x1]	// tmp353, tmp354, *_273
	stp	q0, q1, [x0]	// tmp353, tmp354, D.6881
	ldp	q0, q1, [x1, 32]	// tmp355, tmp356, *_273
	stp	q0, q1, [x0, 32]	// tmp355, tmp356, D.6881
// varargs-dll.c:1720:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 644]	// tmp357, D.6881.d.d
	str	w0, [sp, 64]	// tmp357, h
// varargs-dll.c:1721:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.27274, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2323, argv.__stack
	cmp	w1, 0	// D.27274,
	blt	.L3973		//,
	add	x1, x0, 15	// D.27279, iftmp.2323,
	and	x1, x1, -8	// D.27280, D.27279,
	str	x1, [sp, 104]	// D.27280, argv.__stack
	b	.L3974		//
.L3973:
	add	w2, w1, 8	// D.27282, D.27274,
	str	w2, [sp, 128]	// D.27282, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27284, argv.__gr_offs
	cmp	w2, 0	// D.27284,
	ble	.L3975		//,
	add	x1, x0, 15	// D.27287, iftmp.2323,
	and	x1, x1, -8	// D.27288, D.27287,
	str	x1, [sp, 104]	// D.27288, argv.__stack
	b	.L3974		//
.L3975:
	ldr	x2, [sp, 112]	// D.27290, argv.__gr_top
	sxtw	x0, w1	// D.27291, D.27274
	add	x0, x2, x0	// iftmp.2323, D.27290, D.27291
.L3974:
	ldr	x1, [x0]	// D.27292, *iftmp.2322_105
	add	x0, sp, 648	// tmp358,,
	ldp	q0, q1, [x1]	// tmp360, tmp361, *_292
	stp	q0, q1, [x0]	// tmp360, tmp361, D.6882
	ldp	q0, q1, [x1, 32]	// tmp362, tmp363, *_292
	stp	q0, q1, [x0, 32]	// tmp362, tmp363, D.6882
// varargs-dll.c:1721:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 648]	// tmp364, D.6882.a.a
	str	w0, [sp, 68]	// tmp364, i
// varargs-dll.c:1722:   int j = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.27293, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2325, argv.__stack
	cmp	w1, 0	// D.27293,
	blt	.L3977		//,
	add	x1, x0, 15	// D.27298, iftmp.2325,
	and	x1, x1, -8	// D.27299, D.27298,
	str	x1, [sp, 104]	// D.27299, argv.__stack
	b	.L3978		//
.L3977:
	add	w2, w1, 8	// D.27301, D.27293,
	str	w2, [sp, 128]	// D.27301, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27303, argv.__gr_offs
	cmp	w2, 0	// D.27303,
	ble	.L3979		//,
	add	x1, x0, 15	// D.27306, iftmp.2325,
	and	x1, x1, -8	// D.27307, D.27306,
	str	x1, [sp, 104]	// D.27307, argv.__stack
	b	.L3978		//
.L3979:
	ldr	x2, [sp, 112]	// D.27309, argv.__gr_top
	sxtw	x0, w1	// D.27310, D.27293
	add	x0, x2, x0	// iftmp.2325, D.27309, D.27310
.L3978:
	ldr	x1, [x0]	// D.27311, *iftmp.2324_107
	add	x0, sp, 712	// tmp365,,
	ldp	q0, q1, [x1]	// tmp367, tmp368, *_311
	stp	q0, q1, [x0]	// tmp367, tmp368, D.6883
	ldp	q0, q1, [x1, 32]	// tmp369, tmp370, *_311
	stp	q0, q1, [x0, 32]	// tmp369, tmp370, D.6883
// varargs-dll.c:1722:   int j = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 732]	// tmp371, D.6883.b.b
	str	w0, [sp, 72]	// tmp371, j
// varargs-dll.c:1723:   int k = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 128]	// D.27312, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2327, argv.__stack
	cmp	w1, 0	// D.27312,
	blt	.L3981		//,
	add	x1, x0, 15	// D.27317, iftmp.2327,
	and	x1, x1, -8	// D.27318, D.27317,
	str	x1, [sp, 104]	// D.27318, argv.__stack
	b	.L3982		//
.L3981:
	add	w2, w1, 8	// D.27320, D.27312,
	str	w2, [sp, 128]	// D.27320, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27322, argv.__gr_offs
	cmp	w2, 0	// D.27322,
	ble	.L3983		//,
	add	x1, x0, 15	// D.27325, iftmp.2327,
	and	x1, x1, -8	// D.27326, D.27325,
	str	x1, [sp, 104]	// D.27326, argv.__stack
	b	.L3982		//
.L3983:
	ldr	x2, [sp, 112]	// D.27328, argv.__gr_top
	sxtw	x0, w1	// D.27329, D.27312
	add	x0, x2, x0	// iftmp.2327, D.27328, D.27329
.L3982:
	ldr	x1, [x0]	// D.27330, *iftmp.2326_109
	add	x0, sp, 776	// tmp372,,
	ldp	q0, q1, [x1]	// tmp374, tmp375, *_330
	stp	q0, q1, [x0]	// tmp374, tmp375, D.6884
	ldp	q0, q1, [x1, 32]	// tmp376, tmp377, *_330
	stp	q0, q1, [x0, 32]	// tmp376, tmp377, D.6884
// varargs-dll.c:1723:   int k = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 816]	// tmp378, D.6884.c.c
	str	w0, [sp, 76]	// tmp378, k
// varargs-dll.c:1724:   int l = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 128]	// D.27331, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2329, argv.__stack
	cmp	w1, 0	// D.27331,
	blt	.L3985		//,
	add	x1, x0, 15	// D.27336, iftmp.2329,
	and	x1, x1, -8	// D.27337, D.27336,
	str	x1, [sp, 104]	// D.27337, argv.__stack
	b	.L3986		//
.L3985:
	add	w2, w1, 8	// D.27339, D.27331,
	str	w2, [sp, 128]	// D.27339, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27341, argv.__gr_offs
	cmp	w2, 0	// D.27341,
	ble	.L3987		//,
	add	x1, x0, 15	// D.27344, iftmp.2329,
	and	x1, x1, -8	// D.27345, D.27344,
	str	x1, [sp, 104]	// D.27345, argv.__stack
	b	.L3986		//
.L3987:
	ldr	x2, [sp, 112]	// D.27347, argv.__gr_top
	sxtw	x0, w1	// D.27348, D.27331
	add	x0, x2, x0	// iftmp.2329, D.27347, D.27348
.L3986:
	ldr	x1, [x0]	// D.27349, *iftmp.2328_111
	add	x0, sp, 840	// tmp379,,
	ldp	q0, q1, [x1]	// tmp381, tmp382, *_349
	stp	q0, q1, [x0]	// tmp381, tmp382, D.6885
	ldp	q0, q1, [x1, 32]	// tmp383, tmp384, *_349
	stp	q0, q1, [x0, 32]	// tmp383, tmp384, D.6885
// varargs-dll.c:1724:   int l = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 900]	// tmp385, D.6885.d.d
	str	w0, [sp, 80]	// tmp385, l
// varargs-dll.c:1725:   int m = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.27350, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2331, argv.__stack
	cmp	w1, 0	// D.27350,
	blt	.L3989		//,
	add	x1, x0, 15	// D.27355, iftmp.2331,
	and	x1, x1, -8	// D.27356, D.27355,
	str	x1, [sp, 104]	// D.27356, argv.__stack
	b	.L3990		//
.L3989:
	add	w2, w1, 8	// D.27358, D.27350,
	str	w2, [sp, 128]	// D.27358, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27360, argv.__gr_offs
	cmp	w2, 0	// D.27360,
	ble	.L3991		//,
	add	x1, x0, 15	// D.27363, iftmp.2331,
	and	x1, x1, -8	// D.27364, D.27363,
	str	x1, [sp, 104]	// D.27364, argv.__stack
	b	.L3990		//
.L3991:
	ldr	x2, [sp, 112]	// D.27366, argv.__gr_top
	sxtw	x0, w1	// D.27367, D.27350
	add	x0, x2, x0	// iftmp.2331, D.27366, D.27367
.L3990:
	ldr	x1, [x0]	// D.27368, *iftmp.2330_113
	add	x0, sp, 904	// tmp386,,
	ldp	q0, q1, [x1]	// tmp388, tmp389, *_368
	stp	q0, q1, [x0]	// tmp388, tmp389, D.6886
	ldp	q0, q1, [x1, 32]	// tmp390, tmp391, *_368
	stp	q0, q1, [x0, 32]	// tmp390, tmp391, D.6886
// varargs-dll.c:1725:   int m = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 904]	// tmp392, D.6886.a.a
	str	w0, [sp, 84]	// tmp392, m
// varargs-dll.c:1726:   int n = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [sp, 128]	// D.27369, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2333, argv.__stack
	cmp	w1, 0	// D.27369,
	blt	.L3993		//,
	add	x1, x0, 15	// D.27374, iftmp.2333,
	and	x1, x1, -8	// D.27375, D.27374,
	str	x1, [sp, 104]	// D.27375, argv.__stack
	b	.L3994		//
.L3993:
	add	w2, w1, 8	// D.27377, D.27369,
	str	w2, [sp, 128]	// D.27377, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27379, argv.__gr_offs
	cmp	w2, 0	// D.27379,
	ble	.L3995		//,
	add	x1, x0, 15	// D.27382, iftmp.2333,
	and	x1, x1, -8	// D.27383, D.27382,
	str	x1, [sp, 104]	// D.27383, argv.__stack
	b	.L3994		//
.L3995:
	ldr	x2, [sp, 112]	// D.27385, argv.__gr_top
	sxtw	x0, w1	// D.27386, D.27369
	add	x0, x2, x0	// iftmp.2333, D.27385, D.27386
.L3994:
	ldr	x1, [x0]	// D.27387, *iftmp.2332_115
	add	x0, sp, 968	// tmp393,,
	ldp	q0, q1, [x1]	// tmp395, tmp396, *_387
	stp	q0, q1, [x0]	// tmp395, tmp396, D.6887
	ldp	q0, q1, [x1, 32]	// tmp397, tmp398, *_387
	stp	q0, q1, [x0, 32]	// tmp397, tmp398, D.6887
// varargs-dll.c:1726:   int n = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 988]	// tmp399, D.6887.b.b
	str	w0, [sp, 88]	// tmp399, n
// varargs-dll.c:1727:   int o = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [sp, 128]	// D.27388, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2335, argv.__stack
	cmp	w1, 0	// D.27388,
	blt	.L3997		//,
	add	x1, x0, 15	// D.27393, iftmp.2335,
	and	x1, x1, -8	// D.27394, D.27393,
	str	x1, [sp, 104]	// D.27394, argv.__stack
	b	.L3998		//
.L3997:
	add	w2, w1, 8	// D.27396, D.27388,
	str	w2, [sp, 128]	// D.27396, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27398, argv.__gr_offs
	cmp	w2, 0	// D.27398,
	ble	.L3999		//,
	add	x1, x0, 15	// D.27401, iftmp.2335,
	and	x1, x1, -8	// D.27402, D.27401,
	str	x1, [sp, 104]	// D.27402, argv.__stack
	b	.L3998		//
.L3999:
	ldr	x2, [sp, 112]	// D.27404, argv.__gr_top
	sxtw	x0, w1	// D.27405, D.27388
	add	x0, x2, x0	// iftmp.2335, D.27404, D.27405
.L3998:
	ldr	x1, [x0]	// D.27406, *iftmp.2334_117
	add	x0, sp, 1032	// tmp400,,
	ldp	q0, q1, [x1]	// tmp402, tmp403, *_406
	stp	q0, q1, [x0]	// tmp402, tmp403, D.6888
	ldp	q0, q1, [x1, 32]	// tmp404, tmp405, *_406
	stp	q0, q1, [x0, 32]	// tmp404, tmp405, D.6888
// varargs-dll.c:1727:   int o = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 1072]	// tmp406, D.6888.c.c
	str	w0, [sp, 92]	// tmp406, o
// varargs-dll.c:1728:   int p = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [sp, 128]	// D.27407, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2337, argv.__stack
	cmp	w1, 0	// D.27407,
	blt	.L4001		//,
	add	x1, x0, 15	// D.27412, iftmp.2337,
	and	x1, x1, -8	// D.27413, D.27412,
	str	x1, [sp, 104]	// D.27413, argv.__stack
	b	.L4002		//
.L4001:
	add	w2, w1, 8	// D.27415, D.27407,
	str	w2, [sp, 128]	// D.27415, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27417, argv.__gr_offs
	cmp	w2, 0	// D.27417,
	ble	.L4003		//,
	add	x1, x0, 15	// D.27420, iftmp.2337,
	and	x1, x1, -8	// D.27421, D.27420,
	str	x1, [sp, 104]	// D.27421, argv.__stack
	b	.L4002		//
.L4003:
	ldr	x2, [sp, 112]	// D.27423, argv.__gr_top
	sxtw	x0, w1	// D.27424, D.27407
	add	x0, x2, x0	// iftmp.2337, D.27423, D.27424
.L4002:
	ldr	x1, [x0]	// D.27425, *iftmp.2336_119
	add	x0, sp, 1096	// tmp407,,
	ldp	q0, q1, [x1]	// tmp409, tmp410, *_425
	stp	q0, q1, [x0]	// tmp409, tmp410, D.6889
	ldp	q0, q1, [x1, 32]	// tmp411, tmp412, *_425
	stp	q0, q1, [x0, 32]	// tmp411, tmp412, D.6889
// varargs-dll.c:1728:   int p = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 1156]	// tmp413, D.6889.d.d
	str	w0, [sp, 96]	// tmp413, p
// varargs-dll.c:1729:   int q = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [sp, 128]	// D.27426, argv.__gr_offs
	ldr	x0, [sp, 104]	// iftmp.2339, argv.__stack
	cmp	w1, 0	// D.27426,
	blt	.L4005		//,
	add	x1, x0, 15	// D.27431, iftmp.2339,
	and	x1, x1, -8	// D.27432, D.27431,
	str	x1, [sp, 104]	// D.27432, argv.__stack
	b	.L4006		//
.L4005:
	add	w2, w1, 8	// D.27434, D.27426,
	str	w2, [sp, 128]	// D.27434, argv.__gr_offs
	ldr	w2, [sp, 128]	// D.27436, argv.__gr_offs
	cmp	w2, 0	// D.27436,
	ble	.L4007		//,
	add	x1, x0, 15	// D.27439, iftmp.2339,
	and	x1, x1, -8	// D.27440, D.27439,
	str	x1, [sp, 104]	// D.27440, argv.__stack
	b	.L4006		//
.L4007:
	ldr	x2, [sp, 112]	// D.27442, argv.__gr_top
	sxtw	x0, w1	// D.27443, D.27426
	add	x0, x2, x0	// iftmp.2339, D.27442, D.27443
.L4006:
	ldr	x1, [x0]	// D.27444, *iftmp.2338_121
	add	x0, sp, 1160	// tmp414,,
	ldp	q0, q1, [x1]	// tmp416, tmp417, *_444
	stp	q0, q1, [x0]	// tmp416, tmp417, D.6890
	ldp	q0, q1, [x1, 32]	// tmp418, tmp419, *_444
	stp	q0, q1, [x0, 32]	// tmp418, tmp419, D.6890
// varargs-dll.c:1729:   int q = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 1160]	// tmp420, D.6890.a.a
	str	w0, [sp, 100]	// tmp420, q
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 36]	// tmp421, a
	ldr	w0, [sp, 40]	// tmp422, b
	add	w1, w1, w0	// _1, tmp421, tmp422
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp423, c
	add	w1, w1, w0	// _2, _1, tmp423
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp424, d
	add	w1, w1, w0	// _3, _2, tmp424
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp425, e
	add	w1, w1, w0	// _4, _3, tmp425
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp426, f
	add	w1, w1, w0	// _5, _4, tmp426
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp427, g
	add	w1, w1, w0	// _6, _5, tmp427
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp428, h
	add	w1, w1, w0	// _7, _6, tmp428
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp429, i
	add	w1, w1, w0	// _8, _7, tmp429
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp430, j
	add	w1, w1, w0	// _9, _8, tmp430
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp431, k
	add	w1, w1, w0	// _10, _9, tmp431
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp432, l
	add	w1, w1, w0	// _11, _10, tmp432
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp433, m
	add	w1, w1, w0	// _12, _11, tmp433
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp434, n
	add	w1, w1, w0	// _13, _12, tmp434
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp435, o
	add	w1, w1, w0	// _14, _13, tmp435
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp436, p
	add	w1, w1, w0	// _15, _14, tmp436
// varargs-dll.c:1731:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp437, q
	add	w0, w1, w0	// _53, _15, tmp437
	mov	w1, w0	// <retval>, _53
// varargs-dll.c:1732: }
	adrp	x0, :got:__stack_chk_guard	// tmp440,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp439, tmp440,
	ldr	x3, [sp, 1224]	// tmp442, D.27445
	ldr	x2, [x0]	// tmp443,
	subs	x3, x3, x2	// tmp442, tmp443
	mov	x2, 0	// tmp443
	beq	.L4010		//,
	bl	__stack_chk_fail		//
.L4010:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 1424	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE108:
	.size	use_va_args_many_hva_4_short_vector_16_bytes, .-use_va_args_many_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_list_many_hva_4_short_vector_16_bytes
	.type	use_va_list_many_hva_4_short_vector_16_bytes, %function
use_va_list_many_hva_4_short_vector_16_bytes:
.LFB109:
	.cfi_startproc
	sub	sp, sp, #1200	//,,
	.cfi_def_cfa_offset 1200
	str	x19, [sp]	//,
	.cfi_offset 19, -1200
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:1737:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27449, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2341, argv.__stack
	cmp	w1, 0	// D.27449,
	blt	.L4012		//,
	add	x1, x0, 15	// D.27454, iftmp.2341,
	and	x1, x1, -8	// D.27455, D.27454,
	str	x1, [x19]	// D.27455, argv.__stack
	b	.L4013		//
.L4012:
	add	w2, w1, 8	// D.27457, D.27449,
	str	w2, [x19, 24]	// D.27457, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27459, argv.__gr_offs
	cmp	w2, 0	// D.27459,
	ble	.L4014		//,
	add	x1, x0, 15	// D.27462, iftmp.2341,
	and	x1, x1, -8	// D.27463, D.27462,
	str	x1, [x19]	// D.27463, argv.__stack
	b	.L4013		//
.L4014:
	ldr	x2, [x19, 8]	// D.27465, argv.__gr_top
	sxtw	x0, w1	// D.27466, D.27449
	add	x0, x2, x0	// iftmp.2341, D.27465, D.27466
.L4013:
	ldr	x1, [x0]	// D.27467, *iftmp.2340_86
	add	x0, sp, 112	// tmp297,,
	ldp	q0, q1, [x1]	// tmp299, tmp300, *_137
	stp	q0, q1, [x0]	// tmp299, tmp300, D.6894
	ldp	q0, q1, [x1, 32]	// tmp301, tmp302, *_137
	stp	q0, q1, [x0, 32]	// tmp301, tmp302, D.6894
// varargs-dll.c:1737:   int a = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 112]	// tmp303, D.6894.a.a
	str	w0, [sp, 44]	// tmp303, a
// varargs-dll.c:1738:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.27468, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2343, argv.__stack
	cmp	w1, 0	// D.27468,
	blt	.L4016		//,
	add	x1, x0, 15	// D.27473, iftmp.2343,
	and	x1, x1, -8	// D.27474, D.27473,
	str	x1, [x19]	// D.27474, argv.__stack
	b	.L4017		//
.L4016:
	add	w2, w1, 8	// D.27476, D.27468,
	str	w2, [x19, 24]	// D.27476, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27478, argv.__gr_offs
	cmp	w2, 0	// D.27478,
	ble	.L4018		//,
	add	x1, x0, 15	// D.27481, iftmp.2343,
	and	x1, x1, -8	// D.27482, D.27481,
	str	x1, [x19]	// D.27482, argv.__stack
	b	.L4017		//
.L4018:
	ldr	x2, [x19, 8]	// D.27484, argv.__gr_top
	sxtw	x0, w1	// D.27485, D.27468
	add	x0, x2, x0	// iftmp.2343, D.27484, D.27485
.L4017:
	ldr	x1, [x0]	// D.27486, *iftmp.2342_88
	add	x0, sp, 176	// tmp304,,
	ldp	q0, q1, [x1]	// tmp306, tmp307, *_156
	stp	q0, q1, [x0]	// tmp306, tmp307, D.6895
	ldp	q0, q1, [x1, 32]	// tmp308, tmp309, *_156
	stp	q0, q1, [x0, 32]	// tmp308, tmp309, D.6895
// varargs-dll.c:1738:   int b = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 196]	// tmp310, D.6895.b.b
	str	w0, [sp, 48]	// tmp310, b
// varargs-dll.c:1739:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.27487, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2345, argv.__stack
	cmp	w1, 0	// D.27487,
	blt	.L4020		//,
	add	x1, x0, 15	// D.27492, iftmp.2345,
	and	x1, x1, -8	// D.27493, D.27492,
	str	x1, [x19]	// D.27493, argv.__stack
	b	.L4021		//
.L4020:
	add	w2, w1, 8	// D.27495, D.27487,
	str	w2, [x19, 24]	// D.27495, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27497, argv.__gr_offs
	cmp	w2, 0	// D.27497,
	ble	.L4022		//,
	add	x1, x0, 15	// D.27500, iftmp.2345,
	and	x1, x1, -8	// D.27501, D.27500,
	str	x1, [x19]	// D.27501, argv.__stack
	b	.L4021		//
.L4022:
	ldr	x2, [x19, 8]	// D.27503, argv.__gr_top
	sxtw	x0, w1	// D.27504, D.27487
	add	x0, x2, x0	// iftmp.2345, D.27503, D.27504
.L4021:
	ldr	x1, [x0]	// D.27505, *iftmp.2344_90
	add	x0, sp, 240	// tmp311,,
	ldp	q0, q1, [x1]	// tmp313, tmp314, *_175
	stp	q0, q1, [x0]	// tmp313, tmp314, D.6896
	ldp	q0, q1, [x1, 32]	// tmp315, tmp316, *_175
	stp	q0, q1, [x0, 32]	// tmp315, tmp316, D.6896
// varargs-dll.c:1739:   int c = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 280]	// tmp317, D.6896.c.c
	str	w0, [sp, 52]	// tmp317, c
// varargs-dll.c:1740:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27506, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2347, argv.__stack
	cmp	w1, 0	// D.27506,
	blt	.L4024		//,
	add	x1, x0, 15	// D.27511, iftmp.2347,
	and	x1, x1, -8	// D.27512, D.27511,
	str	x1, [x19]	// D.27512, argv.__stack
	b	.L4025		//
.L4024:
	add	w2, w1, 8	// D.27514, D.27506,
	str	w2, [x19, 24]	// D.27514, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27516, argv.__gr_offs
	cmp	w2, 0	// D.27516,
	ble	.L4026		//,
	add	x1, x0, 15	// D.27519, iftmp.2347,
	and	x1, x1, -8	// D.27520, D.27519,
	str	x1, [x19]	// D.27520, argv.__stack
	b	.L4025		//
.L4026:
	ldr	x2, [x19, 8]	// D.27522, argv.__gr_top
	sxtw	x0, w1	// D.27523, D.27506
	add	x0, x2, x0	// iftmp.2347, D.27522, D.27523
.L4025:
	ldr	x1, [x0]	// D.27524, *iftmp.2346_92
	add	x0, sp, 304	// tmp318,,
	ldp	q0, q1, [x1]	// tmp320, tmp321, *_194
	stp	q0, q1, [x0]	// tmp320, tmp321, D.6897
	ldp	q0, q1, [x1, 32]	// tmp322, tmp323, *_194
	stp	q0, q1, [x0, 32]	// tmp322, tmp323, D.6897
// varargs-dll.c:1740:   int d = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 364]	// tmp324, D.6897.d.d
	str	w0, [sp, 56]	// tmp324, d
// varargs-dll.c:1741:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27525, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2349, argv.__stack
	cmp	w1, 0	// D.27525,
	blt	.L4028		//,
	add	x1, x0, 15	// D.27530, iftmp.2349,
	and	x1, x1, -8	// D.27531, D.27530,
	str	x1, [x19]	// D.27531, argv.__stack
	b	.L4029		//
.L4028:
	add	w2, w1, 8	// D.27533, D.27525,
	str	w2, [x19, 24]	// D.27533, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27535, argv.__gr_offs
	cmp	w2, 0	// D.27535,
	ble	.L4030		//,
	add	x1, x0, 15	// D.27538, iftmp.2349,
	and	x1, x1, -8	// D.27539, D.27538,
	str	x1, [x19]	// D.27539, argv.__stack
	b	.L4029		//
.L4030:
	ldr	x2, [x19, 8]	// D.27541, argv.__gr_top
	sxtw	x0, w1	// D.27542, D.27525
	add	x0, x2, x0	// iftmp.2349, D.27541, D.27542
.L4029:
	ldr	x1, [x0]	// D.27543, *iftmp.2348_94
	add	x0, sp, 368	// tmp325,,
	ldp	q0, q1, [x1]	// tmp327, tmp328, *_213
	stp	q0, q1, [x0]	// tmp327, tmp328, D.6898
	ldp	q0, q1, [x1, 32]	// tmp329, tmp330, *_213
	stp	q0, q1, [x0, 32]	// tmp329, tmp330, D.6898
// varargs-dll.c:1741:   int e = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 368]	// tmp331, D.6898.a.a
	str	w0, [sp, 60]	// tmp331, e
// varargs-dll.c:1742:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.27544, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2351, argv.__stack
	cmp	w1, 0	// D.27544,
	blt	.L4032		//,
	add	x1, x0, 15	// D.27549, iftmp.2351,
	and	x1, x1, -8	// D.27550, D.27549,
	str	x1, [x19]	// D.27550, argv.__stack
	b	.L4033		//
.L4032:
	add	w2, w1, 8	// D.27552, D.27544,
	str	w2, [x19, 24]	// D.27552, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27554, argv.__gr_offs
	cmp	w2, 0	// D.27554,
	ble	.L4034		//,
	add	x1, x0, 15	// D.27557, iftmp.2351,
	and	x1, x1, -8	// D.27558, D.27557,
	str	x1, [x19]	// D.27558, argv.__stack
	b	.L4033		//
.L4034:
	ldr	x2, [x19, 8]	// D.27560, argv.__gr_top
	sxtw	x0, w1	// D.27561, D.27544
	add	x0, x2, x0	// iftmp.2351, D.27560, D.27561
.L4033:
	ldr	x1, [x0]	// D.27562, *iftmp.2350_96
	add	x0, sp, 432	// tmp332,,
	ldp	q0, q1, [x1]	// tmp334, tmp335, *_232
	stp	q0, q1, [x0]	// tmp334, tmp335, D.6899
	ldp	q0, q1, [x1, 32]	// tmp336, tmp337, *_232
	stp	q0, q1, [x0, 32]	// tmp336, tmp337, D.6899
// varargs-dll.c:1742:   int f = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 452]	// tmp338, D.6899.b.b
	str	w0, [sp, 64]	// tmp338, f
// varargs-dll.c:1743:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.27563, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2353, argv.__stack
	cmp	w1, 0	// D.27563,
	blt	.L4036		//,
	add	x1, x0, 15	// D.27568, iftmp.2353,
	and	x1, x1, -8	// D.27569, D.27568,
	str	x1, [x19]	// D.27569, argv.__stack
	b	.L4037		//
.L4036:
	add	w2, w1, 8	// D.27571, D.27563,
	str	w2, [x19, 24]	// D.27571, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27573, argv.__gr_offs
	cmp	w2, 0	// D.27573,
	ble	.L4038		//,
	add	x1, x0, 15	// D.27576, iftmp.2353,
	and	x1, x1, -8	// D.27577, D.27576,
	str	x1, [x19]	// D.27577, argv.__stack
	b	.L4037		//
.L4038:
	ldr	x2, [x19, 8]	// D.27579, argv.__gr_top
	sxtw	x0, w1	// D.27580, D.27563
	add	x0, x2, x0	// iftmp.2353, D.27579, D.27580
.L4037:
	ldr	x1, [x0]	// D.27581, *iftmp.2352_98
	add	x0, sp, 496	// tmp339,,
	ldp	q0, q1, [x1]	// tmp341, tmp342, *_251
	stp	q0, q1, [x0]	// tmp341, tmp342, D.6900
	ldp	q0, q1, [x1, 32]	// tmp343, tmp344, *_251
	stp	q0, q1, [x0, 32]	// tmp343, tmp344, D.6900
// varargs-dll.c:1743:   int g = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 536]	// tmp345, D.6900.c.c
	str	w0, [sp, 68]	// tmp345, g
// varargs-dll.c:1744:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27582, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2355, argv.__stack
	cmp	w1, 0	// D.27582,
	blt	.L4040		//,
	add	x1, x0, 15	// D.27587, iftmp.2355,
	and	x1, x1, -8	// D.27588, D.27587,
	str	x1, [x19]	// D.27588, argv.__stack
	b	.L4041		//
.L4040:
	add	w2, w1, 8	// D.27590, D.27582,
	str	w2, [x19, 24]	// D.27590, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27592, argv.__gr_offs
	cmp	w2, 0	// D.27592,
	ble	.L4042		//,
	add	x1, x0, 15	// D.27595, iftmp.2355,
	and	x1, x1, -8	// D.27596, D.27595,
	str	x1, [x19]	// D.27596, argv.__stack
	b	.L4041		//
.L4042:
	ldr	x2, [x19, 8]	// D.27598, argv.__gr_top
	sxtw	x0, w1	// D.27599, D.27582
	add	x0, x2, x0	// iftmp.2355, D.27598, D.27599
.L4041:
	ldr	x1, [x0]	// D.27600, *iftmp.2354_100
	add	x0, sp, 560	// tmp346,,
	ldp	q0, q1, [x1]	// tmp348, tmp349, *_270
	stp	q0, q1, [x0]	// tmp348, tmp349, D.6901
	ldp	q0, q1, [x1, 32]	// tmp350, tmp351, *_270
	stp	q0, q1, [x0, 32]	// tmp350, tmp351, D.6901
// varargs-dll.c:1744:   int h = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 620]	// tmp352, D.6901.d.d
	str	w0, [sp, 72]	// tmp352, h
// varargs-dll.c:1745:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27601, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2357, argv.__stack
	cmp	w1, 0	// D.27601,
	blt	.L4044		//,
	add	x1, x0, 15	// D.27606, iftmp.2357,
	and	x1, x1, -8	// D.27607, D.27606,
	str	x1, [x19]	// D.27607, argv.__stack
	b	.L4045		//
.L4044:
	add	w2, w1, 8	// D.27609, D.27601,
	str	w2, [x19, 24]	// D.27609, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27611, argv.__gr_offs
	cmp	w2, 0	// D.27611,
	ble	.L4046		//,
	add	x1, x0, 15	// D.27614, iftmp.2357,
	and	x1, x1, -8	// D.27615, D.27614,
	str	x1, [x19]	// D.27615, argv.__stack
	b	.L4045		//
.L4046:
	ldr	x2, [x19, 8]	// D.27617, argv.__gr_top
	sxtw	x0, w1	// D.27618, D.27601
	add	x0, x2, x0	// iftmp.2357, D.27617, D.27618
.L4045:
	ldr	x1, [x0]	// D.27619, *iftmp.2356_102
	add	x0, sp, 624	// tmp353,,
	ldp	q0, q1, [x1]	// tmp355, tmp356, *_289
	stp	q0, q1, [x0]	// tmp355, tmp356, D.6902
	ldp	q0, q1, [x1, 32]	// tmp357, tmp358, *_289
	stp	q0, q1, [x0, 32]	// tmp357, tmp358, D.6902
// varargs-dll.c:1745:   int i = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 624]	// tmp359, D.6902.a.a
	str	w0, [sp, 76]	// tmp359, i
// varargs-dll.c:1746:   int j = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.27620, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2359, argv.__stack
	cmp	w1, 0	// D.27620,
	blt	.L4048		//,
	add	x1, x0, 15	// D.27625, iftmp.2359,
	and	x1, x1, -8	// D.27626, D.27625,
	str	x1, [x19]	// D.27626, argv.__stack
	b	.L4049		//
.L4048:
	add	w2, w1, 8	// D.27628, D.27620,
	str	w2, [x19, 24]	// D.27628, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27630, argv.__gr_offs
	cmp	w2, 0	// D.27630,
	ble	.L4050		//,
	add	x1, x0, 15	// D.27633, iftmp.2359,
	and	x1, x1, -8	// D.27634, D.27633,
	str	x1, [x19]	// D.27634, argv.__stack
	b	.L4049		//
.L4050:
	ldr	x2, [x19, 8]	// D.27636, argv.__gr_top
	sxtw	x0, w1	// D.27637, D.27620
	add	x0, x2, x0	// iftmp.2359, D.27636, D.27637
.L4049:
	ldr	x1, [x0]	// D.27638, *iftmp.2358_104
	add	x0, sp, 688	// tmp360,,
	ldp	q0, q1, [x1]	// tmp362, tmp363, *_308
	stp	q0, q1, [x0]	// tmp362, tmp363, D.6903
	ldp	q0, q1, [x1, 32]	// tmp364, tmp365, *_308
	stp	q0, q1, [x0, 32]	// tmp364, tmp365, D.6903
// varargs-dll.c:1746:   int j = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 708]	// tmp366, D.6903.b.b
	str	w0, [sp, 80]	// tmp366, j
// varargs-dll.c:1747:   int k = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.27639, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2361, argv.__stack
	cmp	w1, 0	// D.27639,
	blt	.L4052		//,
	add	x1, x0, 15	// D.27644, iftmp.2361,
	and	x1, x1, -8	// D.27645, D.27644,
	str	x1, [x19]	// D.27645, argv.__stack
	b	.L4053		//
.L4052:
	add	w2, w1, 8	// D.27647, D.27639,
	str	w2, [x19, 24]	// D.27647, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27649, argv.__gr_offs
	cmp	w2, 0	// D.27649,
	ble	.L4054		//,
	add	x1, x0, 15	// D.27652, iftmp.2361,
	and	x1, x1, -8	// D.27653, D.27652,
	str	x1, [x19]	// D.27653, argv.__stack
	b	.L4053		//
.L4054:
	ldr	x2, [x19, 8]	// D.27655, argv.__gr_top
	sxtw	x0, w1	// D.27656, D.27639
	add	x0, x2, x0	// iftmp.2361, D.27655, D.27656
.L4053:
	ldr	x1, [x0]	// D.27657, *iftmp.2360_106
	add	x0, sp, 752	// tmp367,,
	ldp	q0, q1, [x1]	// tmp369, tmp370, *_327
	stp	q0, q1, [x0]	// tmp369, tmp370, D.6904
	ldp	q0, q1, [x1, 32]	// tmp371, tmp372, *_327
	stp	q0, q1, [x0, 32]	// tmp371, tmp372, D.6904
// varargs-dll.c:1747:   int k = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 792]	// tmp373, D.6904.c.c
	str	w0, [sp, 84]	// tmp373, k
// varargs-dll.c:1748:   int l = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27658, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2363, argv.__stack
	cmp	w1, 0	// D.27658,
	blt	.L4056		//,
	add	x1, x0, 15	// D.27663, iftmp.2363,
	and	x1, x1, -8	// D.27664, D.27663,
	str	x1, [x19]	// D.27664, argv.__stack
	b	.L4057		//
.L4056:
	add	w2, w1, 8	// D.27666, D.27658,
	str	w2, [x19, 24]	// D.27666, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27668, argv.__gr_offs
	cmp	w2, 0	// D.27668,
	ble	.L4058		//,
	add	x1, x0, 15	// D.27671, iftmp.2363,
	and	x1, x1, -8	// D.27672, D.27671,
	str	x1, [x19]	// D.27672, argv.__stack
	b	.L4057		//
.L4058:
	ldr	x2, [x19, 8]	// D.27674, argv.__gr_top
	sxtw	x0, w1	// D.27675, D.27658
	add	x0, x2, x0	// iftmp.2363, D.27674, D.27675
.L4057:
	ldr	x1, [x0]	// D.27676, *iftmp.2362_108
	add	x0, sp, 816	// tmp374,,
	ldp	q0, q1, [x1]	// tmp376, tmp377, *_346
	stp	q0, q1, [x0]	// tmp376, tmp377, D.6905
	ldp	q0, q1, [x1, 32]	// tmp378, tmp379, *_346
	stp	q0, q1, [x0, 32]	// tmp378, tmp379, D.6905
// varargs-dll.c:1748:   int l = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 876]	// tmp380, D.6905.d.d
	str	w0, [sp, 88]	// tmp380, l
// varargs-dll.c:1749:   int m = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27677, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2365, argv.__stack
	cmp	w1, 0	// D.27677,
	blt	.L4060		//,
	add	x1, x0, 15	// D.27682, iftmp.2365,
	and	x1, x1, -8	// D.27683, D.27682,
	str	x1, [x19]	// D.27683, argv.__stack
	b	.L4061		//
.L4060:
	add	w2, w1, 8	// D.27685, D.27677,
	str	w2, [x19, 24]	// D.27685, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27687, argv.__gr_offs
	cmp	w2, 0	// D.27687,
	ble	.L4062		//,
	add	x1, x0, 15	// D.27690, iftmp.2365,
	and	x1, x1, -8	// D.27691, D.27690,
	str	x1, [x19]	// D.27691, argv.__stack
	b	.L4061		//
.L4062:
	ldr	x2, [x19, 8]	// D.27693, argv.__gr_top
	sxtw	x0, w1	// D.27694, D.27677
	add	x0, x2, x0	// iftmp.2365, D.27693, D.27694
.L4061:
	ldr	x1, [x0]	// D.27695, *iftmp.2364_110
	add	x0, sp, 880	// tmp381,,
	ldp	q0, q1, [x1]	// tmp383, tmp384, *_365
	stp	q0, q1, [x0]	// tmp383, tmp384, D.6906
	ldp	q0, q1, [x1, 32]	// tmp385, tmp386, *_365
	stp	q0, q1, [x0, 32]	// tmp385, tmp386, D.6906
// varargs-dll.c:1749:   int m = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 880]	// tmp387, D.6906.a.a
	str	w0, [sp, 92]	// tmp387, m
// varargs-dll.c:1750:   int n = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w1, [x19, 24]	// D.27696, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2367, argv.__stack
	cmp	w1, 0	// D.27696,
	blt	.L4064		//,
	add	x1, x0, 15	// D.27701, iftmp.2367,
	and	x1, x1, -8	// D.27702, D.27701,
	str	x1, [x19]	// D.27702, argv.__stack
	b	.L4065		//
.L4064:
	add	w2, w1, 8	// D.27704, D.27696,
	str	w2, [x19, 24]	// D.27704, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27706, argv.__gr_offs
	cmp	w2, 0	// D.27706,
	ble	.L4066		//,
	add	x1, x0, 15	// D.27709, iftmp.2367,
	and	x1, x1, -8	// D.27710, D.27709,
	str	x1, [x19]	// D.27710, argv.__stack
	b	.L4065		//
.L4066:
	ldr	x2, [x19, 8]	// D.27712, argv.__gr_top
	sxtw	x0, w1	// D.27713, D.27696
	add	x0, x2, x0	// iftmp.2367, D.27712, D.27713
.L4065:
	ldr	x1, [x0]	// D.27714, *iftmp.2366_112
	add	x0, sp, 944	// tmp388,,
	ldp	q0, q1, [x1]	// tmp390, tmp391, *_384
	stp	q0, q1, [x0]	// tmp390, tmp391, D.6907
	ldp	q0, q1, [x1, 32]	// tmp392, tmp393, *_384
	stp	q0, q1, [x0, 32]	// tmp392, tmp393, D.6907
// varargs-dll.c:1750:   int n = va_arg (argv, struct hva_4_short_vector_16_bytes).b.b;
	ldr	w0, [sp, 964]	// tmp394, D.6907.b.b
	str	w0, [sp, 96]	// tmp394, n
// varargs-dll.c:1751:   int o = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w1, [x19, 24]	// D.27715, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2369, argv.__stack
	cmp	w1, 0	// D.27715,
	blt	.L4068		//,
	add	x1, x0, 15	// D.27720, iftmp.2369,
	and	x1, x1, -8	// D.27721, D.27720,
	str	x1, [x19]	// D.27721, argv.__stack
	b	.L4069		//
.L4068:
	add	w2, w1, 8	// D.27723, D.27715,
	str	w2, [x19, 24]	// D.27723, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27725, argv.__gr_offs
	cmp	w2, 0	// D.27725,
	ble	.L4070		//,
	add	x1, x0, 15	// D.27728, iftmp.2369,
	and	x1, x1, -8	// D.27729, D.27728,
	str	x1, [x19]	// D.27729, argv.__stack
	b	.L4069		//
.L4070:
	ldr	x2, [x19, 8]	// D.27731, argv.__gr_top
	sxtw	x0, w1	// D.27732, D.27715
	add	x0, x2, x0	// iftmp.2369, D.27731, D.27732
.L4069:
	ldr	x1, [x0]	// D.27733, *iftmp.2368_114
	add	x0, sp, 1008	// tmp395,,
	ldp	q0, q1, [x1]	// tmp397, tmp398, *_403
	stp	q0, q1, [x0]	// tmp397, tmp398, D.6908
	ldp	q0, q1, [x1, 32]	// tmp399, tmp400, *_403
	stp	q0, q1, [x0, 32]	// tmp399, tmp400, D.6908
// varargs-dll.c:1751:   int o = va_arg (argv, struct hva_4_short_vector_16_bytes).c.c;
	ldr	w0, [sp, 1048]	// tmp401, D.6908.c.c
	str	w0, [sp, 100]	// tmp401, o
// varargs-dll.c:1752:   int p = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w1, [x19, 24]	// D.27734, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2371, argv.__stack
	cmp	w1, 0	// D.27734,
	blt	.L4072		//,
	add	x1, x0, 15	// D.27739, iftmp.2371,
	and	x1, x1, -8	// D.27740, D.27739,
	str	x1, [x19]	// D.27740, argv.__stack
	b	.L4073		//
.L4072:
	add	w2, w1, 8	// D.27742, D.27734,
	str	w2, [x19, 24]	// D.27742, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27744, argv.__gr_offs
	cmp	w2, 0	// D.27744,
	ble	.L4074		//,
	add	x1, x0, 15	// D.27747, iftmp.2371,
	and	x1, x1, -8	// D.27748, D.27747,
	str	x1, [x19]	// D.27748, argv.__stack
	b	.L4073		//
.L4074:
	ldr	x2, [x19, 8]	// D.27750, argv.__gr_top
	sxtw	x0, w1	// D.27751, D.27734
	add	x0, x2, x0	// iftmp.2371, D.27750, D.27751
.L4073:
	ldr	x1, [x0]	// D.27752, *iftmp.2370_116
	add	x0, sp, 1072	// tmp402,,
	ldp	q0, q1, [x1]	// tmp404, tmp405, *_422
	stp	q0, q1, [x0]	// tmp404, tmp405, D.6909
	ldp	q0, q1, [x1, 32]	// tmp406, tmp407, *_422
	stp	q0, q1, [x0, 32]	// tmp406, tmp407, D.6909
// varargs-dll.c:1752:   int p = va_arg (argv, struct hva_4_short_vector_16_bytes).d.d;
	ldr	w0, [sp, 1132]	// tmp408, D.6909.d.d
	str	w0, [sp, 104]	// tmp408, p
// varargs-dll.c:1753:   int q = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w1, [x19, 24]	// D.27753, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2373, argv.__stack
	cmp	w1, 0	// D.27753,
	blt	.L4076		//,
	add	x1, x0, 15	// D.27758, iftmp.2373,
	and	x1, x1, -8	// D.27759, D.27758,
	str	x1, [x19]	// D.27759, argv.__stack
	b	.L4077		//
.L4076:
	add	w2, w1, 8	// D.27761, D.27753,
	str	w2, [x19, 24]	// D.27761, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.27763, argv.__gr_offs
	cmp	w2, 0	// D.27763,
	ble	.L4078		//,
	add	x1, x0, 15	// D.27766, iftmp.2373,
	and	x1, x1, -8	// D.27767, D.27766,
	str	x1, [x19]	// D.27767, argv.__stack
	b	.L4077		//
.L4078:
	ldr	x2, [x19, 8]	// D.27769, argv.__gr_top
	sxtw	x0, w1	// D.27770, D.27753
	add	x0, x2, x0	// iftmp.2373, D.27769, D.27770
.L4077:
	ldr	x1, [x0]	// D.27771, *iftmp.2372_118
	add	x0, sp, 1136	// tmp409,,
	ldp	q0, q1, [x1]	// tmp411, tmp412, *_441
	stp	q0, q1, [x0]	// tmp411, tmp412, D.6910
	ldp	q0, q1, [x1, 32]	// tmp413, tmp414, *_441
	stp	q0, q1, [x0, 32]	// tmp413, tmp414, D.6910
// varargs-dll.c:1753:   int q = va_arg (argv, struct hva_4_short_vector_16_bytes).a.a;
	ldr	w0, [sp, 1136]	// tmp415, D.6910.a.a
	str	w0, [sp, 108]	// tmp415, q
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w1, [sp, 44]	// tmp416, a
	ldr	w0, [sp, 48]	// tmp417, b
	add	w1, w1, w0	// _1, tmp416, tmp417
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp418, c
	add	w1, w1, w0	// _2, _1, tmp418
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp419, d
	add	w1, w1, w0	// _3, _2, tmp419
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp420, e
	add	w1, w1, w0	// _4, _3, tmp420
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp421, f
	add	w1, w1, w0	// _5, _4, tmp421
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp422, g
	add	w1, w1, w0	// _6, _5, tmp422
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp423, h
	add	w1, w1, w0	// _7, _6, tmp423
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp424, i
	add	w1, w1, w0	// _8, _7, tmp424
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// tmp425, j
	add	w1, w1, w0	// _9, _8, tmp425
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// tmp426, k
	add	w1, w1, w0	// _10, _9, tmp426
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// tmp427, l
	add	w1, w1, w0	// _11, _10, tmp427
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// tmp428, m
	add	w1, w1, w0	// _12, _11, tmp428
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 96]	// tmp429, n
	add	w1, w1, w0	// _13, _12, tmp429
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 100]	// tmp430, o
	add	w1, w1, w0	// _14, _13, tmp430
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 104]	// tmp431, p
	add	w1, w1, w0	// _15, _14, tmp431
// varargs-dll.c:1754:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 108]	// tmp432, q
	add	w0, w1, w0	// _51, _15, tmp432
// varargs-dll.c:1755: }
	ldr	x19, [sp]	//,
	add	sp, sp, 1200	//,,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE109:
	.size	use_va_list_many_hva_4_short_vector_16_bytes, .-use_va_list_many_hva_4_short_vector_16_bytes
	.align	2
	.global	use_va_args_ints_and_composites
	.type	use_va_args_ints_and_composites, %function
use_va_args_ints_and_composites:
.LFB110:
	.cfi_startproc
	sub	sp, sp, #768	//,,
	.cfi_def_cfa_offset 768
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -768
	.cfi_offset 30, -760
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 712]	//,
	str	x2, [sp, 720]	//,
	str	x3, [sp, 728]	//,
	str	x4, [sp, 736]	//,
	str	x5, [sp, 744]	//,
	str	x6, [sp, 752]	//,
	str	x7, [sp, 760]	//,
	add	x0, sp, 512	// tmp374,,
	str	q0, [x0, 64]	//,
	add	x0, sp, 512	// tmp376,,
	str	q1, [x0, 80]	//,
	add	x0, sp, 512	// tmp378,,
	str	q2, [x0, 96]	//,
	add	x0, sp, 512	// tmp380,,
	str	q3, [x0, 112]	//,
	add	x0, sp, 512	// tmp382,,
	str	q4, [x0, 128]	//,
	add	x0, sp, 512	// tmp384,,
	str	q5, [x0, 144]	//,
	add	x0, sp, 512	// tmp386,,
	str	q6, [x0, 160]	//,
	add	x0, sp, 512	// tmp388,,
	str	q7, [x0, 176]	//,
// varargs-dll.c:1759: {
	adrp	x0, :got:__stack_chk_guard	// tmp308,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp307, tmp308,
	ldr	x1, [x0]	// tmp369,
	str	x1, [sp, 568]	// tmp369, D.28083
	mov	x1, 0	// tmp369
// varargs-dll.c:1761:   va_start (argv, format);
	add	x0, sp, 768	// tmp390,,
	str	x0, [sp, 136]	// tmp390, MEM[(struct  *)&argv].__stack
	add	x0, sp, 768	// tmp391,,
	str	x0, [sp, 144]	// tmp391, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 704	// tmp310,,
	str	x0, [sp, 152]	// tmp310, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp311,
	str	w0, [sp, 160]	// tmp311, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp312,
	str	w0, [sp, 164]	// tmp312, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1762:   int a = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.27772, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2375, argv.__stack
	cmp	w1, 0	// D.27772,
	blt	.L4082		//,
	add	x1, x0, 11	// D.27777, iftmp.2375,
	and	x1, x1, -8	// D.27778, D.27777,
	str	x1, [sp, 136]	// D.27778, argv.__stack
	b	.L4083		//
.L4082:
	add	w2, w1, 8	// D.27780, D.27772,
	str	w2, [sp, 160]	// D.27780, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27782, argv.__gr_offs
	cmp	w2, 0	// D.27782,
	ble	.L4084		//,
	add	x1, x0, 11	// D.27785, iftmp.2375,
	and	x1, x1, -8	// D.27786, D.27785,
	str	x1, [sp, 136]	// D.27786, argv.__stack
	b	.L4083		//
.L4084:
	ldr	x2, [sp, 144]	// D.27788, argv.__gr_top
	sxtw	x0, w1	// D.27789, D.27772
	add	x0, x2, x0	// iftmp.2375, D.27788, D.27789
.L4083:
	ldr	w0, [x0]	// tmp313, *iftmp.2374_112
	str	w0, [sp, 44]	// tmp313, a
// varargs-dll.c:1763:   long b = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.27790, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2377, argv.__stack
	cmp	w1, 0	// D.27790,
	blt	.L4086		//,
	add	x1, x0, 15	// D.27795, iftmp.2377,
	and	x1, x1, -8	// D.27796, D.27795,
	str	x1, [sp, 136]	// D.27796, argv.__stack
	b	.L4087		//
.L4086:
	add	w2, w1, 8	// D.27798, D.27790,
	str	w2, [sp, 160]	// D.27798, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27800, argv.__gr_offs
	cmp	w2, 0	// D.27800,
	ble	.L4088		//,
	add	x1, x0, 15	// D.27803, iftmp.2377,
	and	x1, x1, -8	// D.27804, D.27803,
	str	x1, [sp, 136]	// D.27804, argv.__stack
	b	.L4087		//
.L4088:
	ldr	x2, [sp, 144]	// D.27806, argv.__gr_top
	sxtw	x0, w1	// D.27807, D.27790
	add	x0, x2, x0	// iftmp.2377, D.27806, D.27807
.L4087:
	ldr	x0, [x0]	// tmp314, *iftmp.2376_114
	str	x0, [sp, 88]	// tmp314, b
// varargs-dll.c:1764:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 160]	// D.27808, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2379, argv.__stack
	cmp	w1, 0	// D.27808,
	blt	.L4090		//,
	add	x1, x0, 15	// D.27813, iftmp.2379,
	and	x1, x1, -8	// D.27814, D.27813,
	str	x1, [sp, 136]	// D.27814, argv.__stack
	b	.L4091		//
.L4090:
	add	w2, w1, 8	// D.27816, D.27808,
	str	w2, [sp, 160]	// D.27816, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27818, argv.__gr_offs
	cmp	w2, 0	// D.27818,
	ble	.L4092		//,
	add	x1, x0, 15	// D.27821, iftmp.2379,
	and	x1, x1, -8	// D.27822, D.27821,
	str	x1, [sp, 136]	// D.27822, argv.__stack
	b	.L4091		//
.L4092:
	ldr	x2, [sp, 144]	// D.27824, argv.__gr_top
	sxtw	x0, w1	// D.27825, D.27808
	add	x0, x2, x0	// iftmp.2379, D.27824, D.27825
.L4091:
	ldr	x1, [x0]	// D.27826, *iftmp.2378_116
	add	x0, sp, 168	// tmp315,,
	ldp	q0, q1, [x1]	// tmp317, tmp318, *_197
	stp	q0, q1, [x0]	// tmp317, tmp318, D.6913
	ldp	q0, q1, [x1, 32]	// tmp319, tmp320, *_197
	stp	q0, q1, [x0, 32]	// tmp319, tmp320, D.6913
	ldr	q0, [x1, 64]	// tmp321, *_197
	str	q0, [x0, 64]	// tmp321, D.6913
// varargs-dll.c:1764:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 176]	// _1, D.6913.c
	bl	atoi		//
	str	w0, [sp, 48]	//, c
// varargs-dll.c:1765:   int d = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.27827, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2381, argv.__stack
	cmp	w1, 0	// D.27827,
	blt	.L4094		//,
	add	x1, x0, 11	// D.27832, iftmp.2381,
	and	x1, x1, -8	// D.27833, D.27832,
	str	x1, [sp, 136]	// D.27833, argv.__stack
	b	.L4095		//
.L4094:
	add	w2, w1, 8	// D.27835, D.27827,
	str	w2, [sp, 160]	// D.27835, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27837, argv.__gr_offs
	cmp	w2, 0	// D.27837,
	ble	.L4096		//,
	add	x1, x0, 11	// D.27840, iftmp.2381,
	and	x1, x1, -8	// D.27841, D.27840,
	str	x1, [sp, 136]	// D.27841, argv.__stack
	b	.L4095		//
.L4096:
	ldr	x2, [sp, 144]	// D.27843, argv.__gr_top
	sxtw	x0, w1	// D.27844, D.27827
	add	x0, x2, x0	// iftmp.2381, D.27843, D.27844
.L4095:
	ldr	w0, [x0]	// tmp322, *iftmp.2380_118
	str	w0, [sp, 52]	// tmp322, d
// varargs-dll.c:1766:   long e = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.27845, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2383, argv.__stack
	cmp	w1, 0	// D.27845,
	blt	.L4098		//,
	add	x1, x0, 15	// D.27850, iftmp.2383,
	and	x1, x1, -8	// D.27851, D.27850,
	str	x1, [sp, 136]	// D.27851, argv.__stack
	b	.L4099		//
.L4098:
	add	w2, w1, 8	// D.27853, D.27845,
	str	w2, [sp, 160]	// D.27853, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27855, argv.__gr_offs
	cmp	w2, 0	// D.27855,
	ble	.L4100		//,
	add	x1, x0, 15	// D.27858, iftmp.2383,
	and	x1, x1, -8	// D.27859, D.27858,
	str	x1, [sp, 136]	// D.27859, argv.__stack
	b	.L4099		//
.L4100:
	ldr	x2, [sp, 144]	// D.27861, argv.__gr_top
	sxtw	x0, w1	// D.27862, D.27845
	add	x0, x2, x0	// iftmp.2383, D.27861, D.27862
.L4099:
	ldr	x0, [x0]	// tmp323, *iftmp.2382_120
	str	x0, [sp, 96]	// tmp323, e
// varargs-dll.c:1767:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 160]	// D.27863, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2385, argv.__stack
	cmp	w1, 0	// D.27863,
	blt	.L4102		//,
	add	x1, x0, 15	// D.27868, iftmp.2385,
	and	x1, x1, -8	// D.27869, D.27868,
	str	x1, [sp, 136]	// D.27869, argv.__stack
	b	.L4103		//
.L4102:
	add	w2, w1, 8	// D.27871, D.27863,
	str	w2, [sp, 160]	// D.27871, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27873, argv.__gr_offs
	cmp	w2, 0	// D.27873,
	ble	.L4104		//,
	add	x1, x0, 15	// D.27876, iftmp.2385,
	and	x1, x1, -8	// D.27877, D.27876,
	str	x1, [sp, 136]	// D.27877, argv.__stack
	b	.L4103		//
.L4104:
	ldr	x2, [sp, 144]	// D.27879, argv.__gr_top
	sxtw	x0, w1	// D.27880, D.27863
	add	x0, x2, x0	// iftmp.2385, D.27879, D.27880
.L4103:
	ldr	x1, [x0]	// D.27881, *iftmp.2384_122
	add	x0, sp, 248	// tmp324,,
	ldp	q0, q1, [x1]	// tmp326, tmp327, *_250
	stp	q0, q1, [x0]	// tmp326, tmp327, D.6914
	ldp	q0, q1, [x1, 32]	// tmp328, tmp329, *_250
	stp	q0, q1, [x0, 32]	// tmp328, tmp329, D.6914
	ldr	q0, [x1, 64]	// tmp330, *_250
	str	q0, [x0, 64]	// tmp330, D.6914
// varargs-dll.c:1767:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 256]	// _2, D.6914.c
	bl	atoi		//
	str	w0, [sp, 56]	//, f
// varargs-dll.c:1768:   int g = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.27882, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2387, argv.__stack
	cmp	w1, 0	// D.27882,
	blt	.L4106		//,
	add	x1, x0, 11	// D.27887, iftmp.2387,
	and	x1, x1, -8	// D.27888, D.27887,
	str	x1, [sp, 136]	// D.27888, argv.__stack
	b	.L4107		//
.L4106:
	add	w2, w1, 8	// D.27890, D.27882,
	str	w2, [sp, 160]	// D.27890, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27892, argv.__gr_offs
	cmp	w2, 0	// D.27892,
	ble	.L4108		//,
	add	x1, x0, 11	// D.27895, iftmp.2387,
	and	x1, x1, -8	// D.27896, D.27895,
	str	x1, [sp, 136]	// D.27896, argv.__stack
	b	.L4107		//
.L4108:
	ldr	x2, [sp, 144]	// D.27898, argv.__gr_top
	sxtw	x0, w1	// D.27899, D.27882
	add	x0, x2, x0	// iftmp.2387, D.27898, D.27899
.L4107:
	ldr	w0, [x0]	// tmp331, *iftmp.2386_124
	str	w0, [sp, 60]	// tmp331, g
// varargs-dll.c:1769:   long h = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.27900, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2389, argv.__stack
	cmp	w1, 0	// D.27900,
	blt	.L4110		//,
	add	x1, x0, 15	// D.27905, iftmp.2389,
	and	x1, x1, -8	// D.27906, D.27905,
	str	x1, [sp, 136]	// D.27906, argv.__stack
	b	.L4111		//
.L4110:
	add	w2, w1, 8	// D.27908, D.27900,
	str	w2, [sp, 160]	// D.27908, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27910, argv.__gr_offs
	cmp	w2, 0	// D.27910,
	ble	.L4112		//,
	add	x1, x0, 15	// D.27913, iftmp.2389,
	and	x1, x1, -8	// D.27914, D.27913,
	str	x1, [sp, 136]	// D.27914, argv.__stack
	b	.L4111		//
.L4112:
	ldr	x2, [sp, 144]	// D.27916, argv.__gr_top
	sxtw	x0, w1	// D.27917, D.27900
	add	x0, x2, x0	// iftmp.2389, D.27916, D.27917
.L4111:
	ldr	x0, [x0]	// tmp332, *iftmp.2388_126
	str	x0, [sp, 104]	// tmp332, h
// varargs-dll.c:1770:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 160]	// D.27918, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2391, argv.__stack
	cmp	w1, 0	// D.27918,
	blt	.L4114		//,
	add	x1, x0, 15	// D.27923, iftmp.2391,
	and	x1, x1, -8	// D.27924, D.27923,
	str	x1, [sp, 136]	// D.27924, argv.__stack
	b	.L4115		//
.L4114:
	add	w2, w1, 8	// D.27926, D.27918,
	str	w2, [sp, 160]	// D.27926, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27928, argv.__gr_offs
	cmp	w2, 0	// D.27928,
	ble	.L4116		//,
	add	x1, x0, 15	// D.27931, iftmp.2391,
	and	x1, x1, -8	// D.27932, D.27931,
	str	x1, [sp, 136]	// D.27932, argv.__stack
	b	.L4115		//
.L4116:
	ldr	x2, [sp, 144]	// D.27934, argv.__gr_top
	sxtw	x0, w1	// D.27935, D.27918
	add	x0, x2, x0	// iftmp.2391, D.27934, D.27935
.L4115:
	ldr	x1, [x0]	// D.27936, *iftmp.2390_128
	add	x0, sp, 328	// tmp333,,
	ldp	q0, q1, [x1]	// tmp335, tmp336, *_303
	stp	q0, q1, [x0]	// tmp335, tmp336, D.6915
	ldp	q0, q1, [x1, 32]	// tmp337, tmp338, *_303
	stp	q0, q1, [x0, 32]	// tmp337, tmp338, D.6915
	ldr	q0, [x1, 64]	// tmp339, *_303
	str	q0, [x0, 64]	// tmp339, D.6915
// varargs-dll.c:1770:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 336]	// _3, D.6915.c
	bl	atoi		//
	str	w0, [sp, 64]	//, i
// varargs-dll.c:1771:   int j = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.27937, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2393, argv.__stack
	cmp	w1, 0	// D.27937,
	blt	.L4118		//,
	add	x1, x0, 11	// D.27942, iftmp.2393,
	and	x1, x1, -8	// D.27943, D.27942,
	str	x1, [sp, 136]	// D.27943, argv.__stack
	b	.L4119		//
.L4118:
	add	w2, w1, 8	// D.27945, D.27937,
	str	w2, [sp, 160]	// D.27945, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27947, argv.__gr_offs
	cmp	w2, 0	// D.27947,
	ble	.L4120		//,
	add	x1, x0, 11	// D.27950, iftmp.2393,
	and	x1, x1, -8	// D.27951, D.27950,
	str	x1, [sp, 136]	// D.27951, argv.__stack
	b	.L4119		//
.L4120:
	ldr	x2, [sp, 144]	// D.27953, argv.__gr_top
	sxtw	x0, w1	// D.27954, D.27937
	add	x0, x2, x0	// iftmp.2393, D.27953, D.27954
.L4119:
	ldr	w0, [x0]	// tmp340, *iftmp.2392_130
	str	w0, [sp, 68]	// tmp340, j
// varargs-dll.c:1772:   long k = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.27955, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2395, argv.__stack
	cmp	w1, 0	// D.27955,
	blt	.L4122		//,
	add	x1, x0, 15	// D.27960, iftmp.2395,
	and	x1, x1, -8	// D.27961, D.27960,
	str	x1, [sp, 136]	// D.27961, argv.__stack
	b	.L4123		//
.L4122:
	add	w2, w1, 8	// D.27963, D.27955,
	str	w2, [sp, 160]	// D.27963, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27965, argv.__gr_offs
	cmp	w2, 0	// D.27965,
	ble	.L4124		//,
	add	x1, x0, 15	// D.27968, iftmp.2395,
	and	x1, x1, -8	// D.27969, D.27968,
	str	x1, [sp, 136]	// D.27969, argv.__stack
	b	.L4123		//
.L4124:
	ldr	x2, [sp, 144]	// D.27971, argv.__gr_top
	sxtw	x0, w1	// D.27972, D.27955
	add	x0, x2, x0	// iftmp.2395, D.27971, D.27972
.L4123:
	ldr	x0, [x0]	// tmp341, *iftmp.2394_132
	str	x0, [sp, 112]	// tmp341, k
// varargs-dll.c:1773:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 160]	// D.27973, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2397, argv.__stack
	cmp	w1, 0	// D.27973,
	blt	.L4126		//,
	add	x1, x0, 15	// D.27978, iftmp.2397,
	and	x1, x1, -8	// D.27979, D.27978,
	str	x1, [sp, 136]	// D.27979, argv.__stack
	b	.L4127		//
.L4126:
	add	w2, w1, 8	// D.27981, D.27973,
	str	w2, [sp, 160]	// D.27981, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.27983, argv.__gr_offs
	cmp	w2, 0	// D.27983,
	ble	.L4128		//,
	add	x1, x0, 15	// D.27986, iftmp.2397,
	and	x1, x1, -8	// D.27987, D.27986,
	str	x1, [sp, 136]	// D.27987, argv.__stack
	b	.L4127		//
.L4128:
	ldr	x2, [sp, 144]	// D.27989, argv.__gr_top
	sxtw	x0, w1	// D.27990, D.27973
	add	x0, x2, x0	// iftmp.2397, D.27989, D.27990
.L4127:
	ldr	x1, [x0]	// D.27991, *iftmp.2396_134
	add	x0, sp, 408	// tmp342,,
	ldp	q0, q1, [x1]	// tmp344, tmp345, *_356
	stp	q0, q1, [x0]	// tmp344, tmp345, D.6916
	ldp	q0, q1, [x1, 32]	// tmp346, tmp347, *_356
	stp	q0, q1, [x0, 32]	// tmp346, tmp347, D.6916
	ldr	q0, [x1, 64]	// tmp348, *_356
	str	q0, [x0, 64]	// tmp348, D.6916
// varargs-dll.c:1773:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 416]	// _4, D.6916.c
	bl	atoi		//
	str	w0, [sp, 72]	//, l
// varargs-dll.c:1774:   int m = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.27992, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2399, argv.__stack
	cmp	w1, 0	// D.27992,
	blt	.L4130		//,
	add	x1, x0, 11	// D.27997, iftmp.2399,
	and	x1, x1, -8	// D.27998, D.27997,
	str	x1, [sp, 136]	// D.27998, argv.__stack
	b	.L4131		//
.L4130:
	add	w2, w1, 8	// D.28000, D.27992,
	str	w2, [sp, 160]	// D.28000, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.28002, argv.__gr_offs
	cmp	w2, 0	// D.28002,
	ble	.L4132		//,
	add	x1, x0, 11	// D.28005, iftmp.2399,
	and	x1, x1, -8	// D.28006, D.28005,
	str	x1, [sp, 136]	// D.28006, argv.__stack
	b	.L4131		//
.L4132:
	ldr	x2, [sp, 144]	// D.28008, argv.__gr_top
	sxtw	x0, w1	// D.28009, D.27992
	add	x0, x2, x0	// iftmp.2399, D.28008, D.28009
.L4131:
	ldr	w0, [x0]	// tmp349, *iftmp.2398_136
	str	w0, [sp, 76]	// tmp349, m
// varargs-dll.c:1775:   long n = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.28010, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2401, argv.__stack
	cmp	w1, 0	// D.28010,
	blt	.L4134		//,
	add	x1, x0, 15	// D.28015, iftmp.2401,
	and	x1, x1, -8	// D.28016, D.28015,
	str	x1, [sp, 136]	// D.28016, argv.__stack
	b	.L4135		//
.L4134:
	add	w2, w1, 8	// D.28018, D.28010,
	str	w2, [sp, 160]	// D.28018, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.28020, argv.__gr_offs
	cmp	w2, 0	// D.28020,
	ble	.L4136		//,
	add	x1, x0, 15	// D.28023, iftmp.2401,
	and	x1, x1, -8	// D.28024, D.28023,
	str	x1, [sp, 136]	// D.28024, argv.__stack
	b	.L4135		//
.L4136:
	ldr	x2, [sp, 144]	// D.28026, argv.__gr_top
	sxtw	x0, w1	// D.28027, D.28010
	add	x0, x2, x0	// iftmp.2401, D.28026, D.28027
.L4135:
	ldr	x0, [x0]	// tmp350, *iftmp.2400_138
	str	x0, [sp, 120]	// tmp350, n
// varargs-dll.c:1776:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 160]	// D.28028, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2403, argv.__stack
	cmp	w1, 0	// D.28028,
	blt	.L4138		//,
	add	x1, x0, 15	// D.28033, iftmp.2403,
	and	x1, x1, -8	// D.28034, D.28033,
	str	x1, [sp, 136]	// D.28034, argv.__stack
	b	.L4139		//
.L4138:
	add	w2, w1, 8	// D.28036, D.28028,
	str	w2, [sp, 160]	// D.28036, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.28038, argv.__gr_offs
	cmp	w2, 0	// D.28038,
	ble	.L4140		//,
	add	x1, x0, 15	// D.28041, iftmp.2403,
	and	x1, x1, -8	// D.28042, D.28041,
	str	x1, [sp, 136]	// D.28042, argv.__stack
	b	.L4139		//
.L4140:
	ldr	x2, [sp, 144]	// D.28044, argv.__gr_top
	sxtw	x0, w1	// D.28045, D.28028
	add	x0, x2, x0	// iftmp.2403, D.28044, D.28045
.L4139:
	ldr	x1, [x0]	// D.28046, *iftmp.2402_140
	add	x0, sp, 488	// tmp351,,
	ldp	q0, q1, [x1]	// tmp353, tmp354, *_409
	stp	q0, q1, [x0]	// tmp353, tmp354, D.6917
	ldp	q0, q1, [x1, 32]	// tmp355, tmp356, *_409
	stp	q0, q1, [x0, 32]	// tmp355, tmp356, D.6917
	ldr	q0, [x1, 64]	// tmp357, *_409
	str	q0, [x0, 64]	// tmp357, D.6917
// varargs-dll.c:1776:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 496]	// _5, D.6917.c
	bl	atoi		//
	str	w0, [sp, 80]	//, o
// varargs-dll.c:1777:   int p = va_arg (argv, int);
	ldr	w1, [sp, 160]	// D.28047, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2405, argv.__stack
	cmp	w1, 0	// D.28047,
	blt	.L4142		//,
	add	x1, x0, 11	// D.28052, iftmp.2405,
	and	x1, x1, -8	// D.28053, D.28052,
	str	x1, [sp, 136]	// D.28053, argv.__stack
	b	.L4143		//
.L4142:
	add	w2, w1, 8	// D.28055, D.28047,
	str	w2, [sp, 160]	// D.28055, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.28057, argv.__gr_offs
	cmp	w2, 0	// D.28057,
	ble	.L4144		//,
	add	x1, x0, 11	// D.28060, iftmp.2405,
	and	x1, x1, -8	// D.28061, D.28060,
	str	x1, [sp, 136]	// D.28061, argv.__stack
	b	.L4143		//
.L4144:
	ldr	x2, [sp, 144]	// D.28063, argv.__gr_top
	sxtw	x0, w1	// D.28064, D.28047
	add	x0, x2, x0	// iftmp.2405, D.28063, D.28064
.L4143:
	ldr	w0, [x0]	// tmp358, *iftmp.2404_142
	str	w0, [sp, 84]	// tmp358, p
// varargs-dll.c:1778:   long q = va_arg (argv, long);
	ldr	w1, [sp, 160]	// D.28065, argv.__gr_offs
	ldr	x0, [sp, 136]	// iftmp.2407, argv.__stack
	cmp	w1, 0	// D.28065,
	blt	.L4146		//,
	add	x1, x0, 15	// D.28070, iftmp.2407,
	and	x1, x1, -8	// D.28071, D.28070,
	str	x1, [sp, 136]	// D.28071, argv.__stack
	b	.L4147		//
.L4146:
	add	w2, w1, 8	// D.28073, D.28065,
	str	w2, [sp, 160]	// D.28073, argv.__gr_offs
	ldr	w2, [sp, 160]	// D.28075, argv.__gr_offs
	cmp	w2, 0	// D.28075,
	ble	.L4148		//,
	add	x1, x0, 15	// D.28078, iftmp.2407,
	and	x1, x1, -8	// D.28079, D.28078,
	str	x1, [sp, 136]	// D.28079, argv.__stack
	b	.L4147		//
.L4148:
	ldr	x2, [sp, 144]	// D.28081, argv.__gr_top
	sxtw	x0, w1	// D.28082, D.28065
	add	x0, x2, x0	// iftmp.2407, D.28081, D.28082
.L4147:
	ldr	x0, [x0]	// tmp359, *iftmp.2406_144
	str	x0, [sp, 128]	// tmp359, q
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x0, [sp, 88]	// tmp360, b
	mov	w1, w0	// _6, tmp360
	ldr	w0, [sp, 44]	// a.0_7, a
	add	w1, w1, w0	// _8, _6, a.0_7
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// c.1_9, c
	add	w1, w1, w0	// _10, _8, c.1_9
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// d.2_11, d
	add	w0, w1, w0	// _12, _10, d.2_11
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 96]	// tmp361, e
	add	w1, w0, w1	// _14, _12, _13
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// f.3_15, f
	add	w1, w1, w0	// _16, _14, f.3_15
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// g.4_17, g
	add	w0, w1, w0	// _18, _16, g.4_17
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 104]	// tmp362, h
	add	w1, w0, w1	// _20, _18, _19
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// i.5_21, i
	add	w1, w1, w0	// _22, _20, i.5_21
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// j.6_23, j
	add	w0, w1, w0	// _24, _22, j.6_23
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 112]	// tmp363, k
	add	w1, w0, w1	// _26, _24, _25
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// l.7_27, l
	add	w1, w1, w0	// _28, _26, l.7_27
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// m.8_29, m
	add	w0, w1, w0	// _30, _28, m.8_29
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 120]	// tmp364, n
	add	w1, w0, w1	// _32, _30, _31
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// o.9_33, o
	add	w1, w1, w0	// _34, _32, o.9_33
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// p.10_35, p
	add	w0, w1, w0	// _36, _34, p.10_35
// varargs-dll.c:1780:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 128]	// tmp365, q
	add	w0, w0, w1	// _38, _36, _37
	mov	w1, w0	// <retval>, _76
// varargs-dll.c:1781: }
	adrp	x0, :got:__stack_chk_guard	// tmp368,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp367, tmp368,
	ldr	x3, [sp, 568]	// tmp370, D.28083
	ldr	x2, [x0]	// tmp371,
	subs	x3, x3, x2	// tmp370, tmp371
	mov	x2, 0	// tmp371
	beq	.L4151		//,
	bl	__stack_chk_fail		//
.L4151:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 768	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE110:
	.size	use_va_args_ints_and_composites, .-use_va_args_ints_and_composites
	.align	2
	.global	use_va_list_ints_and_composites
	.type	use_va_list_ints_and_composites, %function
use_va_list_ints_and_composites:
.LFB111:
	.cfi_startproc
	sub	sp, sp, #544	//,,
	.cfi_def_cfa_offset 544
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -544
	.cfi_offset 30, -536
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -528
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp307,
// varargs-dll.c:1786:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28087, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2409, argv.__stack
	cmp	w1, 0	// D.28087,
	blt	.L4153		//,
	add	x1, x0, 11	// D.28092, iftmp.2409,
	and	x1, x1, -8	// D.28093, D.28092,
	str	x1, [x19]	// D.28093, argv.__stack
	b	.L4154		//
.L4153:
	add	w2, w1, 8	// D.28095, D.28087,
	str	w2, [x19, 24]	// D.28095, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28097, argv.__gr_offs
	cmp	w2, 0	// D.28097,
	ble	.L4155		//,
	add	x1, x0, 11	// D.28100, iftmp.2409,
	and	x1, x1, -8	// D.28101, D.28100,
	str	x1, [x19]	// D.28101, argv.__stack
	b	.L4154		//
.L4155:
	ldr	x2, [x19, 8]	// D.28103, argv.__gr_top
	sxtw	x0, w1	// D.28104, D.28087
	add	x0, x2, x0	// iftmp.2409, D.28103, D.28104
.L4154:
	ldr	w0, [x0]	// tmp308, *iftmp.2408_109
	str	w0, [sp, 52]	// tmp308, a
// varargs-dll.c:1787:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28105, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2411, argv.__stack
	cmp	w1, 0	// D.28105,
	blt	.L4157		//,
	add	x1, x0, 15	// D.28110, iftmp.2411,
	and	x1, x1, -8	// D.28111, D.28110,
	str	x1, [x19]	// D.28111, argv.__stack
	b	.L4158		//
.L4157:
	add	w2, w1, 8	// D.28113, D.28105,
	str	w2, [x19, 24]	// D.28113, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28115, argv.__gr_offs
	cmp	w2, 0	// D.28115,
	ble	.L4159		//,
	add	x1, x0, 15	// D.28118, iftmp.2411,
	and	x1, x1, -8	// D.28119, D.28118,
	str	x1, [x19]	// D.28119, argv.__stack
	b	.L4158		//
.L4159:
	ldr	x2, [x19, 8]	// D.28121, argv.__gr_top
	sxtw	x0, w1	// D.28122, D.28105
	add	x0, x2, x0	// iftmp.2411, D.28121, D.28122
.L4158:
	ldr	x0, [x0]	// tmp309, *iftmp.2410_111
	str	x0, [sp, 96]	// tmp309, b
// varargs-dll.c:1788:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.28123, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2413, argv.__stack
	cmp	w1, 0	// D.28123,
	blt	.L4161		//,
	add	x1, x0, 15	// D.28128, iftmp.2413,
	and	x1, x1, -8	// D.28129, D.28128,
	str	x1, [x19]	// D.28129, argv.__stack
	b	.L4162		//
.L4161:
	add	w2, w1, 8	// D.28131, D.28123,
	str	w2, [x19, 24]	// D.28131, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28133, argv.__gr_offs
	cmp	w2, 0	// D.28133,
	ble	.L4163		//,
	add	x1, x0, 15	// D.28136, iftmp.2413,
	and	x1, x1, -8	// D.28137, D.28136,
	str	x1, [x19]	// D.28137, argv.__stack
	b	.L4162		//
.L4163:
	ldr	x2, [x19, 8]	// D.28139, argv.__gr_top
	sxtw	x0, w1	// D.28140, D.28123
	add	x0, x2, x0	// iftmp.2413, D.28139, D.28140
.L4162:
	ldr	x1, [x0]	// D.28141, *iftmp.2412_113
	add	x0, sp, 144	// tmp310,,
	ldp	q0, q1, [x1]	// tmp312, tmp313, *_194
	stp	q0, q1, [x0]	// tmp312, tmp313, D.6921
	ldp	q0, q1, [x1, 32]	// tmp314, tmp315, *_194
	stp	q0, q1, [x0, 32]	// tmp314, tmp315, D.6921
	ldr	q0, [x1, 64]	// tmp316, *_194
	str	q0, [x0, 64]	// tmp316, D.6921
// varargs-dll.c:1788:   int c = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 152]	// _1, D.6921.c
	bl	atoi		//
	str	w0, [sp, 56]	//, c
// varargs-dll.c:1789:   int d = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28142, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2415, argv.__stack
	cmp	w1, 0	// D.28142,
	blt	.L4165		//,
	add	x1, x0, 11	// D.28147, iftmp.2415,
	and	x1, x1, -8	// D.28148, D.28147,
	str	x1, [x19]	// D.28148, argv.__stack
	b	.L4166		//
.L4165:
	add	w2, w1, 8	// D.28150, D.28142,
	str	w2, [x19, 24]	// D.28150, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28152, argv.__gr_offs
	cmp	w2, 0	// D.28152,
	ble	.L4167		//,
	add	x1, x0, 11	// D.28155, iftmp.2415,
	and	x1, x1, -8	// D.28156, D.28155,
	str	x1, [x19]	// D.28156, argv.__stack
	b	.L4166		//
.L4167:
	ldr	x2, [x19, 8]	// D.28158, argv.__gr_top
	sxtw	x0, w1	// D.28159, D.28142
	add	x0, x2, x0	// iftmp.2415, D.28158, D.28159
.L4166:
	ldr	w0, [x0]	// tmp317, *iftmp.2414_115
	str	w0, [sp, 60]	// tmp317, d
// varargs-dll.c:1790:   long e = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28160, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2417, argv.__stack
	cmp	w1, 0	// D.28160,
	blt	.L4169		//,
	add	x1, x0, 15	// D.28165, iftmp.2417,
	and	x1, x1, -8	// D.28166, D.28165,
	str	x1, [x19]	// D.28166, argv.__stack
	b	.L4170		//
.L4169:
	add	w2, w1, 8	// D.28168, D.28160,
	str	w2, [x19, 24]	// D.28168, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28170, argv.__gr_offs
	cmp	w2, 0	// D.28170,
	ble	.L4171		//,
	add	x1, x0, 15	// D.28173, iftmp.2417,
	and	x1, x1, -8	// D.28174, D.28173,
	str	x1, [x19]	// D.28174, argv.__stack
	b	.L4170		//
.L4171:
	ldr	x2, [x19, 8]	// D.28176, argv.__gr_top
	sxtw	x0, w1	// D.28177, D.28160
	add	x0, x2, x0	// iftmp.2417, D.28176, D.28177
.L4170:
	ldr	x0, [x0]	// tmp318, *iftmp.2416_117
	str	x0, [sp, 104]	// tmp318, e
// varargs-dll.c:1791:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.28178, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2419, argv.__stack
	cmp	w1, 0	// D.28178,
	blt	.L4173		//,
	add	x1, x0, 15	// D.28183, iftmp.2419,
	and	x1, x1, -8	// D.28184, D.28183,
	str	x1, [x19]	// D.28184, argv.__stack
	b	.L4174		//
.L4173:
	add	w2, w1, 8	// D.28186, D.28178,
	str	w2, [x19, 24]	// D.28186, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28188, argv.__gr_offs
	cmp	w2, 0	// D.28188,
	ble	.L4175		//,
	add	x1, x0, 15	// D.28191, iftmp.2419,
	and	x1, x1, -8	// D.28192, D.28191,
	str	x1, [x19]	// D.28192, argv.__stack
	b	.L4174		//
.L4175:
	ldr	x2, [x19, 8]	// D.28194, argv.__gr_top
	sxtw	x0, w1	// D.28195, D.28178
	add	x0, x2, x0	// iftmp.2419, D.28194, D.28195
.L4174:
	ldr	x1, [x0]	// D.28196, *iftmp.2418_119
	add	x0, sp, 224	// tmp319,,
	ldp	q0, q1, [x1]	// tmp321, tmp322, *_247
	stp	q0, q1, [x0]	// tmp321, tmp322, D.6922
	ldp	q0, q1, [x1, 32]	// tmp323, tmp324, *_247
	stp	q0, q1, [x0, 32]	// tmp323, tmp324, D.6922
	ldr	q0, [x1, 64]	// tmp325, *_247
	str	q0, [x0, 64]	// tmp325, D.6922
// varargs-dll.c:1791:   int f = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 232]	// _2, D.6922.c
	bl	atoi		//
	str	w0, [sp, 64]	//, f
// varargs-dll.c:1792:   int g = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28197, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2421, argv.__stack
	cmp	w1, 0	// D.28197,
	blt	.L4177		//,
	add	x1, x0, 11	// D.28202, iftmp.2421,
	and	x1, x1, -8	// D.28203, D.28202,
	str	x1, [x19]	// D.28203, argv.__stack
	b	.L4178		//
.L4177:
	add	w2, w1, 8	// D.28205, D.28197,
	str	w2, [x19, 24]	// D.28205, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28207, argv.__gr_offs
	cmp	w2, 0	// D.28207,
	ble	.L4179		//,
	add	x1, x0, 11	// D.28210, iftmp.2421,
	and	x1, x1, -8	// D.28211, D.28210,
	str	x1, [x19]	// D.28211, argv.__stack
	b	.L4178		//
.L4179:
	ldr	x2, [x19, 8]	// D.28213, argv.__gr_top
	sxtw	x0, w1	// D.28214, D.28197
	add	x0, x2, x0	// iftmp.2421, D.28213, D.28214
.L4178:
	ldr	w0, [x0]	// tmp326, *iftmp.2420_121
	str	w0, [sp, 68]	// tmp326, g
// varargs-dll.c:1793:   long h = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28215, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2423, argv.__stack
	cmp	w1, 0	// D.28215,
	blt	.L4181		//,
	add	x1, x0, 15	// D.28220, iftmp.2423,
	and	x1, x1, -8	// D.28221, D.28220,
	str	x1, [x19]	// D.28221, argv.__stack
	b	.L4182		//
.L4181:
	add	w2, w1, 8	// D.28223, D.28215,
	str	w2, [x19, 24]	// D.28223, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28225, argv.__gr_offs
	cmp	w2, 0	// D.28225,
	ble	.L4183		//,
	add	x1, x0, 15	// D.28228, iftmp.2423,
	and	x1, x1, -8	// D.28229, D.28228,
	str	x1, [x19]	// D.28229, argv.__stack
	b	.L4182		//
.L4183:
	ldr	x2, [x19, 8]	// D.28231, argv.__gr_top
	sxtw	x0, w1	// D.28232, D.28215
	add	x0, x2, x0	// iftmp.2423, D.28231, D.28232
.L4182:
	ldr	x0, [x0]	// tmp327, *iftmp.2422_123
	str	x0, [sp, 112]	// tmp327, h
// varargs-dll.c:1794:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.28233, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2425, argv.__stack
	cmp	w1, 0	// D.28233,
	blt	.L4185		//,
	add	x1, x0, 15	// D.28238, iftmp.2425,
	and	x1, x1, -8	// D.28239, D.28238,
	str	x1, [x19]	// D.28239, argv.__stack
	b	.L4186		//
.L4185:
	add	w2, w1, 8	// D.28241, D.28233,
	str	w2, [x19, 24]	// D.28241, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28243, argv.__gr_offs
	cmp	w2, 0	// D.28243,
	ble	.L4187		//,
	add	x1, x0, 15	// D.28246, iftmp.2425,
	and	x1, x1, -8	// D.28247, D.28246,
	str	x1, [x19]	// D.28247, argv.__stack
	b	.L4186		//
.L4187:
	ldr	x2, [x19, 8]	// D.28249, argv.__gr_top
	sxtw	x0, w1	// D.28250, D.28233
	add	x0, x2, x0	// iftmp.2425, D.28249, D.28250
.L4186:
	ldr	x1, [x0]	// D.28251, *iftmp.2424_125
	add	x0, sp, 304	// tmp328,,
	ldp	q0, q1, [x1]	// tmp330, tmp331, *_300
	stp	q0, q1, [x0]	// tmp330, tmp331, D.6923
	ldp	q0, q1, [x1, 32]	// tmp332, tmp333, *_300
	stp	q0, q1, [x0, 32]	// tmp332, tmp333, D.6923
	ldr	q0, [x1, 64]	// tmp334, *_300
	str	q0, [x0, 64]	// tmp334, D.6923
// varargs-dll.c:1794:   int i = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 312]	// _3, D.6923.c
	bl	atoi		//
	str	w0, [sp, 72]	//, i
// varargs-dll.c:1795:   int j = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28252, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2427, argv.__stack
	cmp	w1, 0	// D.28252,
	blt	.L4189		//,
	add	x1, x0, 11	// D.28257, iftmp.2427,
	and	x1, x1, -8	// D.28258, D.28257,
	str	x1, [x19]	// D.28258, argv.__stack
	b	.L4190		//
.L4189:
	add	w2, w1, 8	// D.28260, D.28252,
	str	w2, [x19, 24]	// D.28260, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28262, argv.__gr_offs
	cmp	w2, 0	// D.28262,
	ble	.L4191		//,
	add	x1, x0, 11	// D.28265, iftmp.2427,
	and	x1, x1, -8	// D.28266, D.28265,
	str	x1, [x19]	// D.28266, argv.__stack
	b	.L4190		//
.L4191:
	ldr	x2, [x19, 8]	// D.28268, argv.__gr_top
	sxtw	x0, w1	// D.28269, D.28252
	add	x0, x2, x0	// iftmp.2427, D.28268, D.28269
.L4190:
	ldr	w0, [x0]	// tmp335, *iftmp.2426_127
	str	w0, [sp, 76]	// tmp335, j
// varargs-dll.c:1796:   long k = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28270, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2429, argv.__stack
	cmp	w1, 0	// D.28270,
	blt	.L4193		//,
	add	x1, x0, 15	// D.28275, iftmp.2429,
	and	x1, x1, -8	// D.28276, D.28275,
	str	x1, [x19]	// D.28276, argv.__stack
	b	.L4194		//
.L4193:
	add	w2, w1, 8	// D.28278, D.28270,
	str	w2, [x19, 24]	// D.28278, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28280, argv.__gr_offs
	cmp	w2, 0	// D.28280,
	ble	.L4195		//,
	add	x1, x0, 15	// D.28283, iftmp.2429,
	and	x1, x1, -8	// D.28284, D.28283,
	str	x1, [x19]	// D.28284, argv.__stack
	b	.L4194		//
.L4195:
	ldr	x2, [x19, 8]	// D.28286, argv.__gr_top
	sxtw	x0, w1	// D.28287, D.28270
	add	x0, x2, x0	// iftmp.2429, D.28286, D.28287
.L4194:
	ldr	x0, [x0]	// tmp336, *iftmp.2428_129
	str	x0, [sp, 120]	// tmp336, k
// varargs-dll.c:1797:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.28288, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2431, argv.__stack
	cmp	w1, 0	// D.28288,
	blt	.L4197		//,
	add	x1, x0, 15	// D.28293, iftmp.2431,
	and	x1, x1, -8	// D.28294, D.28293,
	str	x1, [x19]	// D.28294, argv.__stack
	b	.L4198		//
.L4197:
	add	w2, w1, 8	// D.28296, D.28288,
	str	w2, [x19, 24]	// D.28296, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28298, argv.__gr_offs
	cmp	w2, 0	// D.28298,
	ble	.L4199		//,
	add	x1, x0, 15	// D.28301, iftmp.2431,
	and	x1, x1, -8	// D.28302, D.28301,
	str	x1, [x19]	// D.28302, argv.__stack
	b	.L4198		//
.L4199:
	ldr	x2, [x19, 8]	// D.28304, argv.__gr_top
	sxtw	x0, w1	// D.28305, D.28288
	add	x0, x2, x0	// iftmp.2431, D.28304, D.28305
.L4198:
	ldr	x1, [x0]	// D.28306, *iftmp.2430_131
	add	x0, sp, 384	// tmp337,,
	ldp	q0, q1, [x1]	// tmp339, tmp340, *_353
	stp	q0, q1, [x0]	// tmp339, tmp340, D.6924
	ldp	q0, q1, [x1, 32]	// tmp341, tmp342, *_353
	stp	q0, q1, [x0, 32]	// tmp341, tmp342, D.6924
	ldr	q0, [x1, 64]	// tmp343, *_353
	str	q0, [x0, 64]	// tmp343, D.6924
// varargs-dll.c:1797:   int l = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 392]	// _4, D.6924.c
	bl	atoi		//
	str	w0, [sp, 80]	//, l
// varargs-dll.c:1798:   int m = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28307, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2433, argv.__stack
	cmp	w1, 0	// D.28307,
	blt	.L4201		//,
	add	x1, x0, 11	// D.28312, iftmp.2433,
	and	x1, x1, -8	// D.28313, D.28312,
	str	x1, [x19]	// D.28313, argv.__stack
	b	.L4202		//
.L4201:
	add	w2, w1, 8	// D.28315, D.28307,
	str	w2, [x19, 24]	// D.28315, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28317, argv.__gr_offs
	cmp	w2, 0	// D.28317,
	ble	.L4203		//,
	add	x1, x0, 11	// D.28320, iftmp.2433,
	and	x1, x1, -8	// D.28321, D.28320,
	str	x1, [x19]	// D.28321, argv.__stack
	b	.L4202		//
.L4203:
	ldr	x2, [x19, 8]	// D.28323, argv.__gr_top
	sxtw	x0, w1	// D.28324, D.28307
	add	x0, x2, x0	// iftmp.2433, D.28323, D.28324
.L4202:
	ldr	w0, [x0]	// tmp344, *iftmp.2432_133
	str	w0, [sp, 84]	// tmp344, m
// varargs-dll.c:1799:   long n = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28325, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2435, argv.__stack
	cmp	w1, 0	// D.28325,
	blt	.L4205		//,
	add	x1, x0, 15	// D.28330, iftmp.2435,
	and	x1, x1, -8	// D.28331, D.28330,
	str	x1, [x19]	// D.28331, argv.__stack
	b	.L4206		//
.L4205:
	add	w2, w1, 8	// D.28333, D.28325,
	str	w2, [x19, 24]	// D.28333, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28335, argv.__gr_offs
	cmp	w2, 0	// D.28335,
	ble	.L4207		//,
	add	x1, x0, 15	// D.28338, iftmp.2435,
	and	x1, x1, -8	// D.28339, D.28338,
	str	x1, [x19]	// D.28339, argv.__stack
	b	.L4206		//
.L4207:
	ldr	x2, [x19, 8]	// D.28341, argv.__gr_top
	sxtw	x0, w1	// D.28342, D.28325
	add	x0, x2, x0	// iftmp.2435, D.28341, D.28342
.L4206:
	ldr	x0, [x0]	// tmp345, *iftmp.2434_135
	str	x0, [sp, 128]	// tmp345, n
// varargs-dll.c:1800:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.28343, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2437, argv.__stack
	cmp	w1, 0	// D.28343,
	blt	.L4209		//,
	add	x1, x0, 15	// D.28348, iftmp.2437,
	and	x1, x1, -8	// D.28349, D.28348,
	str	x1, [x19]	// D.28349, argv.__stack
	b	.L4210		//
.L4209:
	add	w2, w1, 8	// D.28351, D.28343,
	str	w2, [x19, 24]	// D.28351, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28353, argv.__gr_offs
	cmp	w2, 0	// D.28353,
	ble	.L4211		//,
	add	x1, x0, 15	// D.28356, iftmp.2437,
	and	x1, x1, -8	// D.28357, D.28356,
	str	x1, [x19]	// D.28357, argv.__stack
	b	.L4210		//
.L4211:
	ldr	x2, [x19, 8]	// D.28359, argv.__gr_top
	sxtw	x0, w1	// D.28360, D.28343
	add	x0, x2, x0	// iftmp.2437, D.28359, D.28360
.L4210:
	ldr	x1, [x0]	// D.28361, *iftmp.2436_137
	add	x0, sp, 464	// tmp346,,
	ldp	q0, q1, [x1]	// tmp348, tmp349, *_406
	stp	q0, q1, [x0]	// tmp348, tmp349, D.6925
	ldp	q0, q1, [x1, 32]	// tmp350, tmp351, *_406
	stp	q0, q1, [x0, 32]	// tmp350, tmp351, D.6925
	ldr	q0, [x1, 64]	// tmp352, *_406
	str	q0, [x0, 64]	// tmp352, D.6925
// varargs-dll.c:1800:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 472]	// _5, D.6925.c
	bl	atoi		//
	str	w0, [sp, 88]	//, o
// varargs-dll.c:1801:   int p = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28362, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2439, argv.__stack
	cmp	w1, 0	// D.28362,
	blt	.L4213		//,
	add	x1, x0, 11	// D.28367, iftmp.2439,
	and	x1, x1, -8	// D.28368, D.28367,
	str	x1, [x19]	// D.28368, argv.__stack
	b	.L4214		//
.L4213:
	add	w2, w1, 8	// D.28370, D.28362,
	str	w2, [x19, 24]	// D.28370, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28372, argv.__gr_offs
	cmp	w2, 0	// D.28372,
	ble	.L4215		//,
	add	x1, x0, 11	// D.28375, iftmp.2439,
	and	x1, x1, -8	// D.28376, D.28375,
	str	x1, [x19]	// D.28376, argv.__stack
	b	.L4214		//
.L4215:
	ldr	x2, [x19, 8]	// D.28378, argv.__gr_top
	sxtw	x0, w1	// D.28379, D.28362
	add	x0, x2, x0	// iftmp.2439, D.28378, D.28379
.L4214:
	ldr	w0, [x0]	// tmp353, *iftmp.2438_139
	str	w0, [sp, 92]	// tmp353, p
// varargs-dll.c:1802:   long q = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28380, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2441, argv.__stack
	cmp	w1, 0	// D.28380,
	blt	.L4217		//,
	add	x1, x0, 15	// D.28385, iftmp.2441,
	and	x1, x1, -8	// D.28386, D.28385,
	str	x1, [x19]	// D.28386, argv.__stack
	b	.L4218		//
.L4217:
	add	w2, w1, 8	// D.28388, D.28380,
	str	w2, [x19, 24]	// D.28388, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28390, argv.__gr_offs
	cmp	w2, 0	// D.28390,
	ble	.L4219		//,
	add	x1, x0, 15	// D.28393, iftmp.2441,
	and	x1, x1, -8	// D.28394, D.28393,
	str	x1, [x19]	// D.28394, argv.__stack
	b	.L4218		//
.L4219:
	ldr	x2, [x19, 8]	// D.28396, argv.__gr_top
	sxtw	x0, w1	// D.28397, D.28380
	add	x0, x2, x0	// iftmp.2441, D.28396, D.28397
.L4218:
	ldr	x0, [x0]	// tmp354, *iftmp.2440_141
	str	x0, [sp, 136]	// tmp354, q
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x0, [sp, 96]	// tmp355, b
	mov	w1, w0	// _6, tmp355
	ldr	w0, [sp, 52]	// a.11_7, a
	add	w1, w1, w0	// _8, _6, a.11_7
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// c.12_9, c
	add	w1, w1, w0	// _10, _8, c.12_9
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// d.13_11, d
	add	w0, w1, w0	// _12, _10, d.13_11
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 104]	// tmp356, e
	add	w1, w0, w1	// _14, _12, _13
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// f.14_15, f
	add	w1, w1, w0	// _16, _14, f.14_15
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// g.15_17, g
	add	w0, w1, w0	// _18, _16, g.15_17
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 112]	// tmp357, h
	add	w1, w0, w1	// _20, _18, _19
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// i.16_21, i
	add	w1, w1, w0	// _22, _20, i.16_21
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// j.17_23, j
	add	w0, w1, w0	// _24, _22, j.17_23
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 120]	// tmp358, k
	add	w1, w0, w1	// _26, _24, _25
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 80]	// l.18_27, l
	add	w1, w1, w0	// _28, _26, l.18_27
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 84]	// m.19_29, m
	add	w0, w1, w0	// _30, _28, m.19_29
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 128]	// tmp359, n
	add	w1, w0, w1	// _32, _30, _31
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 88]	// o.20_33, o
	add	w1, w1, w0	// _34, _32, o.20_33
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 92]	// p.21_35, p
	add	w0, w1, w0	// _36, _34, p.21_35
// varargs-dll.c:1803:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	x1, [sp, 136]	// tmp360, q
	add	w0, w0, w1	// _38, _36, _37
// varargs-dll.c:1804: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 544	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE111:
	.size	use_va_list_ints_and_composites, .-use_va_list_ints_and_composites
	.align	2
	.global	use_va_args_ints_and_floats
	.type	use_va_args_ints_and_floats, %function
use_va_args_ints_and_floats:
.LFB112:
	.cfi_startproc
	stp	x29, x30, [sp, -384]!	//,,,
	.cfi_def_cfa_offset 384
	.cfi_offset 29, -384
	.cfi_offset 30, -376
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 328]	//,
	str	x2, [sp, 336]	//,
	str	x3, [sp, 344]	//,
	str	x4, [sp, 352]	//,
	str	x5, [sp, 360]	//,
	str	x6, [sp, 368]	//,
	str	x7, [sp, 376]	//,
	str	q0, [sp, 192]	//,
	str	q1, [sp, 208]	//,
	str	q2, [sp, 224]	//,
	str	q3, [sp, 240]	//,
	str	q4, [sp, 256]	//,
	str	q5, [sp, 272]	//,
	str	q6, [sp, 288]	//,
	str	q7, [sp, 304]	//,
// varargs-dll.c:1808: {
	adrp	x0, :got:__stack_chk_guard	// tmp290,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp289, tmp290,
	ldr	x1, [x0]	// tmp331,
	str	x1, [sp, 184]	// tmp331, D.28704
	mov	x1, 0	// tmp331
// varargs-dll.c:1811:   va_start (argv, format);
	add	x0, sp, 384	// tmp336,,
	str	x0, [sp, 152]	// tmp336, MEM[(struct  *)&argv].__stack
	add	x0, sp, 384	// tmp337,,
	str	x0, [sp, 160]	// tmp337, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 320	// tmp292,,
	str	x0, [sp, 168]	// tmp292, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp293,
	str	w0, [sp, 176]	// tmp293, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp294,
	str	w0, [sp, 180]	// tmp294, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1812:   int a = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.28398, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2443, argv.__stack
	cmp	w1, 0	// D.28398,
	blt	.L4223		//,
	add	x1, x0, 11	// D.28403, iftmp.2443,
	and	x1, x1, -8	// D.28404, D.28403,
	str	x1, [sp, 152]	// D.28404, argv.__stack
	b	.L4224		//
.L4223:
	add	w2, w1, 8	// D.28406, D.28398,
	str	w2, [sp, 176]	// D.28406, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28408, argv.__gr_offs
	cmp	w2, 0	// D.28408,
	ble	.L4225		//,
	add	x1, x0, 11	// D.28411, iftmp.2443,
	and	x1, x1, -8	// D.28412, D.28411,
	str	x1, [sp, 152]	// D.28412, argv.__stack
	b	.L4224		//
.L4225:
	ldr	x2, [sp, 160]	// D.28414, argv.__gr_top
	sxtw	x0, w1	// D.28415, D.28398
	add	x0, x2, x0	// iftmp.2443, D.28414, D.28415
.L4224:
	ldr	w0, [x0]	// tmp295, *iftmp.2442_99
	str	w0, [sp, 36]	// tmp295, a
// varargs-dll.c:1813:   long b = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.28416, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2445, argv.__stack
	cmp	w1, 0	// D.28416,
	blt	.L4227		//,
	add	x1, x0, 15	// D.28421, iftmp.2445,
	and	x1, x1, -8	// D.28422, D.28421,
	str	x1, [sp, 152]	// D.28422, argv.__stack
	b	.L4228		//
.L4227:
	add	w2, w1, 8	// D.28424, D.28416,
	str	w2, [sp, 176]	// D.28424, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28426, argv.__gr_offs
	cmp	w2, 0	// D.28426,
	ble	.L4229		//,
	add	x1, x0, 15	// D.28429, iftmp.2445,
	and	x1, x1, -8	// D.28430, D.28429,
	str	x1, [sp, 152]	// D.28430, argv.__stack
	b	.L4228		//
.L4229:
	ldr	x2, [sp, 160]	// D.28432, argv.__gr_top
	sxtw	x0, w1	// D.28433, D.28416
	add	x0, x2, x0	// iftmp.2445, D.28432, D.28433
.L4228:
	ldr	x0, [x0]	// tmp296, *iftmp.2444_101
	str	x0, [sp, 56]	// tmp296, b
// varargs-dll.c:1814:   double c = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28434, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2447, argv.__stack
	cmp	w1, 0	// D.28434,
	blt	.L4231		//,
	add	x1, x0, 15	// D.28439, iftmp.2447,
	and	x1, x1, -8	// D.28440, D.28439,
	str	x1, [sp, 152]	// D.28440, argv.__stack
	b	.L4232		//
.L4231:
	add	w2, w1, 16	// D.28442, D.28434,
	str	w2, [sp, 180]	// D.28442, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28444, argv.__vr_offs
	cmp	w2, 0	// D.28444,
	ble	.L4233		//,
	add	x1, x0, 15	// D.28447, iftmp.2447,
	and	x1, x1, -8	// D.28448, D.28447,
	str	x1, [sp, 152]	// D.28448, argv.__stack
	b	.L4232		//
.L4233:
	ldr	x2, [sp, 168]	// D.28450, argv.__vr_top
	sxtw	x0, w1	// D.28451, D.28434
	add	x0, x2, x0	// iftmp.2447, D.28450, D.28451
.L4232:
	ldr	d0, [x0]	// tmp297, *iftmp.2446_103
	str	d0, [sp, 64]	// tmp297, c
// varargs-dll.c:1815:   double d = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28452, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2449, argv.__stack
	cmp	w1, 0	// D.28452,
	blt	.L4235		//,
	add	x1, x0, 15	// D.28457, iftmp.2449,
	and	x1, x1, -8	// D.28458, D.28457,
	str	x1, [sp, 152]	// D.28458, argv.__stack
	b	.L4236		//
.L4235:
	add	w2, w1, 16	// D.28460, D.28452,
	str	w2, [sp, 180]	// D.28460, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28462, argv.__vr_offs
	cmp	w2, 0	// D.28462,
	ble	.L4237		//,
	add	x1, x0, 15	// D.28465, iftmp.2449,
	and	x1, x1, -8	// D.28466, D.28465,
	str	x1, [sp, 152]	// D.28466, argv.__stack
	b	.L4236		//
.L4237:
	ldr	x2, [sp, 168]	// D.28468, argv.__vr_top
	sxtw	x0, w1	// D.28469, D.28452
	add	x0, x2, x0	// iftmp.2449, D.28468, D.28469
.L4236:
	ldr	d0, [x0]	// tmp298, *iftmp.2448_105
	str	d0, [sp, 72]	// tmp298, d
// varargs-dll.c:1816:   int e = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.28470, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2451, argv.__stack
	cmp	w1, 0	// D.28470,
	blt	.L4239		//,
	add	x1, x0, 11	// D.28475, iftmp.2451,
	and	x1, x1, -8	// D.28476, D.28475,
	str	x1, [sp, 152]	// D.28476, argv.__stack
	b	.L4240		//
.L4239:
	add	w2, w1, 8	// D.28478, D.28470,
	str	w2, [sp, 176]	// D.28478, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28480, argv.__gr_offs
	cmp	w2, 0	// D.28480,
	ble	.L4241		//,
	add	x1, x0, 11	// D.28483, iftmp.2451,
	and	x1, x1, -8	// D.28484, D.28483,
	str	x1, [sp, 152]	// D.28484, argv.__stack
	b	.L4240		//
.L4241:
	ldr	x2, [sp, 160]	// D.28486, argv.__gr_top
	sxtw	x0, w1	// D.28487, D.28470
	add	x0, x2, x0	// iftmp.2451, D.28486, D.28487
.L4240:
	ldr	w0, [x0]	// tmp299, *iftmp.2450_107
	str	w0, [sp, 40]	// tmp299, e
// varargs-dll.c:1817:   long f = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.28488, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2453, argv.__stack
	cmp	w1, 0	// D.28488,
	blt	.L4243		//,
	add	x1, x0, 15	// D.28493, iftmp.2453,
	and	x1, x1, -8	// D.28494, D.28493,
	str	x1, [sp, 152]	// D.28494, argv.__stack
	b	.L4244		//
.L4243:
	add	w2, w1, 8	// D.28496, D.28488,
	str	w2, [sp, 176]	// D.28496, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28498, argv.__gr_offs
	cmp	w2, 0	// D.28498,
	ble	.L4245		//,
	add	x1, x0, 15	// D.28501, iftmp.2453,
	and	x1, x1, -8	// D.28502, D.28501,
	str	x1, [sp, 152]	// D.28502, argv.__stack
	b	.L4244		//
.L4245:
	ldr	x2, [sp, 160]	// D.28504, argv.__gr_top
	sxtw	x0, w1	// D.28505, D.28488
	add	x0, x2, x0	// iftmp.2453, D.28504, D.28505
.L4244:
	ldr	x0, [x0]	// tmp300, *iftmp.2452_109
	str	x0, [sp, 80]	// tmp300, f
// varargs-dll.c:1818:   double g = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28506, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2455, argv.__stack
	cmp	w1, 0	// D.28506,
	blt	.L4247		//,
	add	x1, x0, 15	// D.28511, iftmp.2455,
	and	x1, x1, -8	// D.28512, D.28511,
	str	x1, [sp, 152]	// D.28512, argv.__stack
	b	.L4248		//
.L4247:
	add	w2, w1, 16	// D.28514, D.28506,
	str	w2, [sp, 180]	// D.28514, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28516, argv.__vr_offs
	cmp	w2, 0	// D.28516,
	ble	.L4249		//,
	add	x1, x0, 15	// D.28519, iftmp.2455,
	and	x1, x1, -8	// D.28520, D.28519,
	str	x1, [sp, 152]	// D.28520, argv.__stack
	b	.L4248		//
.L4249:
	ldr	x2, [sp, 168]	// D.28522, argv.__vr_top
	sxtw	x0, w1	// D.28523, D.28506
	add	x0, x2, x0	// iftmp.2455, D.28522, D.28523
.L4248:
	ldr	d0, [x0]	// tmp301, *iftmp.2454_111
	str	d0, [sp, 88]	// tmp301, g
// varargs-dll.c:1819:   double h = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28524, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2457, argv.__stack
	cmp	w1, 0	// D.28524,
	blt	.L4251		//,
	add	x1, x0, 15	// D.28529, iftmp.2457,
	and	x1, x1, -8	// D.28530, D.28529,
	str	x1, [sp, 152]	// D.28530, argv.__stack
	b	.L4252		//
.L4251:
	add	w2, w1, 16	// D.28532, D.28524,
	str	w2, [sp, 180]	// D.28532, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28534, argv.__vr_offs
	cmp	w2, 0	// D.28534,
	ble	.L4253		//,
	add	x1, x0, 15	// D.28537, iftmp.2457,
	and	x1, x1, -8	// D.28538, D.28537,
	str	x1, [sp, 152]	// D.28538, argv.__stack
	b	.L4252		//
.L4253:
	ldr	x2, [sp, 168]	// D.28540, argv.__vr_top
	sxtw	x0, w1	// D.28541, D.28524
	add	x0, x2, x0	// iftmp.2457, D.28540, D.28541
.L4252:
	ldr	d0, [x0]	// tmp302, *iftmp.2456_113
	str	d0, [sp, 96]	// tmp302, h
// varargs-dll.c:1820:   int i = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.28542, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2459, argv.__stack
	cmp	w1, 0	// D.28542,
	blt	.L4255		//,
	add	x1, x0, 11	// D.28547, iftmp.2459,
	and	x1, x1, -8	// D.28548, D.28547,
	str	x1, [sp, 152]	// D.28548, argv.__stack
	b	.L4256		//
.L4255:
	add	w2, w1, 8	// D.28550, D.28542,
	str	w2, [sp, 176]	// D.28550, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28552, argv.__gr_offs
	cmp	w2, 0	// D.28552,
	ble	.L4257		//,
	add	x1, x0, 11	// D.28555, iftmp.2459,
	and	x1, x1, -8	// D.28556, D.28555,
	str	x1, [sp, 152]	// D.28556, argv.__stack
	b	.L4256		//
.L4257:
	ldr	x2, [sp, 160]	// D.28558, argv.__gr_top
	sxtw	x0, w1	// D.28559, D.28542
	add	x0, x2, x0	// iftmp.2459, D.28558, D.28559
.L4256:
	ldr	w0, [x0]	// tmp303, *iftmp.2458_115
	str	w0, [sp, 44]	// tmp303, i
// varargs-dll.c:1821:   long j = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.28560, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2461, argv.__stack
	cmp	w1, 0	// D.28560,
	blt	.L4259		//,
	add	x1, x0, 15	// D.28565, iftmp.2461,
	and	x1, x1, -8	// D.28566, D.28565,
	str	x1, [sp, 152]	// D.28566, argv.__stack
	b	.L4260		//
.L4259:
	add	w2, w1, 8	// D.28568, D.28560,
	str	w2, [sp, 176]	// D.28568, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28570, argv.__gr_offs
	cmp	w2, 0	// D.28570,
	ble	.L4261		//,
	add	x1, x0, 15	// D.28573, iftmp.2461,
	and	x1, x1, -8	// D.28574, D.28573,
	str	x1, [sp, 152]	// D.28574, argv.__stack
	b	.L4260		//
.L4261:
	ldr	x2, [sp, 160]	// D.28576, argv.__gr_top
	sxtw	x0, w1	// D.28577, D.28560
	add	x0, x2, x0	// iftmp.2461, D.28576, D.28577
.L4260:
	ldr	x0, [x0]	// tmp304, *iftmp.2460_117
	str	x0, [sp, 104]	// tmp304, j
// varargs-dll.c:1822:   double k = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28578, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2463, argv.__stack
	cmp	w1, 0	// D.28578,
	blt	.L4263		//,
	add	x1, x0, 15	// D.28583, iftmp.2463,
	and	x1, x1, -8	// D.28584, D.28583,
	str	x1, [sp, 152]	// D.28584, argv.__stack
	b	.L4264		//
.L4263:
	add	w2, w1, 16	// D.28586, D.28578,
	str	w2, [sp, 180]	// D.28586, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28588, argv.__vr_offs
	cmp	w2, 0	// D.28588,
	ble	.L4265		//,
	add	x1, x0, 15	// D.28591, iftmp.2463,
	and	x1, x1, -8	// D.28592, D.28591,
	str	x1, [sp, 152]	// D.28592, argv.__stack
	b	.L4264		//
.L4265:
	ldr	x2, [sp, 168]	// D.28594, argv.__vr_top
	sxtw	x0, w1	// D.28595, D.28578
	add	x0, x2, x0	// iftmp.2463, D.28594, D.28595
.L4264:
	ldr	d0, [x0]	// tmp305, *iftmp.2462_119
	str	d0, [sp, 112]	// tmp305, k
// varargs-dll.c:1823:   double l = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28596, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2465, argv.__stack
	cmp	w1, 0	// D.28596,
	blt	.L4267		//,
	add	x1, x0, 15	// D.28601, iftmp.2465,
	and	x1, x1, -8	// D.28602, D.28601,
	str	x1, [sp, 152]	// D.28602, argv.__stack
	b	.L4268		//
.L4267:
	add	w2, w1, 16	// D.28604, D.28596,
	str	w2, [sp, 180]	// D.28604, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28606, argv.__vr_offs
	cmp	w2, 0	// D.28606,
	ble	.L4269		//,
	add	x1, x0, 15	// D.28609, iftmp.2465,
	and	x1, x1, -8	// D.28610, D.28609,
	str	x1, [sp, 152]	// D.28610, argv.__stack
	b	.L4268		//
.L4269:
	ldr	x2, [sp, 168]	// D.28612, argv.__vr_top
	sxtw	x0, w1	// D.28613, D.28596
	add	x0, x2, x0	// iftmp.2465, D.28612, D.28613
.L4268:
	ldr	d0, [x0]	// tmp306, *iftmp.2464_121
	str	d0, [sp, 120]	// tmp306, l
// varargs-dll.c:1824:   int m = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.28614, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2467, argv.__stack
	cmp	w1, 0	// D.28614,
	blt	.L4271		//,
	add	x1, x0, 11	// D.28619, iftmp.2467,
	and	x1, x1, -8	// D.28620, D.28619,
	str	x1, [sp, 152]	// D.28620, argv.__stack
	b	.L4272		//
.L4271:
	add	w2, w1, 8	// D.28622, D.28614,
	str	w2, [sp, 176]	// D.28622, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28624, argv.__gr_offs
	cmp	w2, 0	// D.28624,
	ble	.L4273		//,
	add	x1, x0, 11	// D.28627, iftmp.2467,
	and	x1, x1, -8	// D.28628, D.28627,
	str	x1, [sp, 152]	// D.28628, argv.__stack
	b	.L4272		//
.L4273:
	ldr	x2, [sp, 160]	// D.28630, argv.__gr_top
	sxtw	x0, w1	// D.28631, D.28614
	add	x0, x2, x0	// iftmp.2467, D.28630, D.28631
.L4272:
	ldr	w0, [x0]	// tmp307, *iftmp.2466_123
	str	w0, [sp, 48]	// tmp307, m
// varargs-dll.c:1825:   long n = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.28632, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2469, argv.__stack
	cmp	w1, 0	// D.28632,
	blt	.L4275		//,
	add	x1, x0, 15	// D.28637, iftmp.2469,
	and	x1, x1, -8	// D.28638, D.28637,
	str	x1, [sp, 152]	// D.28638, argv.__stack
	b	.L4276		//
.L4275:
	add	w2, w1, 8	// D.28640, D.28632,
	str	w2, [sp, 176]	// D.28640, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28642, argv.__gr_offs
	cmp	w2, 0	// D.28642,
	ble	.L4277		//,
	add	x1, x0, 15	// D.28645, iftmp.2469,
	and	x1, x1, -8	// D.28646, D.28645,
	str	x1, [sp, 152]	// D.28646, argv.__stack
	b	.L4276		//
.L4277:
	ldr	x2, [sp, 160]	// D.28648, argv.__gr_top
	sxtw	x0, w1	// D.28649, D.28632
	add	x0, x2, x0	// iftmp.2469, D.28648, D.28649
.L4276:
	ldr	x0, [x0]	// tmp308, *iftmp.2468_125
	str	x0, [sp, 128]	// tmp308, n
// varargs-dll.c:1826:   double o = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28650, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2471, argv.__stack
	cmp	w1, 0	// D.28650,
	blt	.L4279		//,
	add	x1, x0, 15	// D.28655, iftmp.2471,
	and	x1, x1, -8	// D.28656, D.28655,
	str	x1, [sp, 152]	// D.28656, argv.__stack
	b	.L4280		//
.L4279:
	add	w2, w1, 16	// D.28658, D.28650,
	str	w2, [sp, 180]	// D.28658, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28660, argv.__vr_offs
	cmp	w2, 0	// D.28660,
	ble	.L4281		//,
	add	x1, x0, 15	// D.28663, iftmp.2471,
	and	x1, x1, -8	// D.28664, D.28663,
	str	x1, [sp, 152]	// D.28664, argv.__stack
	b	.L4280		//
.L4281:
	ldr	x2, [sp, 168]	// D.28666, argv.__vr_top
	sxtw	x0, w1	// D.28667, D.28650
	add	x0, x2, x0	// iftmp.2471, D.28666, D.28667
.L4280:
	ldr	d0, [x0]	// tmp309, *iftmp.2470_127
	str	d0, [sp, 136]	// tmp309, o
// varargs-dll.c:1827:   double p = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.28668, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2473, argv.__stack
	cmp	w1, 0	// D.28668,
	blt	.L4283		//,
	add	x1, x0, 15	// D.28673, iftmp.2473,
	and	x1, x1, -8	// D.28674, D.28673,
	str	x1, [sp, 152]	// D.28674, argv.__stack
	b	.L4284		//
.L4283:
	add	w2, w1, 16	// D.28676, D.28668,
	str	w2, [sp, 180]	// D.28676, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.28678, argv.__vr_offs
	cmp	w2, 0	// D.28678,
	ble	.L4285		//,
	add	x1, x0, 15	// D.28681, iftmp.2473,
	and	x1, x1, -8	// D.28682, D.28681,
	str	x1, [sp, 152]	// D.28682, argv.__stack
	b	.L4284		//
.L4285:
	ldr	x2, [sp, 168]	// D.28684, argv.__vr_top
	sxtw	x0, w1	// D.28685, D.28668
	add	x0, x2, x0	// iftmp.2473, D.28684, D.28685
.L4284:
	ldr	d0, [x0]	// tmp310, *iftmp.2472_129
	str	d0, [sp, 144]	// tmp310, p
// varargs-dll.c:1828:   int q = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.28686, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2475, argv.__stack
	cmp	w1, 0	// D.28686,
	blt	.L4287		//,
	add	x1, x0, 11	// D.28691, iftmp.2475,
	and	x1, x1, -8	// D.28692, D.28691,
	str	x1, [sp, 152]	// D.28692, argv.__stack
	b	.L4288		//
.L4287:
	add	w2, w1, 8	// D.28694, D.28686,
	str	w2, [sp, 176]	// D.28694, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.28696, argv.__gr_offs
	cmp	w2, 0	// D.28696,
	ble	.L4289		//,
	add	x1, x0, 11	// D.28699, iftmp.2475,
	and	x1, x1, -8	// D.28700, D.28699,
	str	x1, [sp, 152]	// D.28700, argv.__stack
	b	.L4288		//
.L4289:
	ldr	x2, [sp, 160]	// D.28702, argv.__gr_top
	sxtw	x0, w1	// D.28703, D.28686
	add	x0, x2, x0	// iftmp.2475, D.28702, D.28703
.L4288:
	ldr	w0, [x0]	// tmp311, *iftmp.2474_131
	str	w0, [sp, 52]	// tmp311, q
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrsw	x1, [sp, 36]	// _1, a
	ldr	x0, [sp, 56]	// tmp312, b
	add	x0, x1, x0	// _2, _1, tmp312
	fmov	d0, x0	// _2, _2
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	scvtf	d1, d0	// _3, _2
	ldr	d0, [sp, 64]	// tmp313, c
	fadd	d1, d1, d0	// _4, _3, tmp313
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 72]	// tmp314, d
	fadd	d1, d1, d0	// _5, _4, tmp314
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 40]	// tmp315, e
	scvtf	d0, w0	// _6, tmp315
	fadd	d1, d1, d0	// _7, _5, _6
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp316, f
	scvtf	d0, d0	// _8, tmp316
	fadd	d1, d1, d0	// _9, _7, _8
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp317, g
	fadd	d1, d1, d0	// _10, _9, tmp317
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp318, h
	fadd	d1, d1, d0	// _11, _10, tmp318
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 44]	// tmp319, i
	scvtf	d0, w0	// _12, tmp319
	fadd	d1, d1, d0	// _13, _11, _12
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp320, j
	scvtf	d0, d0	// _14, tmp320
	fadd	d1, d1, d0	// _15, _13, _14
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp321, k
	fadd	d1, d1, d0	// _16, _15, tmp321
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp322, l
	fadd	d1, d1, d0	// _17, _16, tmp322
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp323, m
	scvtf	d0, w0	// _18, tmp323
	fadd	d1, d1, d0	// _19, _17, _18
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp324, n
	scvtf	d0, d0	// _20, tmp324
	fadd	d1, d1, d0	// _21, _19, _20
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp325, o
	fadd	d1, d1, d0	// _22, _21, tmp325
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp326, p
	fadd	d1, d1, d0	// _23, _22, tmp326
// varargs-dll.c:1830:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp327, q
	scvtf	d0, w0	// _24, tmp327
	fadd	d0, d1, d0	// _25, _23, _24
	fcvtzs	w0, d0	// _63, _25
	mov	w1, w0	// <retval>, _63
// varargs-dll.c:1831: }
	adrp	x0, :got:__stack_chk_guard	// tmp330,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp329, tmp330,
	ldr	x3, [sp, 184]	// tmp332, D.28704
	ldr	x2, [x0]	// tmp333,
	subs	x3, x3, x2	// tmp332, tmp333
	mov	x2, 0	// tmp333
	beq	.L4292		//,
	bl	__stack_chk_fail		//
.L4292:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp], 384	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE112:
	.size	use_va_args_ints_and_floats, .-use_va_args_ints_and_floats
	.align	2
	.global	use_va_list_ints_and_floats
	.type	use_va_list_ints_and_floats, %function
use_va_list_ints_and_floats:
.LFB113:
	.cfi_startproc
	str	x19, [sp, -160]!	//,
	.cfi_def_cfa_offset 160
	.cfi_offset 19, -160
	str	x0, [sp, 24]	// format, format
	mov	x19, x1	// tmp289,
// varargs-dll.c:1837:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28708, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2477, argv.__stack
	cmp	w1, 0	// D.28708,
	blt	.L4294		//,
	add	x1, x0, 11	// D.28713, iftmp.2477,
	and	x1, x1, -8	// D.28714, D.28713,
	str	x1, [x19]	// D.28714, argv.__stack
	b	.L4295		//
.L4294:
	add	w2, w1, 8	// D.28716, D.28708,
	str	w2, [x19, 24]	// D.28716, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28718, argv.__gr_offs
	cmp	w2, 0	// D.28718,
	ble	.L4296		//,
	add	x1, x0, 11	// D.28721, iftmp.2477,
	and	x1, x1, -8	// D.28722, D.28721,
	str	x1, [x19]	// D.28722, argv.__stack
	b	.L4295		//
.L4296:
	ldr	x2, [x19, 8]	// D.28724, argv.__gr_top
	sxtw	x0, w1	// D.28725, D.28708
	add	x0, x2, x0	// iftmp.2477, D.28724, D.28725
.L4295:
	ldr	w0, [x0]	// tmp290, *iftmp.2476_96
	str	w0, [sp, 44]	// tmp290, a
// varargs-dll.c:1838:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28726, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2479, argv.__stack
	cmp	w1, 0	// D.28726,
	blt	.L4298		//,
	add	x1, x0, 15	// D.28731, iftmp.2479,
	and	x1, x1, -8	// D.28732, D.28731,
	str	x1, [x19]	// D.28732, argv.__stack
	b	.L4299		//
.L4298:
	add	w2, w1, 8	// D.28734, D.28726,
	str	w2, [x19, 24]	// D.28734, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28736, argv.__gr_offs
	cmp	w2, 0	// D.28736,
	ble	.L4300		//,
	add	x1, x0, 15	// D.28739, iftmp.2479,
	and	x1, x1, -8	// D.28740, D.28739,
	str	x1, [x19]	// D.28740, argv.__stack
	b	.L4299		//
.L4300:
	ldr	x2, [x19, 8]	// D.28742, argv.__gr_top
	sxtw	x0, w1	// D.28743, D.28726
	add	x0, x2, x0	// iftmp.2479, D.28742, D.28743
.L4299:
	ldr	x0, [x0]	// tmp291, *iftmp.2478_98
	str	x0, [sp, 64]	// tmp291, b
// varargs-dll.c:1839:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28744, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2481, argv.__stack
	cmp	w1, 0	// D.28744,
	blt	.L4302		//,
	add	x1, x0, 15	// D.28749, iftmp.2481,
	and	x1, x1, -8	// D.28750, D.28749,
	str	x1, [x19]	// D.28750, argv.__stack
	b	.L4303		//
.L4302:
	add	w2, w1, 16	// D.28752, D.28744,
	str	w2, [x19, 28]	// D.28752, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28754, argv.__vr_offs
	cmp	w2, 0	// D.28754,
	ble	.L4304		//,
	add	x1, x0, 15	// D.28757, iftmp.2481,
	and	x1, x1, -8	// D.28758, D.28757,
	str	x1, [x19]	// D.28758, argv.__stack
	b	.L4303		//
.L4304:
	ldr	x2, [x19, 16]	// D.28760, argv.__vr_top
	sxtw	x0, w1	// D.28761, D.28744
	add	x0, x2, x0	// iftmp.2481, D.28760, D.28761
.L4303:
	ldr	d0, [x0]	// tmp292, *iftmp.2480_100
	str	d0, [sp, 72]	// tmp292, c
// varargs-dll.c:1840:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28762, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2483, argv.__stack
	cmp	w1, 0	// D.28762,
	blt	.L4306		//,
	add	x1, x0, 15	// D.28767, iftmp.2483,
	and	x1, x1, -8	// D.28768, D.28767,
	str	x1, [x19]	// D.28768, argv.__stack
	b	.L4307		//
.L4306:
	add	w2, w1, 16	// D.28770, D.28762,
	str	w2, [x19, 28]	// D.28770, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28772, argv.__vr_offs
	cmp	w2, 0	// D.28772,
	ble	.L4308		//,
	add	x1, x0, 15	// D.28775, iftmp.2483,
	and	x1, x1, -8	// D.28776, D.28775,
	str	x1, [x19]	// D.28776, argv.__stack
	b	.L4307		//
.L4308:
	ldr	x2, [x19, 16]	// D.28778, argv.__vr_top
	sxtw	x0, w1	// D.28779, D.28762
	add	x0, x2, x0	// iftmp.2483, D.28778, D.28779
.L4307:
	ldr	d0, [x0]	// tmp293, *iftmp.2482_102
	str	d0, [sp, 80]	// tmp293, d
// varargs-dll.c:1841:   int e = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28780, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2485, argv.__stack
	cmp	w1, 0	// D.28780,
	blt	.L4310		//,
	add	x1, x0, 11	// D.28785, iftmp.2485,
	and	x1, x1, -8	// D.28786, D.28785,
	str	x1, [x19]	// D.28786, argv.__stack
	b	.L4311		//
.L4310:
	add	w2, w1, 8	// D.28788, D.28780,
	str	w2, [x19, 24]	// D.28788, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28790, argv.__gr_offs
	cmp	w2, 0	// D.28790,
	ble	.L4312		//,
	add	x1, x0, 11	// D.28793, iftmp.2485,
	and	x1, x1, -8	// D.28794, D.28793,
	str	x1, [x19]	// D.28794, argv.__stack
	b	.L4311		//
.L4312:
	ldr	x2, [x19, 8]	// D.28796, argv.__gr_top
	sxtw	x0, w1	// D.28797, D.28780
	add	x0, x2, x0	// iftmp.2485, D.28796, D.28797
.L4311:
	ldr	w0, [x0]	// tmp294, *iftmp.2484_104
	str	w0, [sp, 48]	// tmp294, e
// varargs-dll.c:1842:   long f = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28798, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2487, argv.__stack
	cmp	w1, 0	// D.28798,
	blt	.L4314		//,
	add	x1, x0, 15	// D.28803, iftmp.2487,
	and	x1, x1, -8	// D.28804, D.28803,
	str	x1, [x19]	// D.28804, argv.__stack
	b	.L4315		//
.L4314:
	add	w2, w1, 8	// D.28806, D.28798,
	str	w2, [x19, 24]	// D.28806, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28808, argv.__gr_offs
	cmp	w2, 0	// D.28808,
	ble	.L4316		//,
	add	x1, x0, 15	// D.28811, iftmp.2487,
	and	x1, x1, -8	// D.28812, D.28811,
	str	x1, [x19]	// D.28812, argv.__stack
	b	.L4315		//
.L4316:
	ldr	x2, [x19, 8]	// D.28814, argv.__gr_top
	sxtw	x0, w1	// D.28815, D.28798
	add	x0, x2, x0	// iftmp.2487, D.28814, D.28815
.L4315:
	ldr	x0, [x0]	// tmp295, *iftmp.2486_106
	str	x0, [sp, 88]	// tmp295, f
// varargs-dll.c:1843:   double g = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28816, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2489, argv.__stack
	cmp	w1, 0	// D.28816,
	blt	.L4318		//,
	add	x1, x0, 15	// D.28821, iftmp.2489,
	and	x1, x1, -8	// D.28822, D.28821,
	str	x1, [x19]	// D.28822, argv.__stack
	b	.L4319		//
.L4318:
	add	w2, w1, 16	// D.28824, D.28816,
	str	w2, [x19, 28]	// D.28824, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28826, argv.__vr_offs
	cmp	w2, 0	// D.28826,
	ble	.L4320		//,
	add	x1, x0, 15	// D.28829, iftmp.2489,
	and	x1, x1, -8	// D.28830, D.28829,
	str	x1, [x19]	// D.28830, argv.__stack
	b	.L4319		//
.L4320:
	ldr	x2, [x19, 16]	// D.28832, argv.__vr_top
	sxtw	x0, w1	// D.28833, D.28816
	add	x0, x2, x0	// iftmp.2489, D.28832, D.28833
.L4319:
	ldr	d0, [x0]	// tmp296, *iftmp.2488_108
	str	d0, [sp, 96]	// tmp296, g
// varargs-dll.c:1844:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28834, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2491, argv.__stack
	cmp	w1, 0	// D.28834,
	blt	.L4322		//,
	add	x1, x0, 15	// D.28839, iftmp.2491,
	and	x1, x1, -8	// D.28840, D.28839,
	str	x1, [x19]	// D.28840, argv.__stack
	b	.L4323		//
.L4322:
	add	w2, w1, 16	// D.28842, D.28834,
	str	w2, [x19, 28]	// D.28842, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28844, argv.__vr_offs
	cmp	w2, 0	// D.28844,
	ble	.L4324		//,
	add	x1, x0, 15	// D.28847, iftmp.2491,
	and	x1, x1, -8	// D.28848, D.28847,
	str	x1, [x19]	// D.28848, argv.__stack
	b	.L4323		//
.L4324:
	ldr	x2, [x19, 16]	// D.28850, argv.__vr_top
	sxtw	x0, w1	// D.28851, D.28834
	add	x0, x2, x0	// iftmp.2491, D.28850, D.28851
.L4323:
	ldr	d0, [x0]	// tmp297, *iftmp.2490_110
	str	d0, [sp, 104]	// tmp297, h
// varargs-dll.c:1845:   int i = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28852, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2493, argv.__stack
	cmp	w1, 0	// D.28852,
	blt	.L4326		//,
	add	x1, x0, 11	// D.28857, iftmp.2493,
	and	x1, x1, -8	// D.28858, D.28857,
	str	x1, [x19]	// D.28858, argv.__stack
	b	.L4327		//
.L4326:
	add	w2, w1, 8	// D.28860, D.28852,
	str	w2, [x19, 24]	// D.28860, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28862, argv.__gr_offs
	cmp	w2, 0	// D.28862,
	ble	.L4328		//,
	add	x1, x0, 11	// D.28865, iftmp.2493,
	and	x1, x1, -8	// D.28866, D.28865,
	str	x1, [x19]	// D.28866, argv.__stack
	b	.L4327		//
.L4328:
	ldr	x2, [x19, 8]	// D.28868, argv.__gr_top
	sxtw	x0, w1	// D.28869, D.28852
	add	x0, x2, x0	// iftmp.2493, D.28868, D.28869
.L4327:
	ldr	w0, [x0]	// tmp298, *iftmp.2492_112
	str	w0, [sp, 52]	// tmp298, i
// varargs-dll.c:1846:   long j = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28870, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2495, argv.__stack
	cmp	w1, 0	// D.28870,
	blt	.L4330		//,
	add	x1, x0, 15	// D.28875, iftmp.2495,
	and	x1, x1, -8	// D.28876, D.28875,
	str	x1, [x19]	// D.28876, argv.__stack
	b	.L4331		//
.L4330:
	add	w2, w1, 8	// D.28878, D.28870,
	str	w2, [x19, 24]	// D.28878, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28880, argv.__gr_offs
	cmp	w2, 0	// D.28880,
	ble	.L4332		//,
	add	x1, x0, 15	// D.28883, iftmp.2495,
	and	x1, x1, -8	// D.28884, D.28883,
	str	x1, [x19]	// D.28884, argv.__stack
	b	.L4331		//
.L4332:
	ldr	x2, [x19, 8]	// D.28886, argv.__gr_top
	sxtw	x0, w1	// D.28887, D.28870
	add	x0, x2, x0	// iftmp.2495, D.28886, D.28887
.L4331:
	ldr	x0, [x0]	// tmp299, *iftmp.2494_114
	str	x0, [sp, 112]	// tmp299, j
// varargs-dll.c:1847:   double k = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28888, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2497, argv.__stack
	cmp	w1, 0	// D.28888,
	blt	.L4334		//,
	add	x1, x0, 15	// D.28893, iftmp.2497,
	and	x1, x1, -8	// D.28894, D.28893,
	str	x1, [x19]	// D.28894, argv.__stack
	b	.L4335		//
.L4334:
	add	w2, w1, 16	// D.28896, D.28888,
	str	w2, [x19, 28]	// D.28896, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28898, argv.__vr_offs
	cmp	w2, 0	// D.28898,
	ble	.L4336		//,
	add	x1, x0, 15	// D.28901, iftmp.2497,
	and	x1, x1, -8	// D.28902, D.28901,
	str	x1, [x19]	// D.28902, argv.__stack
	b	.L4335		//
.L4336:
	ldr	x2, [x19, 16]	// D.28904, argv.__vr_top
	sxtw	x0, w1	// D.28905, D.28888
	add	x0, x2, x0	// iftmp.2497, D.28904, D.28905
.L4335:
	ldr	d0, [x0]	// tmp300, *iftmp.2496_116
	str	d0, [sp, 120]	// tmp300, k
// varargs-dll.c:1848:   double l = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28906, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2499, argv.__stack
	cmp	w1, 0	// D.28906,
	blt	.L4338		//,
	add	x1, x0, 15	// D.28911, iftmp.2499,
	and	x1, x1, -8	// D.28912, D.28911,
	str	x1, [x19]	// D.28912, argv.__stack
	b	.L4339		//
.L4338:
	add	w2, w1, 16	// D.28914, D.28906,
	str	w2, [x19, 28]	// D.28914, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28916, argv.__vr_offs
	cmp	w2, 0	// D.28916,
	ble	.L4340		//,
	add	x1, x0, 15	// D.28919, iftmp.2499,
	and	x1, x1, -8	// D.28920, D.28919,
	str	x1, [x19]	// D.28920, argv.__stack
	b	.L4339		//
.L4340:
	ldr	x2, [x19, 16]	// D.28922, argv.__vr_top
	sxtw	x0, w1	// D.28923, D.28906
	add	x0, x2, x0	// iftmp.2499, D.28922, D.28923
.L4339:
	ldr	d0, [x0]	// tmp301, *iftmp.2498_118
	str	d0, [sp, 128]	// tmp301, l
// varargs-dll.c:1849:   int m = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28924, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2501, argv.__stack
	cmp	w1, 0	// D.28924,
	blt	.L4342		//,
	add	x1, x0, 11	// D.28929, iftmp.2501,
	and	x1, x1, -8	// D.28930, D.28929,
	str	x1, [x19]	// D.28930, argv.__stack
	b	.L4343		//
.L4342:
	add	w2, w1, 8	// D.28932, D.28924,
	str	w2, [x19, 24]	// D.28932, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28934, argv.__gr_offs
	cmp	w2, 0	// D.28934,
	ble	.L4344		//,
	add	x1, x0, 11	// D.28937, iftmp.2501,
	and	x1, x1, -8	// D.28938, D.28937,
	str	x1, [x19]	// D.28938, argv.__stack
	b	.L4343		//
.L4344:
	ldr	x2, [x19, 8]	// D.28940, argv.__gr_top
	sxtw	x0, w1	// D.28941, D.28924
	add	x0, x2, x0	// iftmp.2501, D.28940, D.28941
.L4343:
	ldr	w0, [x0]	// tmp302, *iftmp.2500_120
	str	w0, [sp, 56]	// tmp302, m
// varargs-dll.c:1850:   long n = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.28942, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2503, argv.__stack
	cmp	w1, 0	// D.28942,
	blt	.L4346		//,
	add	x1, x0, 15	// D.28947, iftmp.2503,
	and	x1, x1, -8	// D.28948, D.28947,
	str	x1, [x19]	// D.28948, argv.__stack
	b	.L4347		//
.L4346:
	add	w2, w1, 8	// D.28950, D.28942,
	str	w2, [x19, 24]	// D.28950, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.28952, argv.__gr_offs
	cmp	w2, 0	// D.28952,
	ble	.L4348		//,
	add	x1, x0, 15	// D.28955, iftmp.2503,
	and	x1, x1, -8	// D.28956, D.28955,
	str	x1, [x19]	// D.28956, argv.__stack
	b	.L4347		//
.L4348:
	ldr	x2, [x19, 8]	// D.28958, argv.__gr_top
	sxtw	x0, w1	// D.28959, D.28942
	add	x0, x2, x0	// iftmp.2503, D.28958, D.28959
.L4347:
	ldr	x0, [x0]	// tmp303, *iftmp.2502_122
	str	x0, [sp, 136]	// tmp303, n
// varargs-dll.c:1851:   double o = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28960, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2505, argv.__stack
	cmp	w1, 0	// D.28960,
	blt	.L4350		//,
	add	x1, x0, 15	// D.28965, iftmp.2505,
	and	x1, x1, -8	// D.28966, D.28965,
	str	x1, [x19]	// D.28966, argv.__stack
	b	.L4351		//
.L4350:
	add	w2, w1, 16	// D.28968, D.28960,
	str	w2, [x19, 28]	// D.28968, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28970, argv.__vr_offs
	cmp	w2, 0	// D.28970,
	ble	.L4352		//,
	add	x1, x0, 15	// D.28973, iftmp.2505,
	and	x1, x1, -8	// D.28974, D.28973,
	str	x1, [x19]	// D.28974, argv.__stack
	b	.L4351		//
.L4352:
	ldr	x2, [x19, 16]	// D.28976, argv.__vr_top
	sxtw	x0, w1	// D.28977, D.28960
	add	x0, x2, x0	// iftmp.2505, D.28976, D.28977
.L4351:
	ldr	d0, [x0]	// tmp304, *iftmp.2504_124
	str	d0, [sp, 144]	// tmp304, o
// varargs-dll.c:1852:   double p = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.28978, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2507, argv.__stack
	cmp	w1, 0	// D.28978,
	blt	.L4354		//,
	add	x1, x0, 15	// D.28983, iftmp.2507,
	and	x1, x1, -8	// D.28984, D.28983,
	str	x1, [x19]	// D.28984, argv.__stack
	b	.L4355		//
.L4354:
	add	w2, w1, 16	// D.28986, D.28978,
	str	w2, [x19, 28]	// D.28986, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.28988, argv.__vr_offs
	cmp	w2, 0	// D.28988,
	ble	.L4356		//,
	add	x1, x0, 15	// D.28991, iftmp.2507,
	and	x1, x1, -8	// D.28992, D.28991,
	str	x1, [x19]	// D.28992, argv.__stack
	b	.L4355		//
.L4356:
	ldr	x2, [x19, 16]	// D.28994, argv.__vr_top
	sxtw	x0, w1	// D.28995, D.28978
	add	x0, x2, x0	// iftmp.2507, D.28994, D.28995
.L4355:
	ldr	d0, [x0]	// tmp305, *iftmp.2506_126
	str	d0, [sp, 152]	// tmp305, p
// varargs-dll.c:1853:   int q = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.28996, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2509, argv.__stack
	cmp	w1, 0	// D.28996,
	blt	.L4358		//,
	add	x1, x0, 11	// D.29001, iftmp.2509,
	and	x1, x1, -8	// D.29002, D.29001,
	str	x1, [x19]	// D.29002, argv.__stack
	b	.L4359		//
.L4358:
	add	w2, w1, 8	// D.29004, D.28996,
	str	w2, [x19, 24]	// D.29004, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29006, argv.__gr_offs
	cmp	w2, 0	// D.29006,
	ble	.L4360		//,
	add	x1, x0, 11	// D.29009, iftmp.2509,
	and	x1, x1, -8	// D.29010, D.29009,
	str	x1, [x19]	// D.29010, argv.__stack
	b	.L4359		//
.L4360:
	ldr	x2, [x19, 8]	// D.29012, argv.__gr_top
	sxtw	x0, w1	// D.29013, D.28996
	add	x0, x2, x0	// iftmp.2509, D.29012, D.29013
.L4359:
	ldr	w0, [x0]	// tmp306, *iftmp.2508_128
	str	w0, [sp, 60]	// tmp306, q
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrsw	x1, [sp, 44]	// _1, a
	ldr	x0, [sp, 64]	// tmp307, b
	add	x0, x1, x0	// _2, _1, tmp307
	fmov	d0, x0	// _2, _2
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	scvtf	d1, d0	// _3, _2
	ldr	d0, [sp, 72]	// tmp308, c
	fadd	d1, d1, d0	// _4, _3, tmp308
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 80]	// tmp309, d
	fadd	d1, d1, d0	// _5, _4, tmp309
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 48]	// tmp310, e
	scvtf	d0, w0	// _6, tmp310
	fadd	d1, d1, d0	// _7, _5, _6
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp311, f
	scvtf	d0, d0	// _8, tmp311
	fadd	d1, d1, d0	// _9, _7, _8
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp312, g
	fadd	d1, d1, d0	// _10, _9, tmp312
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp313, h
	fadd	d1, d1, d0	// _11, _10, tmp313
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp314, i
	scvtf	d0, w0	// _12, tmp314
	fadd	d1, d1, d0	// _13, _11, _12
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp315, j
	scvtf	d0, d0	// _14, tmp315
	fadd	d1, d1, d0	// _15, _13, _14
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp316, k
	fadd	d1, d1, d0	// _16, _15, tmp316
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp317, l
	fadd	d1, d1, d0	// _17, _16, tmp317
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp318, m
	scvtf	d0, w0	// _18, tmp318
	fadd	d1, d1, d0	// _19, _17, _18
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp319, n
	scvtf	d0, d0	// _20, tmp319
	fadd	d1, d1, d0	// _21, _19, _20
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp320, o
	fadd	d1, d1, d0	// _22, _21, tmp320
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp321, p
	fadd	d1, d1, d0	// _23, _22, tmp321
// varargs-dll.c:1854:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp322, q
	scvtf	d0, w0	// _24, tmp322
	fadd	d0, d1, d0	// _25, _23, _24
	fcvtzs	w0, d0	// _61, _25
// varargs-dll.c:1855: }
	ldr	x19, [sp], 160	//,
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE113:
	.size	use_va_list_ints_and_floats, .-use_va_list_ints_and_floats
	.align	2
	.global	use_va_args_ints_floats_and_composites
	.type	use_va_args_ints_floats_and_composites, %function
use_va_args_ints_floats_and_composites:
.LFB114:
	.cfi_startproc
	sub	sp, sp, #624	//,,
	.cfi_def_cfa_offset 624
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -624
	.cfi_offset 30, -616
	mov	x29, sp	//,
	str	x0, [sp, 24]	// format, format
	str	x1, [sp, 568]	//,
	str	x2, [sp, 576]	//,
	str	x3, [sp, 584]	//,
	str	x4, [sp, 592]	//,
	str	x5, [sp, 600]	//,
	str	x6, [sp, 608]	//,
	str	x7, [sp, 616]	//,
	str	q0, [sp, 432]	//,
	str	q1, [sp, 448]	//,
	str	q2, [sp, 464]	//,
	str	q3, [sp, 480]	//,
	str	q4, [sp, 496]	//,
	add	x0, sp, 512	// tmp362,,
	str	q5, [x0]	//,
	add	x0, sp, 512	// tmp364,,
	str	q6, [x0, 16]	//,
	add	x0, sp, 512	// tmp366,,
	str	q7, [x0, 32]	//,
// varargs-dll.c:1859: {
	adrp	x0, :got:__stack_chk_guard	// tmp297,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp296, tmp297,
	ldr	x1, [x0]	// tmp357,
	str	x1, [sp, 424]	// tmp357, D.29323
	mov	x1, 0	// tmp357
// varargs-dll.c:1862:   va_start (argv, format);
	add	x0, sp, 624	// tmp368,,
	str	x0, [sp, 152]	// tmp368, MEM[(struct  *)&argv].__stack
	add	x0, sp, 624	// tmp369,,
	str	x0, [sp, 160]	// tmp369, MEM[(struct  *)&argv].__gr_top
	add	x0, sp, 560	// tmp299,,
	str	x0, [sp, 168]	// tmp299, MEM[(struct  *)&argv].__vr_top
	mov	w0, -56	// tmp300,
	str	w0, [sp, 176]	// tmp300, MEM[(struct  *)&argv].__gr_offs
	mov	w0, -128	// tmp301,
	str	w0, [sp, 180]	// tmp301, MEM[(struct  *)&argv].__vr_offs
// varargs-dll.c:1863:   int a = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.29014, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2511, argv.__stack
	cmp	w1, 0	// D.29014,
	blt	.L4364		//,
	add	x1, x0, 11	// D.29019, iftmp.2511,
	and	x1, x1, -8	// D.29020, D.29019,
	str	x1, [sp, 152]	// D.29020, argv.__stack
	b	.L4365		//
.L4364:
	add	w2, w1, 8	// D.29022, D.29014,
	str	w2, [sp, 176]	// D.29022, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29024, argv.__gr_offs
	cmp	w2, 0	// D.29024,
	ble	.L4366		//,
	add	x1, x0, 11	// D.29027, iftmp.2511,
	and	x1, x1, -8	// D.29028, D.29027,
	str	x1, [sp, 152]	// D.29028, argv.__stack
	b	.L4365		//
.L4366:
	ldr	x2, [sp, 160]	// D.29030, argv.__gr_top
	sxtw	x0, w1	// D.29031, D.29014
	add	x0, x2, x0	// iftmp.2511, D.29030, D.29031
.L4365:
	ldr	w0, [x0]	// tmp302, *iftmp.2510_103
	str	w0, [sp, 48]	// tmp302, a
// varargs-dll.c:1864:   long b = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.29032, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2513, argv.__stack
	cmp	w1, 0	// D.29032,
	blt	.L4368		//,
	add	x1, x0, 15	// D.29037, iftmp.2513,
	and	x1, x1, -8	// D.29038, D.29037,
	str	x1, [sp, 152]	// D.29038, argv.__stack
	b	.L4369		//
.L4368:
	add	w2, w1, 8	// D.29040, D.29032,
	str	w2, [sp, 176]	// D.29040, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29042, argv.__gr_offs
	cmp	w2, 0	// D.29042,
	ble	.L4370		//,
	add	x1, x0, 15	// D.29045, iftmp.2513,
	and	x1, x1, -8	// D.29046, D.29045,
	str	x1, [sp, 152]	// D.29046, argv.__stack
	b	.L4369		//
.L4370:
	ldr	x2, [sp, 160]	// D.29048, argv.__gr_top
	sxtw	x0, w1	// D.29049, D.29032
	add	x0, x2, x0	// iftmp.2513, D.29048, D.29049
.L4369:
	ldr	x0, [x0]	// tmp303, *iftmp.2512_105
	str	x0, [sp, 72]	// tmp303, b
// varargs-dll.c:1865:   double c = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29050, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2515, argv.__stack
	cmp	w1, 0	// D.29050,
	blt	.L4372		//,
	add	x1, x0, 15	// D.29055, iftmp.2515,
	and	x1, x1, -8	// D.29056, D.29055,
	str	x1, [sp, 152]	// D.29056, argv.__stack
	b	.L4373		//
.L4372:
	add	w2, w1, 16	// D.29058, D.29050,
	str	w2, [sp, 180]	// D.29058, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29060, argv.__vr_offs
	cmp	w2, 0	// D.29060,
	ble	.L4374		//,
	add	x1, x0, 15	// D.29063, iftmp.2515,
	and	x1, x1, -8	// D.29064, D.29063,
	str	x1, [sp, 152]	// D.29064, argv.__stack
	b	.L4373		//
.L4374:
	ldr	x2, [sp, 168]	// D.29066, argv.__vr_top
	sxtw	x0, w1	// D.29067, D.29050
	add	x0, x2, x0	// iftmp.2515, D.29066, D.29067
.L4373:
	ldr	d0, [x0]	// tmp304, *iftmp.2514_107
	str	d0, [sp, 80]	// tmp304, c
// varargs-dll.c:1866:   double d = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29068, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2517, argv.__stack
	cmp	w1, 0	// D.29068,
	blt	.L4376		//,
	add	x1, x0, 15	// D.29073, iftmp.2517,
	and	x1, x1, -8	// D.29074, D.29073,
	str	x1, [sp, 152]	// D.29074, argv.__stack
	b	.L4377		//
.L4376:
	add	w2, w1, 16	// D.29076, D.29068,
	str	w2, [sp, 180]	// D.29076, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29078, argv.__vr_offs
	cmp	w2, 0	// D.29078,
	ble	.L4378		//,
	add	x1, x0, 15	// D.29081, iftmp.2517,
	and	x1, x1, -8	// D.29082, D.29081,
	str	x1, [sp, 152]	// D.29082, argv.__stack
	b	.L4377		//
.L4378:
	ldr	x2, [sp, 168]	// D.29084, argv.__vr_top
	sxtw	x0, w1	// D.29085, D.29068
	add	x0, x2, x0	// iftmp.2517, D.29084, D.29085
.L4377:
	ldr	d0, [x0]	// tmp305, *iftmp.2516_109
	str	d0, [sp, 88]	// tmp305, d
// varargs-dll.c:1867:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [sp, 176]	// D.29086, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2519, argv.__stack
	cmp	w1, 0	// D.29086,
	blt	.L4380		//,
	add	x1, x0, 15	// D.29091, iftmp.2519,
	and	x1, x1, -8	// D.29092, D.29091,
	str	x1, [sp, 152]	// D.29092, argv.__stack
	b	.L4381		//
.L4380:
	add	w2, w1, 8	// D.29094, D.29086,
	str	w2, [sp, 176]	// D.29094, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29096, argv.__gr_offs
	cmp	w2, 0	// D.29096,
	ble	.L4382		//,
	add	x1, x0, 15	// D.29099, iftmp.2519,
	and	x1, x1, -8	// D.29100, D.29099,
	str	x1, [sp, 152]	// D.29100, argv.__stack
	b	.L4381		//
.L4382:
	ldr	x2, [sp, 160]	// D.29102, argv.__gr_top
	sxtw	x0, w1	// D.29103, D.29086
	add	x0, x2, x0	// iftmp.2519, D.29102, D.29103
.L4381:
	ldr	x1, [x0]	// D.29104, *iftmp.2518_111
	add	x0, sp, 184	// tmp306,,
	ldp	q0, q1, [x1]	// tmp308, tmp309, *_222
	stp	q0, q1, [x0]	// tmp308, tmp309, D.6933
	ldp	q0, q1, [x1, 32]	// tmp310, tmp311, *_222
	stp	q0, q1, [x0, 32]	// tmp310, tmp311, D.6933
	ldr	q0, [x1, 64]	// tmp312, *_222
	str	q0, [x0, 64]	// tmp312, D.6933
// varargs-dll.c:1867:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 188]	// tmp313, D.6933.b
	str	w0, [sp, 52]	// tmp313, e
// varargs-dll.c:1868:   int f = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.29105, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2521, argv.__stack
	cmp	w1, 0	// D.29105,
	blt	.L4384		//,
	add	x1, x0, 11	// D.29110, iftmp.2521,
	and	x1, x1, -8	// D.29111, D.29110,
	str	x1, [sp, 152]	// D.29111, argv.__stack
	b	.L4385		//
.L4384:
	add	w2, w1, 8	// D.29113, D.29105,
	str	w2, [sp, 176]	// D.29113, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29115, argv.__gr_offs
	cmp	w2, 0	// D.29115,
	ble	.L4386		//,
	add	x1, x0, 11	// D.29118, iftmp.2521,
	and	x1, x1, -8	// D.29119, D.29118,
	str	x1, [sp, 152]	// D.29119, argv.__stack
	b	.L4385		//
.L4386:
	ldr	x2, [sp, 160]	// D.29121, argv.__gr_top
	sxtw	x0, w1	// D.29122, D.29105
	add	x0, x2, x0	// iftmp.2521, D.29121, D.29122
.L4385:
	ldr	w0, [x0]	// tmp314, *iftmp.2520_113
	str	w0, [sp, 56]	// tmp314, f
// varargs-dll.c:1869:   long g = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.29123, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2523, argv.__stack
	cmp	w1, 0	// D.29123,
	blt	.L4388		//,
	add	x1, x0, 15	// D.29128, iftmp.2523,
	and	x1, x1, -8	// D.29129, D.29128,
	str	x1, [sp, 152]	// D.29129, argv.__stack
	b	.L4389		//
.L4388:
	add	w2, w1, 8	// D.29131, D.29123,
	str	w2, [sp, 176]	// D.29131, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29133, argv.__gr_offs
	cmp	w2, 0	// D.29133,
	ble	.L4390		//,
	add	x1, x0, 15	// D.29136, iftmp.2523,
	and	x1, x1, -8	// D.29137, D.29136,
	str	x1, [sp, 152]	// D.29137, argv.__stack
	b	.L4389		//
.L4390:
	ldr	x2, [sp, 160]	// D.29139, argv.__gr_top
	sxtw	x0, w1	// D.29140, D.29123
	add	x0, x2, x0	// iftmp.2523, D.29139, D.29140
.L4389:
	ldr	x0, [x0]	// tmp315, *iftmp.2522_115
	str	x0, [sp, 96]	// tmp315, g
// varargs-dll.c:1870:   double h = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29141, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2525, argv.__stack
	cmp	w1, 0	// D.29141,
	blt	.L4392		//,
	add	x1, x0, 15	// D.29146, iftmp.2525,
	and	x1, x1, -8	// D.29147, D.29146,
	str	x1, [sp, 152]	// D.29147, argv.__stack
	b	.L4393		//
.L4392:
	add	w2, w1, 16	// D.29149, D.29141,
	str	w2, [sp, 180]	// D.29149, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29151, argv.__vr_offs
	cmp	w2, 0	// D.29151,
	ble	.L4394		//,
	add	x1, x0, 15	// D.29154, iftmp.2525,
	and	x1, x1, -8	// D.29155, D.29154,
	str	x1, [sp, 152]	// D.29155, argv.__stack
	b	.L4393		//
.L4394:
	ldr	x2, [sp, 168]	// D.29157, argv.__vr_top
	sxtw	x0, w1	// D.29158, D.29141
	add	x0, x2, x0	// iftmp.2525, D.29157, D.29158
.L4393:
	ldr	d0, [x0]	// tmp316, *iftmp.2524_117
	str	d0, [sp, 104]	// tmp316, h
// varargs-dll.c:1871:   double i = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29159, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2527, argv.__stack
	cmp	w1, 0	// D.29159,
	blt	.L4396		//,
	add	x1, x0, 15	// D.29164, iftmp.2527,
	and	x1, x1, -8	// D.29165, D.29164,
	str	x1, [sp, 152]	// D.29165, argv.__stack
	b	.L4397		//
.L4396:
	add	w2, w1, 16	// D.29167, D.29159,
	str	w2, [sp, 180]	// D.29167, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29169, argv.__vr_offs
	cmp	w2, 0	// D.29169,
	ble	.L4398		//,
	add	x1, x0, 15	// D.29172, iftmp.2527,
	and	x1, x1, -8	// D.29173, D.29172,
	str	x1, [sp, 152]	// D.29173, argv.__stack
	b	.L4397		//
.L4398:
	ldr	x2, [sp, 168]	// D.29175, argv.__vr_top
	sxtw	x0, w1	// D.29176, D.29159
	add	x0, x2, x0	// iftmp.2527, D.29175, D.29176
.L4397:
	ldr	d0, [x0]	// tmp317, *iftmp.2526_119
	str	d0, [sp, 112]	// tmp317, i
// varargs-dll.c:1872:   char j = va_arg (argv, struct composite).a;
	ldr	w1, [sp, 176]	// D.29177, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2529, argv.__stack
	cmp	w1, 0	// D.29177,
	blt	.L4400		//,
	add	x1, x0, 15	// D.29182, iftmp.2529,
	and	x1, x1, -8	// D.29183, D.29182,
	str	x1, [sp, 152]	// D.29183, argv.__stack
	b	.L4401		//
.L4400:
	add	w2, w1, 8	// D.29185, D.29177,
	str	w2, [sp, 176]	// D.29185, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29187, argv.__gr_offs
	cmp	w2, 0	// D.29187,
	ble	.L4402		//,
	add	x1, x0, 15	// D.29190, iftmp.2529,
	and	x1, x1, -8	// D.29191, D.29190,
	str	x1, [sp, 152]	// D.29191, argv.__stack
	b	.L4401		//
.L4402:
	ldr	x2, [sp, 160]	// D.29193, argv.__gr_top
	sxtw	x0, w1	// D.29194, D.29177
	add	x0, x2, x0	// iftmp.2529, D.29193, D.29194
.L4401:
	ldr	x1, [x0]	// D.29195, *iftmp.2528_121
	add	x0, sp, 264	// tmp318,,
	ldp	q0, q1, [x1]	// tmp320, tmp321, *_309
	stp	q0, q1, [x0]	// tmp320, tmp321, D.6934
	ldp	q0, q1, [x1, 32]	// tmp322, tmp323, *_309
	stp	q0, q1, [x0, 32]	// tmp322, tmp323, D.6934
	ldr	q0, [x1, 64]	// tmp324, *_309
	str	q0, [x0, 64]	// tmp324, D.6934
// varargs-dll.c:1872:   char j = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 264]	// tmp325, D.6934.a
	strb	w0, [sp, 47]	// tmp325, j
// varargs-dll.c:1873:   int k = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.29196, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2531, argv.__stack
	cmp	w1, 0	// D.29196,
	blt	.L4404		//,
	add	x1, x0, 11	// D.29201, iftmp.2531,
	and	x1, x1, -8	// D.29202, D.29201,
	str	x1, [sp, 152]	// D.29202, argv.__stack
	b	.L4405		//
.L4404:
	add	w2, w1, 8	// D.29204, D.29196,
	str	w2, [sp, 176]	// D.29204, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29206, argv.__gr_offs
	cmp	w2, 0	// D.29206,
	ble	.L4406		//,
	add	x1, x0, 11	// D.29209, iftmp.2531,
	and	x1, x1, -8	// D.29210, D.29209,
	str	x1, [sp, 152]	// D.29210, argv.__stack
	b	.L4405		//
.L4406:
	ldr	x2, [sp, 160]	// D.29212, argv.__gr_top
	sxtw	x0, w1	// D.29213, D.29196
	add	x0, x2, x0	// iftmp.2531, D.29212, D.29213
.L4405:
	ldr	w0, [x0]	// tmp326, *iftmp.2530_123
	str	w0, [sp, 60]	// tmp326, k
// varargs-dll.c:1874:   long l = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.29214, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2533, argv.__stack
	cmp	w1, 0	// D.29214,
	blt	.L4408		//,
	add	x1, x0, 15	// D.29219, iftmp.2533,
	and	x1, x1, -8	// D.29220, D.29219,
	str	x1, [sp, 152]	// D.29220, argv.__stack
	b	.L4409		//
.L4408:
	add	w2, w1, 8	// D.29222, D.29214,
	str	w2, [sp, 176]	// D.29222, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29224, argv.__gr_offs
	cmp	w2, 0	// D.29224,
	ble	.L4410		//,
	add	x1, x0, 15	// D.29227, iftmp.2533,
	and	x1, x1, -8	// D.29228, D.29227,
	str	x1, [sp, 152]	// D.29228, argv.__stack
	b	.L4409		//
.L4410:
	ldr	x2, [sp, 160]	// D.29230, argv.__gr_top
	sxtw	x0, w1	// D.29231, D.29214
	add	x0, x2, x0	// iftmp.2533, D.29230, D.29231
.L4409:
	ldr	x0, [x0]	// tmp327, *iftmp.2532_125
	str	x0, [sp, 120]	// tmp327, l
// varargs-dll.c:1875:   double m = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29232, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2535, argv.__stack
	cmp	w1, 0	// D.29232,
	blt	.L4412		//,
	add	x1, x0, 15	// D.29237, iftmp.2535,
	and	x1, x1, -8	// D.29238, D.29237,
	str	x1, [sp, 152]	// D.29238, argv.__stack
	b	.L4413		//
.L4412:
	add	w2, w1, 16	// D.29240, D.29232,
	str	w2, [sp, 180]	// D.29240, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29242, argv.__vr_offs
	cmp	w2, 0	// D.29242,
	ble	.L4414		//,
	add	x1, x0, 15	// D.29245, iftmp.2535,
	and	x1, x1, -8	// D.29246, D.29245,
	str	x1, [sp, 152]	// D.29246, argv.__stack
	b	.L4413		//
.L4414:
	ldr	x2, [sp, 168]	// D.29248, argv.__vr_top
	sxtw	x0, w1	// D.29249, D.29232
	add	x0, x2, x0	// iftmp.2535, D.29248, D.29249
.L4413:
	ldr	d0, [x0]	// tmp328, *iftmp.2534_127
	str	d0, [sp, 128]	// tmp328, m
// varargs-dll.c:1876:   double n = va_arg (argv, double);
	ldr	w1, [sp, 180]	// D.29250, argv.__vr_offs
	ldr	x0, [sp, 152]	// iftmp.2537, argv.__stack
	cmp	w1, 0	// D.29250,
	blt	.L4416		//,
	add	x1, x0, 15	// D.29255, iftmp.2537,
	and	x1, x1, -8	// D.29256, D.29255,
	str	x1, [sp, 152]	// D.29256, argv.__stack
	b	.L4417		//
.L4416:
	add	w2, w1, 16	// D.29258, D.29250,
	str	w2, [sp, 180]	// D.29258, argv.__vr_offs
	ldr	w2, [sp, 180]	// D.29260, argv.__vr_offs
	cmp	w2, 0	// D.29260,
	ble	.L4418		//,
	add	x1, x0, 15	// D.29263, iftmp.2537,
	and	x1, x1, -8	// D.29264, D.29263,
	str	x1, [sp, 152]	// D.29264, argv.__stack
	b	.L4417		//
.L4418:
	ldr	x2, [sp, 168]	// D.29266, argv.__vr_top
	sxtw	x0, w1	// D.29267, D.29250
	add	x0, x2, x0	// iftmp.2537, D.29266, D.29267
.L4417:
	ldr	d0, [x0]	// tmp329, *iftmp.2536_129
	str	d0, [sp, 136]	// tmp329, n
// varargs-dll.c:1877:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [sp, 176]	// D.29268, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2539, argv.__stack
	cmp	w1, 0	// D.29268,
	blt	.L4420		//,
	add	x1, x0, 15	// D.29273, iftmp.2539,
	and	x1, x1, -8	// D.29274, D.29273,
	str	x1, [sp, 152]	// D.29274, argv.__stack
	b	.L4421		//
.L4420:
	add	w2, w1, 8	// D.29276, D.29268,
	str	w2, [sp, 176]	// D.29276, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29278, argv.__gr_offs
	cmp	w2, 0	// D.29278,
	ble	.L4422		//,
	add	x1, x0, 15	// D.29281, iftmp.2539,
	and	x1, x1, -8	// D.29282, D.29281,
	str	x1, [sp, 152]	// D.29282, argv.__stack
	b	.L4421		//
.L4422:
	ldr	x2, [sp, 160]	// D.29284, argv.__gr_top
	sxtw	x0, w1	// D.29285, D.29268
	add	x0, x2, x0	// iftmp.2539, D.29284, D.29285
.L4421:
	ldr	x1, [x0]	// D.29286, *iftmp.2538_131
	add	x0, sp, 344	// tmp330,,
	ldp	q0, q1, [x1]	// tmp332, tmp333, *_396
	stp	q0, q1, [x0]	// tmp332, tmp333, D.6935
	ldp	q0, q1, [x1, 32]	// tmp334, tmp335, *_396
	stp	q0, q1, [x0, 32]	// tmp334, tmp335, D.6935
	ldr	q0, [x1, 64]	// tmp336, *_396
	str	q0, [x0, 64]	// tmp336, D.6935
// varargs-dll.c:1877:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 352]	// _1, D.6935.c
	bl	atoi		//
	str	w0, [sp, 64]	//, o
// varargs-dll.c:1878:   int p = va_arg (argv, int);
	ldr	w1, [sp, 176]	// D.29287, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2541, argv.__stack
	cmp	w1, 0	// D.29287,
	blt	.L4424		//,
	add	x1, x0, 11	// D.29292, iftmp.2541,
	and	x1, x1, -8	// D.29293, D.29292,
	str	x1, [sp, 152]	// D.29293, argv.__stack
	b	.L4425		//
.L4424:
	add	w2, w1, 8	// D.29295, D.29287,
	str	w2, [sp, 176]	// D.29295, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29297, argv.__gr_offs
	cmp	w2, 0	// D.29297,
	ble	.L4426		//,
	add	x1, x0, 11	// D.29300, iftmp.2541,
	and	x1, x1, -8	// D.29301, D.29300,
	str	x1, [sp, 152]	// D.29301, argv.__stack
	b	.L4425		//
.L4426:
	ldr	x2, [sp, 160]	// D.29303, argv.__gr_top
	sxtw	x0, w1	// D.29304, D.29287
	add	x0, x2, x0	// iftmp.2541, D.29303, D.29304
.L4425:
	ldr	w0, [x0]	// tmp337, *iftmp.2540_133
	str	w0, [sp, 68]	// tmp337, p
// varargs-dll.c:1879:   long q = va_arg (argv, long);
	ldr	w1, [sp, 176]	// D.29305, argv.__gr_offs
	ldr	x0, [sp, 152]	// iftmp.2543, argv.__stack
	cmp	w1, 0	// D.29305,
	blt	.L4428		//,
	add	x1, x0, 15	// D.29310, iftmp.2543,
	and	x1, x1, -8	// D.29311, D.29310,
	str	x1, [sp, 152]	// D.29311, argv.__stack
	b	.L4429		//
.L4428:
	add	w2, w1, 8	// D.29313, D.29305,
	str	w2, [sp, 176]	// D.29313, argv.__gr_offs
	ldr	w2, [sp, 176]	// D.29315, argv.__gr_offs
	cmp	w2, 0	// D.29315,
	ble	.L4430		//,
	add	x1, x0, 15	// D.29318, iftmp.2543,
	and	x1, x1, -8	// D.29319, D.29318,
	str	x1, [sp, 152]	// D.29319, argv.__stack
	b	.L4429		//
.L4430:
	ldr	x2, [sp, 160]	// D.29321, argv.__gr_top
	sxtw	x0, w1	// D.29322, D.29305
	add	x0, x2, x0	// iftmp.2543, D.29321, D.29322
.L4429:
	ldr	x0, [x0]	// tmp338, *iftmp.2542_135
	str	x0, [sp, 144]	// tmp338, q
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrsw	x1, [sp, 48]	// _2, a
	ldr	x0, [sp, 72]	// tmp339, b
	add	x0, x1, x0	// _3, _2, tmp339
	fmov	d0, x0	// _3, _3
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	scvtf	d1, d0	// _4, _3
	ldr	d0, [sp, 80]	// tmp340, c
	fadd	d1, d1, d0	// _5, _4, tmp340
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 88]	// tmp341, d
	fadd	d1, d1, d0	// _6, _5, tmp341
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 52]	// tmp342, e
	scvtf	d0, w0	// _7, tmp342
	fadd	d1, d1, d0	// _8, _6, _7
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 56]	// tmp343, f
	scvtf	d0, w0	// _9, tmp343
	fadd	d1, d1, d0	// _10, _8, _9
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp344, g
	scvtf	d0, d0	// _11, tmp344
	fadd	d1, d1, d0	// _12, _10, _11
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp345, h
	fadd	d1, d1, d0	// _13, _12, tmp345
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp346, i
	fadd	d1, d1, d0	// _14, _13, tmp346
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 47]	// _15, j
	scvtf	d0, w0	// _16, _15
	fadd	d1, d1, d0	// _17, _14, _16
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp347, k
	scvtf	d0, w0	// _18, tmp347
	fadd	d1, d1, d0	// _19, _17, _18
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp348, l
	scvtf	d0, d0	// _20, tmp348
	fadd	d1, d1, d0	// _21, _19, _20
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp349, m
	fadd	d1, d1, d0	// _22, _21, tmp349
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp350, n
	fadd	d1, d1, d0	// _23, _22, tmp350
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp351, o
	scvtf	d0, w0	// _24, tmp351
	fadd	d1, d1, d0	// _25, _23, _24
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp352, p
	scvtf	d0, w0	// _26, tmp352
	fadd	d1, d1, d0	// _27, _25, _26
// varargs-dll.c:1881:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp353, q
	scvtf	d0, d0	// _28, tmp353
	fadd	d0, d1, d0	// _29, _27, _28
	fcvtzs	w0, d0	// _67, _29
	mov	w1, w0	// <retval>, _67
// varargs-dll.c:1882: }
	adrp	x0, :got:__stack_chk_guard	// tmp356,
	ldr	x0, [x0, #:got_lo12:__stack_chk_guard]	// tmp355, tmp356,
	ldr	x3, [sp, 424]	// tmp358, D.29323
	ldr	x2, [x0]	// tmp359,
	subs	x3, x3, x2	// tmp358, tmp359
	mov	x2, 0	// tmp359
	beq	.L4433		//,
	bl	__stack_chk_fail		//
.L4433:
	mov	w0, w1	//, <retval>
	ldp	x29, x30, [sp]	//,,
	add	sp, sp, 624	//,,
	.cfi_restore 29
	.cfi_restore 30
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE114:
	.size	use_va_args_ints_floats_and_composites, .-use_va_args_ints_floats_and_composites
	.align	2
	.global	use_va_list_ints_floats_and_composites
	.type	use_va_list_ints_floats_and_composites, %function
use_va_list_ints_floats_and_composites:
.LFB115:
	.cfi_startproc
	stp	x29, x30, [sp, -400]!	//,,,
	.cfi_def_cfa_offset 400
	.cfi_offset 29, -400
	.cfi_offset 30, -392
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -384
	str	x0, [sp, 40]	// format, format
	mov	x19, x1	// tmp296,
// varargs-dll.c:1888:   int a = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.29327, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2545, argv.__stack
	cmp	w1, 0	// D.29327,
	blt	.L4435		//,
	add	x1, x0, 11	// D.29332, iftmp.2545,
	and	x1, x1, -8	// D.29333, D.29332,
	str	x1, [x19]	// D.29333, argv.__stack
	b	.L4436		//
.L4435:
	add	w2, w1, 8	// D.29335, D.29327,
	str	w2, [x19, 24]	// D.29335, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29337, argv.__gr_offs
	cmp	w2, 0	// D.29337,
	ble	.L4437		//,
	add	x1, x0, 11	// D.29340, iftmp.2545,
	and	x1, x1, -8	// D.29341, D.29340,
	str	x1, [x19]	// D.29341, argv.__stack
	b	.L4436		//
.L4437:
	ldr	x2, [x19, 8]	// D.29343, argv.__gr_top
	sxtw	x0, w1	// D.29344, D.29327
	add	x0, x2, x0	// iftmp.2545, D.29343, D.29344
.L4436:
	ldr	w0, [x0]	// tmp297, *iftmp.2544_100
	str	w0, [sp, 56]	// tmp297, a
// varargs-dll.c:1889:   long b = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.29345, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2547, argv.__stack
	cmp	w1, 0	// D.29345,
	blt	.L4439		//,
	add	x1, x0, 15	// D.29350, iftmp.2547,
	and	x1, x1, -8	// D.29351, D.29350,
	str	x1, [x19]	// D.29351, argv.__stack
	b	.L4440		//
.L4439:
	add	w2, w1, 8	// D.29353, D.29345,
	str	w2, [x19, 24]	// D.29353, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29355, argv.__gr_offs
	cmp	w2, 0	// D.29355,
	ble	.L4441		//,
	add	x1, x0, 15	// D.29358, iftmp.2547,
	and	x1, x1, -8	// D.29359, D.29358,
	str	x1, [x19]	// D.29359, argv.__stack
	b	.L4440		//
.L4441:
	ldr	x2, [x19, 8]	// D.29361, argv.__gr_top
	sxtw	x0, w1	// D.29362, D.29345
	add	x0, x2, x0	// iftmp.2547, D.29361, D.29362
.L4440:
	ldr	x0, [x0]	// tmp298, *iftmp.2546_102
	str	x0, [sp, 80]	// tmp298, b
// varargs-dll.c:1890:   double c = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29363, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2549, argv.__stack
	cmp	w1, 0	// D.29363,
	blt	.L4443		//,
	add	x1, x0, 15	// D.29368, iftmp.2549,
	and	x1, x1, -8	// D.29369, D.29368,
	str	x1, [x19]	// D.29369, argv.__stack
	b	.L4444		//
.L4443:
	add	w2, w1, 16	// D.29371, D.29363,
	str	w2, [x19, 28]	// D.29371, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29373, argv.__vr_offs
	cmp	w2, 0	// D.29373,
	ble	.L4445		//,
	add	x1, x0, 15	// D.29376, iftmp.2549,
	and	x1, x1, -8	// D.29377, D.29376,
	str	x1, [x19]	// D.29377, argv.__stack
	b	.L4444		//
.L4445:
	ldr	x2, [x19, 16]	// D.29379, argv.__vr_top
	sxtw	x0, w1	// D.29380, D.29363
	add	x0, x2, x0	// iftmp.2549, D.29379, D.29380
.L4444:
	ldr	d0, [x0]	// tmp299, *iftmp.2548_104
	str	d0, [sp, 88]	// tmp299, c
// varargs-dll.c:1891:   double d = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29381, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2551, argv.__stack
	cmp	w1, 0	// D.29381,
	blt	.L4447		//,
	add	x1, x0, 15	// D.29386, iftmp.2551,
	and	x1, x1, -8	// D.29387, D.29386,
	str	x1, [x19]	// D.29387, argv.__stack
	b	.L4448		//
.L4447:
	add	w2, w1, 16	// D.29389, D.29381,
	str	w2, [x19, 28]	// D.29389, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29391, argv.__vr_offs
	cmp	w2, 0	// D.29391,
	ble	.L4449		//,
	add	x1, x0, 15	// D.29394, iftmp.2551,
	and	x1, x1, -8	// D.29395, D.29394,
	str	x1, [x19]	// D.29395, argv.__stack
	b	.L4448		//
.L4449:
	ldr	x2, [x19, 16]	// D.29397, argv.__vr_top
	sxtw	x0, w1	// D.29398, D.29381
	add	x0, x2, x0	// iftmp.2551, D.29397, D.29398
.L4448:
	ldr	d0, [x0]	// tmp300, *iftmp.2550_106
	str	d0, [sp, 96]	// tmp300, d
// varargs-dll.c:1892:   int e = va_arg (argv, struct composite).b;
	ldr	w1, [x19, 24]	// D.29399, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2553, argv.__stack
	cmp	w1, 0	// D.29399,
	blt	.L4451		//,
	add	x1, x0, 15	// D.29404, iftmp.2553,
	and	x1, x1, -8	// D.29405, D.29404,
	str	x1, [x19]	// D.29405, argv.__stack
	b	.L4452		//
.L4451:
	add	w2, w1, 8	// D.29407, D.29399,
	str	w2, [x19, 24]	// D.29407, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29409, argv.__gr_offs
	cmp	w2, 0	// D.29409,
	ble	.L4453		//,
	add	x1, x0, 15	// D.29412, iftmp.2553,
	and	x1, x1, -8	// D.29413, D.29412,
	str	x1, [x19]	// D.29413, argv.__stack
	b	.L4452		//
.L4453:
	ldr	x2, [x19, 8]	// D.29415, argv.__gr_top
	sxtw	x0, w1	// D.29416, D.29399
	add	x0, x2, x0	// iftmp.2553, D.29415, D.29416
.L4452:
	ldr	x1, [x0]	// D.29417, *iftmp.2552_108
	add	x0, sp, 160	// tmp301,,
	ldp	q0, q1, [x1]	// tmp303, tmp304, *_219
	stp	q0, q1, [x0]	// tmp303, tmp304, D.6939
	ldp	q0, q1, [x1, 32]	// tmp305, tmp306, *_219
	stp	q0, q1, [x0, 32]	// tmp305, tmp306, D.6939
	ldr	q0, [x1, 64]	// tmp307, *_219
	str	q0, [x0, 64]	// tmp307, D.6939
// varargs-dll.c:1892:   int e = va_arg (argv, struct composite).b;
	ldr	w0, [sp, 164]	// tmp308, D.6939.b
	str	w0, [sp, 60]	// tmp308, e
// varargs-dll.c:1893:   int f = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.29418, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2555, argv.__stack
	cmp	w1, 0	// D.29418,
	blt	.L4455		//,
	add	x1, x0, 11	// D.29423, iftmp.2555,
	and	x1, x1, -8	// D.29424, D.29423,
	str	x1, [x19]	// D.29424, argv.__stack
	b	.L4456		//
.L4455:
	add	w2, w1, 8	// D.29426, D.29418,
	str	w2, [x19, 24]	// D.29426, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29428, argv.__gr_offs
	cmp	w2, 0	// D.29428,
	ble	.L4457		//,
	add	x1, x0, 11	// D.29431, iftmp.2555,
	and	x1, x1, -8	// D.29432, D.29431,
	str	x1, [x19]	// D.29432, argv.__stack
	b	.L4456		//
.L4457:
	ldr	x2, [x19, 8]	// D.29434, argv.__gr_top
	sxtw	x0, w1	// D.29435, D.29418
	add	x0, x2, x0	// iftmp.2555, D.29434, D.29435
.L4456:
	ldr	w0, [x0]	// tmp309, *iftmp.2554_110
	str	w0, [sp, 64]	// tmp309, f
// varargs-dll.c:1894:   long g = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.29436, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2557, argv.__stack
	cmp	w1, 0	// D.29436,
	blt	.L4459		//,
	add	x1, x0, 15	// D.29441, iftmp.2557,
	and	x1, x1, -8	// D.29442, D.29441,
	str	x1, [x19]	// D.29442, argv.__stack
	b	.L4460		//
.L4459:
	add	w2, w1, 8	// D.29444, D.29436,
	str	w2, [x19, 24]	// D.29444, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29446, argv.__gr_offs
	cmp	w2, 0	// D.29446,
	ble	.L4461		//,
	add	x1, x0, 15	// D.29449, iftmp.2557,
	and	x1, x1, -8	// D.29450, D.29449,
	str	x1, [x19]	// D.29450, argv.__stack
	b	.L4460		//
.L4461:
	ldr	x2, [x19, 8]	// D.29452, argv.__gr_top
	sxtw	x0, w1	// D.29453, D.29436
	add	x0, x2, x0	// iftmp.2557, D.29452, D.29453
.L4460:
	ldr	x0, [x0]	// tmp310, *iftmp.2556_112
	str	x0, [sp, 104]	// tmp310, g
// varargs-dll.c:1895:   double h = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29454, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2559, argv.__stack
	cmp	w1, 0	// D.29454,
	blt	.L4463		//,
	add	x1, x0, 15	// D.29459, iftmp.2559,
	and	x1, x1, -8	// D.29460, D.29459,
	str	x1, [x19]	// D.29460, argv.__stack
	b	.L4464		//
.L4463:
	add	w2, w1, 16	// D.29462, D.29454,
	str	w2, [x19, 28]	// D.29462, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29464, argv.__vr_offs
	cmp	w2, 0	// D.29464,
	ble	.L4465		//,
	add	x1, x0, 15	// D.29467, iftmp.2559,
	and	x1, x1, -8	// D.29468, D.29467,
	str	x1, [x19]	// D.29468, argv.__stack
	b	.L4464		//
.L4465:
	ldr	x2, [x19, 16]	// D.29470, argv.__vr_top
	sxtw	x0, w1	// D.29471, D.29454
	add	x0, x2, x0	// iftmp.2559, D.29470, D.29471
.L4464:
	ldr	d0, [x0]	// tmp311, *iftmp.2558_114
	str	d0, [sp, 112]	// tmp311, h
// varargs-dll.c:1896:   double i = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29472, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2561, argv.__stack
	cmp	w1, 0	// D.29472,
	blt	.L4467		//,
	add	x1, x0, 15	// D.29477, iftmp.2561,
	and	x1, x1, -8	// D.29478, D.29477,
	str	x1, [x19]	// D.29478, argv.__stack
	b	.L4468		//
.L4467:
	add	w2, w1, 16	// D.29480, D.29472,
	str	w2, [x19, 28]	// D.29480, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29482, argv.__vr_offs
	cmp	w2, 0	// D.29482,
	ble	.L4469		//,
	add	x1, x0, 15	// D.29485, iftmp.2561,
	and	x1, x1, -8	// D.29486, D.29485,
	str	x1, [x19]	// D.29486, argv.__stack
	b	.L4468		//
.L4469:
	ldr	x2, [x19, 16]	// D.29488, argv.__vr_top
	sxtw	x0, w1	// D.29489, D.29472
	add	x0, x2, x0	// iftmp.2561, D.29488, D.29489
.L4468:
	ldr	d0, [x0]	// tmp312, *iftmp.2560_116
	str	d0, [sp, 120]	// tmp312, i
// varargs-dll.c:1897:   char j = va_arg (argv, struct composite).a;
	ldr	w1, [x19, 24]	// D.29490, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2563, argv.__stack
	cmp	w1, 0	// D.29490,
	blt	.L4471		//,
	add	x1, x0, 15	// D.29495, iftmp.2563,
	and	x1, x1, -8	// D.29496, D.29495,
	str	x1, [x19]	// D.29496, argv.__stack
	b	.L4472		//
.L4471:
	add	w2, w1, 8	// D.29498, D.29490,
	str	w2, [x19, 24]	// D.29498, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29500, argv.__gr_offs
	cmp	w2, 0	// D.29500,
	ble	.L4473		//,
	add	x1, x0, 15	// D.29503, iftmp.2563,
	and	x1, x1, -8	// D.29504, D.29503,
	str	x1, [x19]	// D.29504, argv.__stack
	b	.L4472		//
.L4473:
	ldr	x2, [x19, 8]	// D.29506, argv.__gr_top
	sxtw	x0, w1	// D.29507, D.29490
	add	x0, x2, x0	// iftmp.2563, D.29506, D.29507
.L4472:
	ldr	x1, [x0]	// D.29508, *iftmp.2562_118
	add	x0, sp, 240	// tmp313,,
	ldp	q0, q1, [x1]	// tmp315, tmp316, *_306
	stp	q0, q1, [x0]	// tmp315, tmp316, D.6940
	ldp	q0, q1, [x1, 32]	// tmp317, tmp318, *_306
	stp	q0, q1, [x0, 32]	// tmp317, tmp318, D.6940
	ldr	q0, [x1, 64]	// tmp319, *_306
	str	q0, [x0, 64]	// tmp319, D.6940
// varargs-dll.c:1897:   char j = va_arg (argv, struct composite).a;
	ldrb	w0, [sp, 240]	// tmp320, D.6940.a
	strb	w0, [sp, 55]	// tmp320, j
// varargs-dll.c:1898:   int k = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.29509, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2565, argv.__stack
	cmp	w1, 0	// D.29509,
	blt	.L4475		//,
	add	x1, x0, 11	// D.29514, iftmp.2565,
	and	x1, x1, -8	// D.29515, D.29514,
	str	x1, [x19]	// D.29515, argv.__stack
	b	.L4476		//
.L4475:
	add	w2, w1, 8	// D.29517, D.29509,
	str	w2, [x19, 24]	// D.29517, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29519, argv.__gr_offs
	cmp	w2, 0	// D.29519,
	ble	.L4477		//,
	add	x1, x0, 11	// D.29522, iftmp.2565,
	and	x1, x1, -8	// D.29523, D.29522,
	str	x1, [x19]	// D.29523, argv.__stack
	b	.L4476		//
.L4477:
	ldr	x2, [x19, 8]	// D.29525, argv.__gr_top
	sxtw	x0, w1	// D.29526, D.29509
	add	x0, x2, x0	// iftmp.2565, D.29525, D.29526
.L4476:
	ldr	w0, [x0]	// tmp321, *iftmp.2564_120
	str	w0, [sp, 68]	// tmp321, k
// varargs-dll.c:1899:   long l = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.29527, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2567, argv.__stack
	cmp	w1, 0	// D.29527,
	blt	.L4479		//,
	add	x1, x0, 15	// D.29532, iftmp.2567,
	and	x1, x1, -8	// D.29533, D.29532,
	str	x1, [x19]	// D.29533, argv.__stack
	b	.L4480		//
.L4479:
	add	w2, w1, 8	// D.29535, D.29527,
	str	w2, [x19, 24]	// D.29535, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29537, argv.__gr_offs
	cmp	w2, 0	// D.29537,
	ble	.L4481		//,
	add	x1, x0, 15	// D.29540, iftmp.2567,
	and	x1, x1, -8	// D.29541, D.29540,
	str	x1, [x19]	// D.29541, argv.__stack
	b	.L4480		//
.L4481:
	ldr	x2, [x19, 8]	// D.29543, argv.__gr_top
	sxtw	x0, w1	// D.29544, D.29527
	add	x0, x2, x0	// iftmp.2567, D.29543, D.29544
.L4480:
	ldr	x0, [x0]	// tmp322, *iftmp.2566_122
	str	x0, [sp, 128]	// tmp322, l
// varargs-dll.c:1900:   double m = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29545, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2569, argv.__stack
	cmp	w1, 0	// D.29545,
	blt	.L4483		//,
	add	x1, x0, 15	// D.29550, iftmp.2569,
	and	x1, x1, -8	// D.29551, D.29550,
	str	x1, [x19]	// D.29551, argv.__stack
	b	.L4484		//
.L4483:
	add	w2, w1, 16	// D.29553, D.29545,
	str	w2, [x19, 28]	// D.29553, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29555, argv.__vr_offs
	cmp	w2, 0	// D.29555,
	ble	.L4485		//,
	add	x1, x0, 15	// D.29558, iftmp.2569,
	and	x1, x1, -8	// D.29559, D.29558,
	str	x1, [x19]	// D.29559, argv.__stack
	b	.L4484		//
.L4485:
	ldr	x2, [x19, 16]	// D.29561, argv.__vr_top
	sxtw	x0, w1	// D.29562, D.29545
	add	x0, x2, x0	// iftmp.2569, D.29561, D.29562
.L4484:
	ldr	d0, [x0]	// tmp323, *iftmp.2568_124
	str	d0, [sp, 136]	// tmp323, m
// varargs-dll.c:1901:   double n = va_arg (argv, double);
	ldr	w1, [x19, 28]	// D.29563, argv.__vr_offs
	ldr	x0, [x19]	// iftmp.2571, argv.__stack
	cmp	w1, 0	// D.29563,
	blt	.L4487		//,
	add	x1, x0, 15	// D.29568, iftmp.2571,
	and	x1, x1, -8	// D.29569, D.29568,
	str	x1, [x19]	// D.29569, argv.__stack
	b	.L4488		//
.L4487:
	add	w2, w1, 16	// D.29571, D.29563,
	str	w2, [x19, 28]	// D.29571, argv.__vr_offs
	ldr	w2, [x19, 28]	// D.29573, argv.__vr_offs
	cmp	w2, 0	// D.29573,
	ble	.L4489		//,
	add	x1, x0, 15	// D.29576, iftmp.2571,
	and	x1, x1, -8	// D.29577, D.29576,
	str	x1, [x19]	// D.29577, argv.__stack
	b	.L4488		//
.L4489:
	ldr	x2, [x19, 16]	// D.29579, argv.__vr_top
	sxtw	x0, w1	// D.29580, D.29563
	add	x0, x2, x0	// iftmp.2571, D.29579, D.29580
.L4488:
	ldr	d0, [x0]	// tmp324, *iftmp.2570_126
	str	d0, [sp, 144]	// tmp324, n
// varargs-dll.c:1902:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	w1, [x19, 24]	// D.29581, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2573, argv.__stack
	cmp	w1, 0	// D.29581,
	blt	.L4491		//,
	add	x1, x0, 15	// D.29586, iftmp.2573,
	and	x1, x1, -8	// D.29587, D.29586,
	str	x1, [x19]	// D.29587, argv.__stack
	b	.L4492		//
.L4491:
	add	w2, w1, 8	// D.29589, D.29581,
	str	w2, [x19, 24]	// D.29589, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29591, argv.__gr_offs
	cmp	w2, 0	// D.29591,
	ble	.L4493		//,
	add	x1, x0, 15	// D.29594, iftmp.2573,
	and	x1, x1, -8	// D.29595, D.29594,
	str	x1, [x19]	// D.29595, argv.__stack
	b	.L4492		//
.L4493:
	ldr	x2, [x19, 8]	// D.29597, argv.__gr_top
	sxtw	x0, w1	// D.29598, D.29581
	add	x0, x2, x0	// iftmp.2573, D.29597, D.29598
.L4492:
	ldr	x1, [x0]	// D.29599, *iftmp.2572_128
	add	x0, sp, 320	// tmp325,,
	ldp	q0, q1, [x1]	// tmp327, tmp328, *_393
	stp	q0, q1, [x0]	// tmp327, tmp328, D.6941
	ldp	q0, q1, [x1, 32]	// tmp329, tmp330, *_393
	stp	q0, q1, [x0, 32]	// tmp329, tmp330, D.6941
	ldr	q0, [x1, 64]	// tmp331, *_393
	str	q0, [x0, 64]	// tmp331, D.6941
// varargs-dll.c:1902:   int o = atoi (va_arg (argv, struct composite).c);
	ldr	x0, [sp, 328]	// _1, D.6941.c
	bl	atoi		//
	str	w0, [sp, 72]	//, o
// varargs-dll.c:1903:   int p = va_arg (argv, int);
	ldr	w1, [x19, 24]	// D.29600, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2575, argv.__stack
	cmp	w1, 0	// D.29600,
	blt	.L4495		//,
	add	x1, x0, 11	// D.29605, iftmp.2575,
	and	x1, x1, -8	// D.29606, D.29605,
	str	x1, [x19]	// D.29606, argv.__stack
	b	.L4496		//
.L4495:
	add	w2, w1, 8	// D.29608, D.29600,
	str	w2, [x19, 24]	// D.29608, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29610, argv.__gr_offs
	cmp	w2, 0	// D.29610,
	ble	.L4497		//,
	add	x1, x0, 11	// D.29613, iftmp.2575,
	and	x1, x1, -8	// D.29614, D.29613,
	str	x1, [x19]	// D.29614, argv.__stack
	b	.L4496		//
.L4497:
	ldr	x2, [x19, 8]	// D.29616, argv.__gr_top
	sxtw	x0, w1	// D.29617, D.29600
	add	x0, x2, x0	// iftmp.2575, D.29616, D.29617
.L4496:
	ldr	w0, [x0]	// tmp332, *iftmp.2574_130
	str	w0, [sp, 76]	// tmp332, p
// varargs-dll.c:1904:   long q = va_arg (argv, long);
	ldr	w1, [x19, 24]	// D.29618, argv.__gr_offs
	ldr	x0, [x19]	// iftmp.2577, argv.__stack
	cmp	w1, 0	// D.29618,
	blt	.L4499		//,
	add	x1, x0, 15	// D.29623, iftmp.2577,
	and	x1, x1, -8	// D.29624, D.29623,
	str	x1, [x19]	// D.29624, argv.__stack
	b	.L4500		//
.L4499:
	add	w2, w1, 8	// D.29626, D.29618,
	str	w2, [x19, 24]	// D.29626, argv.__gr_offs
	ldr	w2, [x19, 24]	// D.29628, argv.__gr_offs
	cmp	w2, 0	// D.29628,
	ble	.L4501		//,
	add	x1, x0, 15	// D.29631, iftmp.2577,
	and	x1, x1, -8	// D.29632, D.29631,
	str	x1, [x19]	// D.29632, argv.__stack
	b	.L4500		//
.L4501:
	ldr	x2, [x19, 8]	// D.29634, argv.__gr_top
	sxtw	x0, w1	// D.29635, D.29618
	add	x0, x2, x0	// iftmp.2577, D.29634, D.29635
.L4500:
	ldr	x0, [x0]	// tmp333, *iftmp.2576_132
	str	x0, [sp, 152]	// tmp333, q
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrsw	x1, [sp, 56]	// _2, a
	ldr	x0, [sp, 80]	// tmp334, b
	add	x0, x1, x0	// _3, _2, tmp334
	fmov	d0, x0	// _3, _3
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	scvtf	d1, d0	// _4, _3
	ldr	d0, [sp, 88]	// tmp335, c
	fadd	d1, d1, d0	// _5, _4, tmp335
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 96]	// tmp336, d
	fadd	d1, d1, d0	// _6, _5, tmp336
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 60]	// tmp337, e
	scvtf	d0, w0	// _7, tmp337
	fadd	d1, d1, d0	// _8, _6, _7
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 64]	// tmp338, f
	scvtf	d0, w0	// _9, tmp338
	fadd	d1, d1, d0	// _10, _8, _9
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 104]	// tmp339, g
	scvtf	d0, d0	// _11, tmp339
	fadd	d1, d1, d0	// _12, _10, _11
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 112]	// tmp340, h
	fadd	d1, d1, d0	// _13, _12, tmp340
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 120]	// tmp341, i
	fadd	d1, d1, d0	// _14, _13, tmp341
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldrb	w0, [sp, 55]	// _15, j
	scvtf	d0, w0	// _16, _15
	fadd	d1, d1, d0	// _17, _14, _16
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 68]	// tmp342, k
	scvtf	d0, w0	// _18, tmp342
	fadd	d1, d1, d0	// _19, _17, _18
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 128]	// tmp343, l
	scvtf	d0, d0	// _20, tmp343
	fadd	d1, d1, d0	// _21, _19, _20
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 136]	// tmp344, m
	fadd	d1, d1, d0	// _22, _21, tmp344
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 144]	// tmp345, n
	fadd	d1, d1, d0	// _23, _22, tmp345
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 72]	// tmp346, o
	scvtf	d0, w0	// _24, tmp346
	fadd	d1, d1, d0	// _25, _23, _24
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	w0, [sp, 76]	// tmp347, p
	scvtf	d0, w0	// _26, tmp347
	fadd	d1, d1, d0	// _27, _25, _26
// varargs-dll.c:1905:   return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q;
	ldr	d0, [sp, 152]	// tmp348, q
	scvtf	d0, d0	// _28, tmp348
	fadd	d0, d1, d0	// _29, _27, _28
	fcvtzs	w0, d0	// _65, _29
// varargs-dll.c:1906: }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 400	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE115:
	.size	use_va_list_ints_floats_and_composites, .-use_va_list_ints_floats_and_composites
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
